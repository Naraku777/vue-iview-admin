{"version":3,"sources":["webpack:///static/js/0.c1c7da059d4b450d5817.js","webpack:///./src/pages/Dashboard/index.vue","webpack:///./~/.zrender@3.4.4@zrender/lib/core/util.js","webpack:///./~/.echarts@3.5.4@echarts/lib/echarts.js","webpack:///./~/.echarts@3.5.4@echarts/lib/util/graphic.js","webpack:///./~/.echarts@3.5.4@echarts/lib/util/number.js","webpack:///./~/.echarts@3.5.4@echarts/lib/util/model.js","webpack:///./~/.zrender@3.4.4@zrender/lib/core/vector.js","webpack:///./~/.zrender@3.4.4@zrender/lib/graphic/Path.js","webpack:///./~/.echarts@3.5.4@echarts/lib/model/Model.js","webpack:///./~/.echarts@3.5.4@echarts/lib/util/format.js","webpack:///./~/.zrender@3.4.4@zrender/lib/core/env.js","webpack:///./~/.echarts@3.5.4@echarts/lib/util/clazz.js","webpack:///./~/.zrender@3.4.4@zrender/lib/core/BoundingRect.js","webpack:///./~/.echarts@3.5.4@echarts/lib/model/Component.js","webpack:///./~/.echarts@3.5.4@echarts/lib/util/layout.js","webpack:///./~/.zrender@3.4.4@zrender/lib/contain/text.js","webpack:///./~/.echarts@3.5.4@echarts/lib/coord/axisHelper.js","webpack:///./~/.zrender@3.4.4@zrender/lib/core/curve.js","webpack:///./~/.zrender@3.4.4@zrender/lib/core/matrix.js","webpack:///./~/.zrender@3.4.4@zrender/lib/core/event.js","webpack:///./~/.zrender@3.4.4@zrender/lib/mixin/Eventful.js","webpack:///./~/.zrender@3.4.4@zrender/lib/tool/color.js","webpack:///./~/.echarts@3.5.4@echarts/lib/component/axisPointer/modelHelper.js","webpack:///./~/.echarts@3.5.4@echarts/lib/model/mixin/makeStyleMapper.js","webpack:///./~/.echarts@3.5.4@echarts/lib/scale/Scale.js","webpack:///./~/.zrender@3.4.4@zrender/lib/config.js","webpack:///./~/.zrender@3.4.4@zrender/lib/container/Group.js","webpack:///./~/.zrender@3.4.4@zrender/lib/core/PathProxy.js","webpack:///./~/.echarts@3.5.4@echarts/lib/CoordinateSystem.js","webpack:///./~/.echarts@3.5.4@echarts/lib/component/title.js","webpack:///./~/.echarts@3.5.4@echarts/lib/component/tooltip.js","webpack:///./~/.echarts@3.5.4@echarts/lib/data/List.js","webpack:///./~/.echarts@3.5.4@echarts/lib/data/helper/completeDimensions.js","webpack:///./~/.echarts@3.5.4@echarts/lib/scale/Interval.js","webpack:///./~/.echarts@3.5.4@echarts/lib/util/component.js","webpack:///./~/.vue-echarts-v3@1.0.4@vue-echarts-v3/src/lite.vue","webpack:///./~/.zrender@3.4.4@zrender/lib/core/timsort.js","webpack:///./~/.zrender@3.4.4@zrender/lib/graphic/Displayable.js","webpack:///./~/.zrender@3.4.4@zrender/lib/graphic/Gradient.js","webpack:///./~/.echarts@3.5.4@echarts/lib/chart/bar.js","webpack:///./~/.echarts@3.5.4@echarts/lib/chart/helper/createListFromArray.js","webpack:///./~/.echarts@3.5.4@echarts/lib/component/axisPointer/findPointFromSeries.js","webpack:///./~/.echarts@3.5.4@echarts/lib/component/axisPointer/globalListener.js","webpack:///./~/.echarts@3.5.4@echarts/lib/component/axisPointer/viewHelper.js","webpack:///./~/.echarts@3.5.4@echarts/lib/component/axis/AxisBuilder.js","webpack:///./~/.echarts@3.5.4@echarts/lib/component/axis/AxisView.js","webpack:///./~/.echarts@3.5.4@echarts/lib/component/axis/cartesianAxisHelper.js","webpack:///./~/.echarts@3.5.4@echarts/lib/component/legend.js","webpack:///./~/.echarts@3.5.4@echarts/lib/coord/Axis.js","webpack:///./~/.echarts@3.5.4@echarts/lib/coord/axisModelCommonMixin.js","webpack:///./~/.echarts@3.5.4@echarts/lib/coord/cartesian/AxisModel.js","webpack:///./~/.echarts@3.5.4@echarts/lib/coord/cartesian/Grid.js","webpack:///./~/.echarts@3.5.4@echarts/lib/model/Series.js","webpack:///./~/.echarts@3.5.4@echarts/lib/model/mixin/colorPalette.js","webpack:///./~/.echarts@3.5.4@echarts/lib/scale/helper.js","webpack:///./~/.echarts@3.5.4@echarts/lib/util/symbol.js","webpack:///./~/.echarts@3.5.4@echarts/lib/util/throttle.js","webpack:///./~/.echarts@3.5.4@echarts/lib/view/Chart.js","webpack:///./~/.element-resize-detector@1.1.12@element-resize-detector/src/browser-detector.js","webpack:///./~/.element-resize-detector@1.1.12@element-resize-detector/src/collection-utils.js","webpack:///./~/.zrender@3.4.4@zrender/lib/Element.js","webpack:///./~/.zrender@3.4.4@zrender/lib/animation/Animator.js","webpack:///./~/.zrender@3.4.4@zrender/lib/animation/requestAnimationFrame.js","webpack:///./~/.zrender@3.4.4@zrender/lib/contain/util.js","webpack:///./~/.zrender@3.4.4@zrender/lib/core/LRU.js","webpack:///./~/.zrender@3.4.4@zrender/lib/core/guid.js","webpack:///./~/.zrender@3.4.4@zrender/lib/core/log.js","webpack:///./~/.zrender@3.4.4@zrender/lib/graphic/Image.js","webpack:///./~/.zrender@3.4.4@zrender/lib/graphic/Pattern.js","webpack:///./~/.zrender@3.4.4@zrender/lib/graphic/Style.js","webpack:///./~/.zrender@3.4.4@zrender/lib/graphic/helper/poly.js","webpack:///./~/.zrender@3.4.4@zrender/lib/mixin/Transformable.js","webpack:///lite.vue","webpack:///LoadingMarker.vue","webpack:///AgeChart.vue","webpack:///NumberCard.vue","webpack:///OSChart.vue","webpack:///RegionChart.vue","webpack:///index.vue","webpack:///./~/.batch-processor@1.0.0@batch-processor/src/batch-processor.js","webpack:///./~/.batch-processor@1.0.0@batch-processor/src/utils.js","webpack:///./src/pages/Dashboard/components/RegionChart.vue?68eb","webpack:///./src/pages/Dashboard/LoadingMarker.vue?7f55","webpack:///./src/pages/Dashboard/components/OSChart.vue?844b","webpack:///./src/pages/Dashboard/components/AgeChart.vue?89dd","webpack:///./src/pages/Dashboard/index.vue?45ee","webpack:///./src/pages/Dashboard/components/NumberCard.vue?db75","webpack:///./~/.vue-echarts-v3@1.0.4@vue-echarts-v3/src/lite.vue?2ebe","webpack:///./~/.echarts@3.5.4@echarts/lib/ExtensionAPI.js","webpack:///./~/.echarts@3.5.4@echarts/lib/action/createDataSelectAction.js","webpack:///./~/.echarts@3.5.4@echarts/lib/chart/Pie.js","webpack:///./~/.echarts@3.5.4@echarts/lib/chart/bar/BarSeries.js","webpack:///./~/.echarts@3.5.4@echarts/lib/chart/bar/BarView.js","webpack:///./~/.echarts@3.5.4@echarts/lib/chart/bar/BaseBarSeries.js","webpack:///./~/.echarts@3.5.4@echarts/lib/chart/bar/barItemStyle.js","webpack:///./~/.echarts@3.5.4@echarts/lib/chart/bar/helper.js","webpack:///./~/.echarts@3.5.4@echarts/lib/chart/pie/PieSeries.js","webpack:///./~/.echarts@3.5.4@echarts/lib/chart/pie/PieView.js","webpack:///./~/.echarts@3.5.4@echarts/lib/chart/pie/labelLayout.js","webpack:///./~/.echarts@3.5.4@echarts/lib/chart/pie/pieLayout.js","webpack:///./~/.echarts@3.5.4@echarts/lib/component/axis.js","webpack:///./~/.echarts@3.5.4@echarts/lib/component/axisPointer.js","webpack:///./~/.echarts@3.5.4@echarts/lib/component/axisPointer/AxisPointerModel.js","webpack:///./~/.echarts@3.5.4@echarts/lib/component/axisPointer/AxisPointerView.js","webpack:///./~/.echarts@3.5.4@echarts/lib/component/axisPointer/BaseAxisPointer.js","webpack:///./~/.echarts@3.5.4@echarts/lib/component/axisPointer/CartesianAxisPointer.js","webpack:///./~/.echarts@3.5.4@echarts/lib/component/axisPointer/axisTrigger.js","webpack:///./~/.echarts@3.5.4@echarts/lib/component/axis/CartesianAxisView.js","webpack:///./~/.echarts@3.5.4@echarts/lib/component/gridSimple.js","webpack:///./~/.echarts@3.5.4@echarts/lib/component/helper/listComponent.js","webpack:///./~/.echarts@3.5.4@echarts/lib/component/helper/selectableMixin.js","webpack:///./~/.echarts@3.5.4@echarts/lib/component/legend/LegendModel.js","webpack:///./~/.echarts@3.5.4@echarts/lib/component/legend/LegendView.js","webpack:///./~/.echarts@3.5.4@echarts/lib/component/legend/legendAction.js","webpack:///./~/.echarts@3.5.4@echarts/lib/component/legend/legendFilter.js","webpack:///./~/.echarts@3.5.4@echarts/lib/component/tooltip/TooltipContent.js","webpack:///./~/.echarts@3.5.4@echarts/lib/component/tooltip/TooltipModel.js","webpack:///./~/.echarts@3.5.4@echarts/lib/component/tooltip/TooltipView.js","webpack:///./~/.echarts@3.5.4@echarts/lib/coord/axisDefault.js","webpack:///./~/.echarts@3.5.4@echarts/lib/coord/axisModelCreator.js","webpack:///./~/.echarts@3.5.4@echarts/lib/coord/cartesian/Axis2D.js","webpack:///./~/.echarts@3.5.4@echarts/lib/coord/cartesian/Cartesian.js","webpack:///./~/.echarts@3.5.4@echarts/lib/coord/cartesian/Cartesian2D.js","webpack:///./~/.echarts@3.5.4@echarts/lib/coord/cartesian/GridModel.js","webpack:///./~/.echarts@3.5.4@echarts/lib/coord/cartesian/axisLabelInterval.js","webpack:///./~/.echarts@3.5.4@echarts/lib/data/DataDiffer.js","webpack:///./~/.echarts@3.5.4@echarts/lib/helper.js","webpack:///./~/.echarts@3.5.4@echarts/lib/layout/barGrid.js","webpack:///./~/.echarts@3.5.4@echarts/lib/loading/default.js","webpack:///./~/.echarts@3.5.4@echarts/lib/model/Global.js","webpack:///./~/.echarts@3.5.4@echarts/lib/model/OptionManager.js","webpack:///./~/.echarts@3.5.4@echarts/lib/model/globalDefault.js","webpack:///./~/.echarts@3.5.4@echarts/lib/model/mixin/areaStyle.js","webpack:///./~/.echarts@3.5.4@echarts/lib/model/mixin/boxLayout.js","webpack:///./~/.echarts@3.5.4@echarts/lib/model/mixin/itemStyle.js","webpack:///./~/.echarts@3.5.4@echarts/lib/model/mixin/lineStyle.js","webpack:///./~/.echarts@3.5.4@echarts/lib/model/mixin/textStyle.js","webpack:///./~/.echarts@3.5.4@echarts/lib/preprocessor/backwardCompat.js","webpack:///./~/.echarts@3.5.4@echarts/lib/preprocessor/helper/compatStyle.js","webpack:///./~/.echarts@3.5.4@echarts/lib/processor/dataFilter.js","webpack:///./~/.echarts@3.5.4@echarts/lib/scale/Log.js","webpack:///./~/.echarts@3.5.4@echarts/lib/scale/Ordinal.js","webpack:///./~/.echarts@3.5.4@echarts/lib/scale/Time.js","webpack:///./~/.echarts@3.5.4@echarts/lib/view/Component.js","webpack:///./~/.echarts@3.5.4@echarts/lib/visual/dataColor.js","webpack:///./~/.echarts@3.5.4@echarts/lib/visual/seriesColor.js","webpack:///./~/.element-resize-detector@1.1.12@element-resize-detector/src/detection-strategy/object.js","webpack:///./~/.element-resize-detector@1.1.12@element-resize-detector/src/detection-strategy/scroll.js","webpack:///./~/.element-resize-detector@1.1.12@element-resize-detector/src/element-resize-detector.js","webpack:///./~/.element-resize-detector@1.1.12@element-resize-detector/src/element-utils.js","webpack:///./~/.element-resize-detector@1.1.12@element-resize-detector/src/id-generator.js","webpack:///./~/.element-resize-detector@1.1.12@element-resize-detector/src/id-handler.js","webpack:///./~/.element-resize-detector@1.1.12@element-resize-detector/src/listener-handler.js","webpack:///./~/.element-resize-detector@1.1.12@element-resize-detector/src/reporter.js","webpack:///./~/.element-resize-detector@1.1.12@element-resize-detector/src/state-handler.js","webpack:///./src/pages/Dashboard/components/RegionChart.vue?5532","webpack:///./src/pages/Dashboard/LoadingMarker.vue?3c99","webpack:///./src/pages/Dashboard/components/OSChart.vue?c653","webpack:///./src/pages/Dashboard/components/AgeChart.vue?bcba","webpack:///./src/pages/Dashboard/index.vue?4001","webpack:///./src/pages/Dashboard/components/NumberCard.vue?cdbe","webpack:///./~/.vue-echarts-v3@1.0.4@vue-echarts-v3/src/lite.vue?b214","webpack:///./~/.lodash.debounce@4.0.8@lodash.debounce/index.js","webpack:///./~/.vue-count-to@1.0.5@vue-count-to/dist/vue-count-to.min.js","webpack:///./~/.vue-echarts-v3@1.0.4@vue-echarts-v3/src/wrapper.js","webpack:///./src/pages/Dashboard/LoadingMarker.vue","webpack:///./src/pages/Dashboard/components/AgeChart.vue","webpack:///./src/pages/Dashboard/components/NumberCard.vue","webpack:///./src/pages/Dashboard/components/OSChart.vue","webpack:///./src/pages/Dashboard/components/RegionChart.vue","webpack:///./src/pages/Dashboard/components/RegionChart.vue?d495","webpack:///./src/pages/Dashboard/LoadingMarker.vue?4e3b","webpack:///./src/pages/Dashboard/components/OSChart.vue?24d6","webpack:///./src/pages/Dashboard/components/AgeChart.vue?08ee","webpack:///./src/pages/Dashboard/index.vue?b472","webpack:///./src/pages/Dashboard/components/NumberCard.vue?cc0c","webpack:///./~/.vue-echarts-v3@1.0.4@vue-echarts-v3/src/lite.vue?9016","webpack:///./~/.zrender@3.4.4@zrender/lib/Handler.js","webpack:///./~/.zrender@3.4.4@zrender/lib/Layer.js","webpack:///./~/.zrender@3.4.4@zrender/lib/Painter.js","webpack:///./~/.zrender@3.4.4@zrender/lib/Storage.js","webpack:///./~/.zrender@3.4.4@zrender/lib/animation/Animation.js","webpack:///./~/.zrender@3.4.4@zrender/lib/animation/Clip.js","webpack:///./~/.zrender@3.4.4@zrender/lib/animation/easing.js","webpack:///./~/.zrender@3.4.4@zrender/lib/contain/arc.js","webpack:///./~/.zrender@3.4.4@zrender/lib/contain/cubic.js","webpack:///./~/.zrender@3.4.4@zrender/lib/contain/line.js","webpack:///./~/.zrender@3.4.4@zrender/lib/contain/path.js","webpack:///./~/.zrender@3.4.4@zrender/lib/contain/quadratic.js","webpack:///./~/.zrender@3.4.4@zrender/lib/contain/windingLine.js","webpack:///./~/.zrender@3.4.4@zrender/lib/core/GestureMgr.js","webpack:///./~/.zrender@3.4.4@zrender/lib/core/bbox.js","webpack:///./~/.zrender@3.4.4@zrender/lib/dom/HandlerProxy.js","webpack:///./~/.zrender@3.4.4@zrender/lib/graphic/CompoundPath.js","webpack:///./~/.zrender@3.4.4@zrender/lib/graphic/LinearGradient.js","webpack:///./~/.zrender@3.4.4@zrender/lib/graphic/RadialGradient.js","webpack:///./~/.zrender@3.4.4@zrender/lib/graphic/Text.js","webpack:///./~/.zrender@3.4.4@zrender/lib/graphic/helper/roundRect.js","webpack:///./~/.zrender@3.4.4@zrender/lib/graphic/helper/smoothBezier.js","webpack:///./~/.zrender@3.4.4@zrender/lib/graphic/helper/smoothSpline.js","webpack:///./~/.zrender@3.4.4@zrender/lib/graphic/mixin/RectText.js","webpack:///./~/.zrender@3.4.4@zrender/lib/graphic/shape/Arc.js","webpack:///./~/.zrender@3.4.4@zrender/lib/graphic/shape/BezierCurve.js","webpack:///./~/.zrender@3.4.4@zrender/lib/graphic/shape/Circle.js","webpack:///./~/.zrender@3.4.4@zrender/lib/graphic/shape/Line.js","webpack:///./~/.zrender@3.4.4@zrender/lib/graphic/shape/Polygon.js","webpack:///./~/.zrender@3.4.4@zrender/lib/graphic/shape/Polyline.js","webpack:///./~/.zrender@3.4.4@zrender/lib/graphic/shape/Rect.js","webpack:///./~/.zrender@3.4.4@zrender/lib/graphic/shape/Ring.js","webpack:///./~/.zrender@3.4.4@zrender/lib/graphic/shape/Sector.js","webpack:///./~/.zrender@3.4.4@zrender/lib/mixin/Animatable.js","webpack:///./~/.zrender@3.4.4@zrender/lib/mixin/Draggable.js","webpack:///./~/.zrender@3.4.4@zrender/lib/tool/path.js","webpack:///./~/.zrender@3.4.4@zrender/lib/tool/transformPath.js","webpack:///./~/.zrender@3.4.4@zrender/lib/zrender.js"],"names":["webpackJsonp","Array","concat","module","exports","__webpack_require__","Component","clone","source","result","typeStr","objToString","call","i","len","length","TYPED_ARRAY","constructor","from","BUILTIN_OBJECT","isPrimitive","isDom","key","hasOwnProperty","merge","target","overwrite","isObject","targetProp","sourceProp","isArray","isBuiltInObject","mergeAll","targetAndSources","extend","defaults","overlay","createCanvas","document","createElement","getContext","_ctx","util","indexOf","array","value","inherits","clazz","baseClazz","F","clazzPrototype","prototype","prop","superClass","mixin","isArrayLike","data","each","obj","cb","context","forEach","nativeForEach","map","nativeMap","push","reduce","memo","nativeReduce","filter","nativeFilter","find","bind","func","args","nativeSlice","arguments","apply","curry","this","isFunction","isString","type","nodeType","ownerDocument","eqNaN","retrieve","values","slice","Function","assert","condition","message","Error","setAsPrimitive","primitiveKey","HashMap","createHashMap","[object Function]","[object RegExp]","[object Date]","[object Error]","[object CanvasGradient]","[object CanvasPattern]","[object Image]","[object Canvas]","[object Int8Array]","[object Uint8Array]","[object Uint8ClampedArray]","[object Int16Array]","[object Uint16Array]","[object Int32Array]","[object Uint32Array]","[object Float32Array]","[object Float64Array]","Object","toString","arrayProto","get","set","prefixedKey","removeKey","noop","global","createRegisterEventWithLowercaseName","method","eventName","handler","toLowerCase","Eventful","MessageCenter","ECharts","dom","theme","opts","prioritySortFunc","a","b","prio","themeStorage","id","group","_dom","zr","_zr","zrender","init","renderer","devicePixelRatio","width","height","_throttledZrFlush","throttle","zrUtil","flush","_theme","_chartsViews","_chartsMap","_componentsViews","_componentsMap","_coordSysMgr","CoordinateSystemManager","_api","createExtensionAPI","_messageCenter","_initEvents","resize","_pendingActions","timsort","visualFuncs","dataProcessorFuncs","animation","on","_onframe","doConvertPixel","methodName","finder","ecModel","_model","coordSysList","getCoordinateSystems","modelUtil","parseFinder","coordSys","__DEV__","console","warn","updateDirectly","ecIns","payload","mainType","subType","callView","view","__alive","__model","query","eachComponent","model","index","__viewId","doDispatchAction","silent","payloadType","escapeConnect","actionWrap","actions","actionInfo","cptType","update","split","updateMethod","pop","parseClassType","IN_MAIN_PROCESS","payloads","batched","batch","item","eventObj","eventObjBatch","isHighDown","batchItem","action","event","main","sub","OPTION_UPDATED","updateMethods","prepareAndUpdate","trigger","flushPendingActions","pendingActions","shift","triggerUpdatedEvent","invokeUpdateMethod","api","component","componentModel","updateZ","eachSeries","seriesModel","idx","chart","updateProgressiveAndBlend","updateHoverLayerStatus","postUpdateFuncs","prepareView","isComponent","viewList","viewMap","componentType","viewId","classType","Clazz","ComponentView","getClass","ChartView","add","__id","__ecComponentInfo","componentIndex","remove","dispose","splice","processData","process","stackSeriesData","stackedDataMap","series","stack","getData","previousStack","stackedOn","doLayout","visual","isLayout","doVisualEncoding","excludesLayout","clearColorPalette","doRender","componentView","render","chartView","storage","elCount","traverse","el","isGroup","env","node","useHoverLayer","ignore","frameDrawNum","needProgressive","progressive","Math","floor","stopAnimation","blendMode","canvasSupported","setStyle","z","zlevel","ecInstance","coordSysMgr","ExtensionAPI","getComponentByElement","modelInfo","getComponent","parent","enableConnect","updateConnectedChartsStatus","charts","status","STATUS_KEY","eventActionMap","actionType","eventType","connectedGroups","makeActionFromEvent","otherCharts","instances","otherChart","dispatchAction","window","GlobalModel","OptionManager","ComponentModel","SeriesModel","graphic","colorTool","ACTION_REG","off","one","echartsProto","getDom","getZr","setOption","option","notMerge","lazyUpdate","optionManager","__lastOnlyGraphic","o","optionPreprocessorFuncs","setTheme","log","getModel","getOption","getWidth","getHeight","getDevicePixelRatio","painter","dpr","getRenderedCanvas","pixelRatio","backgroundColor","list","getDisplayList","getDataURL","excludeComponents","excludesComponentViews","self","url","toDataURL","getConnectedDataURL","groupId","mathMin","min","mathMax","max","left","Infinity","top","right","bottom","canvasList","canvas","boundingRect","getBoundingClientRect","targetCanvas","img","Image","style","x","y","image","refreshImmediately","convertToPixel","convertFromPixel","containPixel","models","coordinateSystem","containPoint","getVisual","visualType","defaultMainType","dataIndexInside","indexOfRawIndex","dataIndex","getItemVisual","getViewOfComponentModel","getViewOfSeriesModel","restoreData","create","isSingleCanvas","configLayer","clearColor","colorArr","parse","stringify","colorStops","background","updateView","clearAllVisual","updateVisual","updateLayout","optionChanged","resetOption","_loadingFX","showLoading","name","cfg","hideLoading","loadingEffects","opt","browser","weChat","MOUSE_EVENT_NAMES","eveName","e","params","dataModel","getSeriesByIndex","seriesIndex","getDataParams","dataType","eventData","isDisposed","_disposed","clear","idBase","Date","groupIdBase","echarts","version","dependencies","replace","nodeName","toUpperCase","clientWidth","clientHeight","setAttribute","connect","disConnect","disconnect","getInstanceByDom","getAttribute","getInstanceById","registerTheme","registerPreprocessor","preprocessorFunc","registerProcessor","priority","processorFunc","isNaN","registerPostUpdate","postUpdateFunc","registerAction","test","registerCoordinateSystem","CoordinateSystem","register","registerLayout","layoutFunc","registerVisual","visualFunc","registerLoading","loadingFx","extendComponentModel","extendComponentView","extendSeriesModel","extendChartView","setCanvasCreator","creator","List","Model","Axis","number","format","matrix","vector","color","helper","PRIORITY","PROCESSOR","FILTER","STATISTIC","VISUAL","LAYOUT","GLOBAL","CHART","COMPONENT","BRUSH","hasFillOrStroke","fillOrStroke","liftColor","lift","cacheElementStl","__hoverStlDirty","stroke","fill","hoverStyle","__hoverStl","normalStyle","__normalStl","doSingleEnterHover","__isHover","__zr","addHover","z2","doSingleLeaveHover","normalStl","removeHover","doEnterHover","child","doLeaveHover","setElementHoverStl","hoverStl","onElementMouseOver","__hoverSilentOnTouch","zrByTouch","__isEmphasis","onElementMouseOut","enterEmphasis","leaveEmphasis","animateOrSetProps","isUpdate","props","animatableModel","isAnimationEnabled","postfix","duration","getShallow","animationEasing","animationDelay","getAnimationDelayParams","animateTo","attr","pathTool","round","Path","Transformable","BoundingRect","Group","Text","Circle","Sector","Ring","Polygon","Polyline","Rect","Line","BezierCurve","Arc","CompoundPath","LinearGradient","RadialGradient","extendShape","extendPath","pathData","extendFromString","makePath","rect","layout","path","createFromString","getBoundingRect","aspect","cx","cy","resizePath","mergePath","applyTransform","pathRect","m","calculateTransform","subPixelOptimizeLine","param","subPixelOptimize","shape","lineWidth","x1","x2","y1","y2","subPixelOptimizeRect","originX","originY","originWidth","originHeight","position","positiveOrNegative","doubledPosition","setHoverStyle","hoverSilentOnTouch","setText","textStyle","labelModel","labelPosition","labelOffset","labelColor","textStyleModel","textDistance","textFont","getFont","textPosition","textOffset","textFill","getTextColor","updateProps","initProps","getTransform","ancestor","mat","identity","mul","getLocalTransform","transform","invert","transformDirection","direction","hBase","abs","vBase","vertex","groupTransition","g1","g2","getAnimatableProps","rotation","elMap1","g","elMap","anid","oldEl","newProp","_trim","str","quantityExponent","val","LN10","linearMap","domain","range","clamp","subDomain","subRange","parsePercent","percent","all","match","parseFloat","NaN","precision","returnStr","toFixed","asc","arr","sort","getPrecision","count","getPrecisionSafe","eIndex","dotIndex","getPixelPrecision","dataExtent","pixelExtent","dataQuantity","sizeQuantity","isFinite","MAX_SAFE_INTEGER","remRadian","radian","pi2","PI","isRadianAroundZero","TIME_REG","getTimezoneOffset","parseDate","exec","timezoneOffset","timeOffset","quantity","pow","nice","nf","exponent","exp10","f","reformIntervals","littleThan","lg","interval","close","curr","currClose","isNumeric","v","has","formatUtil","nubmerUtil","normalizeToArray","defaultEmphasis","subOpts","emphasisOpt","emphasis","normalOpt","normal","subOptName","LABEL_OPTIONS","getDataItemValue","dataItem","isDataItemOption","converDataValue","dimInfo","dimType","createDataFormatModel","dataFormatMixin","rawValue","getRawValue","rawDataIndex","getRawIndex","getName","itemOpt","getRawDataItem","componentSubType","seriesType","seriesId","seriesName","$vars","getFormattedLabel","dimIndex","itemModel","getItemModel","formatter","formatTpl","formatTooltip","mappingToExists","exists","newCptOptions","exist","cptOption","isIdInner","makeIdAndName","mapResult","idMap","existCpt","keyInfo","idNum","compressBatches","batchA","batchB","makeMap","sourceBatch","otherMap","dataIndices","otherDataIndices","j","lenj","mapToArray","isData","mapA","mapB","queryDataIndex","indexOfName","makeGetter","hostObj","parsedKey","queryType","includeMainTypes","queryParam","queryComponents","ArrayCtor","Float32Array","out","copy","v1","v2","scaleAndAdd","sqrt","lenSquare","div","dot","scale","s","normalize","d","distance","distanceSquare","negate","lerp","t","lengthSquare","dist","distSquare","Displayable","PathProxy","pathContain","Pattern","getCanvasPattern","pathProxyForDraw","__dirtyPath","strokeContainThreshold","brush","ctx","prevEl","hasStroke","hasFill","hasFillGradient","hasStrokeGradient","hasFillPattern","hasStrokePattern","setTransform","__dirty","_fillGradient","getGradient","_strokeGradient","fillStyle","strokeStyle","lineDash","lineDashOffset","ctxLineDash","setLineDash","getGlobalScale","setScale","beginPath","setLineDashOffset","buildPath","rebuildPath","restoreTransform","text","drawRectText","shapeCfg","inBundle","createPathProxy","_rect","needsUpdateRect","rectWithStroke","_rectWithStroke","w","lineScale","strokeNoScale","getLineScale","contain","localPos","transformCoordToLocal","containStroke","dirty","dirtyPath","refresh","__clipTarget","animateShape","loop","animate","attrKV","setShape","Sub","extendFrom","defaultShape","thisShape","parentModel","doGet","pathArr","getParent","getParentMethod","clazzUtil","mergeOption","ignoreParent","parsePath","thisParentModel","isEmpty","Ctor","setReadOnly","properties","customizeGetParent","enableClassExtend","numberUtil","textContain","addCommas","toCamelCase","upperCaseFirst","group1","charAt","normalizeCssArray","encodeHTML","String","TPL_VAR_ALIAS","wrapVar","varName","seriesIdx","tpl","paramsList","encode","seriesLen","alias","k","formatTplSimple","s2d","formatTime","isUTC","date","utc","M","h","capitalFirst","substr","truncateText","navigator","os","ua","firefox","ie","edge","touchEventsSupported","pointerEventsSupported","userAgent","checkClassType","superCall","superApply","IS_CONTAINER","host","hasOwn","ret","RootClass","mandatoryMethods","$constructor","proto","ExtendedClass","enableClassManagement","entity","options","makeContainer","container","registerClass","componentMainType","throwWhenNotFound","getClassesByMainType","hasClass","getAllClassMainTypes","types","hasSubTypes","registerWhenExtend","originalExtend","vec2","v2ApplyTransform","union","other","lt","rb","lb","rt","maxX","maxY","sx","sy","translate","intersect","ax0","ax1","ay0","ay1","bx0","bx1","by0","by1","plain","getDependencies","deps","arrayPush","componentUtil","defaultOption","dependentModels","uid","layoutMode","extraOpt","getUID","mergeDefaultAndTheme","inputPositionParams","getLayoutParams","themeModel","getTheme","getDefaultOption","mergeLayoutParam","optionUpdated","newCptOption","isInit","optList","Class","getReferringComponents","enableSubTypeDefaulter","enableTopologicalTravel","boxLayout","orient","gap","maxWidth","maxHeight","currentLineMaxSize","eachChild","nextX","nextY","nextChild","childAt","nextChildRect","moveX","newline","moveY","LOCATION_PARAMS","HV_NAMES","box","vbox","hbox","getAvailableSize","positionInfo","containerRect","margin","containerWidth","containerHeight","getLayoutRect","verticalMargin","horizontalMargin","positionElement","hv","boundingMode","needLocalTransform","elPos","dx","dy","sizeCalculable","hvIdx","targetOption","newOption","names","newParams","newValueCount","merged","mergedValueCount","hasProp","hasValue","ignoreSize","hResult","vResult","copyLayoutParams","getTextWidth","textWidthCache","textLines","l","measureText","textWidthCacheCounter","TEXT_CACHE_MAX","getTextRect","textAlign","textBaseline","textLineLen","lineHeight","adjustTextPositionOnRect","textRect","textHeight","halfHeight","ellipsis","maxIterations","minChar","cnCharWidth","ascCharWidth","placeholder","contentWidth","ellipsisWidth","textLine","subLength","estimateLength","join","charCode","charCodeAt","font","OrdinalScale","IntervalScale","Scale","axisHelper","getScaleExtent","axisDataLen","boundaryGap","span","scaleType","getMin","getMax","fixMin","fixMax","originalExtent","getExtent","setBlank","getNeedCrossZero","niceScaleExtent","extent","splitNumber","base","setExtent","niceExtent","minInterval","getInterval","intervalScale","origin","setInterval","createScaleByModel","axisType","getCategories","ifAxisCrossZero","axis","getAxisLabelInterval","tickCoords","labels","isAxisHorizontal","textSpaceTakenRect","autoLabelInterval","accumulatedLabelInterval","step","tickCoord","getFormattedLabels","labelFormatter","getTicksLabels","ticks","getTicks","tick","getAxisRawValue","getLabel","isAroundZero","EPSILON","isNotAroundZero","cubicAt","p0","p1","p2","p3","onet","cubicDerivativeAt","cubicRootAt","roots","c","A","B","C","n","t1","disc","K","t2","discSqrt","mathSqrt","Y1","Y2","mathPow","ONE_THIRD","T","theta","acos","ASqrt","tmp","cos","THREE_SQRT","sin","t3","cubicExtrema","extrema","cubicSubdivide","p01","p12","p23","p012","p123","p0123","cubicProjectPoint","x0","y0","x3","y3","prev","next","d1","d2","_v0","_t","_v1","v2DistSquare","EPSILON_NUMERIC","_v2","quadraticAt","quadraticDerivativeAt","quadraticRootAt","quadraticExtremum","divider","quadraticSubdivide","quadraticProjectPoint","v2Create","m1","m2","out0","out1","out2","out3","out4","out5","rotate","rad","aa","ac","atx","ab","ad","aty","st","ct","vx","vy","det","clientToLocal","calculate","defaultGetZrXY","layerX","offsetX","zrX","zrY","layerY","offsetY","clientX","clientY","normalizeEvent","touch","targetTouches","changedTouches","zrDelta","wheelDelta","detail","addEventListener","isDomLevel2","attachEvent","removeEventListener","detachEvent","stop","preventDefault","stopPropagation","cancelBubble","returnValue","Dispatcher","arrySlice","_$handlers","_h","isSilent","newList","argLen","triggerWithContext","clampCssByte","clampCssAngle","clampCssFloat","parseCssInt","parseInt","parseCssFloat","cssHueToRgb","p","setRgba","r","copyRgba","putToCache","colorStr","rgbaArr","lastRemovedArr","colorCache","put","cached","kCSSColorTable","op","ep","fname","alpha","hsla2rgba","iv","hsla","rgba","rgba2hsla","H","S","R","G","vMin","vMax","delta","L","deltaR","deltaG","deltaB","level","toHex","fastMapToColor","normalizedValue","colors","leftIndex","rightIndex","ceil","leftColor","rightColor","dv","mapToColor","fullOutput","modifyHSL","modifyAlpha","arrColor","LRU","transparent","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","collectAxesInfo","globalTooltipModel","globalAxisPointerModel","linksOption","linkGroups","saveTooltipAxisInfo","fromTooltip","triggerTooltip","axisPointerModel","axisPointerShow","isHandleTrigger","makeAxisPointerModel","baseTooltipModel","snap","makeKey","involveSeries","axisInfo","axesInfo","useHandle","seriesModels","axesInfoInCoordSys","seriesInvolved","groupIndex","getLinkGroupIndex","linkGroup","mapper","axisPointerEnabled","coordSysKey","coordSysAxesInfo","coordSysMap","coordSysModel","getAxes","getTooltipAxes","triggerAxis","cross","tooltipAxes","baseAxes","otherAxes","tooltipAxisPointerModel","volatileOption","field","labelOption","label","show","crossStyle","lineStyle","collectSeriesInfo","seriesTooltipTrigger","getAxis","dim","seriesDataCount","axisModel","linkOption","checkPropInLink","linkPropValue","axisPropValue","collect","fixValue","getAxisInfo","reverse","isBlank","getAxisPointerModel","excludes","includes","propName","setting","_setting","_extent","_interval","scaleProto","getSetting","unionExtent","unionExtentFromData","getDataExtent","start","end","thisExtent","_isBlank","config","debugMode","Element","_children","__storage","children","childOfName","childCount","_doAdd","addBefore","nextSibling","addToStorage","addChildrenToStorage","delFromStorage","delChildrenFromStorage","removeAll","includeChildren","tmpRect","tmpMat","invisible","childRect","curve","bbox","CMD","Q","Z","min2","max2","mathCos","mathSin","mathAbs","hasTypedArray","notSaveData","_saveData","_xi","_yi","_x0","_y0","_ux","_uy","_len","_lineDash","_dashOffset","_dashIdx","_dashSum","moveTo","addData","lineTo","exceedUnit","_needsDash","_dashedLineTo","bezierCurveTo","_dashedBezierTo","quadraticCurveTo","_dashedQuadraticTo","arc","startAngle","endAngle","anticlockwise","arcTo","radius","closePath","toStatic","lineDashSum","offset","setData","appendPath","appendSize","appendPathData","cmd","_expandData","_prevCmd","newData","dash","dashSum","nDash","bezierLen","tmpLen","Number","MAX_VALUE","xi","yi","fromLine","fromCubic","fromQuadratic","rx","ry","fromArc","ux","uy","dTheta","psi","fs","scaleX","scaleY","isEllipse","_coordinateSystems","coordinateSystemCreators","coordinateSystems","creater","coordinateSystemCreator","subtext","subtarget","borderColor","borderWidth","padding","itemGap","fontSize","fontWeight","subtextStyle","titleModel","subtextStyleModel","textEl","subText","subTextEl","link","sublink","open","groupRect","layoutOption","getBoxLayoutParams","layoutRect","alignStyle","textVerticalAlign","getItemStyle","normalizeDimensions","dimensions","cloneListForMapAndSample","original","excludeDimensions","allDimensions","getDimensionInfo","hostModel","transferProperties","_storage","originalStorage","dimStore","globalObj","Float64Array","Int32Array","dataCtors","float","int","ordinal","time","DataDiffer","TRANSFERABLE_PROPERTIES","__wrappedMethods","dimensionInfos","dimensionNames","dimensionName","dimensionInfo","stackable","_dimensionInfos","indices","_nameList","_idList","_optionModels","_visual","_layout","_itemVisuals","_itemLayouts","_graphicEls","_rawData","listProto","hasItemOption","getDimension","initData","nameList","dimValueGetter","size","dimensionInfoMap","idList","nameRepeatCount","DataCtor","dimName","stackedValue","getValues","dimData","dimExtent","getSum","sum","rawIndex","mid","indicesOfNearest","maxDistance","nearestIndices","minDist","minDiff","diff","rawIdx","getId","dims","dimSize","filterSelf","newIndices","keep","mapArray","tmpRetValue","retValue","downSample","dimension","rate","sampleValue","sampleIndex","targetStorage","originalIndices","frameValues","frameIndices","frameSize","otherList","otherIdList","setVisual","setLayout","getLayout","getItemLayout","setItemLayout","clearItemLayouts","itemVisual","setItemVisual","setItemDataAndSeriesIndex","setItemGraphicEl","getItemGraphicEl","eachItemGraphicEl","cloneShallow","dimensionInfoList","wrapMethod","injectFunction","originalMethod","res","TRANSFERABLE_METHODS","CHANGABLE_METHODS","completeDimensions","dimCount","value0","retrieveValue","defaultNames","extraPrefix","guessOrdinal","roundNumber","_intervalPrecision","niceTicks","_niceExtent","intervalScaleGetTicks","intervalScaleNiceTicks","intervalPrecision","niceTickExtent","expandSize","random","subTypeDefaulters","registerSubTypeDefaulter","defaulter","determineSubType","componentTypeMain","dependencyGetter","makeDepndencyGraph","fullNameList","graph","noEntryList","thisItem","createDependencyGraphItem","originalDeps","availableDeps","getAvailableDependencies","entryCount","dependentName","predecessor","thatItem","successor","dep","topologicalTravel","targetNameList","callback","removeEdge","succComponentType","removeEdgeAndAdd","targetNameSet","currComponentType","currVertex","isInTargetNameSet","minRunLength","DEFAULT_MIN_MERGE","makeAscendingRun","lo","hi","compare","runHi","reverseRun","binaryInsertionSort","pivot","gallopLeft","hint","lastOffset","maxOffset","gallopRight","TimSort","pushRun","_runStart","_runLength","runStart","stackSize","runLength","mergeRuns","mergeAt","forceMergeRuns","start1","length1","start2","length2","mergeLow","mergeHigh","cursor1","cursor2","dest","count1","count2","exit","_minGallop","minGallop","DEFAULT_MIN_GALLOPING","customCursor","customDest","remaining","ts","minRun","force","Style","__clipPaths","RectText","draggable","dragging","culling","cursor","rectHover","beforeBrush","afterBrush","rectContain","coord","animateStyle","useStyle","Gradient","addColorStop","barLayoutGrid","eachSeriesByType","firstDataNotNull","ifNeedCompleteOrdinalData","sampleItem","createListFromArray","coordSysName","creators","registeredCoordSys","getDimensionsInfo","categoryIndex","createNameList","categories","categoryAxesModels","isStackable","getDimTypeByAxis","categoryAxisModel","categoryDim","dataLen","cartesian2d","axesModels","xAxisModel","yAxisModel","xAxisType","yAxisType","isXAxisCateogry","isYAxisCategory","singleAxis","singleAxisModel","singleAxisType","isCategory","single","polar","polarModel","angleAxisModel","findAxisModel","radiusAxisModel","radiusAxisType","angleAxisType","isAngleAxisCateogry","isRadiusAxisCateogry","angle","geo","point","getTooltipPosition","dataToPoint","coordDimToDataDim","initGlobalListeners","useHandler","dis","makeDispatchAction","records","record","dispatchTooltipFinally","pendings","initialized","doEnter","onLeave","actuallyPayload","showLen","showTip","hideLen","hideTip","currTrigger","pendingList","globalListener","unregister","confineInContainer","viewWidth","viewHeight","AxisBuilder","buildElStyle","axisPointerType","styleModel","getLineStyle","getAreaStyle","buildLabelElOption","elOption","labelPos","getValueLabel","paddings","align","verticalAlign","bgColor","shadowBlur","shadowColor","shadowOffsetX","shadowOffsetY","seriesDataIndices","seriesData","idxItem","dataParams","getTransformedPosition","layoutInfo","dataToCoord","labelDirection","labelMargin","buildCartesianSingleLabelElOption","textLayout","innerTextLayout","makeLineShape","xDimIndex","makeRectShape","xy","wh","makeSectorShape","r0","clockwise","makeAxisEventDataBase","endTextLayout","textRotate","rotationDiff","inverse","onLeft","tooltipOpt","fixMinMaxLabelShow","textEls","showMinLabel","showMaxLabel","firstLabel","nextLabel","lastLabel","prevLabel","isTwoLabelOverlapped","current","labelLayout","firstRect","nextRect","mRotationBack","nameDirection","tickDirection","dumbGroup","updateTransform","_transform","_dumbGroup","hasBuilder","builders","getGroup","axisLine","pt1","pt2","lineCap","axisTick","tickModel","lineStyleModel","tickLen","tickInterval","labelInterval","ticksCoords","getTicksCoords","ifIgnoreOnTick","axisLabel","axisLabelShow","labelRotation","labelRotate","categoryData","triggerEvent","tickVal","itemTextStyleModel","textColor","pos","labelStr","targetType","decomposeTransform","axisName","nameLocation","gapSignal","nameRotation","axisNameAvailableWidth","truncateOpt","nameTruncateMaxWidth","truncatedText","formatterParams","__fullText","__truncatedText","tooltip","content","axisRotation","textRotation","rawTick","updateAxisPointer","axisView","forceRender","AxisView","getAxisPointerClass","axisPointerClass","axisPointerModelHelper","_axisPointer","disposeAxisPointer","axisPointer","axisPointerClazz","registerAxisPointerClass","gridModel","getZero","theAxis","grid","toGlobalCoord","rawAxisPosition","axisPosition","onZero","axisDim","getRect","rectBound","axisOffset","posMap","dirMap","labelInside","getLabelInterval","fixExtentWithBands","nTick","normalizedExtent","onBand","containData","coordToData","pointToData","alignWithLabel","bands","getBands","coords","getLabelsCoords","getBandWidth","axisExtent","rangeStart","rangeEnd","getCoordSysModel","setRange","resetRange","getAxisType","axisModelCreator","AxisModel","gridIndex","gridId","extraOption","isAxisUsedInTheGrid","getLabelUnionRect","labelCount","isLabelIgnored","singleRect","Grid","_coordsMap","_coordsList","_axesMap","_axesList","_initCartesian","updateAxisTransfrom","coordBase","axisExtentSum","toLocalCoord","findAxesModels","axesTypes","isCartesian2D","Cartesian2D","Axis2D","gridProto","ifAxisCanNotOnZero","otherAxisDim","axes","axesMap","_updateScale","xAxis","yAxis","adjustAxes","axesList","isHorizontal","gridRect","labelUnionRect","axisIndex","axesMapOnDim","getCartesian","xAxisIndex","yAxisIndex","coordList","getCartesians","_findConvertTarget","cartesian","coordsList","createAxisCreator","axisPositionUsed","axesCount","addAxis","baseAxis","getBaseAxis","otherAxis","getOtherAxis","grids","classUtil","colorPaletteMixin","legendDataProvider","visualColorAccessPath","getInitialData","fillDataTextStyle","newSeriesOption","getLinkedData","getRawData","coordDim","dataDimToCoordDim","dataDim","multipleSeries","formattedValue","valStr","colorEl","animationEnabled","getColorFromPalette","scope","getAxisTooltipData","colorIdx","colorNameMap","colorPalette","fixExtent","Triangle","Diamond","Pin","asin","tanX","tanY","cpLen","cpLen2","Arrow","symbolCtors","line","roundRect","square","circle","diamond","pin","arrow","triangle","symbolShapeMakers","symbolBuildProxies","Symbol","symbolType","proxySymbol","symbolPathSetColor","symbolStyle","symbolShape","__isEmptyBrush","symbolUtil","createSymbol","symbolPath","setColor","lib","ORIGIN_METHOD","RATE","fn","delay","debounce","lastExec","getTime","timer","currCall","debounceNextCall","lastCall","thisDelay","thisDebounce","clearTimeout","setTimeout","debounceDelay","createOrUpdate","fnAttr","throttleType","originFn","lastThrottleType","Chart","elSetState","state","toggleHighlight","dataIdx","highlight","downplay","chartProto","detector","isIE","agent","getElementsByTagName","innerHTML","undef","isLegacyOpera","opera","collection","guid","Animatable","clipPath","drift","beforeUpdate","afterUpdate","hide","setClipPath","addSelfToZr","removeClipPath","removeSelfFromZr","animators","addAnimator","removeAnimator","defaultGetter","defaultSetter","interpolateNumber","interpolateString","interpolateArray","arrDim","len2","fillArr","arr0","arr1","arr0Len","arr1Len","arraySlice","isArraySame","catmullRomInterpolateArray","catmullRomInterpolate","v0","cloneValue","rgba2String","createTrackClip","animator","easing","oneTrackDone","keyframes","getter","_getter","setter","_setter","useSpline","trackLen","trackMaxTime","firstVal","isValueArray","isValueColor","isValueString","kfPercents","kfValues","prevValue","isAllValueEqual","colorArray","lastValue","_target","lastFrame","lastFramePercent","onframe","frame","clip","Clip","life","_loop","_delay","ondestroy","Animator","_tracks","_clipCount","_doneList","_onframeList","_clipList","when","tracks","during","pause","_paused","resume","isPaused","_doneCallback","doneList","lastClip","clipCount","addClip","oldOnFrame","forwardToLast","clipList","removeClip","done","getClips","requestAnimationFrame","msRequestAnimationFrame","mozRequestAnimationFrame","webkitRequestAnimationFrame","PI2","normalizeRadian","LinkedList","head","tail","linkedListProto","insert","entry","Entry","insertEntry","maxSize","_list","_map","_maxSize","_lastRemovedEntry","LRUProto","removed","leastUsedEntry","idStart","ZImage","globalImageCache","src","_image","cachedImgObj","onload","pending","sWidth","sHeight","drawImage","repeat","createPattern","createLinearGradient","createRadialGradient","STYLE_COMMON_PROPS","opacity","textStroke","textShadowBlur","textShadowOffsetX","textShadowOffsetY","textTransform","blend","prevStyle","firstDraw","styleName","globalAlpha","globalCompositeOperation","otherStyle","newStyle","canvasGradient","styleProto","smoothSpline","smoothBezier","points","smooth","controlPoints","smoothConstraint","cp1","cp2","mIdentity","transformableProto","parentHasTransform","invTransform","tmpTransform","atan2","transformCoordToGlobal","__webpack_exports__","defineProperty","__WEBPACK_IMPORTED_MODULE_0_echarts_lib_echarts_js__","__WEBPACK_IMPORTED_MODULE_0_echarts_lib_echarts_js___default","__WEBPACK_IMPORTED_MODULE_1_lodash_debounce__","__WEBPACK_IMPORTED_MODULE_1_lodash_debounce___default","__WEBPACK_IMPORTED_MODULE_2_element_resize_detector__","__WEBPACK_IMPORTED_MODULE_2_element_resize_detector___default","__WEBPACK_IMPORTED_MODULE_3__wrapper_js__","__WEBPACK_IMPORTED_MODULE_3__wrapper_js___default","IEcharts","__WEBPACK_IMPORTED_MODULE_0_vue_echarts_v3_src_lite_vue__","__WEBPACK_IMPORTED_MODULE_0_vue_echarts_v3_src_lite_vue___default","__WEBPACK_IMPORTED_MODULE_1_echarts_lib_chart_bar__","__WEBPACK_IMPORTED_MODULE_2_echarts_lib_component_title__","__WEBPACK_IMPORTED_MODULE_3_echarts_lib_component_tooltip__","__WEBPACK_IMPORTED_MODULE_4_echarts_lib_component_legend__","components","title","watch","newValue","mounted","bar","legend","__WEBPACK_IMPORTED_MODULE_0_vue_count_to__","__WEBPACK_IMPORTED_MODULE_0_vue_count_to___default","countTo","icon","__WEBPACK_IMPORTED_MODULE_1_echarts_lib_chart_Pie__","chartOpts","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_extends__","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_extends___default","__WEBPACK_IMPORTED_MODULE_1_vuex__","__WEBPACK_IMPORTED_MODULE_2__LoadingMarker__","__WEBPACK_IMPORTED_MODULE_2__LoadingMarker___default","__WEBPACK_IMPORTED_MODULE_3__components_NumberCard__","__WEBPACK_IMPORTED_MODULE_3__components_NumberCard___default","__WEBPACK_IMPORTED_MODULE_4__components_RegionChart__","__WEBPACK_IMPORTED_MODULE_4__components_RegionChart___default","__WEBPACK_IMPORTED_MODULE_5__components_AgeChart__","__WEBPACK_IMPORTED_MODULE_5__components_AgeChart___default","__WEBPACK_IMPORTED_MODULE_6__components_OSChart__","__WEBPACK_IMPORTED_MODULE_6__components_OSChart___default","loading","created","_this","$store","dispatch","computed","numbers","region","age","terminal","methods","LoadingMarker","NumberCard","RegionChart","AgeChart","OSChart","Batch","topLevel","bottomLevel","fns","getSize","utils","addFunction","isProcessing","autoProcess","asyncProcess","processBatchAsync","processBatch","processingBatch","forceProcessBatch","localAsyncProcess","undefined","asyncFrameHandler","cancelFrame","requestFrame","listener","reporter","defaultValue","sources","mappings","file","sourcesContent","sourceRoot","chartInstance","echartsAPIList","actionInfos","selected","isSelected","brushSelector","createRect","animationModel","rectShape","animateProperty","animateTarget","removeRect","getRectItemLayout","fixedLineWidth","getLineWidth","signX","signY","updateStyle","itemStyleModel","getBarItemStyle","labelPositionOutside","setLabel","rawLayout","BAR_BORDER_WIDTH_QUERY","BarView","_renderOnCartesian","oldData","_data","newIndex","oldIndex","execute","getMarkerPosition","pt","legendHoverLink","barMinHeight","itemStyle","getBorderLineDash","labelText","hoverLabelModel","dataSelectableMixin","PieSeries","updateSelectedMap","_defaultLabelLine","labelLine","labelLineNormalOpt","labelLineEmphasisOpt","hoverAnimation","center","minAngle","selectedOffset","avoidLabelOverlap","stillShowZeroSum","animationType","updateDataSelected","hasAnimation","toggleItemSelected","midAngle","PiePiece","onEmphasis","polyline","hoverIgnore","onNormal","normalIgnore","sector","updateData","getLabelStyle","isLabelInside","piePieceProto","firstCreate","sectorShape","visualColor","lineJoin","_updateLabel","linePoints","labelHoverModel","labelLineModel","labelLineHoverModel","Pie","sectorGroup","_sectorGroup","isFirstRender","onSectorClick","selectedMode","piePiece","newIdx","oldIdx","_createClipPath","itemLayout","adjustSingleSide","dir","shiftUp","changeX","isDownList","lastDeltaX","deltaY","deltaX","lastY","upList","downList","avoidOverlap","labelLayoutList","leftList","rightList","hasLabelRotate","textX","textY","labelLineLen","labelLineLen2","RADIAN","unitRadian","roseType","restAngle","valueSumLargerThanMinAngle","currentAngle","axisTrigger","tooltipOption","highDownKey","AxisPointerModel","triggerOn","animationDurationUpdate","shadowStyle","handle","AxisPonterView","disopse","BaseAxisPointer","moveAnimation","propsEqual","lastProp","lastProps","newProps","equals","updateLabelShowHide","labelEl","getHandleTransProps","trans","createIcon","handleModel","handlers","iconStr","updateMandatoryProps","eventTool","_group","_lastGraphicKey","_handle","_dragging","_lastValue","_lastStatus","_payloadInfo","animationThreshold","_axisModel","_axisPointerModel","makeElOption","graphicKey","_moveAnimation","determineAnimation","doUpdateProps","updatePointerEl","updateLabelEl","createPointerEl","createLabelEl","_renderHandle","isCategoryAxis","useSnap","pointerOption","pointer","pointerEl","updateHandleTransform","onmousemove","onmousedown","_onHandleDragMove","ondragend","_onHandleDragEnd","includeStyles","handleSize","_moveHandleToValue","getHandleTransform","_doDispatchAxisPointer","payloadInfo","cursorPoint","doClear","buildLabel","getAxisDimIndex","viewHelper","cartesianAxisHelper","CartesianAxisPointer","otherExtent","getGlobalExtent","pixelValue","elStyle","pointerShapeBuilder","currPosition","cursorOtherValue","tooltipOptions","targetShape","shadow","bandWidth","findPointFromSeries","shouldHide","illegalPoint","outputFinder","showValueMap","dataByCoordSys","highlightBatch","updaters","showPointer","showTooltip","coordSysContainsPoint","notTargetAxis","processOnAxis","linkTriggers","tarAxisInfo","tarKey","srcAxisInfo","srcKey","srcValItem","makeMapperParam","updateModelActually","dispatchTooltipActually","dispatchHighDownActually","dontSnap","buildPayloadsBySeries","payloadBatch","snapToValue","seriesNestestValue","nestestValue","modelHelper","coordSysItem","coordSysId","coordSysIndex","coordSysType","coordSysMainType","dataByAxis","axisId","valueLabelOpt","valItem","lastHighlights","newHighlights","toHighlight","toDownplay","isTarget","vals","axisBuilderAttrs","selfBuilderAttrs","CartesianAxisView","oldAxisGroup","_axisGroup","axisBuilder","_splitLine","splitLineModel","lineColors","lineInterval","lineCount","colorIndex","_splitArea","splitAreaModel","areaStyleModel","areaColors","prevX","prevY","areaInterval","areaStyle","positionGroup","addBackground","targetList","_selectTargetMap","targetMap","select","unSelect","toggleSelected","LegendModel","_updateData","legendData","hasSelected","availableNames","getSeries","_availableNames","itemWidth","itemHeight","inactiveColor","dispatchSelectAction","dispatchHighlightAction","dataName","dispatchDownplayAction","symbolCreator","listComponentHelper","_symbolTypeStore","legendModel","selectMode","itemAlign","legendDrawedMap","getSeriesByName","legendSymbolType","_createItem","eachRawSeries","itemGroup","itemIcon","tooltipModel","legendGlobalTooltipModel","hitRect","legendIndex","legendSelectActionHandler","selectedMap","isToggleSelect","isItemSelected","legendModels","findComponents","filterSeries","assembleTransition","transitionText","vendors","vendorPrefix","assembleFont","cssText","assembleCssText","transitionDuration","zrColor","borderName","camelCase","TooltipContent","_x","_y","appendChild","_container","_show","_hideTimeout","onmouseenter","_enterable","_inContent","eventUtil","onmouseleave","hideLater","_hideDelay","stl","currentStyle","defaultView","getComputedStyle","domStyle","display","setContent","setEnterable","enterable","viewportRoot","getViewportRoot","offsetLeft","offsetTop","isShow","showContent","alwaysShowContent","displayMode","confine","showDelay","hideDelay","borderRadius","extraCssText","animationEasingUpdate","buildTooltipModel","modelCascade","resultModel","refixTooltipPosition","gapH","gapV","confineTooltipPosition","calcTooltipPosition","contentSize","domWidth","domHeight","rectWidth","rectHeight","isCenterAlign","layoutUtil","axisPointerViewHelper","proxyRect","tooltipContent","_tooltipContent","_tooltipModel","_ecModel","_lastDataByCoordSys","_alwaysShowContent","_initGlobalListener","_keepShow","_tryShow","_hide","_lastX","_lastY","_refreshUpdateTimeout","manuallyShowTip","_ticket","_manuallyAxisShowTip","pointInfo","findHover","manuallyHideTip","_showAxisTooltip","_showSeriesItemTooltip","_showComponentItemTooltip","_showOrMove","_showTimout","singleDefaultHTML","singleParamsList","singleTooltipModel","itemCoordSys","axisValue","seriesDefaultHTML","valueLabel","axisValueLabel","firstLine","positionExpr","_updateContentNotChangedOnAxis","_updatePosition","_showTooltipContent","tooltipTrigger","defaultHtml","asyncTicket","subTooltipModel","html","cbTicket","vAlign","viewSize","lastCoordSys","contentNotChanged","lastItemCoordSys","indexCoordSys","lastDataByAxis","thisItemCoordSys","thisDataByAxis","lastItem","indexAxis","lastIndices","lastIdxItem","newIdxItem","nameRotate","nameTruncate","nameTextStyle","nameGap","inside","splitLine","splitArea","categoryAxis","valueAxis","timeAxis","logAxis","logBase","axisDefault","AXIS_TYPES","BaseAxisModelClass","axisTypeDefaulter","extraDefaultOption","axisLabelInterval","coordExtent","_labelInterval","dimAxisMapper","_axes","Cartesian","_dimList","getAxesByScale","_dataCoordConvert","input","dimList","output","axisX","axisY","dataToPoints","containLabel","defaultKeyGetter","oldArr","newArr","oldKeyGetter","newKeyGetter","_old","_new","_oldKeyGetter","_newKeyGetter","initIndexMap","keyArr","keyGetter","existence","_add","_update","_remove","oldDataIndexMap","newDataIndexMap","oldDataKeyArr","newDataKeyArr","unshift","axisModelCommonMixin","createList","createScale","mixinAxisModelCommonMethods","getSeriesStackId","getAxisKey","calBarWidthAndOffset","barSeries","columnsMap","columnsOnAxis","remainedWidth","autoWidthCount","categoryGap","stacks","stackId","barWidth","barMaxWidth","barGap","barCategoryGap","barGapPercent","autoWidth","column","lastColumn","widthSum","barWidthAndOffset","getSeriesByType","isSeriesFiltered","lastStackCoords","lastStackCoordsOrigin","columnLayoutInfo","columnOffset","columnWidth","valueAxisStart","sign","lastCoord","lastCoordOrigin","maskColor","mask","labelRect","mergeTheme","themeItem","initBase","baseOption","OPTION_INNER_KEY","_seriesIndices","globalDefault","getComponentsByTypes","componentsMap","existComponent","createSeriesIndices","filterBySubType","cpt","assertSeriesInitialized","_optionManager","onlyGraphic","mountOption","timelineOption","getTimelineOption","mediaOptions","getMediaOption","mediaOption","visitComponent","newCptOptionList","resultItem","ComponentModelClass","newCptTypes","componentOption","cpts","isIdArray","isNameArray","queryCond","q","indexAttr","idAttr","nameAttr","queryResult","oneSeries","rawSeriesIndex","eachRawSeriesByType","filteredSeries","componentTypes","_timelineOptions","_mediaList","_mediaDefault","_currentMediaIndices","_optionBackup","_newBaseOption","parseRawOption","rawOption","isNew","mediaDefault","timelineOptions","mediaList","timelineOpt","timeline","media","singleMedia","preProcess","applyMediaQuery","ecWidth","ecHeight","realMap","aspectratio","applicatable","matched","QUERY_REG","operator","realAttr","real","expect","indicesEquals","indices1","indices2","oldOption","newCptOpt","oldCptOpt","oldOptionBackup","newParsedOption","isRecreate","optionBackup","timelineModel","getCurrentIndex","platform","fontFamily","fontStyle","animationDuration","progressiveThreshold","hoverLayerThreshold","useUTC","lineType","getLineDash","dotSize","dashSize","gTextStyleModel","compatLayoutProperties","LAYOUT_PROPERTIES","compatStyle","COMPATITABLE_COMPONENTS","COMPATITABLE_SERIES","seriesOpt","clockWise","pointerColor","dataRange","visualMap","componentName","compatItemStyle","itemStyleOpt","POSSIBLE_STYLES","normalItemStyleOpt","emphasisItemStyleOpt","markPoint","markLine","mpData","mlData","fixRoundingError","originalVal","roundingErrorFix","intervalScaleProto","mathFloor","mathCeil","mathLog","LogScale","_originalScale","originalScale","powVal","__fixMin","__fixMax","approxTickNum","err","rank","scaleHelper","bisect","TimeScale","stepLvl","_stepLvl","ONE_HOUR","getFullYear","getMonth","getDate","approxInterval","scaleLevelsLen","scaleLevels","yearSpan","ONE_SECOND","ONE_MINUTE","ONE_DAY","componentProto","paletteScope","dataAll","idxMap","filteredIdx","singleDataColor","encodeColor","colorAccessPath","browserDetector","addListener","element","listenerProxy","getObject","getState","object","proxy","contentDocument","makeDetectable","debug","mutateDom","alterPositionStyles","removeRelativeStyles","property","onObjectLoad","getDocument","positionCheckPerformed","objectDocument","OBJECT_STYLE","tabIndex","offsetWidth","offsetHeight","startSize","batchProcessor","uninstall","removeChild","stateHandler","addAnimationClass","className","detectionContainerClass","addEvent","error","removeEvent","getExpandElement","childNodes","getShrinkElement","listeners","idHandler","isUnrendered","getStyle","elementStyle","widthCSS","heightCSS","storeStartSize","initListeners","storeStyle","storeCurrentSize","lastWidth","lastHeight","getExpandChildElement","getWidthOffset","scrollbarSizes","getHeightOffset","getExpandWidth","getExpandHeight","getShrinkWidth","getShrinkHeight","positionScrollbars","expand","shrink","expandWidth","expandHeight","shrinkWidth","shrinkHeight","scrollLeft","scrollTop","injectContainerElement","onAnimationStart","onRendered","injectScrollElements","onExpandScroll","onExpand","onShrinkScroll","onShrink","rootContainer","scrollbarWidth","scrollbarHeight","containerStyle","containerContainer","expandChild","shrinkChild","registerListenersAndPositionElements","updateChildSizes","updateDetectorElements","areElementsInjected","notifyListenersIfNeeded","lastNotifiedWidth","lastNotifiedHeight","handleRender","handleScroll","finalizeDomMutation","ready","install","body","contains","hasState","insertBefore","firstChild","widthSize","heightSize","styleId","containerClass","getElementById","containerAnimationClass","containerAnimationActiveClass","styleElement","isCollection","toArray","isElement","elementUtilsMaker","listenerHandlerMaker","idGeneratorMaker","idHandlerMaker","reporterMaker","batchProcessorMaker","objectStrategyMaker","scrollStrategyMaker","listenTo","elements","onResizeCallback","eventListenerHandler","callOnAdd","elementsReady","globalOptions","onReadyCallback","initState","elementUtils","isDetectable","isBusy","onReadyCallbacks","markBusy","detectionStrategy","markAsDetectable","removeAllListeners","cleanState","idGenerator","defaultIdHandler","desiredStrategy","strategyOptions","removeListener","busy","generate","idCount","setId","getListeners","eventListeners","quiet","attachFunction","locals","wait","invokeFunc","lastArgs","thisArg","lastThis","lastInvokeTime","leadingEdge","timerId","timerExpired","leading","remainingWait","timeSinceLastCall","lastCallTime","timeSinceLastInvoke","maxing","nativeMin","maxWait","shouldInvoke","now","trailingEdge","trailing","cancel","debounced","isInvoking","TypeError","FUNC_ERROR_TEXT","toNumber","nativeMax","isObjectLike","isSymbol","objectToString","symbolTag","NAN","valueOf","reTrim","isBinary","reIsBinary","reIsOctal","freeParseInt","reIsBadHex","freeGlobal","freeSelf","root","objectProto","configurable","enumerable","__esModule","default","startVal","required","endVal","autoplay","Boolean","decimals","validator","decimal","separator","prefix","suffix","useEasing","easingFn","localStartVal","displayValue","formatNumber","printVal","paused","localDuration","startTime","timestamp","rAF","countDown","$emit","pauseResume","cancelAnimationFrame","reset","isNumber","destroyed","u","staticRenderFns","_scopeId","keys","esModule","$createElement","_self","_c","_v","_s","Vue","ECHARTS_EVENTS","Resize","Debounce","initOpts","loadingOpts","resizable","fnResize","insResize","instance","watches","cache","ifLoading","deep","that","initResize","strategy","$el","$nextTick","_on","_events","unbind","$watch","unwatch","uninitResize","uninit","beforeDestroy","registerMap","mapName","geoJson","specialAreas","getMap","themeName","_vm","staticClass","attrs","gutter","_l","num","md","sm","staticStyle","_e","class","makeEventPacket","eveType","targetInfo","topTarget","gestureEvent","pinchX","pinchY","pinchScale","EmptyProxy","isHover","displayable","SILENT","Draggable","handlerNames","Handler","painterRoot","_hovered","_lastTouchMoment","mousemove","lastHovered","hovered","hoveredTarget","lastHoveredTarget","setCursor","dispatchToElement","mouseout","innerDom","toElement","relatedTarget","parentNode","eventArgs","setCursorStyle","cursorStyle","eventHandler","eventPacket","eachOtherLayer","layer","exclude","hoverCheckResult","_downel","_upel","returnFalse","createDom","newDom","newDomStyle","Layer","onselectstart","domBack","ctxBack","motionBlur","lastFrameAlpha","initContext","createBackBuffer","clearAll","haveMotionBLur","clearRect","clearColorGradientOrPattern","__canvasGradient","save","fillRect","restore","parseInt10","isLayerValid","__builtin__","preProcessLayer","__unusedCount","postProcessLayer","isDisplayableCulled","viewRect","isClipPathChanged","clipPaths","prevClipPaths","doClip","createRoot","domRoot","Painter","singleCanvas","_opts","_singleCanvas","rootStyle","zlevelList","_zlevelList","layers","_layers","_layerConfig","_width","_height","mainLayer","_domRoot","_getSize","_progressiveLayers","_hoverlayer","_hoverElements","paintAll","_paintList","refreshHover","_startProgessive","__hoverMir","elMirror","__from","hoverElements","clearHover","hoverLayer","displayableSortFunc","getLayer","originalEl","_doPaintEl","token","_progressiveToken","_doPaintList","_furtherProgressive","_progress","_clearProgressive","_updateLayerStatus","eachBuiltinLayer","flushProgressiveLayer","currentLayer","currentZLevel","currentProgressiveLayer","layerProgress","progressiveLayerIdx","elZLevel","elFrame","__frame","MAX_PROGRESSIVE_LAYER_NUMBER","renderScope","__progress","__maxProgress","__nextIdxNotProg","forcePaint","prevClipLayer","prevElClipPaths","insertLayer","layersMap","prevLayer","virtual","prevDom","eachLayer","getLayers","progressiveLayers","elCountsLastFrame","progressiveElCountsLastFrame","lastProgressiveKey","progressiveLayerCount","frameCount","elProgress","_clearLayer","layerConfig","delLayer","clearLayer","imageLayer","displayList","whIdx","cwh","plt","prb","pathToImage","shadowBlurSize","leftMargin","rightMargin","topMargin","bottomMargin","pathTransform","ImageShape","imgShape","shapeCompareFunc","Storage","_roots","_displayList","_displayListLen","includeIgnore","updateDisplayList","_updateAndAddDisplayable","userSetClipPath","currentClipPath","parentClipPath","addRoot","delRoot","_renderList","Animation","stage","_clips","_running","_time","_pausedTime","_pauseStart","clips","deferredEvents","deferredClips","_needsRemove","fire","_startLoop","_life","_initialized","onrestart","easingFuncs","globalTime","deltaTime","_startTime","easingFunc","schedule","restart","remainder","arg","linear","quadraticIn","quadraticOut","quadraticInOut","cubicIn","cubicOut","cubicInOut","quarticIn","quarticOut","quarticInOut","quinticIn","quinticOut","quinticInOut","sinusoidalIn","sinusoidalOut","sinusoidalInOut","exponentialIn","exponentialOut","exponentialInOut","circularIn","circularOut","circularInOut","elasticIn","elasticOut","elasticInOut","backIn","backOut","backInOut","bounceIn","bounceOut","bounceInOut","_a","_b","isAroundEqual","swapExtrema","windingCubic","nRoots","y0_","y1_","nExtrema","unit","windingQuadratic","y_","x_","windingArc","containPath","isStroke","windingLine","cubic","quadratic","pointPair","GestureMgr","_track","recognize","_doTrack","_recognize","touches","trackItem","recognizers","gestureInfo","pinch","track","pinchEnd","pinchPre","pinchCenter","extremity","fromPoints","xDim","yDim","tx","ty","vec2Min","vec2Max","eventNameFix","processGesture","gestureMgr","_gestureMgr","setTouchTimer","_touching","_touchTimer","isPointerFromTouch","pointerType","initDomHandler","makeMouseHandler","touchHandlerNames","_handlers","domHandlers","pointerHandlerNames","mouseHandlerNames","HandlerDomProxy","mountHandlers","pointerEventNames","pointerdown","pointerup","pointermove","pointerout","nm","touchstart","mousedown","touchmove","touchend","mouseup","click","handlerDomProxyProto","paths","_updatePathDirty","globalCoord","strokeText","fillText","r1","r2","r3","r4","total","v2Min","v2Max","v2Scale","v2Distance","v2Add","isLoop","constraint","prevPoint","nextPoint","cps","d0","cp0","interpolate","segs","w2","w3","maxValue","lastIndexOf","baseline","textShadowColor","unitX","unitY","someVectorAt","isTangent","cpx2","cpy2","cpx1","cpy1","curveTool","pointAt","tangentAt","polyHelper","roundRectHelper","shadowTemp","modified","animatingShape","pathSplitted","_animateToShallow","objShallow","propertyCount","_dragStart","_drag","_dragEnd","draggingTarget","_draggingTarget","dropTarget","lastDropTarget","_dropTarget","processArc","fa","psiDeg","xp","yp","lambda","cxp","cyp","vAngle","vRatio","createPathProxyFromString","cs","cc","RegExp","prevCmd","cpx","cpy","ctlPtx","ctlPty","createPathOptions","pathProxy","transformPath","vMag","pathEls","pathList","pathEl","pathBundle","nPoint","mathAtan2","delInstance","HandlerProxy","useVML","painterCtors","ZRender","getInstance","registerPainter","rendererType","vml","handerProxy","_needsRefresh","oldDelFromStorage","oldAddToStorage","zLevel","_needsRefreshHover","refreshHoverImmediately","clearAnimation"],"mappings":"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","file":"static/js/0.c1c7da059d4b450d5817.js","sourcesContent":["webpackJsonp([0],Array(153).concat([\n/* 153 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n/* styles */\n__webpack_require__(366)\n\nvar Component = __webpack_require__(18)(\n  /* script */\n  __webpack_require__(244),\n  /* template */\n  __webpack_require__(392),\n  /* scopeId */\n  \"data-v-61c0d0a1\",\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n/* 154 */,\n/* 155 */,\n/* 156 */,\n/* 157 */,\n/* 158 */\n/***/ (function(module, exports) {\n\n/**\n * @module zrender/core/util\n */\n\n\n    // 用于处理merge时无法遍历Date等对象的问题\n    var BUILTIN_OBJECT = {\n        '[object Function]': 1,\n        '[object RegExp]': 1,\n        '[object Date]': 1,\n        '[object Error]': 1,\n        '[object CanvasGradient]': 1,\n        '[object CanvasPattern]': 1,\n        // For node-canvas\n        '[object Image]': 1,\n        '[object Canvas]': 1\n    };\n\n    var TYPED_ARRAY = {\n        '[object Int8Array]': 1,\n        '[object Uint8Array]': 1,\n        '[object Uint8ClampedArray]': 1,\n        '[object Int16Array]': 1,\n        '[object Uint16Array]': 1,\n        '[object Int32Array]': 1,\n        '[object Uint32Array]': 1,\n        '[object Float32Array]': 1,\n        '[object Float64Array]': 1\n    };\n\n    var objToString = Object.prototype.toString;\n\n    var arrayProto = Array.prototype;\n    var nativeForEach = arrayProto.forEach;\n    var nativeFilter = arrayProto.filter;\n    var nativeSlice = arrayProto.slice;\n    var nativeMap = arrayProto.map;\n    var nativeReduce = arrayProto.reduce;\n\n    /**\n     * Those data types can be cloned:\n     *     Plain object, Array, TypedArray, number, string, null, undefined.\n     * Those data types will be assgined using the orginal data:\n     *     BUILTIN_OBJECT\n     * Instance of user defined class will be cloned to a plain object, without\n     * properties in prototype.\n     * Other data types is not supported (not sure what will happen).\n     *\n     * Caution: do not support clone Date, for performance consideration.\n     * (There might be a large number of date in `series.data`).\n     * So date should not be modified in and out of echarts.\n     *\n     * @param {*} source\n     * @return {*} new\n     */\n    function clone(source) {\n        if (source == null || typeof source != 'object') {\n            return source;\n        }\n\n        var result = source;\n        var typeStr = objToString.call(source);\n\n        if (typeStr === '[object Array]') {\n            result = [];\n            for (var i = 0, len = source.length; i < len; i++) {\n                result[i] = clone(source[i]);\n            }\n        }\n        else if (TYPED_ARRAY[typeStr]) {\n            result = source.constructor.from(source);\n        }\n        else if (!BUILTIN_OBJECT[typeStr] && !isPrimitive(source) && !isDom(source)) {\n            result = {};\n            for (var key in source) {\n                if (source.hasOwnProperty(key)) {\n                    result[key] = clone(source[key]);\n                }\n            }\n        }\n\n        return result;\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} target\n     * @param {*} source\n     * @param {boolean} [overwrite=false]\n     */\n    function merge(target, source, overwrite) {\n        // We should escapse that source is string\n        // and enter for ... in ...\n        if (!isObject(source) || !isObject(target)) {\n            return overwrite ? clone(source) : target;\n        }\n\n        for (var key in source) {\n            if (source.hasOwnProperty(key)) {\n                var targetProp = target[key];\n                var sourceProp = source[key];\n\n                if (isObject(sourceProp)\n                    && isObject(targetProp)\n                    && !isArray(sourceProp)\n                    && !isArray(targetProp)\n                    && !isDom(sourceProp)\n                    && !isDom(targetProp)\n                    && !isBuiltInObject(sourceProp)\n                    && !isBuiltInObject(targetProp)\n                    && !isPrimitive(sourceProp)\n                    && !isPrimitive(targetProp)\n                ) {\n                    // 如果需要递归覆盖，就递归调用merge\n                    merge(targetProp, sourceProp, overwrite);\n                }\n                else if (overwrite || !(key in target)) {\n                    // 否则只处理overwrite为true，或者在目标对象中没有此属性的情况\n                    // NOTE，在 target[key] 不存在的时候也是直接覆盖\n                    target[key] = clone(source[key], true);\n                }\n            }\n        }\n\n        return target;\n    }\n\n    /**\n     * @param {Array} targetAndSources The first item is target, and the rests are source.\n     * @param {boolean} [overwrite=false]\n     * @return {*} target\n     */\n    function mergeAll(targetAndSources, overwrite) {\n        var result = targetAndSources[0];\n        for (var i = 1, len = targetAndSources.length; i < len; i++) {\n            result = merge(result, targetAndSources[i], overwrite);\n        }\n        return result;\n    }\n\n    /**\n     * @param {*} target\n     * @param {*} source\n     * @memberOf module:zrender/core/util\n     */\n    function extend(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n        return target;\n    }\n\n    /**\n     * @param {*} target\n     * @param {*} source\n     * @param {boolen} [overlay=false]\n     * @memberOf module:zrender/core/util\n     */\n    function defaults(target, source, overlay) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key)\n                && (overlay ? source[key] != null : target[key] == null)\n            ) {\n                target[key] = source[key];\n            }\n        }\n        return target;\n    }\n\n    function createCanvas() {\n        return document.createElement('canvas');\n    }\n    // FIXME\n    var _ctx;\n    function getContext() {\n        if (!_ctx) {\n            // Use util.createCanvas instead of createCanvas\n            // because createCanvas may be overwritten in different environment\n            _ctx = util.createCanvas().getContext('2d');\n        }\n        return _ctx;\n    }\n\n    /**\n     * 查询数组中元素的index\n     * @memberOf module:zrender/core/util\n     */\n    function indexOf(array, value) {\n        if (array) {\n            if (array.indexOf) {\n                return array.indexOf(value);\n            }\n            for (var i = 0, len = array.length; i < len; i++) {\n                if (array[i] === value) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    }\n\n    /**\n     * 构造类继承关系\n     *\n     * @memberOf module:zrender/core/util\n     * @param {Function} clazz 源类\n     * @param {Function} baseClazz 基类\n     */\n    function inherits(clazz, baseClazz) {\n        var clazzPrototype = clazz.prototype;\n        function F() {}\n        F.prototype = baseClazz.prototype;\n        clazz.prototype = new F();\n\n        for (var prop in clazzPrototype) {\n            clazz.prototype[prop] = clazzPrototype[prop];\n        }\n        clazz.prototype.constructor = clazz;\n        clazz.superClass = baseClazz;\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Object|Function} target\n     * @param {Object|Function} sorce\n     * @param {boolean} overlay\n     */\n    function mixin(target, source, overlay) {\n        target = 'prototype' in target ? target.prototype : target;\n        source = 'prototype' in source ? source.prototype : source;\n\n        defaults(target, source, overlay);\n    }\n\n    /**\n     * Consider typed array.\n     * @param {Array|TypedArray} data\n     */\n    function isArrayLike(data) {\n        if (! data) {\n            return;\n        }\n        if (typeof data == 'string') {\n            return false;\n        }\n        return typeof data.length == 'number';\n    }\n\n    /**\n     * 数组或对象遍历\n     * @memberOf module:zrender/core/util\n     * @param {Object|Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     */\n    function each(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.forEach && obj.forEach === nativeForEach) {\n            obj.forEach(cb, context);\n        }\n        else if (obj.length === +obj.length) {\n            for (var i = 0, len = obj.length; i < len; i++) {\n                cb.call(context, obj[i], i, obj);\n            }\n        }\n        else {\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    cb.call(context, obj[key], key, obj);\n                }\n            }\n        }\n    }\n\n    /**\n     * 数组映射\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function map(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.map && obj.map === nativeMap) {\n            return obj.map(cb, context);\n        }\n        else {\n            var result = [];\n            for (var i = 0, len = obj.length; i < len; i++) {\n                result.push(cb.call(context, obj[i], i, obj));\n            }\n            return result;\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {Object} [memo]\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function reduce(obj, cb, memo, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.reduce && obj.reduce === nativeReduce) {\n            return obj.reduce(cb, memo, context);\n        }\n        else {\n            for (var i = 0, len = obj.length; i < len; i++) {\n                memo = cb.call(context, memo, obj[i], i, obj);\n            }\n            return memo;\n        }\n    }\n\n    /**\n     * 数组过滤\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function filter(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.filter && obj.filter === nativeFilter) {\n            return obj.filter(cb, context);\n        }\n        else {\n            var result = [];\n            for (var i = 0, len = obj.length; i < len; i++) {\n                if (cb.call(context, obj[i], i, obj)) {\n                    result.push(obj[i]);\n                }\n            }\n            return result;\n        }\n    }\n\n    /**\n     * 数组项查找\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function find(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        for (var i = 0, len = obj.length; i < len; i++) {\n            if (cb.call(context, obj[i], i, obj)) {\n                return obj[i];\n            }\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Function} func\n     * @param {*} context\n     * @return {Function}\n     */\n    function bind(func, context) {\n        var args = nativeSlice.call(arguments, 2);\n        return function () {\n            return func.apply(context, args.concat(nativeSlice.call(arguments)));\n        };\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Function} func\n     * @return {Function}\n     */\n    function curry(func) {\n        var args = nativeSlice.call(arguments, 1);\n        return function () {\n            return func.apply(this, args.concat(nativeSlice.call(arguments)));\n        };\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isArray(value) {\n        return objToString.call(value) === '[object Array]';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isFunction(value) {\n        return typeof value === 'function';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isString(value) {\n        return objToString.call(value) === '[object String]';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isObject(value) {\n        // Avoid a V8 JIT bug in Chrome 19-20.\n        // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n        var type = typeof value;\n        return type === 'function' || (!!value && type == 'object');\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isBuiltInObject(value) {\n        return !!BUILTIN_OBJECT[objToString.call(value)];\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isDom(value) {\n        return typeof value === 'object'\n            && typeof value.nodeType === 'number'\n            && typeof value.ownerDocument === 'object';\n    }\n\n    /**\n     * Whether is exactly NaN. Notice isNaN('a') returns true.\n     * @param {*} value\n     * @return {boolean}\n     */\n    function eqNaN(value) {\n        return value !== value;\n    }\n\n    /**\n     * If value1 is not null, then return value1, otherwise judget rest of values.\n     * @memberOf module:zrender/core/util\n     * @return {*} Final value\n     */\n    function retrieve(values) {\n        for (var i = 0, len = arguments.length; i < len; i++) {\n            if (arguments[i] != null) {\n                return arguments[i];\n            }\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Array} arr\n     * @param {number} startIndex\n     * @param {number} endIndex\n     * @return {Array}\n     */\n    function slice() {\n        return Function.call.apply(nativeSlice, arguments);\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {boolean} condition\n     * @param {string} message\n     */\n    function assert(condition, message) {\n        if (!condition) {\n            throw new Error(message);\n        }\n    }\n\n    var primitiveKey = '__ec_primitive__';\n    /**\n     * Set an object as primitive to be ignored traversing children in clone or merge\n     */\n    function setAsPrimitive(obj) {\n        obj[primitiveKey] = true;\n    }\n\n    function isPrimitive(obj) {\n        return obj[primitiveKey];\n    }\n\n    /**\n     * @constructor\n     */\n    function HashMap(obj) {\n        obj && extend(this, obj);\n    }\n\n    // Add prefix to avoid conflict with Object.prototype.\n    var HASH_MAP_PREFIX = '_ec_';\n    var HASH_MAP_PREFIX_LENGTH = 4;\n\n    HashMap.prototype = {\n        constructor: HashMap,\n        // Do not provide `has` method to avoid defining what is `has`.\n        // (We usually treat `null` and `undefined` as the same, different\n        // from ES6 Map).\n        get: function (key) {\n            return this[HASH_MAP_PREFIX + key];\n        },\n        set: function (key, value) {\n            this[HASH_MAP_PREFIX + key] = value;\n            // Comparing with invocation chaining, `return value` is more commonly\n            // used in this case: `var someVal = map.set('a', genVal());`\n            return value;\n        },\n        // Although util.each can be performed on this hashMap directly, user\n        // should not use the exposed keys, who are prefixed.\n        each: function (cb, context) {\n            context !== void 0 && (cb = bind(cb, context));\n            for (var prefixedKey in this) {\n                this.hasOwnProperty(prefixedKey)\n                    && cb(this[prefixedKey], prefixedKey.slice(HASH_MAP_PREFIX_LENGTH));\n            }\n        },\n        // Do not use this method if performance sensitive.\n        removeKey: function (key) {\n            delete this[key];\n        }\n    };\n\n    function createHashMap() {\n        return new HashMap();\n    }\n\n    var util = {\n        inherits: inherits,\n        mixin: mixin,\n        clone: clone,\n        merge: merge,\n        mergeAll: mergeAll,\n        extend: extend,\n        defaults: defaults,\n        getContext: getContext,\n        createCanvas: createCanvas,\n        indexOf: indexOf,\n        slice: slice,\n        find: find,\n        isArrayLike: isArrayLike,\n        each: each,\n        map: map,\n        reduce: reduce,\n        filter: filter,\n        bind: bind,\n        curry: curry,\n        isArray: isArray,\n        isString: isString,\n        isObject: isObject,\n        isFunction: isFunction,\n        isBuiltInObject: isBuiltInObject,\n        isDom: isDom,\n        eqNaN: eqNaN,\n        retrieve: retrieve,\n        assert: assert,\n        setAsPrimitive: setAsPrimitive,\n        createHashMap: createHashMap,\n        noop: function () {}\n    };\n    module.exports = util;\n\n\n\n/***/ }),\n/* 159 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {// Enable DEV mode when using source code without build. which has no __DEV__ variable\n// In build process 'typeof __DEV__' will be replace with 'boolean'\n// So this code will be removed or disabled anyway after built.\nif (typeof __DEV__ === 'undefined') {\n    // In browser\n    if (typeof window !== 'undefined') {\n        window.__DEV__ = true;\n    }\n    // In node\n    else if (typeof global !== 'undefined') {\n        global.__DEV__ = true;\n    }\n}\n\n/*!\n * ECharts, a javascript interactive chart library.\n *\n * Copyright (c) 2015, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/echarts/blob/master/LICENSE.txt\n */\n\n/**\n * @module echarts\n */\n\n\n    var env = __webpack_require__(167);\n\n    var GlobalModel = __webpack_require__(335);\n    var ExtensionAPI = __webpack_require__(294);\n    var CoordinateSystemManager = __webpack_require__(188);\n    var OptionManager = __webpack_require__(336);\n\n    var ComponentModel = __webpack_require__(170);\n    var SeriesModel = __webpack_require__(215);\n\n    var ComponentView = __webpack_require__(349);\n    var ChartView = __webpack_require__(220);\n    var graphic = __webpack_require__(160);\n    var modelUtil = __webpack_require__(162);\n    var throttle = __webpack_require__(219);\n\n    var zrender = __webpack_require__(438);\n    var zrUtil = __webpack_require__(158);\n    var colorTool = __webpack_require__(178);\n    var Eventful = __webpack_require__(177);\n    var timsort = __webpack_require__(196);\n\n    var each = zrUtil.each;\n    var parseClassType = ComponentModel.parseClassType;\n\n    var PRIORITY_PROCESSOR_FILTER = 1000;\n    var PRIORITY_PROCESSOR_STATISTIC = 5000;\n\n\n    var PRIORITY_VISUAL_LAYOUT = 1000;\n    var PRIORITY_VISUAL_GLOBAL = 2000;\n    var PRIORITY_VISUAL_CHART = 3000;\n    var PRIORITY_VISUAL_COMPONENT = 4000;\n    // FIXME\n    // necessary?\n    var PRIORITY_VISUAL_BRUSH = 5000;\n\n    // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\n    // where they must not be invoked nestedly, except the only case: invoke\n    // dispatchAction with updateMethod \"none\" in main process.\n    // This flag is used to carry out this rule.\n    // All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\n    var IN_MAIN_PROCESS = '__flagInMainProcess';\n    var HAS_GRADIENT_OR_PATTERN_BG = '__hasGradientOrPatternBg';\n    var OPTION_UPDATED = '__optionUpdated';\n    var ACTION_REG = /^[a-zA-Z0-9_]+$/;\n\n    function createRegisterEventWithLowercaseName(method) {\n        return function (eventName, handler, context) {\n            // Event name is all lowercase\n            eventName = eventName && eventName.toLowerCase();\n            Eventful.prototype[method].call(this, eventName, handler, context);\n        };\n    }\n\n    /**\n     * @module echarts~MessageCenter\n     */\n    function MessageCenter() {\n        Eventful.call(this);\n    }\n    MessageCenter.prototype.on = createRegisterEventWithLowercaseName('on');\n    MessageCenter.prototype.off = createRegisterEventWithLowercaseName('off');\n    MessageCenter.prototype.one = createRegisterEventWithLowercaseName('one');\n    zrUtil.mixin(MessageCenter, Eventful);\n\n    /**\n     * @module echarts~ECharts\n     */\n    function ECharts(dom, theme, opts) {\n        opts = opts || {};\n\n        // Get theme by name\n        if (typeof theme === 'string') {\n            theme = themeStorage[theme];\n        }\n\n        /**\n         * @type {string}\n         */\n        this.id;\n        /**\n         * Group id\n         * @type {string}\n         */\n        this.group;\n        /**\n         * @type {HTMLDomElement}\n         * @private\n         */\n        this._dom = dom;\n        /**\n         * @type {module:zrender/ZRender}\n         * @private\n         */\n        var zr = this._zr = zrender.init(dom, {\n            renderer: opts.renderer || 'canvas',\n            devicePixelRatio: opts.devicePixelRatio,\n            width: opts.width,\n            height: opts.height\n        });\n\n        /**\n         * Expect 60 pfs.\n         * @type {Function}\n         * @private\n         */\n        this._throttledZrFlush = throttle.throttle(zrUtil.bind(zr.flush, zr), 17);\n\n        /**\n         * @type {Object}\n         * @private\n         */\n        this._theme = zrUtil.clone(theme);\n\n        /**\n         * @type {Array.<module:echarts/view/Chart>}\n         * @private\n         */\n        this._chartsViews = [];\n\n        /**\n         * @type {Object.<string, module:echarts/view/Chart>}\n         * @private\n         */\n        this._chartsMap = {};\n\n        /**\n         * @type {Array.<module:echarts/view/Component>}\n         * @private\n         */\n        this._componentsViews = [];\n\n        /**\n         * @type {Object.<string, module:echarts/view/Component>}\n         * @private\n         */\n        this._componentsMap = {};\n\n        /**\n         * @type {module:echarts/CoordinateSystem}\n         * @private\n         */\n        this._coordSysMgr = new CoordinateSystemManager();\n\n        /**\n         * @type {module:echarts/ExtensionAPI}\n         * @private\n         */\n        this._api = createExtensionAPI(this);\n\n        Eventful.call(this);\n\n        /**\n         * @type {module:echarts~MessageCenter}\n         * @private\n         */\n        this._messageCenter = new MessageCenter();\n\n        // Init mouse events\n        this._initEvents();\n\n        // In case some people write `window.onresize = chart.resize`\n        this.resize = zrUtil.bind(this.resize, this);\n\n        // Can't dispatch action during rendering procedure\n        this._pendingActions = [];\n        // Sort on demand\n        function prioritySortFunc(a, b) {\n            return a.prio - b.prio;\n        }\n        timsort(visualFuncs, prioritySortFunc);\n        timsort(dataProcessorFuncs, prioritySortFunc);\n\n        zr.animation.on('frame', this._onframe, this);\n\n        // ECharts instance can be used as value.\n        zrUtil.setAsPrimitive(this);\n    }\n\n    var echartsProto = ECharts.prototype;\n\n    echartsProto._onframe = function () {\n        // Lazy update\n        if (this[OPTION_UPDATED]) {\n            var silent = this[OPTION_UPDATED].silent;\n\n            this[IN_MAIN_PROCESS] = true;\n\n            updateMethods.prepareAndUpdate.call(this);\n\n            this[IN_MAIN_PROCESS] = false;\n\n            this[OPTION_UPDATED] = false;\n\n            flushPendingActions.call(this, silent);\n\n            triggerUpdatedEvent.call(this, silent);\n        }\n    };\n    /**\n     * @return {HTMLDomElement}\n     */\n    echartsProto.getDom = function () {\n        return this._dom;\n    };\n\n    /**\n     * @return {module:zrender~ZRender}\n     */\n    echartsProto.getZr = function () {\n        return this._zr;\n    };\n\n    /**\n     * Usage:\n     * chart.setOption(option, notMerge, lazyUpdate);\n     * chart.setOption(option, {\n     *     notMerge: ...,\n     *     lazyUpdate: ...,\n     *     silent: ...\n     * });\n     *\n     * @param {Object} option\n     * @param {Object|boolean} [opts] opts or notMerge.\n     * @param {boolean} [opts.notMerge=false]\n     * @param {boolean} [opts.lazyUpdate=false] Useful when setOption frequently.\n     */\n    echartsProto.setOption = function (option, notMerge, lazyUpdate) {\n        if (__DEV__) {\n            zrUtil.assert(!this[IN_MAIN_PROCESS], '`setOption` should not be called during main process.');\n        }\n\n        var silent;\n        if (zrUtil.isObject(notMerge)) {\n            lazyUpdate = notMerge.lazyUpdate;\n            silent = notMerge.silent;\n            notMerge = notMerge.notMerge;\n        }\n\n        this[IN_MAIN_PROCESS] = true;\n\n        if (!this._model || notMerge) {\n            var optionManager = new OptionManager(this._api);\n            var theme = this._theme;\n            var ecModel = this._model = new GlobalModel(null, null, theme, optionManager);\n            ecModel.init(null, null, theme, optionManager);\n        }\n\n        // FIXME\n        // ugly\n        this.__lastOnlyGraphic = !!(option && option.graphic);\n        zrUtil.each(option, function (o, mainType) {\n            mainType !== 'graphic' && (this.__lastOnlyGraphic = false);\n        }, this);\n\n        this._model.setOption(option, optionPreprocessorFuncs, this.__lastOnlyGraphic);\n\n        if (lazyUpdate) {\n            this[OPTION_UPDATED] = {silent: silent};\n            this[IN_MAIN_PROCESS] = false;\n        }\n        else {\n            updateMethods.prepareAndUpdate.call(this);\n            // Ensure zr refresh sychronously, and then pixel in canvas can be\n            // fetched after `setOption`.\n            this._zr.flush();\n\n            this[OPTION_UPDATED] = false;\n            this[IN_MAIN_PROCESS] = false;\n\n            flushPendingActions.call(this, silent);\n            triggerUpdatedEvent.call(this, silent);\n        }\n    };\n\n    /**\n     * @DEPRECATED\n     */\n    echartsProto.setTheme = function () {\n        console.log('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\n    };\n\n    /**\n     * @return {module:echarts/model/Global}\n     */\n    echartsProto.getModel = function () {\n        return this._model;\n    };\n\n    /**\n     * @return {Object}\n     */\n    echartsProto.getOption = function () {\n        return this._model && this._model.getOption();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getWidth = function () {\n        return this._zr.getWidth();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getHeight = function () {\n        return this._zr.getHeight();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getDevicePixelRatio = function () {\n        return this._zr.painter.dpr || window.devicePixelRatio || 1;\n    };\n\n    /**\n     * Get canvas which has all thing rendered\n     * @param {Object} opts\n     * @param {string} [opts.backgroundColor]\n     */\n    echartsProto.getRenderedCanvas = function (opts) {\n        if (!env.canvasSupported) {\n            return;\n        }\n        opts = opts || {};\n        opts.pixelRatio = opts.pixelRatio || 1;\n        opts.backgroundColor = opts.backgroundColor\n            || this._model.get('backgroundColor');\n        var zr = this._zr;\n        var list = zr.storage.getDisplayList();\n        // Stop animations\n        zrUtil.each(list, function (el) {\n            el.stopAnimation(true);\n        });\n        return zr.painter.getRenderedCanvas(opts);\n    };\n    /**\n     * @return {string}\n     * @param {Object} opts\n     * @param {string} [opts.type='png']\n     * @param {string} [opts.pixelRatio=1]\n     * @param {string} [opts.backgroundColor]\n     * @param {string} [opts.excludeComponents]\n     */\n    echartsProto.getDataURL = function (opts) {\n        opts = opts || {};\n        var excludeComponents = opts.excludeComponents;\n        var ecModel = this._model;\n        var excludesComponentViews = [];\n        var self = this;\n\n        each(excludeComponents, function (componentType) {\n            ecModel.eachComponent({\n                mainType: componentType\n            }, function (component) {\n                var view = self._componentsMap[component.__viewId];\n                if (!view.group.ignore) {\n                    excludesComponentViews.push(view);\n                    view.group.ignore = true;\n                }\n            });\n        });\n\n        var url = this.getRenderedCanvas(opts).toDataURL(\n            'image/' + (opts && opts.type || 'png')\n        );\n\n        each(excludesComponentViews, function (view) {\n            view.group.ignore = false;\n        });\n        return url;\n    };\n\n\n    /**\n     * @return {string}\n     * @param {Object} opts\n     * @param {string} [opts.type='png']\n     * @param {string} [opts.pixelRatio=1]\n     * @param {string} [opts.backgroundColor]\n     */\n    echartsProto.getConnectedDataURL = function (opts) {\n        if (!env.canvasSupported) {\n            return;\n        }\n        var groupId = this.group;\n        var mathMin = Math.min;\n        var mathMax = Math.max;\n        var MAX_NUMBER = Infinity;\n        if (connectedGroups[groupId]) {\n            var left = MAX_NUMBER;\n            var top = MAX_NUMBER;\n            var right = -MAX_NUMBER;\n            var bottom = -MAX_NUMBER;\n            var canvasList = [];\n            var dpr = (opts && opts.pixelRatio) || 1;\n\n            zrUtil.each(instances, function (chart, id) {\n                if (chart.group === groupId) {\n                    var canvas = chart.getRenderedCanvas(\n                        zrUtil.clone(opts)\n                    );\n                    var boundingRect = chart.getDom().getBoundingClientRect();\n                    left = mathMin(boundingRect.left, left);\n                    top = mathMin(boundingRect.top, top);\n                    right = mathMax(boundingRect.right, right);\n                    bottom = mathMax(boundingRect.bottom, bottom);\n                    canvasList.push({\n                        dom: canvas,\n                        left: boundingRect.left,\n                        top: boundingRect.top\n                    });\n                }\n            });\n\n            left *= dpr;\n            top *= dpr;\n            right *= dpr;\n            bottom *= dpr;\n            var width = right - left;\n            var height = bottom - top;\n            var targetCanvas = zrUtil.createCanvas();\n            targetCanvas.width = width;\n            targetCanvas.height = height;\n            var zr = zrender.init(targetCanvas);\n\n            each(canvasList, function (item) {\n                var img = new graphic.Image({\n                    style: {\n                        x: item.left * dpr - left,\n                        y: item.top * dpr - top,\n                        image: item.dom\n                    }\n                });\n                zr.add(img);\n            });\n            zr.refreshImmediately();\n\n            return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\n        }\n        else {\n            return this.getDataURL(opts);\n        }\n    };\n\n    /**\n     * Convert from logical coordinate system to pixel coordinate system.\n     * See CoordinateSystem#convertToPixel.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId, geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName,\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {Array|number} result\n     */\n    echartsProto.convertToPixel = zrUtil.curry(doConvertPixel, 'convertToPixel');\n\n    /**\n     * Convert from pixel coordinate system to logical coordinate system.\n     * See CoordinateSystem#convertFromPixel.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId / geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {Array|number} result\n     */\n    echartsProto.convertFromPixel = zrUtil.curry(doConvertPixel, 'convertFromPixel');\n\n    function doConvertPixel(methodName, finder, value) {\n        var ecModel = this._model;\n        var coordSysList = this._coordSysMgr.getCoordinateSystems();\n        var result;\n\n        finder = modelUtil.parseFinder(ecModel, finder);\n\n        for (var i = 0; i < coordSysList.length; i++) {\n            var coordSys = coordSysList[i];\n            if (coordSys[methodName]\n                && (result = coordSys[methodName](ecModel, finder, value)) != null\n            ) {\n                return result;\n            }\n        }\n\n        if (__DEV__) {\n            console.warn(\n                'No coordinate system that supports ' + methodName + ' found by the given finder.'\n            );\n        }\n    }\n\n    /**\n     * Is the specified coordinate systems or components contain the given pixel point.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId / geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName,\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {boolean} result\n     */\n    echartsProto.containPixel = function (finder, value) {\n        var ecModel = this._model;\n        var result;\n\n        finder = modelUtil.parseFinder(ecModel, finder);\n\n        zrUtil.each(finder, function (models, key) {\n            key.indexOf('Models') >= 0 && zrUtil.each(models, function (model) {\n                var coordSys = model.coordinateSystem;\n                if (coordSys && coordSys.containPoint) {\n                    result |= !!coordSys.containPoint(value);\n                }\n                else if (key === 'seriesModels') {\n                    var view = this._chartsMap[model.__viewId];\n                    if (view && view.containPoint) {\n                        result |= view.containPoint(value, model);\n                    }\n                    else {\n                        if (__DEV__) {\n                            console.warn(key + ': ' + (view\n                                ? 'The found component do not support containPoint.'\n                                : 'No view mapping to the found component.'\n                            ));\n                        }\n                    }\n                }\n                else {\n                    if (__DEV__) {\n                        console.warn(key + ': containPoint is not supported');\n                    }\n                }\n            }, this);\n        }, this);\n\n        return !!result;\n    };\n\n    /**\n     * Get visual from series or data.\n     * @param {string|Object} finder\n     *        If string, e.g., 'series', means {seriesIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            dataIndex / dataIndexInside\n     *        }\n     *        If dataIndex is not specified, series visual will be fetched,\n     *        but not data item visual.\n     *        If all of seriesIndex, seriesId, seriesName are not specified,\n     *        visual will be fetched from first series.\n     * @param {string} visualType 'color', 'symbol', 'symbolSize'\n     */\n    echartsProto.getVisual = function (finder, visualType) {\n        var ecModel = this._model;\n\n        finder = modelUtil.parseFinder(ecModel, finder, {defaultMainType: 'series'});\n\n        var seriesModel = finder.seriesModel;\n\n        if (__DEV__) {\n            if (!seriesModel) {\n                console.warn('There is no specified seires model');\n            }\n        }\n\n        var data = seriesModel.getData();\n\n        var dataIndexInside = finder.hasOwnProperty('dataIndexInside')\n            ? finder.dataIndexInside\n            : finder.hasOwnProperty('dataIndex')\n            ? data.indexOfRawIndex(finder.dataIndex)\n            : null;\n\n        return dataIndexInside != null\n            ? data.getItemVisual(dataIndexInside, visualType)\n            : data.getVisual(visualType);\n    };\n\n    /**\n     * Get view of corresponding component model\n     * @param  {module:echarts/model/Component} componentModel\n     * @return {module:echarts/view/Component}\n     */\n    echartsProto.getViewOfComponentModel = function (componentModel) {\n        return this._componentsMap[componentModel.__viewId];\n    };\n\n    /**\n     * Get view of corresponding series model\n     * @param  {module:echarts/model/Series} seriesModel\n     * @return {module:echarts/view/Chart}\n     */\n    echartsProto.getViewOfSeriesModel = function (seriesModel) {\n        return this._chartsMap[seriesModel.__viewId];\n    };\n\n\n    var updateMethods = {\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        update: function (payload) {\n            // console.profile && console.profile('update');\n\n            var ecModel = this._model;\n            var api = this._api;\n            var coordSysMgr = this._coordSysMgr;\n            var zr = this._zr;\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            // Fixme First time update ?\n            ecModel.restoreData();\n\n            // TODO\n            // Save total ecModel here for undo/redo (after restoring data and before processing data).\n            // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\n\n            // Create new coordinate system each update\n            // In LineView may save the old coordinate system and use it to get the orignal point\n            coordSysMgr.create(this._model, this._api);\n\n            processData.call(this, ecModel, api);\n\n            stackSeriesData.call(this, ecModel);\n\n            coordSysMgr.update(ecModel, api);\n\n            doVisualEncoding.call(this, ecModel, payload);\n\n            doRender.call(this, ecModel, payload);\n\n            // Set background\n            var backgroundColor = ecModel.get('backgroundColor') || 'transparent';\n\n            var painter = zr.painter;\n            // TODO all use clearColor ?\n            if (painter.isSingleCanvas && painter.isSingleCanvas()) {\n                zr.configLayer(0, {\n                    clearColor: backgroundColor\n                });\n            }\n            else {\n                // In IE8\n                if (!env.canvasSupported) {\n                    var colorArr = colorTool.parse(backgroundColor);\n                    backgroundColor = colorTool.stringify(colorArr, 'rgb');\n                    if (colorArr[3] === 0) {\n                        backgroundColor = 'transparent';\n                    }\n                }\n                if (backgroundColor.colorStops || backgroundColor.image) {\n                    // Gradient background\n                    // FIXME Fixed layer？\n                    zr.configLayer(0, {\n                        clearColor: backgroundColor\n                    });\n                    this[HAS_GRADIENT_OR_PATTERN_BG] = true;\n\n                    this._dom.style.background = 'transparent';\n                }\n                else {\n                    if (this[HAS_GRADIENT_OR_PATTERN_BG]) {\n                        zr.configLayer(0, {\n                            clearColor: null\n                        });\n                    }\n                    this[HAS_GRADIENT_OR_PATTERN_BG] = false;\n\n                    this._dom.style.background = backgroundColor;\n                }\n            }\n\n            each(postUpdateFuncs, function (func) {\n                func(ecModel, api);\n            });\n\n            // console.profile && console.profileEnd('update');\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateView: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            ecModel.eachSeries(function (seriesModel) {\n                seriesModel.getData().clearAllVisual();\n            });\n\n            doVisualEncoding.call(this, ecModel, payload);\n\n            invokeUpdateMethod.call(this, 'updateView', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateVisual: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            ecModel.eachSeries(function (seriesModel) {\n                seriesModel.getData().clearAllVisual();\n            });\n\n            doVisualEncoding.call(this, ecModel, payload, true);\n\n            invokeUpdateMethod.call(this, 'updateVisual', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateLayout: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            doLayout.call(this, ecModel, payload);\n\n            invokeUpdateMethod.call(this, 'updateLayout', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        prepareAndUpdate: function (payload) {\n            var ecModel = this._model;\n\n            prepareView.call(this, 'component', ecModel);\n\n            prepareView.call(this, 'chart', ecModel);\n\n            // FIXME\n            // ugly\n            if (this.__lastOnlyGraphic) {\n                each(this._componentsViews, function (componentView) {\n                    var componentModel = componentView.__model;\n                    if (componentModel && componentModel.mainType === 'graphic') {\n                        componentView.render(componentModel, ecModel, this._api, payload);\n                        updateZ(componentModel, componentView);\n                    }\n                }, this);\n                this.__lastOnlyGraphic = false;\n            }\n            else {\n                updateMethods.update.call(this, payload);\n            }\n        }\n    };\n\n    /**\n     * @private\n     */\n    function updateDirectly(ecIns, method, payload, mainType, subType) {\n        var ecModel = ecIns._model;\n\n        // broadcast\n        if (!mainType) {\n            each(ecIns._componentsViews.concat(ecIns._chartsViews), callView);\n            return;\n        }\n\n        var query = {};\n        query[mainType + 'Id'] = payload[mainType + 'Id'];\n        query[mainType + 'Index'] = payload[mainType + 'Index'];\n        query[mainType + 'Name'] = payload[mainType + 'Name'];\n\n        var condition = {mainType: mainType, query: query};\n        subType && (condition.subType = subType); // subType may be '' by parseClassType;\n\n        // If dispatchAction before setOption, do nothing.\n        ecModel && ecModel.eachComponent(condition, function (model, index) {\n            callView(ecIns[\n                mainType === 'series' ? '_chartsMap' : '_componentsMap'\n            ][model.__viewId]);\n        }, ecIns);\n\n        function callView(view) {\n            view && view.__alive && view[method] && view[method](\n                view.__model, ecModel, ecIns._api, payload\n            );\n        }\n    }\n\n    /**\n     * Resize the chart\n     * @param {Object} opts\n     * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n     * @param {boolean} [opts.silent=false]\n     */\n    echartsProto.resize = function (opts) {\n        if (__DEV__) {\n            zrUtil.assert(!this[IN_MAIN_PROCESS], '`resize` should not be called during main process.');\n        }\n\n        this[IN_MAIN_PROCESS] = true;\n\n        this._zr.resize(opts);\n\n        var optionChanged = this._model && this._model.resetOption('media');\n        var updateMethod = optionChanged ? 'prepareAndUpdate' : 'update';\n\n        updateMethods[updateMethod].call(this);\n\n        // Resize loading effect\n        this._loadingFX && this._loadingFX.resize();\n\n        this[IN_MAIN_PROCESS] = false;\n\n        var silent = opts && opts.silent;\n\n        flushPendingActions.call(this, silent);\n\n        triggerUpdatedEvent.call(this, silent);\n    };\n\n    /**\n     * Show loading effect\n     * @param  {string} [name='default']\n     * @param  {Object} [cfg]\n     */\n    echartsProto.showLoading = function (name, cfg) {\n        if (zrUtil.isObject(name)) {\n            cfg = name;\n            name = '';\n        }\n        name = name || 'default';\n\n        this.hideLoading();\n        if (!loadingEffects[name]) {\n            if (__DEV__) {\n                console.warn('Loading effects ' + name + ' not exists.');\n            }\n            return;\n        }\n        var el = loadingEffects[name](this._api, cfg);\n        var zr = this._zr;\n        this._loadingFX = el;\n\n        zr.add(el);\n    };\n\n    /**\n     * Hide loading effect\n     */\n    echartsProto.hideLoading = function () {\n        this._loadingFX && this._zr.remove(this._loadingFX);\n        this._loadingFX = null;\n    };\n\n    /**\n     * @param {Object} eventObj\n     * @return {Object}\n     */\n    echartsProto.makeActionFromEvent = function (eventObj) {\n        var payload = zrUtil.extend({}, eventObj);\n        payload.type = eventActionMap[eventObj.type];\n        return payload;\n    };\n\n    /**\n     * @pubilc\n     * @param {Object} payload\n     * @param {string} [payload.type] Action type\n     * @param {Object|boolean} [opt] If pass boolean, means opt.silent\n     * @param {boolean} [opt.silent=false] Whether trigger events.\n     * @param {boolean} [opt.flush=undefined]\n     *                  true: Flush immediately, and then pixel in canvas can be fetched\n     *                      immediately. Caution: it might affect performance.\n     *                  false: Not not flush.\n     *                  undefined: Auto decide whether perform flush.\n     */\n    echartsProto.dispatchAction = function (payload, opt) {\n        if (!zrUtil.isObject(opt)) {\n            opt = {silent: !!opt};\n        }\n\n        if (!actions[payload.type]) {\n            return;\n        }\n\n        // May dispatchAction in rendering procedure\n        if (this[IN_MAIN_PROCESS]) {\n            this._pendingActions.push(payload);\n            return;\n        }\n\n        doDispatchAction.call(this, payload, opt.silent);\n\n        if (opt.flush) {\n            this._zr.flush(true);\n        }\n        else if (opt.flush !== false && env.browser.weChat) {\n            // In WeChat embeded browser, `requestAnimationFrame` and `setInterval`\n            // hang when sliding page (on touch event), which cause that zr does not\n            // refresh util user interaction finished, which is not expected.\n            // But `dispatchAction` may be called too frequently when pan on touch\n            // screen, which impacts performance if do not throttle them.\n            this._throttledZrFlush();\n        }\n\n        flushPendingActions.call(this, opt.silent);\n\n        triggerUpdatedEvent.call(this, opt.silent);\n    };\n\n    function doDispatchAction(payload, silent) {\n        var payloadType = payload.type;\n        var escapeConnect = payload.escapeConnect;\n        var actionWrap = actions[payloadType];\n        var actionInfo = actionWrap.actionInfo;\n\n        var cptType = (actionInfo.update || 'update').split(':');\n        var updateMethod = cptType.pop();\n        cptType = cptType[0] != null && parseClassType(cptType[0]);\n\n        this[IN_MAIN_PROCESS] = true;\n\n        var payloads = [payload];\n        var batched = false;\n        // Batch action\n        if (payload.batch) {\n            batched = true;\n            payloads = zrUtil.map(payload.batch, function (item) {\n                item = zrUtil.defaults(zrUtil.extend({}, item), payload);\n                item.batch = null;\n                return item;\n            });\n        }\n\n        var eventObjBatch = [];\n        var eventObj;\n        var isHighDown = payloadType === 'highlight' || payloadType === 'downplay';\n\n        each(payloads, function (batchItem) {\n            // Action can specify the event by return it.\n            eventObj = actionWrap.action(batchItem, this._model, this._api);\n            // Emit event outside\n            eventObj = eventObj || zrUtil.extend({}, batchItem);\n            // Convert type to eventType\n            eventObj.type = actionInfo.event || eventObj.type;\n            eventObjBatch.push(eventObj);\n\n            // light update does not perform data process, layout and visual.\n            if (isHighDown) {\n                // method, payload, mainType, subType\n                updateDirectly(this, updateMethod, batchItem, 'series');\n            }\n            else if (cptType) {\n                updateDirectly(this, updateMethod, batchItem, cptType.main, cptType.sub);\n            }\n        }, this);\n\n        if (updateMethod !== 'none' && !isHighDown && !cptType) {\n            // Still dirty\n            if (this[OPTION_UPDATED]) {\n                // FIXME Pass payload ?\n                updateMethods.prepareAndUpdate.call(this, payload);\n                this[OPTION_UPDATED] = false;\n            }\n            else {\n                updateMethods[updateMethod].call(this, payload);\n            }\n        }\n\n        // Follow the rule of action batch\n        if (batched) {\n            eventObj = {\n                type: actionInfo.event || payloadType,\n                escapeConnect: escapeConnect,\n                batch: eventObjBatch\n            };\n        }\n        else {\n            eventObj = eventObjBatch[0];\n        }\n\n        this[IN_MAIN_PROCESS] = false;\n\n        !silent && this._messageCenter.trigger(eventObj.type, eventObj);\n    }\n\n    function flushPendingActions(silent) {\n        var pendingActions = this._pendingActions;\n        while (pendingActions.length) {\n            var payload = pendingActions.shift();\n            doDispatchAction.call(this, payload, silent);\n        }\n    }\n\n    function triggerUpdatedEvent(silent) {\n        !silent && this.trigger('updated');\n    }\n\n    /**\n     * Register event\n     * @method\n     */\n    echartsProto.on = createRegisterEventWithLowercaseName('on');\n    echartsProto.off = createRegisterEventWithLowercaseName('off');\n    echartsProto.one = createRegisterEventWithLowercaseName('one');\n\n    /**\n     * @param {string} methodName\n     * @private\n     */\n    function invokeUpdateMethod(methodName, ecModel, payload) {\n        var api = this._api;\n\n        // Update all components\n        each(this._componentsViews, function (component) {\n            var componentModel = component.__model;\n            component[methodName](componentModel, ecModel, api, payload);\n\n            updateZ(componentModel, component);\n        }, this);\n\n        // Upate all charts\n        ecModel.eachSeries(function (seriesModel, idx) {\n            var chart = this._chartsMap[seriesModel.__viewId];\n            chart[methodName](seriesModel, ecModel, api, payload);\n\n            updateZ(seriesModel, chart);\n\n            updateProgressiveAndBlend(seriesModel, chart);\n        }, this);\n\n        // If use hover layer\n        updateHoverLayerStatus(this._zr, ecModel);\n\n        // Post render\n        each(postUpdateFuncs, function (func) {\n            func(ecModel, api);\n        });\n    }\n\n    /**\n     * Prepare view instances of charts and components\n     * @param  {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function prepareView(type, ecModel) {\n        var isComponent = type === 'component';\n        var viewList = isComponent ? this._componentsViews : this._chartsViews;\n        var viewMap = isComponent ? this._componentsMap : this._chartsMap;\n        var zr = this._zr;\n\n        for (var i = 0; i < viewList.length; i++) {\n            viewList[i].__alive = false;\n        }\n\n        ecModel[isComponent ? 'eachComponent' : 'eachSeries'](function (componentType, model) {\n            if (isComponent) {\n                if (componentType === 'series') {\n                    return;\n                }\n            }\n            else {\n                model = componentType;\n            }\n\n            // Consider: id same and type changed.\n            var viewId = model.id + '_' + model.type;\n            var view = viewMap[viewId];\n            if (!view) {\n                var classType = parseClassType(model.type);\n                var Clazz = isComponent\n                    ? ComponentView.getClass(classType.main, classType.sub)\n                    : ChartView.getClass(classType.sub);\n                if (Clazz) {\n                    view = new Clazz();\n                    view.init(ecModel, this._api);\n                    viewMap[viewId] = view;\n                    viewList.push(view);\n                    zr.add(view.group);\n                }\n                else {\n                    // Error\n                    return;\n                }\n            }\n\n            model.__viewId = view.__id = viewId;\n            view.__alive = true;\n            view.__model = model;\n            view.group.__ecComponentInfo = {\n                mainType: model.mainType,\n                index: model.componentIndex\n            };\n        }, this);\n\n        for (var i = 0; i < viewList.length;) {\n            var view = viewList[i];\n            if (!view.__alive) {\n                zr.remove(view.group);\n                view.dispose(ecModel, this._api);\n                viewList.splice(i, 1);\n                delete viewMap[view.__id];\n                view.__id = view.group.__ecComponentInfo = null;\n            }\n            else {\n                i++;\n            }\n        }\n    }\n\n    /**\n     * Processor data in each series\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function processData(ecModel, api) {\n        each(dataProcessorFuncs, function (process) {\n            process.func(ecModel, api);\n        });\n    }\n\n    /**\n     * @private\n     */\n    function stackSeriesData(ecModel) {\n        var stackedDataMap = {};\n        ecModel.eachSeries(function (series) {\n            var stack = series.get('stack');\n            var data = series.getData();\n            if (stack && data.type === 'list') {\n                var previousStack = stackedDataMap[stack];\n                if (previousStack) {\n                    data.stackedOn = previousStack;\n                }\n                stackedDataMap[stack] = data;\n            }\n        });\n    }\n\n    /**\n     * Layout before each chart render there series, special visual encoding stage\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function doLayout(ecModel, payload) {\n        var api = this._api;\n        each(visualFuncs, function (visual) {\n            if (visual.isLayout) {\n                visual.func(ecModel, api, payload);\n            }\n        });\n    }\n\n    /**\n     * Encode visual infomation from data after data processing\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @param {object} layout\n     * @param {boolean} [excludesLayout]\n     * @private\n     */\n    function doVisualEncoding(ecModel, payload, excludesLayout) {\n        var api = this._api;\n        ecModel.clearColorPalette();\n        ecModel.eachSeries(function (seriesModel) {\n            seriesModel.clearColorPalette();\n        });\n        each(visualFuncs, function (visual) {\n            (!excludesLayout || !visual.isLayout)\n                && visual.func(ecModel, api, payload);\n        });\n    }\n\n    /**\n     * Render each chart and component\n     * @private\n     */\n    function doRender(ecModel, payload) {\n        var api = this._api;\n        // Render all components\n        each(this._componentsViews, function (componentView) {\n            var componentModel = componentView.__model;\n            componentView.render(componentModel, ecModel, api, payload);\n\n            updateZ(componentModel, componentView);\n        }, this);\n\n        each(this._chartsViews, function (chart) {\n            chart.__alive = false;\n        }, this);\n\n        // Render all charts\n        ecModel.eachSeries(function (seriesModel, idx) {\n            var chartView = this._chartsMap[seriesModel.__viewId];\n            chartView.__alive = true;\n            chartView.render(seriesModel, ecModel, api, payload);\n\n            chartView.group.silent = !!seriesModel.get('silent');\n\n            updateZ(seriesModel, chartView);\n\n            updateProgressiveAndBlend(seriesModel, chartView);\n\n        }, this);\n\n        // If use hover layer\n        updateHoverLayerStatus(this._zr, ecModel);\n\n        // Remove groups of unrendered charts\n        each(this._chartsViews, function (chart) {\n            if (!chart.__alive) {\n                chart.remove(ecModel, api);\n            }\n        }, this);\n    }\n\n    var MOUSE_EVENT_NAMES = [\n        'click', 'dblclick', 'mouseover', 'mouseout', 'mousemove',\n        'mousedown', 'mouseup', 'globalout', 'contextmenu'\n    ];\n    /**\n     * @private\n     */\n    echartsProto._initEvents = function () {\n        each(MOUSE_EVENT_NAMES, function (eveName) {\n            this._zr.on(eveName, function (e) {\n                var ecModel = this.getModel();\n                var el = e.target;\n                var params;\n\n                // no e.target when 'globalout'.\n                if (eveName === 'globalout') {\n                    params = {};\n                }\n                else if (el && el.dataIndex != null) {\n                    var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\n                    params = dataModel && dataModel.getDataParams(el.dataIndex, el.dataType) || {};\n                }\n                // If element has custom eventData of components\n                else if (el && el.eventData) {\n                    params = zrUtil.extend({}, el.eventData);\n                }\n\n                if (params) {\n                    params.event = e;\n                    params.type = eveName;\n                    this.trigger(eveName, params);\n                }\n\n            }, this);\n        }, this);\n\n        each(eventActionMap, function (actionType, eventType) {\n            this._messageCenter.on(eventType, function (event) {\n                this.trigger(eventType, event);\n            }, this);\n        }, this);\n    };\n\n    /**\n     * @return {boolean}\n     */\n    echartsProto.isDisposed = function () {\n        return this._disposed;\n    };\n\n    /**\n     * Clear\n     */\n    echartsProto.clear = function () {\n        this.setOption({ series: [] }, true);\n    };\n\n    /**\n     * Dispose instance\n     */\n    echartsProto.dispose = function () {\n        if (this._disposed) {\n            if (__DEV__) {\n                console.warn('Instance ' + this.id + ' has been disposed');\n            }\n            return;\n        }\n        this._disposed = true;\n\n        var api = this._api;\n        var ecModel = this._model;\n\n        each(this._componentsViews, function (component) {\n            component.dispose(ecModel, api);\n        });\n        each(this._chartsViews, function (chart) {\n            chart.dispose(ecModel, api);\n        });\n\n        // Dispose after all views disposed\n        this._zr.dispose();\n\n        delete instances[this.id];\n    };\n\n    zrUtil.mixin(ECharts, Eventful);\n\n    function updateHoverLayerStatus(zr, ecModel) {\n        var storage = zr.storage;\n        var elCount = 0;\n        storage.traverse(function (el) {\n            if (!el.isGroup) {\n                elCount++;\n            }\n        });\n        if (elCount > ecModel.get('hoverLayerThreshold') && !env.node) {\n            storage.traverse(function (el) {\n                if (!el.isGroup) {\n                    el.useHoverLayer = true;\n                }\n            });\n        }\n    }\n\n    /**\n     * Update chart progressive and blend.\n     * @param {module:echarts/model/Series|module:echarts/model/Component} model\n     * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n     */\n    function updateProgressiveAndBlend(seriesModel, chartView) {\n        // Progressive configuration\n        var elCount = 0;\n        chartView.group.traverse(function (el) {\n            if (el.type !== 'group' && !el.ignore) {\n                elCount++;\n            }\n        });\n        var frameDrawNum = +seriesModel.get('progressive');\n        var needProgressive = elCount > seriesModel.get('progressiveThreshold') && frameDrawNum && !env.node;\n        if (needProgressive) {\n            chartView.group.traverse(function (el) {\n                // FIXME marker and other components\n                if (!el.isGroup) {\n                    el.progressive = needProgressive ?\n                        Math.floor(elCount++ / frameDrawNum) : -1;\n                    if (needProgressive) {\n                        el.stopAnimation(true);\n                    }\n                }\n            });\n        }\n\n        // Blend configration\n        var blendMode = seriesModel.get('blendMode') || null;\n        if (__DEV__) {\n            if (!env.canvasSupported && blendMode && blendMode !== 'source-over') {\n                console.warn('Only canvas support blendMode');\n            }\n        }\n        chartView.group.traverse(function (el) {\n            // FIXME marker and other components\n            if (!el.isGroup) {\n                el.setStyle('blend', blendMode);\n            }\n        });\n    }\n\n    /**\n     * @param {module:echarts/model/Series|module:echarts/model/Component} model\n     * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n     */\n    function updateZ(model, view) {\n        var z = model.get('z');\n        var zlevel = model.get('zlevel');\n        // Set z and zlevel\n        view.group.traverse(function (el) {\n            if (el.type !== 'group') {\n                z != null && (el.z = z);\n                zlevel != null && (el.zlevel = zlevel);\n            }\n        });\n    }\n\n    function createExtensionAPI(ecInstance) {\n        var coordSysMgr = ecInstance._coordSysMgr;\n        return zrUtil.extend(new ExtensionAPI(ecInstance), {\n            // Inject methods\n            getCoordinateSystems: zrUtil.bind(\n                coordSysMgr.getCoordinateSystems, coordSysMgr\n            ),\n            getComponentByElement: function (el) {\n                while (el) {\n                    var modelInfo = el.__ecComponentInfo;\n                    if (modelInfo != null) {\n                        return ecInstance._model.getComponent(modelInfo.mainType, modelInfo.index);\n                    }\n                    el = el.parent;\n                }\n            }\n        });\n    }\n\n    /**\n     * @type {Object} key: actionType.\n     * @inner\n     */\n    var actions = {};\n\n    /**\n     * Map eventType to actionType\n     * @type {Object}\n     */\n    var eventActionMap = {};\n\n    /**\n     * Data processor functions of each stage\n     * @type {Array.<Object.<string, Function>>}\n     * @inner\n     */\n    var dataProcessorFuncs = [];\n\n    /**\n     * @type {Array.<Function>}\n     * @inner\n     */\n    var optionPreprocessorFuncs = [];\n\n    /**\n     * @type {Array.<Function>}\n     * @inner\n     */\n    var postUpdateFuncs = [];\n\n    /**\n     * Visual encoding functions of each stage\n     * @type {Array.<Object.<string, Function>>}\n     * @inner\n     */\n    var visualFuncs = [];\n    /**\n     * Theme storage\n     * @type {Object.<key, Object>}\n     */\n    var themeStorage = {};\n    /**\n     * Loading effects\n     */\n    var loadingEffects = {};\n\n\n    var instances = {};\n    var connectedGroups = {};\n\n    var idBase = new Date() - 0;\n    var groupIdBase = new Date() - 0;\n    var DOM_ATTRIBUTE_KEY = '_echarts_instance_';\n    /**\n     * @alias module:echarts\n     */\n    var echarts = {\n        /**\n         * @type {number}\n         */\n        version: '3.5.4',\n        dependencies: {\n            zrender: '3.4.4'\n        }\n    };\n\n    function enableConnect(chart) {\n        var STATUS_PENDING = 0;\n        var STATUS_UPDATING = 1;\n        var STATUS_UPDATED = 2;\n        var STATUS_KEY = '__connectUpdateStatus';\n\n        function updateConnectedChartsStatus(charts, status) {\n            for (var i = 0; i < charts.length; i++) {\n                var otherChart = charts[i];\n                otherChart[STATUS_KEY] = status;\n            }\n        }\n\n        zrUtil.each(eventActionMap, function (actionType, eventType) {\n            chart._messageCenter.on(eventType, function (event) {\n                if (connectedGroups[chart.group] && chart[STATUS_KEY] !== STATUS_PENDING) {\n                    if (event && event.escapeConnect) {\n                        return;\n                    }\n\n                    var action = chart.makeActionFromEvent(event);\n                    var otherCharts = [];\n\n                    zrUtil.each(instances, function (otherChart) {\n                        if (otherChart !== chart && otherChart.group === chart.group) {\n                            otherCharts.push(otherChart);\n                        }\n                    });\n\n                    updateConnectedChartsStatus(otherCharts, STATUS_PENDING);\n                    each(otherCharts, function (otherChart) {\n                        if (otherChart[STATUS_KEY] !== STATUS_UPDATING) {\n                            otherChart.dispatchAction(action);\n                        }\n                    });\n                    updateConnectedChartsStatus(otherCharts, STATUS_UPDATED);\n                }\n            });\n        });\n    }\n\n    /**\n     * @param {HTMLDomElement} dom\n     * @param {Object} [theme]\n     * @param {Object} opts\n     * @param {number} [opts.devicePixelRatio] Use window.devicePixelRatio by default\n     * @param {string} [opts.renderer] Currently only 'canvas' is supported.\n     * @param {number} [opts.width] Use clientWidth of the input `dom` by default.\n     *                              Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Use clientHeight of the input `dom` by default.\n     *                               Can be 'auto' (the same as null/undefined)\n     */\n    echarts.init = function (dom, theme, opts) {\n        if (__DEV__) {\n            // Check version\n            if ((zrender.version.replace('.', '') - 0) < (echarts.dependencies.zrender.replace('.', '') - 0)) {\n                throw new Error(\n                    'ZRender ' + zrender.version\n                    + ' is too old for ECharts ' + echarts.version\n                    + '. Current version need ZRender '\n                    + echarts.dependencies.zrender + '+'\n                );\n            }\n            if (!dom) {\n                throw new Error('Initialize failed: invalid dom.');\n            }\n            if (zrUtil.isDom(dom)\n                && dom.nodeName.toUpperCase() !== 'CANVAS'\n                && (\n                    (!dom.clientWidth && (!opts || opts.width == null))\n                    || (!dom.clientHeight && (!opts || opts.height == null))\n                )\n            ) {\n                console.warn('Can\\'t get dom width or height');\n            }\n        }\n\n        var chart = new ECharts(dom, theme, opts);\n        chart.id = 'ec_' + idBase++;\n        instances[chart.id] = chart;\n\n        dom.setAttribute &&\n            dom.setAttribute(DOM_ATTRIBUTE_KEY, chart.id);\n\n        enableConnect(chart);\n\n        return chart;\n    };\n\n    /**\n     * @return {string|Array.<module:echarts~ECharts>} groupId\n     */\n    echarts.connect = function (groupId) {\n        // Is array of charts\n        if (zrUtil.isArray(groupId)) {\n            var charts = groupId;\n            groupId = null;\n            // If any chart has group\n            zrUtil.each(charts, function (chart) {\n                if (chart.group != null) {\n                    groupId = chart.group;\n                }\n            });\n            groupId = groupId || ('g_' + groupIdBase++);\n            zrUtil.each(charts, function (chart) {\n                chart.group = groupId;\n            });\n        }\n        connectedGroups[groupId] = true;\n        return groupId;\n    };\n\n    /**\n     * @DEPRECATED\n     * @return {string} groupId\n     */\n    echarts.disConnect = function (groupId) {\n        connectedGroups[groupId] = false;\n    };\n\n    /**\n     * @return {string} groupId\n     */\n    echarts.disconnect = echarts.disConnect;\n\n    /**\n     * Dispose a chart instance\n     * @param  {module:echarts~ECharts|HTMLDomElement|string} chart\n     */\n    echarts.dispose = function (chart) {\n        if (zrUtil.isDom(chart)) {\n            chart = echarts.getInstanceByDom(chart);\n        }\n        else if (typeof chart === 'string') {\n            chart = instances[chart];\n        }\n        if ((chart instanceof ECharts) && !chart.isDisposed()) {\n            chart.dispose();\n        }\n    };\n\n    /**\n     * @param  {HTMLDomElement} dom\n     * @return {echarts~ECharts}\n     */\n    echarts.getInstanceByDom = function (dom) {\n        var key = dom.getAttribute(DOM_ATTRIBUTE_KEY);\n        return instances[key];\n    };\n    /**\n     * @param {string} key\n     * @return {echarts~ECharts}\n     */\n    echarts.getInstanceById = function (key) {\n        return instances[key];\n    };\n\n    /**\n     * Register theme\n     */\n    echarts.registerTheme = function (name, theme) {\n        themeStorage[name] = theme;\n    };\n\n    /**\n     * Register option preprocessor\n     * @param {Function} preprocessorFunc\n     */\n    echarts.registerPreprocessor = function (preprocessorFunc) {\n        optionPreprocessorFuncs.push(preprocessorFunc);\n    };\n\n    /**\n     * @param {number} [priority=1000]\n     * @param {Function} processorFunc\n     */\n    echarts.registerProcessor = function (priority, processorFunc) {\n        if (typeof priority === 'function') {\n            processorFunc = priority;\n            priority = PRIORITY_PROCESSOR_FILTER;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown processor priority');\n            }\n        }\n        dataProcessorFuncs.push({\n            prio: priority,\n            func: processorFunc\n        });\n    };\n\n    /**\n     * Register postUpdater\n     * @param {Function} postUpdateFunc\n     */\n    echarts.registerPostUpdate = function (postUpdateFunc) {\n        postUpdateFuncs.push(postUpdateFunc);\n    };\n\n    /**\n     * Usage:\n     * registerAction('someAction', 'someEvent', function () { ... });\n     * registerAction('someAction', function () { ... });\n     * registerAction(\n     *     {type: 'someAction', event: 'someEvent', update: 'updateView'},\n     *     function () { ... }\n     * );\n     *\n     * @param {(string|Object)} actionInfo\n     * @param {string} actionInfo.type\n     * @param {string} [actionInfo.event]\n     * @param {string} [actionInfo.update]\n     * @param {string} [eventName]\n     * @param {Function} action\n     */\n    echarts.registerAction = function (actionInfo, eventName, action) {\n        if (typeof eventName === 'function') {\n            action = eventName;\n            eventName = '';\n        }\n        var actionType = zrUtil.isObject(actionInfo)\n            ? actionInfo.type\n            : ([actionInfo, actionInfo = {\n                event: eventName\n            }][0]);\n\n        // Event name is all lowercase\n        actionInfo.event = (actionInfo.event || actionType).toLowerCase();\n        eventName = actionInfo.event;\n\n        // Validate action type and event name.\n        zrUtil.assert(ACTION_REG.test(actionType) && ACTION_REG.test(eventName));\n\n        if (!actions[actionType]) {\n            actions[actionType] = {action: action, actionInfo: actionInfo};\n        }\n        eventActionMap[eventName] = actionType;\n    };\n\n    /**\n     * @param {string} type\n     * @param {*} CoordinateSystem\n     */\n    echarts.registerCoordinateSystem = function (type, CoordinateSystem) {\n        CoordinateSystemManager.register(type, CoordinateSystem);\n    };\n\n    /**\n     * Layout is a special stage of visual encoding\n     * Most visual encoding like color are common for different chart\n     * But each chart has it's own layout algorithm\n     *\n     * @param {number} [priority=1000]\n     * @param {Function} layoutFunc\n     */\n    echarts.registerLayout = function (priority, layoutFunc) {\n        if (typeof priority === 'function') {\n            layoutFunc = priority;\n            priority = PRIORITY_VISUAL_LAYOUT;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown layout priority');\n            }\n        }\n        visualFuncs.push({\n            prio: priority,\n            func: layoutFunc,\n            isLayout: true\n        });\n    };\n\n    /**\n     * @param {number} [priority=3000]\n     * @param {Function} visualFunc\n     */\n    echarts.registerVisual = function (priority, visualFunc) {\n        if (typeof priority === 'function') {\n            visualFunc = priority;\n            priority = PRIORITY_VISUAL_CHART;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown visual priority');\n            }\n        }\n        visualFuncs.push({\n            prio: priority,\n            func: visualFunc\n        });\n    };\n\n    /**\n     * @param {string} name\n     */\n    echarts.registerLoading = function (name, loadingFx) {\n        loadingEffects[name] = loadingFx;\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendComponentModel = function (opts/*, superClass*/) {\n        // var Clazz = ComponentModel;\n        // if (superClass) {\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n        // }\n        return ComponentModel.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendComponentView = function (opts/*, superClass*/) {\n        // var Clazz = ComponentView;\n        // if (superClass) {\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentView.getClass(classType.main, classType.sub, true);\n        // }\n        return ComponentView.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendSeriesModel = function (opts/*, superClass*/) {\n        // var Clazz = SeriesModel;\n        // if (superClass) {\n        //     superClass = 'series.' + superClass.replace('series.', '');\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n        // }\n        return SeriesModel.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendChartView = function (opts/*, superClass*/) {\n        // var Clazz = ChartView;\n        // if (superClass) {\n        //     superClass = superClass.replace('series.', '');\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ChartView.getClass(classType.main, true);\n        // }\n        return ChartView.extend(opts);\n    };\n\n    /**\n     * ZRender need a canvas context to do measureText.\n     * But in node environment canvas may be created by node-canvas.\n     * So we need to specify how to create a canvas instead of using document.createElement('canvas')\n     *\n     * Be careful of using it in the browser.\n     *\n     * @param {Function} creator\n     * @example\n     *     var Canvas = require('canvas');\n     *     var echarts = require('echarts');\n     *     echarts.setCanvasCreator(function () {\n     *         // Small size is enough.\n     *         return new Canvas(32, 32);\n     *     });\n     */\n    echarts.setCanvasCreator = function (creator) {\n        zrUtil.createCanvas = creator;\n    };\n\n    echarts.registerVisual(PRIORITY_VISUAL_GLOBAL, __webpack_require__(351));\n    echarts.registerPreprocessor(__webpack_require__(343));\n    echarts.registerLoading('default', __webpack_require__(334));\n\n    // Default action\n    echarts.registerAction({\n        type: 'highlight',\n        event: 'highlight',\n        update: 'highlight'\n    }, zrUtil.noop);\n    echarts.registerAction({\n        type: 'downplay',\n        event: 'downplay',\n        update: 'downplay'\n    }, zrUtil.noop);\n\n\n    // --------\n    // Exports\n    // --------\n    echarts.zrender = zrender;\n\n    echarts.List = __webpack_require__(191);\n    echarts.Model = __webpack_require__(165);\n\n    echarts.Axis = __webpack_require__(211);\n\n    echarts.graphic = __webpack_require__(160);\n    echarts.number = __webpack_require__(161);\n    echarts.format = __webpack_require__(166);\n    echarts.throttle = throttle.throttle;\n    echarts.matrix = __webpack_require__(175);\n    echarts.vector = __webpack_require__(163);\n    echarts.color = __webpack_require__(178);\n\n    echarts.util = {};\n    each([\n            'map', 'each', 'filter', 'indexOf', 'inherits', 'reduce', 'filter',\n            'bind', 'curry', 'isArray', 'isString', 'isObject', 'isFunction',\n            'extend', 'defaults', 'clone', 'merge'\n        ],\n        function (name) {\n            echarts.util[name] = zrUtil[name];\n        }\n    );\n\n    echarts.helper = __webpack_require__(332);\n\n\n    // PRIORITY\n    echarts.PRIORITY = {\n        PROCESSOR: {\n            FILTER: PRIORITY_PROCESSOR_FILTER,\n            STATISTIC: PRIORITY_PROCESSOR_STATISTIC\n        },\n        VISUAL: {\n            LAYOUT: PRIORITY_VISUAL_LAYOUT,\n            GLOBAL: PRIORITY_VISUAL_GLOBAL,\n            CHART: PRIORITY_VISUAL_CHART,\n            COMPONENT: PRIORITY_VISUAL_COMPONENT,\n            BRUSH: PRIORITY_VISUAL_BRUSH\n        }\n    };\n\n    module.exports = echarts;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(32)))\n\n/***/ }),\n/* 160 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(158);\n\n    var pathTool = __webpack_require__(436);\n    var round = Math.round;\n    var Path = __webpack_require__(164);\n    var colorTool = __webpack_require__(178);\n    var matrix = __webpack_require__(175);\n    var vector = __webpack_require__(163);\n    var Transformable = __webpack_require__(234);\n    var BoundingRect = __webpack_require__(169);\n\n    var graphic = {};\n\n    graphic.Group = __webpack_require__(183);\n\n    graphic.Image = __webpack_require__(230);\n\n    graphic.Text = __webpack_require__(420);\n\n    graphic.Circle = __webpack_require__(427);\n\n    graphic.Sector = __webpack_require__(433);\n\n    graphic.Ring = __webpack_require__(432);\n\n    graphic.Polygon = __webpack_require__(429);\n\n    graphic.Polyline = __webpack_require__(430);\n\n    graphic.Rect = __webpack_require__(431);\n\n    graphic.Line = __webpack_require__(428);\n\n    graphic.BezierCurve = __webpack_require__(426);\n\n    graphic.Arc = __webpack_require__(425);\n\n    graphic.CompoundPath = __webpack_require__(417);\n\n    graphic.LinearGradient = __webpack_require__(418);\n\n    graphic.RadialGradient = __webpack_require__(419);\n\n    graphic.BoundingRect = BoundingRect;\n\n    /**\n     * Extend shape with parameters\n     */\n    graphic.extendShape = function (opts) {\n        return Path.extend(opts);\n    };\n\n    /**\n     * Extend path\n     */\n    graphic.extendPath = function (pathData, opts) {\n        return pathTool.extendFromString(pathData, opts);\n    };\n\n    /**\n     * Create a path element from path data string\n     * @param {string} pathData\n     * @param {Object} opts\n     * @param {module:zrender/core/BoundingRect} rect\n     * @param {string} [layout=cover] 'center' or 'cover'\n     */\n    graphic.makePath = function (pathData, opts, rect, layout) {\n        var path = pathTool.createFromString(pathData, opts);\n        var boundingRect = path.getBoundingRect();\n        if (rect) {\n            var aspect = boundingRect.width / boundingRect.height;\n\n            if (layout === 'center') {\n                // Set rect to center, keep width / height ratio.\n                var width = rect.height * aspect;\n                var height;\n                if (width <= rect.width) {\n                    height = rect.height;\n                }\n                else {\n                    width = rect.width;\n                    height = width / aspect;\n                }\n                var cx = rect.x + rect.width / 2;\n                var cy = rect.y + rect.height / 2;\n\n                rect.x = cx - width / 2;\n                rect.y = cy - height / 2;\n                rect.width = width;\n                rect.height = height;\n            }\n\n            graphic.resizePath(path, rect);\n        }\n        return path;\n    };\n\n    graphic.mergePath = pathTool.mergePath,\n\n    /**\n     * Resize a path to fit the rect\n     * @param {module:zrender/graphic/Path} path\n     * @param {Object} rect\n     */\n    graphic.resizePath = function (path, rect) {\n        if (!path.applyTransform) {\n            return;\n        }\n\n        var pathRect = path.getBoundingRect();\n\n        var m = pathRect.calculateTransform(rect);\n\n        path.applyTransform(m);\n    };\n\n    /**\n     * Sub pixel optimize line for canvas\n     *\n     * @param {Object} param\n     * @param {Object} [param.shape]\n     * @param {number} [param.shape.x1]\n     * @param {number} [param.shape.y1]\n     * @param {number} [param.shape.x2]\n     * @param {number} [param.shape.y2]\n     * @param {Object} [param.style]\n     * @param {number} [param.style.lineWidth]\n     * @return {Object} Modified param\n     */\n    graphic.subPixelOptimizeLine = function (param) {\n        var subPixelOptimize = graphic.subPixelOptimize;\n        var shape = param.shape;\n        var lineWidth = param.style.lineWidth;\n\n        if (round(shape.x1 * 2) === round(shape.x2 * 2)) {\n            shape.x1 = shape.x2 = subPixelOptimize(shape.x1, lineWidth, true);\n        }\n        if (round(shape.y1 * 2) === round(shape.y2 * 2)) {\n            shape.y1 = shape.y2 = subPixelOptimize(shape.y1, lineWidth, true);\n        }\n        return param;\n    };\n\n    /**\n     * Sub pixel optimize rect for canvas\n     *\n     * @param {Object} param\n     * @param {Object} [param.shape]\n     * @param {number} [param.shape.x]\n     * @param {number} [param.shape.y]\n     * @param {number} [param.shape.width]\n     * @param {number} [param.shape.height]\n     * @param {Object} [param.style]\n     * @param {number} [param.style.lineWidth]\n     * @return {Object} Modified param\n     */\n    graphic.subPixelOptimizeRect = function (param) {\n        var subPixelOptimize = graphic.subPixelOptimize;\n        var shape = param.shape;\n        var lineWidth = param.style.lineWidth;\n        var originX = shape.x;\n        var originY = shape.y;\n        var originWidth = shape.width;\n        var originHeight = shape.height;\n        shape.x = subPixelOptimize(shape.x, lineWidth, true);\n        shape.y = subPixelOptimize(shape.y, lineWidth, true);\n        shape.width = Math.max(\n            subPixelOptimize(originX + originWidth, lineWidth, false) - shape.x,\n            originWidth === 0 ? 0 : 1\n        );\n        shape.height = Math.max(\n            subPixelOptimize(originY + originHeight, lineWidth, false) - shape.y,\n            originHeight === 0 ? 0 : 1\n        );\n        return param;\n    };\n\n    /**\n     * Sub pixel optimize for canvas\n     *\n     * @param {number} position Coordinate, such as x, y\n     * @param {number} lineWidth Should be nonnegative integer.\n     * @param {boolean=} positiveOrNegative Default false (negative).\n     * @return {number} Optimized position.\n     */\n    graphic.subPixelOptimize = function (position, lineWidth, positiveOrNegative) {\n        // Assure that (position + lineWidth / 2) is near integer edge,\n        // otherwise line will be fuzzy in canvas.\n        var doubledPosition = round(position * 2);\n        return (doubledPosition + round(lineWidth)) % 2 === 0\n            ? doubledPosition / 2\n            : (doubledPosition + (positiveOrNegative ? 1 : -1)) / 2;\n    };\n\n    function hasFillOrStroke(fillOrStroke) {\n        return fillOrStroke != null && fillOrStroke != 'none';\n    }\n\n    function liftColor(color) {\n        return typeof color === 'string' ? colorTool.lift(color, -0.1) : color;\n    }\n\n    /**\n     * @private\n     */\n    function cacheElementStl(el) {\n        if (el.__hoverStlDirty) {\n            var stroke = el.style.stroke;\n            var fill = el.style.fill;\n\n            // Create hoverStyle on mouseover\n            var hoverStyle = el.__hoverStl;\n            hoverStyle.fill = hoverStyle.fill\n                || (hasFillOrStroke(fill) ? liftColor(fill) : null);\n            hoverStyle.stroke = hoverStyle.stroke\n                || (hasFillOrStroke(stroke) ? liftColor(stroke) : null);\n\n            var normalStyle = {};\n            for (var name in hoverStyle) {\n                if (hoverStyle.hasOwnProperty(name)) {\n                    normalStyle[name] = el.style[name];\n                }\n            }\n\n            el.__normalStl = normalStyle;\n\n            el.__hoverStlDirty = false;\n        }\n    }\n\n    /**\n     * @private\n     */\n    function doSingleEnterHover(el) {\n        if (el.__isHover) {\n            return;\n        }\n\n        cacheElementStl(el);\n\n        if (el.useHoverLayer) {\n            el.__zr && el.__zr.addHover(el, el.__hoverStl);\n        }\n        else {\n            el.setStyle(el.__hoverStl);\n            el.z2 += 1;\n        }\n\n        el.__isHover = true;\n    }\n\n    /**\n     * @inner\n     */\n    function doSingleLeaveHover(el) {\n        if (!el.__isHover) {\n            return;\n        }\n\n        var normalStl = el.__normalStl;\n        if (el.useHoverLayer) {\n            el.__zr && el.__zr.removeHover(el);\n        }\n        else {\n            normalStl && el.setStyle(normalStl);\n            el.z2 -= 1;\n        }\n\n        el.__isHover = false;\n    }\n\n    /**\n     * @inner\n     */\n    function doEnterHover(el) {\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    doSingleEnterHover(child);\n                }\n            })\n            : doSingleEnterHover(el);\n    }\n\n    function doLeaveHover(el) {\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    doSingleLeaveHover(child);\n                }\n            })\n            : doSingleLeaveHover(el);\n    }\n\n    /**\n     * @inner\n     */\n    function setElementHoverStl(el, hoverStl) {\n        // If element has sepcified hoverStyle, then use it instead of given hoverStyle\n        // Often used when item group has a label element and it's hoverStyle is different\n        el.__hoverStl = el.hoverStyle || hoverStl || {};\n        el.__hoverStlDirty = true;\n\n        if (el.__isHover) {\n            cacheElementStl(el);\n        }\n    }\n\n    /**\n     * @inner\n     */\n    function onElementMouseOver(e) {\n        if (this.__hoverSilentOnTouch && e.zrByTouch) {\n            return;\n        }\n\n        // Only if element is not in emphasis status\n        !this.__isEmphasis && doEnterHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function onElementMouseOut(e) {\n        if (this.__hoverSilentOnTouch && e.zrByTouch) {\n            return;\n        }\n\n        // Only if element is not in emphasis status\n        !this.__isEmphasis && doLeaveHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function enterEmphasis() {\n        this.__isEmphasis = true;\n        doEnterHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function leaveEmphasis() {\n        this.__isEmphasis = false;\n        doLeaveHover(this);\n    }\n\n    /**\n     * Set hover style of element.\n     * This method can be called repeatly without side-effects.\n     * @param {module:zrender/Element} el\n     * @param {Object} [hoverStyle]\n     * @param {Object} [opt]\n     * @param {boolean} [opt.hoverSilentOnTouch=false]\n     *        In touch device, mouseover event will be trigger on touchstart event\n     *        (see module:zrender/dom/HandlerProxy). By this mechanism, we can\n     *        conviniently use hoverStyle when tap on touch screen without additional\n     *        code for compatibility.\n     *        But if the chart/component has select feature, which usually also use\n     *        hoverStyle, there might be conflict between 'select-highlight' and\n     *        'hover-highlight' especially when roam is enabled (see geo for example).\n     *        In this case, hoverSilentOnTouch should be used to disable hover-highlight\n     *        on touch device.\n     */\n    graphic.setHoverStyle = function (el, hoverStyle, opt) {\n        el.__hoverSilentOnTouch = opt && opt.hoverSilentOnTouch;\n\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    setElementHoverStl(child, hoverStyle);\n                }\n            })\n            : setElementHoverStl(el, hoverStyle);\n\n        // Duplicated function will be auto-ignored, see Eventful.js.\n        el.on('mouseover', onElementMouseOver)\n          .on('mouseout', onElementMouseOut);\n\n        // Emphasis, normal can be triggered manually\n        el.on('emphasis', enterEmphasis)\n          .on('normal', leaveEmphasis);\n    };\n\n    /**\n     * Set text option in the style\n     * @param {Object} textStyle\n     * @param {module:echarts/model/Model} labelModel\n     * @param {string} color\n     */\n    graphic.setText = function (textStyle, labelModel, color) {\n        var labelPosition = labelModel.getShallow('position') || 'inside';\n        var labelOffset = labelModel.getShallow('offset');\n        var labelColor = labelPosition.indexOf('inside') >= 0 ? 'white' : color;\n        var textStyleModel = labelModel.getModel('textStyle');\n        zrUtil.extend(textStyle, {\n            textDistance: labelModel.getShallow('distance') || 5,\n            textFont: textStyleModel.getFont(),\n            textPosition: labelPosition,\n            textOffset: labelOffset,\n            textFill: textStyleModel.getTextColor() || labelColor\n        });\n    };\n\n    function animateOrSetProps(isUpdate, el, props, animatableModel, dataIndex, cb) {\n        if (typeof dataIndex === 'function') {\n            cb = dataIndex;\n            dataIndex = null;\n        }\n        // Do not check 'animation' property directly here. Consider this case:\n        // animation model is an `itemModel`, whose does not have `isAnimationEnabled`\n        // but its parent model (`seriesModel`) does.\n        var animationEnabled = animatableModel && animatableModel.isAnimationEnabled();\n\n        if (animationEnabled) {\n            var postfix = isUpdate ? 'Update' : '';\n            var duration = animatableModel.getShallow('animationDuration' + postfix);\n            var animationEasing = animatableModel.getShallow('animationEasing' + postfix);\n            var animationDelay = animatableModel.getShallow('animationDelay' + postfix);\n            if (typeof animationDelay === 'function') {\n                animationDelay = animationDelay(\n                    dataIndex,\n                    animatableModel.getAnimationDelayParams\n                        ? animatableModel.getAnimationDelayParams(el, dataIndex)\n                        : null\n                );\n            }\n            if (typeof duration === 'function') {\n                duration = duration(dataIndex);\n            }\n\n            duration > 0\n                ? el.animateTo(props, duration, animationDelay || 0, animationEasing, cb)\n                : (el.stopAnimation(), el.attr(props), cb && cb());\n        }\n        else {\n            el.stopAnimation();\n            el.attr(props);\n            cb && cb();\n        }\n    }\n\n    /**\n     * Update graphic element properties with or without animation according to the configuration in series\n     * @param {module:zrender/Element} el\n     * @param {Object} props\n     * @param {module:echarts/model/Model} [animatableModel]\n     * @param {number} [dataIndex]\n     * @param {Function} [cb]\n     * @example\n     *     graphic.updateProps(el, {\n     *         position: [100, 100]\n     *     }, seriesModel, dataIndex, function () { console.log('Animation done!'); });\n     *     // Or\n     *     graphic.updateProps(el, {\n     *         position: [100, 100]\n     *     }, seriesModel, function () { console.log('Animation done!'); });\n     */\n    graphic.updateProps = function (el, props, animatableModel, dataIndex, cb) {\n        animateOrSetProps(true, el, props, animatableModel, dataIndex, cb);\n    };\n\n    /**\n     * Init graphic element properties with or without animation according to the configuration in series\n     * @param {module:zrender/Element} el\n     * @param {Object} props\n     * @param {module:echarts/model/Model} [animatableModel]\n     * @param {number} [dataIndex]\n     * @param {Function} cb\n     */\n    graphic.initProps = function (el, props, animatableModel, dataIndex, cb) {\n        animateOrSetProps(false, el, props, animatableModel, dataIndex, cb);\n    };\n\n    /**\n     * Get transform matrix of target (param target),\n     * in coordinate of its ancestor (param ancestor)\n     *\n     * @param {module:zrender/mixin/Transformable} target\n     * @param {module:zrender/mixin/Transformable} [ancestor]\n     */\n    graphic.getTransform = function (target, ancestor) {\n        var mat = matrix.identity([]);\n\n        while (target && target !== ancestor) {\n            matrix.mul(mat, target.getLocalTransform(), mat);\n            target = target.parent;\n        }\n\n        return mat;\n    };\n\n    /**\n     * Apply transform to an vertex.\n     * @param {Array.<number>} target [x, y]\n     * @param {Array.<number>|TypedArray.<number>|Object} transform Can be:\n     *      + Transform matrix: like [1, 0, 0, 1, 0, 0]\n     *      + {position, rotation, scale}, the same as `zrender/Transformable`.\n     * @param {boolean=} invert Whether use invert matrix.\n     * @return {Array.<number>} [x, y]\n     */\n    graphic.applyTransform = function (target, transform, invert) {\n        if (transform && !zrUtil.isArrayLike(transform)) {\n            transform = Transformable.getLocalTransform(transform);\n        }\n\n        if (invert) {\n            transform = matrix.invert([], transform);\n        }\n        return vector.applyTransform([], target, transform);\n    };\n\n    /**\n     * @param {string} direction 'left' 'right' 'top' 'bottom'\n     * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n     * @param {boolean=} invert Whether use invert matrix.\n     * @return {string} Transformed direction. 'left' 'right' 'top' 'bottom'\n     */\n    graphic.transformDirection = function (direction, transform, invert) {\n\n        // Pick a base, ensure that transform result will not be (0, 0).\n        var hBase = (transform[4] === 0 || transform[5] === 0 || transform[0] === 0)\n            ? 1 : Math.abs(2 * transform[4] / transform[0]);\n        var vBase = (transform[4] === 0 || transform[5] === 0 || transform[2] === 0)\n            ? 1 : Math.abs(2 * transform[4] / transform[2]);\n\n        var vertex = [\n            direction === 'left' ? -hBase : direction === 'right' ? hBase : 0,\n            direction === 'top' ? -vBase : direction === 'bottom' ? vBase : 0\n        ];\n\n        vertex = graphic.applyTransform(vertex, transform, invert);\n\n        return Math.abs(vertex[0]) > Math.abs(vertex[1])\n            ? (vertex[0] > 0 ? 'right' : 'left')\n            : (vertex[1] > 0 ? 'bottom' : 'top');\n    };\n\n    /**\n     * Apply group transition animation from g1 to g2.\n     * If no animatableModel, no animation.\n     */\n    graphic.groupTransition = function (g1, g2, animatableModel, cb) {\n        if (!g1 || !g2) {\n            return;\n        }\n\n        function getElMap(g) {\n            var elMap = {};\n            g.traverse(function (el) {\n                if (!el.isGroup && el.anid) {\n                    elMap[el.anid] = el;\n                }\n            });\n            return elMap;\n        }\n        function getAnimatableProps(el) {\n            var obj = {\n                position: vector.clone(el.position),\n                rotation: el.rotation\n            };\n            if (el.shape) {\n                obj.shape = zrUtil.extend({}, el.shape);\n            }\n            return obj;\n        }\n        var elMap1 = getElMap(g1);\n\n        g2.traverse(function (el) {\n            if (!el.isGroup && el.anid) {\n                var oldEl = elMap1[el.anid];\n                if (oldEl) {\n                    var newProp = getAnimatableProps(el);\n                    el.attr(getAnimatableProps(oldEl));\n                    graphic.updateProps(el, newProp, animatableModel, el.dataIndex);\n                }\n                // else {\n                //     if (el.previousProps) {\n                //         graphic.updateProps\n                //     }\n                // }\n            }\n        });\n    };\n\n    module.exports = graphic;\n\n\n\n/***/ }),\n/* 161 */\n/***/ (function(module, exports) {\n\n/**\n * 数值处理模块\n * @module echarts/util/number\n */\n\n\n\n    var number = {};\n\n    var RADIAN_EPSILON = 1e-4;\n\n    function _trim(str) {\n        return str.replace(/^\\s+/, '').replace(/\\s+$/, '');\n    }\n\n    /**\n     * Linear mapping a value from domain to range\n     * @memberOf module:echarts/util/number\n     * @param  {(number|Array.<number>)} val\n     * @param  {Array.<number>} domain Domain extent domain[0] can be bigger than domain[1]\n     * @param  {Array.<number>} range  Range extent range[0] can be bigger than range[1]\n     * @param  {boolean} clamp\n     * @return {(number|Array.<number>}\n     */\n    number.linearMap = function (val, domain, range, clamp) {\n        var subDomain = domain[1] - domain[0];\n        var subRange = range[1] - range[0];\n\n        if (subDomain === 0) {\n            return subRange === 0\n                ? range[0]\n                : (range[0] + range[1]) / 2;\n        }\n\n        // Avoid accuracy problem in edge, such as\n        // 146.39 - 62.83 === 83.55999999999999.\n        // See echarts/test/ut/spec/util/number.js#linearMap#accuracyError\n        // It is a little verbose for efficiency considering this method\n        // is a hotspot.\n        if (clamp) {\n            if (subDomain > 0) {\n                if (val <= domain[0]) {\n                    return range[0];\n                }\n                else if (val >= domain[1]) {\n                    return range[1];\n                }\n            }\n            else {\n                if (val >= domain[0]) {\n                    return range[0];\n                }\n                else if (val <= domain[1]) {\n                    return range[1];\n                }\n            }\n        }\n        else {\n            if (val === domain[0]) {\n                return range[0];\n            }\n            if (val === domain[1]) {\n                return range[1];\n            }\n        }\n\n        return (val - domain[0]) / subDomain * subRange + range[0];\n    };\n\n    /**\n     * Convert a percent string to absolute number.\n     * Returns NaN if percent is not a valid string or number\n     * @memberOf module:echarts/util/number\n     * @param {string|number} percent\n     * @param {number} all\n     * @return {number}\n     */\n    number.parsePercent = function(percent, all) {\n        switch (percent) {\n            case 'center':\n            case 'middle':\n                percent = '50%';\n                break;\n            case 'left':\n            case 'top':\n                percent = '0%';\n                break;\n            case 'right':\n            case 'bottom':\n                percent = '100%';\n                break;\n        }\n        if (typeof percent === 'string') {\n            if (_trim(percent).match(/%$/)) {\n                return parseFloat(percent) / 100 * all;\n            }\n\n            return parseFloat(percent);\n        }\n\n        return percent == null ? NaN : +percent;\n    };\n\n    /**\n     * (1) Fix rounding error of float numbers.\n     * (2) Support return string to avoid scientific notation like '3.5e-7'.\n     *\n     * @param {number} x\n     * @param {number} [precision]\n     * @param {boolean} [returnStr]\n     * @return {number|string}\n     */\n    number.round = function (x, precision, returnStr) {\n        if (precision == null) {\n            precision = 10;\n        }\n        // Avoid range error\n        precision = Math.min(Math.max(0, precision), 20);\n        x = (+x).toFixed(precision);\n        return returnStr ? x : +x;\n    };\n\n    number.asc = function (arr) {\n        arr.sort(function (a, b) {\n            return a - b;\n        });\n        return arr;\n    };\n\n    /**\n     * Get precision\n     * @param {number} val\n     */\n    number.getPrecision = function (val) {\n        val = +val;\n        if (isNaN(val)) {\n            return 0;\n        }\n        // It is much faster than methods converting number to string as follows\n        //      var tmp = val.toString();\n        //      return tmp.length - 1 - tmp.indexOf('.');\n        // especially when precision is low\n        var e = 1;\n        var count = 0;\n        while (Math.round(val * e) / e !== val) {\n            e *= 10;\n            count++;\n        }\n        return count;\n    };\n\n    /**\n     * @param {string|number} val\n     * @return {number}\n     */\n    number.getPrecisionSafe = function (val) {\n        var str = val.toString();\n\n        // Consider scientific notation: '3.4e-12' '3.4e+12'\n        var eIndex = str.indexOf('e');\n        if (eIndex > 0) {\n            var precision = +str.slice(eIndex + 1);\n            return precision < 0 ? -precision : 0;\n        }\n        else {\n            var dotIndex = str.indexOf('.');\n            return dotIndex < 0 ? 0 : str.length - 1 - dotIndex;\n        }\n    };\n\n    /**\n     * Minimal dicernible data precisioin according to a single pixel.\n     *\n     * @param {Array.<number>} dataExtent\n     * @param {Array.<number>} pixelExtent\n     * @return {number} precision\n     */\n    number.getPixelPrecision = function (dataExtent, pixelExtent) {\n        var log = Math.log;\n        var LN10 = Math.LN10;\n        var dataQuantity = Math.floor(log(dataExtent[1] - dataExtent[0]) / LN10);\n        var sizeQuantity = Math.round(log(Math.abs(pixelExtent[1] - pixelExtent[0])) / LN10);\n        // toFixed() digits argument must be between 0 and 20.\n        var precision = Math.min(Math.max(-dataQuantity + sizeQuantity, 0), 20);\n        return !isFinite(precision) ? 20 : precision;\n    };\n\n    // Number.MAX_SAFE_INTEGER, ie do not support.\n    number.MAX_SAFE_INTEGER = 9007199254740991;\n\n    /**\n     * To 0 - 2 * PI, considering negative radian.\n     * @param {number} radian\n     * @return {number}\n     */\n    number.remRadian = function (radian) {\n        var pi2 = Math.PI * 2;\n        return (radian % pi2 + pi2) % pi2;\n    };\n\n    /**\n     * @param {type} radian\n     * @return {boolean}\n     */\n    number.isRadianAroundZero = function (val) {\n        return val > -RADIAN_EPSILON && val < RADIAN_EPSILON;\n    };\n\n    var TIME_REG = /^(?:(\\d{4})(?:[-\\/](\\d{1,2})(?:[-\\/](\\d{1,2})(?:[T ](\\d{1,2})(?::(\\d\\d)(?::(\\d\\d)(?:[.,](\\d+))?)?)?(Z|[\\+\\-]\\d\\d:?\\d\\d)?)?)?)?)?$/; // jshint ignore:line\n\n    /**\n     * @return {number} in minutes\n     */\n    number.getTimezoneOffset = function () {\n        return (new Date()).getTimezoneOffset();\n    };\n\n    /**\n     * @param {string|Date|number} value These values can be accepted:\n     *   + An instance of Date, represent a time in its own time zone.\n     *   + Or string in a subset of ISO 8601, only including:\n     *     + only year, month, date: '2012-03', '2012-03-01', '2012-03-01 05', '2012-03-01 05:06',\n     *     + separated with T or space: '2012-03-01T12:22:33.123', '2012-03-01 12:22:33.123',\n     *     + time zone: '2012-03-01T12:22:33Z', '2012-03-01T12:22:33+8000', '2012-03-01T12:22:33-05:00',\n     *     all of which will be treated as local time if time zone is not specified\n     *     (see <https://momentjs.com/>).\n     *   + Or other string format, including (all of which will be treated as loacal time):\n     *     '2012', '2012-3-1', '2012/3/1', '2012/03/01',\n     *     '2009/6/12 2:00', '2009/6/12 2:05:08', '2009/6/12 2:05:08.123'\n     *   + a timestamp, which represent a time in UTC.\n     * @return {Date} date\n     */\n    number.parseDate = function (value) {\n        if (value instanceof Date) {\n            return value;\n        }\n        else if (typeof value === 'string') {\n            // Different browsers parse date in different way, so we parse it manually.\n            // Some other issues:\n            // new Date('1970-01-01') is UTC,\n            // new Date('1970/01/01') and new Date('1970-1-01') is local.\n            // See issue #3623\n            var match = TIME_REG.exec(value);\n\n            if (!match) {\n                // return Invalid Date.\n                return new Date(NaN);\n            }\n\n            var timezoneOffset = number.getTimezoneOffset();\n            var timeOffset = !match[8]\n                ? 0\n                : match[8].toUpperCase() === 'Z'\n                ? timezoneOffset\n                : +match[8].slice(0, 3) * 60 + timezoneOffset;\n\n            // match[n] can only be string or undefined.\n            // But take care of '12' + 1 => '121'.\n            return new Date(\n                +match[1],\n                +(match[2] || 1) - 1,\n                +match[3] || 1,\n                +match[4] || 0,\n                +(match[5] || 0) - timeOffset,\n                +match[6] || 0,\n                +match[7] || 0\n            );\n        }\n        else if (value == null) {\n            return new Date(NaN);\n        }\n\n        return new Date(Math.round(value));\n    };\n\n    /**\n     * Quantity of a number. e.g. 0.1, 1, 10, 100\n     *\n     * @param  {number} val\n     * @return {number}\n     */\n    number.quantity = function (val) {\n        return Math.pow(10, quantityExponent(val));\n    };\n\n    function quantityExponent(val) {\n        return Math.floor(Math.log(val) / Math.LN10);\n    }\n\n    /**\n     * find a “nice” number approximately equal to x. Round the number if round = true,\n     * take ceiling if round = false. The primary observation is that the “nicest”\n     * numbers in decimal are 1, 2, and 5, and all power-of-ten multiples of these numbers.\n     *\n     * See \"Nice Numbers for Graph Labels\" of Graphic Gems.\n     *\n     * @param  {number} val Non-negative value.\n     * @param  {boolean} round\n     * @return {number}\n     */\n    number.nice = function (val, round) {\n        var exponent = quantityExponent(val);\n        var exp10 = Math.pow(10, exponent);\n        var f = val / exp10; // 1 <= f < 10\n        var nf;\n        if (round) {\n            if (f < 1.5) { nf = 1; }\n            else if (f < 2.5) { nf = 2; }\n            else if (f < 4) { nf = 3; }\n            else if (f < 7) { nf = 5; }\n            else { nf = 10; }\n        }\n        else {\n            if (f < 1) { nf = 1; }\n            else if (f < 2) { nf = 2; }\n            else if (f < 3) { nf = 3; }\n            else if (f < 5) { nf = 5; }\n            else { nf = 10; }\n        }\n        val = nf * exp10;\n\n        // Fix 3 * 0.1 === 0.30000000000000004 issue (see IEEE 754).\n        // 20 is the uppper bound of toFixed.\n        return exponent >= -20 ? +val.toFixed(exponent < 0 ? -exponent : 0) : val;\n    };\n\n    /**\n     * Order intervals asc, and split them when overlap.\n     * expect(numberUtil.reformIntervals([\n     *     {interval: [18, 62], close: [1, 1]},\n     *     {interval: [-Infinity, -70], close: [0, 0]},\n     *     {interval: [-70, -26], close: [1, 1]},\n     *     {interval: [-26, 18], close: [1, 1]},\n     *     {interval: [62, 150], close: [1, 1]},\n     *     {interval: [106, 150], close: [1, 1]},\n     *     {interval: [150, Infinity], close: [0, 0]}\n     * ])).toEqual([\n     *     {interval: [-Infinity, -70], close: [0, 0]},\n     *     {interval: [-70, -26], close: [1, 1]},\n     *     {interval: [-26, 18], close: [0, 1]},\n     *     {interval: [18, 62], close: [0, 1]},\n     *     {interval: [62, 150], close: [0, 1]},\n     *     {interval: [150, Infinity], close: [0, 0]}\n     * ]);\n     * @param {Array.<Object>} list, where `close` mean open or close\n     *        of the interval, and Infinity can be used.\n     * @return {Array.<Object>} The origin list, which has been reformed.\n     */\n    number.reformIntervals = function (list) {\n        list.sort(function (a, b) {\n            return littleThan(a, b, 0) ? -1 : 1;\n        });\n\n        var curr = -Infinity;\n        var currClose = 1;\n        for (var i = 0; i < list.length;) {\n            var interval = list[i].interval;\n            var close = list[i].close;\n\n            for (var lg = 0; lg < 2; lg++) {\n                if (interval[lg] <= curr) {\n                    interval[lg] = curr;\n                    close[lg] = !lg ? 1 - currClose : 1;\n                }\n                curr = interval[lg];\n                currClose = close[lg];\n            }\n\n            if (interval[0] === interval[1] && close[0] * close[1] !== 1) {\n                list.splice(i, 1);\n            }\n            else {\n                i++;\n            }\n        }\n\n        return list;\n\n        function littleThan(a, b, lg) {\n            return a.interval[lg] < b.interval[lg]\n                || (\n                    a.interval[lg] === b.interval[lg]\n                    && (\n                        (a.close[lg] - b.close[lg] === (!lg ? 1 : -1))\n                        || (!lg && littleThan(a, b, 1))\n                    )\n                );\n        }\n    };\n\n    /**\n     * parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n     * ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n     * subtraction forces infinities to NaN\n     *\n     * @param {*} v\n     * @return {boolean}\n     */\n    number.isNumeric = function (v) {\n        return v - parseFloat(v) >= 0;\n    };\n\n    module.exports = number;\n\n\n/***/ }),\n/* 162 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var formatUtil = __webpack_require__(166);\n    var nubmerUtil = __webpack_require__(161);\n    var Model = __webpack_require__(165);\n    var zrUtil = __webpack_require__(158);\n    var each = zrUtil.each;\n    var isObject = zrUtil.isObject;\n\n    var modelUtil = {};\n\n    /**\n     * If value is not array, then translate it to array.\n     * @param  {*} value\n     * @return {Array} [value] or value\n     */\n    modelUtil.normalizeToArray = function (value) {\n        return value instanceof Array\n            ? value\n            : value == null\n            ? []\n            : [value];\n    };\n\n    /**\n     * Sync default option between normal and emphasis like `position` and `show`\n     * In case some one will write code like\n     *     label: {\n     *         normal: {\n     *             show: false,\n     *             position: 'outside',\n     *             textStyle: {\n     *                 fontSize: 18\n     *             }\n     *         },\n     *         emphasis: {\n     *             show: true\n     *         }\n     *     }\n     * @param {Object} opt\n     * @param {Array.<string>} subOpts\n     */\n     modelUtil.defaultEmphasis = function (opt, subOpts) {\n        if (opt) {\n            var emphasisOpt = opt.emphasis = opt.emphasis || {};\n            var normalOpt = opt.normal = opt.normal || {};\n\n            // Default emphasis option from normal\n            each(subOpts, function (subOptName) {\n                var val = zrUtil.retrieve(emphasisOpt[subOptName], normalOpt[subOptName]);\n                if (val != null) {\n                    emphasisOpt[subOptName] = val;\n                }\n            });\n        }\n    };\n\n    modelUtil.LABEL_OPTIONS = ['position', 'offset', 'show', 'textStyle', 'distance', 'formatter'];\n\n    /**\n     * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n     * This helper method retieves value from data.\n     * @param {string|number|Date|Array|Object} dataItem\n     * @return {number|string|Date|Array.<number|string|Date>}\n     */\n    modelUtil.getDataItemValue = function (dataItem) {\n        // Performance sensitive.\n        return dataItem && (dataItem.value == null ? dataItem : dataItem.value);\n    };\n\n    /**\n     * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n     * This helper method determine if dataItem has extra option besides value\n     * @param {string|number|Date|Array|Object} dataItem\n     */\n    modelUtil.isDataItemOption = function (dataItem) {\n        return isObject(dataItem)\n            && !(dataItem instanceof Array);\n            // // markLine data can be array\n            // && !(dataItem[0] && isObject(dataItem[0]) && !(dataItem[0] instanceof Array));\n    };\n\n    /**\n     * This helper method convert value in data.\n     * @param {string|number|Date} value\n     * @param {Object|string} [dimInfo] If string (like 'x'), dimType defaults 'number'.\n     */\n    modelUtil.converDataValue = function (value, dimInfo) {\n        // Performance sensitive.\n        var dimType = dimInfo && dimInfo.type;\n        if (dimType === 'ordinal') {\n            return value;\n        }\n\n        if (dimType === 'time'\n            // spead up when using timestamp\n            && typeof value !== 'number'\n            && value != null\n            && value !== '-'\n        ) {\n            value = +nubmerUtil.parseDate(value);\n        }\n\n        // dimType defaults 'number'.\n        // If dimType is not ordinal and value is null or undefined or NaN or '-',\n        // parse to NaN.\n        return (value == null || value === '')\n            ? NaN : +value; // If string (like '-'), using '+' parse to NaN\n    };\n\n    /**\n     * Create a model proxy to be used in tooltip for edge data, markLine data, markPoint data.\n     * @param {module:echarts/data/List} data\n     * @param {Object} opt\n     * @param {string} [opt.seriesIndex]\n     * @param {Object} [opt.name]\n     * @param {Object} [opt.mainType]\n     * @param {Object} [opt.subType]\n     */\n    modelUtil.createDataFormatModel = function (data, opt) {\n        var model = new Model();\n        zrUtil.mixin(model, modelUtil.dataFormatMixin);\n        model.seriesIndex = opt.seriesIndex;\n        model.name = opt.name || '';\n        model.mainType = opt.mainType;\n        model.subType = opt.subType;\n\n        model.getData = function () {\n            return data;\n        };\n        return model;\n    };\n\n    // PENDING A little ugly\n    modelUtil.dataFormatMixin = {\n        /**\n         * Get params for formatter\n         * @param {number} dataIndex\n         * @param {string} [dataType]\n         * @return {Object}\n         */\n        getDataParams: function (dataIndex, dataType) {\n            var data = this.getData(dataType);\n            var rawValue = this.getRawValue(dataIndex, dataType);\n            var rawDataIndex = data.getRawIndex(dataIndex);\n            var name = data.getName(dataIndex, true);\n            var itemOpt = data.getRawDataItem(dataIndex);\n\n            return {\n                componentType: this.mainType,\n                componentSubType: this.subType,\n                seriesType: this.mainType === 'series' ? this.subType : null,\n                seriesIndex: this.seriesIndex,\n                seriesId: this.id,\n                seriesName: this.name,\n                name: name,\n                dataIndex: rawDataIndex,\n                data: itemOpt,\n                dataType: dataType,\n                value: rawValue,\n                color: data.getItemVisual(dataIndex, 'color'),\n\n                // Param name list for mapping `a`, `b`, `c`, `d`, `e`\n                $vars: ['seriesName', 'name', 'value']\n            };\n        },\n\n        /**\n         * Format label\n         * @param {number} dataIndex\n         * @param {string} [status='normal'] 'normal' or 'emphasis'\n         * @param {string} [dataType]\n         * @param {number} [dimIndex]\n         * @return {string}\n         */\n        getFormattedLabel: function (dataIndex, status, dataType, dimIndex) {\n            status = status || 'normal';\n            var data = this.getData(dataType);\n            var itemModel = data.getItemModel(dataIndex);\n\n            var params = this.getDataParams(dataIndex, dataType);\n            if (dimIndex != null && (params.value instanceof Array)) {\n                params.value = params.value[dimIndex];\n            }\n\n            var formatter = itemModel.get(['label', status, 'formatter']);\n\n            if (typeof formatter === 'function') {\n                params.status = status;\n                return formatter(params);\n            }\n            else if (typeof formatter === 'string') {\n                return formatUtil.formatTpl(formatter, params);\n            }\n        },\n\n        /**\n         * Get raw value in option\n         * @param {number} idx\n         * @param {string} [dataType]\n         * @return {Object}\n         */\n        getRawValue: function (idx, dataType) {\n            var data = this.getData(dataType);\n            var dataItem = data.getRawDataItem(idx);\n            if (dataItem != null) {\n                return (isObject(dataItem) && !(dataItem instanceof Array))\n                    ? dataItem.value : dataItem;\n            }\n        },\n\n        /**\n         * Should be implemented.\n         * @param {number} dataIndex\n         * @param {boolean} [multipleSeries=false]\n         * @param {number} [dataType]\n         * @return {string} tooltip string\n         */\n        formatTooltip: zrUtil.noop\n    };\n\n    /**\n     * Mapping to exists for merge.\n     *\n     * @public\n     * @param {Array.<Object>|Array.<module:echarts/model/Component>} exists\n     * @param {Object|Array.<Object>} newCptOptions\n     * @return {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n     *                          index of which is the same as exists.\n     */\n    modelUtil.mappingToExists = function (exists, newCptOptions) {\n        // Mapping by the order by original option (but not order of\n        // new option) in merge mode. Because we should ensure\n        // some specified index (like xAxisIndex) is consistent with\n        // original option, which is easy to understand, espatially in\n        // media query. And in most case, merge option is used to\n        // update partial option but not be expected to change order.\n        newCptOptions = (newCptOptions || []).slice();\n\n        var result = zrUtil.map(exists || [], function (obj, index) {\n            return {exist: obj};\n        });\n\n        // Mapping by id or name if specified.\n        each(newCptOptions, function (cptOption, index) {\n            if (!isObject(cptOption)) {\n                return;\n            }\n\n            // id has highest priority.\n            for (var i = 0; i < result.length; i++) {\n                if (!result[i].option // Consider name: two map to one.\n                    && cptOption.id != null\n                    && result[i].exist.id === cptOption.id + ''\n                ) {\n                    result[i].option = cptOption;\n                    newCptOptions[index] = null;\n                    return;\n                }\n            }\n\n            for (var i = 0; i < result.length; i++) {\n                var exist = result[i].exist;\n                if (!result[i].option // Consider name: two map to one.\n                    // Can not match when both ids exist but different.\n                    && (exist.id == null || cptOption.id == null)\n                    && cptOption.name != null\n                    && !modelUtil.isIdInner(cptOption)\n                    && !modelUtil.isIdInner(exist)\n                    && exist.name === cptOption.name + ''\n                ) {\n                    result[i].option = cptOption;\n                    newCptOptions[index] = null;\n                    return;\n                }\n            }\n        });\n\n        // Otherwise mapping by index.\n        each(newCptOptions, function (cptOption, index) {\n            if (!isObject(cptOption)) {\n                return;\n            }\n\n            var i = 0;\n            for (; i < result.length; i++) {\n                var exist = result[i].exist;\n                if (!result[i].option\n                    // Existing model that already has id should be able to\n                    // mapped to (because after mapping performed model may\n                    // be assigned with a id, whish should not affect next\n                    // mapping), except those has inner id.\n                    && !modelUtil.isIdInner(exist)\n                    // Caution:\n                    // Do not overwrite id. But name can be overwritten,\n                    // because axis use name as 'show label text'.\n                    // 'exist' always has id and name and we dont\n                    // need to check it.\n                    && cptOption.id == null\n                ) {\n                    result[i].option = cptOption;\n                    break;\n                }\n            }\n\n            if (i >= result.length) {\n                result.push({option: cptOption});\n            }\n        });\n\n        return result;\n    };\n\n    /**\n     * Make id and name for mapping result (result of mappingToExists)\n     * into `keyInfo` field.\n     *\n     * @public\n     * @param {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n     *                          which order is the same as exists.\n     * @return {Array.<Object>} The input.\n     */\n    modelUtil.makeIdAndName = function (mapResult) {\n        // We use this id to hash component models and view instances\n        // in echarts. id can be specified by user, or auto generated.\n\n        // The id generation rule ensures new view instance are able\n        // to mapped to old instance when setOption are called in\n        // no-merge mode. So we generate model id by name and plus\n        // type in view id.\n\n        // name can be duplicated among components, which is convenient\n        // to specify multi components (like series) by one name.\n\n        // Ensure that each id is distinct.\n        var idMap = {};\n\n        each(mapResult, function (item, index) {\n            var existCpt = item.exist;\n            existCpt && (idMap[existCpt.id] = item);\n        });\n\n        each(mapResult, function (item, index) {\n            var opt = item.option;\n\n            zrUtil.assert(\n                !opt || opt.id == null || !idMap[opt.id] || idMap[opt.id] === item,\n                'id duplicates: ' + (opt && opt.id)\n            );\n\n            opt && opt.id != null && (idMap[opt.id] = item);\n            !item.keyInfo && (item.keyInfo = {});\n        });\n\n        // Make name and id.\n        each(mapResult, function (item, index) {\n            var existCpt = item.exist;\n            var opt = item.option;\n            var keyInfo = item.keyInfo;\n\n            if (!isObject(opt)) {\n                return;\n            }\n\n            // name can be overwitten. Consider case: axis.name = '20km'.\n            // But id generated by name will not be changed, which affect\n            // only in that case: setOption with 'not merge mode' and view\n            // instance will be recreated, which can be accepted.\n            keyInfo.name = opt.name != null\n                ? opt.name + ''\n                : existCpt\n                ? existCpt.name\n                : '\\0-'; // name may be displayed on screen, so use '-'.\n\n            if (existCpt) {\n                keyInfo.id = existCpt.id;\n            }\n            else if (opt.id != null) {\n                keyInfo.id = opt.id + '';\n            }\n            else {\n                // Consider this situatoin:\n                //  optionA: [{name: 'a'}, {name: 'a'}, {..}]\n                //  optionB [{..}, {name: 'a'}, {name: 'a'}]\n                // Series with the same name between optionA and optionB\n                // should be mapped.\n                var idNum = 0;\n                do {\n                    keyInfo.id = '\\0' + keyInfo.name + '\\0' + idNum++;\n                }\n                while (idMap[keyInfo.id]);\n            }\n\n            idMap[keyInfo.id] = item;\n        });\n    };\n\n    /**\n     * @public\n     * @param {Object} cptOption\n     * @return {boolean}\n     */\n    modelUtil.isIdInner = function (cptOption) {\n        return isObject(cptOption)\n            && cptOption.id\n            && (cptOption.id + '').indexOf('\\0_ec_\\0') === 0;\n    };\n\n    /**\n     * A helper for removing duplicate items between batchA and batchB,\n     * and in themselves, and categorize by series.\n     *\n     * @param {Array.<Object>} batchA Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n     * @param {Array.<Object>} batchB Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n     * @return {Array.<Array.<Object>, Array.<Object>>} result: [resultBatchA, resultBatchB]\n     */\n    modelUtil.compressBatches = function (batchA, batchB) {\n        var mapA = {};\n        var mapB = {};\n\n        makeMap(batchA || [], mapA);\n        makeMap(batchB || [], mapB, mapA);\n\n        return [mapToArray(mapA), mapToArray(mapB)];\n\n        function makeMap(sourceBatch, map, otherMap) {\n            for (var i = 0, len = sourceBatch.length; i < len; i++) {\n                var seriesId = sourceBatch[i].seriesId;\n                var dataIndices = modelUtil.normalizeToArray(sourceBatch[i].dataIndex);\n                var otherDataIndices = otherMap && otherMap[seriesId];\n\n                for (var j = 0, lenj = dataIndices.length; j < lenj; j++) {\n                    var dataIndex = dataIndices[j];\n\n                    if (otherDataIndices && otherDataIndices[dataIndex]) {\n                        otherDataIndices[dataIndex] = null;\n                    }\n                    else {\n                        (map[seriesId] || (map[seriesId] = {}))[dataIndex] = 1;\n                    }\n                }\n            }\n        }\n\n        function mapToArray(map, isData) {\n            var result = [];\n            for (var i in map) {\n                if (map.hasOwnProperty(i) && map[i] != null) {\n                    if (isData) {\n                        result.push(+i);\n                    }\n                    else {\n                        var dataIndices = mapToArray(map[i], true);\n                        dataIndices.length && result.push({seriesId: i, dataIndex: dataIndices});\n                    }\n                }\n            }\n            return result;\n        }\n    };\n\n    /**\n     * @param {module:echarts/data/List} data\n     * @param {Object} payload Contains dataIndex (means rawIndex) / dataIndexInside / name\n     *                         each of which can be Array or primary type.\n     * @return {number|Array.<number>} dataIndex If not found, return undefined/null.\n     */\n    modelUtil.queryDataIndex = function (data, payload) {\n        if (payload.dataIndexInside != null) {\n            return payload.dataIndexInside;\n        }\n        else if (payload.dataIndex != null) {\n            return zrUtil.isArray(payload.dataIndex)\n                ? zrUtil.map(payload.dataIndex, function (value) {\n                    return data.indexOfRawIndex(value);\n                })\n                : data.indexOfRawIndex(payload.dataIndex);\n        }\n        else if (payload.name != null) {\n            return zrUtil.isArray(payload.name)\n                ? zrUtil.map(payload.name, function (value) {\n                    return data.indexOfName(value);\n                })\n                : data.indexOfName(payload.name);\n        }\n    };\n\n    /**\n     * Enable property storage to any host object.\n     * Notice: Serialization is not supported.\n     *\n     * For example:\n     * var get = modelUitl.makeGetter();\n     *\n     * function some(hostObj) {\n     *      get(hostObj)._someProperty = 1212;\n     *      ...\n     * }\n     *\n     * @return {Function}\n     */\n    modelUtil.makeGetter = (function () {\n        var index = 0;\n        return function () {\n            var key = '\\0__ec_prop_getter_' + index++;\n            return function (hostObj) {\n                return hostObj[key] || (hostObj[key] = {});\n            };\n        };\n    })();\n\n    /**\n     * @param {module:echarts/model/Global} ecModel\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex, seriesId, seriesName,\n     *            geoIndex, geoId, geoName,\n     *            bmapIndex, bmapId, bmapName,\n     *            xAxisIndex, xAxisId, xAxisName,\n     *            yAxisIndex, yAxisId, yAxisName,\n     *            gridIndex, gridId, gridName,\n     *            ... (can be extended)\n     *        }\n     *        Each properties can be number|string|Array.<number>|Array.<string>\n     *        For example, a finder could be\n     *        {\n     *            seriesIndex: 3,\n     *            geoId: ['aa', 'cc'],\n     *            gridName: ['xx', 'rr']\n     *        }\n     *        xxxIndex can be set as 'all' (means all xxx) or 'none' (means not specify)\n     *        If nothing or null/undefined specified, return nothing.\n     * @param {Object} [opt]\n     * @param {string} [opt.defaultMainType]\n     * @param {Array.<string>} [opt.includeMainTypes]\n     * @return {Object} result like:\n     *        {\n     *            seriesModels: [seriesModel1, seriesModel2],\n     *            seriesModel: seriesModel1, // The first model\n     *            geoModels: [geoModel1, geoModel2],\n     *            geoModel: geoModel1, // The first model\n     *            ...\n     *        }\n     */\n    modelUtil.parseFinder = function (ecModel, finder, opt) {\n        if (zrUtil.isString(finder)) {\n            var obj = {};\n            obj[finder + 'Index'] = 0;\n            finder = obj;\n        }\n\n        var defaultMainType = opt && opt.defaultMainType;\n        if (defaultMainType\n            && !has(finder, defaultMainType + 'Index')\n            && !has(finder, defaultMainType + 'Id')\n            && !has(finder, defaultMainType + 'Name')\n        ) {\n            finder[defaultMainType + 'Index'] = 0;\n        }\n\n        var result = {};\n\n        each(finder, function (value, key) {\n            var value = finder[key];\n\n            // Exclude 'dataIndex' and other illgal keys.\n            if (key === 'dataIndex' || key === 'dataIndexInside') {\n                result[key] = value;\n                return;\n            }\n\n            var parsedKey = key.match(/^(\\w+)(Index|Id|Name)$/) || [];\n            var mainType = parsedKey[1];\n            var queryType = (parsedKey[2] || '').toLowerCase();\n\n            if (!mainType\n                || !queryType\n                || value == null\n                || (queryType === 'index' && value === 'none')\n                || (opt && opt.includeMainTypes && zrUtil.indexOf(opt.includeMainTypes, mainType) < 0)\n            ) {\n                return;\n            }\n\n            var queryParam = {mainType: mainType};\n            if (queryType !== 'index' || value !== 'all') {\n                queryParam[queryType] = value;\n            }\n\n            var models = ecModel.queryComponents(queryParam);\n            result[mainType + 'Models'] = models;\n            result[mainType + 'Model'] = models[0];\n        });\n\n        return result;\n    };\n\n    function has(obj, prop) {\n        return obj && obj.hasOwnProperty(prop);\n    }\n\n    module.exports = modelUtil;\n\n\n\n/***/ }),\n/* 163 */\n/***/ (function(module, exports) {\n\n\n    var ArrayCtor = typeof Float32Array === 'undefined'\n        ? Array\n        : Float32Array;\n\n    /**\n     * @typedef {Float32Array|Array.<number>} Vector2\n     */\n    /**\n     * 二维向量类\n     * @exports zrender/tool/vector\n     */\n    var vector = {\n        /**\n         * 创建一个向量\n         * @param {number} [x=0]\n         * @param {number} [y=0]\n         * @return {Vector2}\n         */\n        create: function (x, y) {\n            var out = new ArrayCtor(2);\n            if (x == null) {\n                x = 0;\n            }\n            if (y == null) {\n                y = 0;\n            }\n            out[0] = x;\n            out[1] = y;\n            return out;\n        },\n\n        /**\n         * 复制向量数据\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @return {Vector2}\n         */\n        copy: function (out, v) {\n            out[0] = v[0];\n            out[1] = v[1];\n            return out;\n        },\n\n        /**\n         * 克隆一个向量\n         * @param {Vector2} v\n         * @return {Vector2}\n         */\n        clone: function (v) {\n            var out = new ArrayCtor(2);\n            out[0] = v[0];\n            out[1] = v[1];\n            return out;\n        },\n\n        /**\n         * 设置向量的两个项\n         * @param {Vector2} out\n         * @param {number} a\n         * @param {number} b\n         * @return {Vector2} 结果\n         */\n        set: function (out, a, b) {\n            out[0] = a;\n            out[1] = b;\n            return out;\n        },\n\n        /**\n         * 向量相加\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        add: function (out, v1, v2) {\n            out[0] = v1[0] + v2[0];\n            out[1] = v1[1] + v2[1];\n            return out;\n        },\n\n        /**\n         * 向量缩放后相加\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @param {number} a\n         */\n        scaleAndAdd: function (out, v1, v2, a) {\n            out[0] = v1[0] + v2[0] * a;\n            out[1] = v1[1] + v2[1] * a;\n            return out;\n        },\n\n        /**\n         * 向量相减\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        sub: function (out, v1, v2) {\n            out[0] = v1[0] - v2[0];\n            out[1] = v1[1] - v2[1];\n            return out;\n        },\n\n        /**\n         * 向量长度\n         * @param {Vector2} v\n         * @return {number}\n         */\n        len: function (v) {\n            return Math.sqrt(this.lenSquare(v));\n        },\n\n        /**\n         * 向量长度平方\n         * @param {Vector2} v\n         * @return {number}\n         */\n        lenSquare: function (v) {\n            return v[0] * v[0] + v[1] * v[1];\n        },\n\n        /**\n         * 向量乘法\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        mul: function (out, v1, v2) {\n            out[0] = v1[0] * v2[0];\n            out[1] = v1[1] * v2[1];\n            return out;\n        },\n\n        /**\n         * 向量除法\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        div: function (out, v1, v2) {\n            out[0] = v1[0] / v2[0];\n            out[1] = v1[1] / v2[1];\n            return out;\n        },\n\n        /**\n         * 向量点乘\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        dot: function (v1, v2) {\n            return v1[0] * v2[0] + v1[1] * v2[1];\n        },\n\n        /**\n         * 向量缩放\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @param {number} s\n         */\n        scale: function (out, v, s) {\n            out[0] = v[0] * s;\n            out[1] = v[1] * s;\n            return out;\n        },\n\n        /**\n         * 向量归一化\n         * @param {Vector2} out\n         * @param {Vector2} v\n         */\n        normalize: function (out, v) {\n            var d = vector.len(v);\n            if (d === 0) {\n                out[0] = 0;\n                out[1] = 0;\n            }\n            else {\n                out[0] = v[0] / d;\n                out[1] = v[1] / d;\n            }\n            return out;\n        },\n\n        /**\n         * 计算向量间距离\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        distance: function (v1, v2) {\n            return Math.sqrt(\n                (v1[0] - v2[0]) * (v1[0] - v2[0])\n                + (v1[1] - v2[1]) * (v1[1] - v2[1])\n            );\n        },\n\n        /**\n         * 向量距离平方\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        distanceSquare: function (v1, v2) {\n            return (v1[0] - v2[0]) * (v1[0] - v2[0])\n                + (v1[1] - v2[1]) * (v1[1] - v2[1]);\n        },\n\n        /**\n         * 求负向量\n         * @param {Vector2} out\n         * @param {Vector2} v\n         */\n        negate: function (out, v) {\n            out[0] = -v[0];\n            out[1] = -v[1];\n            return out;\n        },\n\n        /**\n         * 插值两个点\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @param {number} t\n         */\n        lerp: function (out, v1, v2, t) {\n            out[0] = v1[0] + t * (v2[0] - v1[0]);\n            out[1] = v1[1] + t * (v2[1] - v1[1]);\n            return out;\n        },\n\n        /**\n         * 矩阵左乘向量\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @param {Vector2} m\n         */\n        applyTransform: function (out, v, m) {\n            var x = v[0];\n            var y = v[1];\n            out[0] = m[0] * x + m[2] * y + m[4];\n            out[1] = m[1] * x + m[3] * y + m[5];\n            return out;\n        },\n        /**\n         * 求两个向量最小值\n         * @param  {Vector2} out\n         * @param  {Vector2} v1\n         * @param  {Vector2} v2\n         */\n        min: function (out, v1, v2) {\n            out[0] = Math.min(v1[0], v2[0]);\n            out[1] = Math.min(v1[1], v2[1]);\n            return out;\n        },\n        /**\n         * 求两个向量最大值\n         * @param  {Vector2} out\n         * @param  {Vector2} v1\n         * @param  {Vector2} v2\n         */\n        max: function (out, v1, v2) {\n            out[0] = Math.max(v1[0], v2[0]);\n            out[1] = Math.max(v1[1], v2[1]);\n            return out;\n        }\n    };\n\n    vector.length = vector.len;\n    vector.lengthSquare = vector.lenSquare;\n    vector.dist = vector.distance;\n    vector.distSquare = vector.distanceSquare;\n\n    module.exports = vector;\n\n\n\n/***/ }),\n/* 164 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Path element\n * @module zrender/graphic/Path\n */\n\n\n\n    var Displayable = __webpack_require__(197);\n    var zrUtil = __webpack_require__(158);\n    var PathProxy = __webpack_require__(184);\n    var pathContain = __webpack_require__(411);\n\n    var Pattern = __webpack_require__(231);\n    var getCanvasPattern = Pattern.prototype.getCanvasPattern;\n\n    var abs = Math.abs;\n\n    var pathProxyForDraw = new PathProxy(true);\n    /**\n     * @alias module:zrender/graphic/Path\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    function Path(opts) {\n        Displayable.call(this, opts);\n\n        /**\n         * @type {module:zrender/core/PathProxy}\n         * @readOnly\n         */\n        this.path = null;\n    }\n\n    Path.prototype = {\n\n        constructor: Path,\n\n        type: 'path',\n\n        __dirtyPath: true,\n\n        strokeContainThreshold: 5,\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n            var path = this.path || pathProxyForDraw;\n            var hasStroke = style.hasStroke();\n            var hasFill = style.hasFill();\n            var fill = style.fill;\n            var stroke = style.stroke;\n            var hasFillGradient = hasFill && !!(fill.colorStops);\n            var hasStrokeGradient = hasStroke && !!(stroke.colorStops);\n            var hasFillPattern = hasFill && !!(fill.image);\n            var hasStrokePattern = hasStroke && !!(stroke.image);\n\n            style.bind(ctx, this, prevEl);\n            this.setTransform(ctx);\n\n            if (this.__dirty) {\n                var rect;\n                // Update gradient because bounding rect may changed\n                if (hasFillGradient) {\n                    rect = rect || this.getBoundingRect();\n                    this._fillGradient = style.getGradient(ctx, fill, rect);\n                }\n                if (hasStrokeGradient) {\n                    rect = rect || this.getBoundingRect();\n                    this._strokeGradient = style.getGradient(ctx, stroke, rect);\n                }\n            }\n            // Use the gradient or pattern\n            if (hasFillGradient) {\n                // PENDING If may have affect the state\n                ctx.fillStyle = this._fillGradient;\n            }\n            else if (hasFillPattern) {\n                ctx.fillStyle = getCanvasPattern.call(fill, ctx);\n            }\n            if (hasStrokeGradient) {\n                ctx.strokeStyle = this._strokeGradient;\n            }\n            else if (hasStrokePattern) {\n                ctx.strokeStyle = getCanvasPattern.call(stroke, ctx);\n            }\n\n            var lineDash = style.lineDash;\n            var lineDashOffset = style.lineDashOffset;\n\n            var ctxLineDash = !!ctx.setLineDash;\n\n            // Update path sx, sy\n            var scale = this.getGlobalScale();\n            path.setScale(scale[0], scale[1]);\n\n            // Proxy context\n            // Rebuild path in following 2 cases\n            // 1. Path is dirty\n            // 2. Path needs javascript implemented lineDash stroking.\n            //    In this case, lineDash information will not be saved in PathProxy\n            if (this.__dirtyPath\n                || (lineDash && !ctxLineDash && hasStroke)\n            ) {\n                path.beginPath(ctx);\n\n                // Setting line dash before build path\n                if (lineDash && !ctxLineDash) {\n                    path.setLineDash(lineDash);\n                    path.setLineDashOffset(lineDashOffset);\n                }\n\n                this.buildPath(path, this.shape, false);\n\n                // Clear path dirty flag\n                if (this.path) {\n                    this.__dirtyPath = false;\n                }\n            }\n            else {\n                // Replay path building\n                ctx.beginPath();\n                this.path.rebuildPath(ctx);\n            }\n\n            hasFill && path.fill(ctx);\n\n            if (lineDash && ctxLineDash) {\n                ctx.setLineDash(lineDash);\n                ctx.lineDashOffset = lineDashOffset;\n            }\n\n            hasStroke && path.stroke(ctx);\n\n            if (lineDash && ctxLineDash) {\n                // PENDING\n                // Remove lineDash\n                ctx.setLineDash([]);\n            }\n\n\n            this.restoreTransform(ctx);\n\n            // Draw rect text\n            if (style.text != null) {\n                // var rect = this.getBoundingRect();\n                this.drawRectText(ctx, this.getBoundingRect());\n            }\n        },\n\n        // When bundling path, some shape may decide if use moveTo to begin a new subpath or closePath\n        // Like in circle\n        buildPath: function (ctx, shapeCfg, inBundle) {},\n\n        createPathProxy: function () {\n            this.path = new PathProxy();\n        },\n\n        getBoundingRect: function () {\n            var rect = this._rect;\n            var style = this.style;\n            var needsUpdateRect = !rect;\n            if (needsUpdateRect) {\n                var path = this.path;\n                if (!path) {\n                    // Create path on demand.\n                    path = this.path = new PathProxy();\n                }\n                if (this.__dirtyPath) {\n                    path.beginPath();\n                    this.buildPath(path, this.shape, false);\n                }\n                rect = path.getBoundingRect();\n            }\n            this._rect = rect;\n\n            if (style.hasStroke()) {\n                // Needs update rect with stroke lineWidth when\n                // 1. Element changes scale or lineWidth\n                // 2. Shape is changed\n                var rectWithStroke = this._rectWithStroke || (this._rectWithStroke = rect.clone());\n                if (this.__dirty || needsUpdateRect) {\n                    rectWithStroke.copy(rect);\n                    // FIXME Must after updateTransform\n                    var w = style.lineWidth;\n                    // PENDING, Min line width is needed when line is horizontal or vertical\n                    var lineScale = style.strokeNoScale ? this.getLineScale() : 1;\n\n                    // Only add extra hover lineWidth when there are no fill\n                    if (!style.hasFill()) {\n                        w = Math.max(w, this.strokeContainThreshold || 4);\n                    }\n                    // Consider line width\n                    // Line scale can't be 0;\n                    if (lineScale > 1e-10) {\n                        rectWithStroke.width += w / lineScale;\n                        rectWithStroke.height += w / lineScale;\n                        rectWithStroke.x -= w / lineScale / 2;\n                        rectWithStroke.y -= w / lineScale / 2;\n                    }\n                }\n\n                // Return rect with stroke\n                return rectWithStroke;\n            }\n\n            return rect;\n        },\n\n        contain: function (x, y) {\n            var localPos = this.transformCoordToLocal(x, y);\n            var rect = this.getBoundingRect();\n            var style = this.style;\n            x = localPos[0];\n            y = localPos[1];\n\n            if (rect.contain(x, y)) {\n                var pathData = this.path.data;\n                if (style.hasStroke()) {\n                    var lineWidth = style.lineWidth;\n                    var lineScale = style.strokeNoScale ? this.getLineScale() : 1;\n                    // Line scale can't be 0;\n                    if (lineScale > 1e-10) {\n                        // Only add extra hover lineWidth when there are no fill\n                        if (!style.hasFill()) {\n                            lineWidth = Math.max(lineWidth, this.strokeContainThreshold);\n                        }\n                        if (pathContain.containStroke(\n                            pathData, lineWidth / lineScale, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                }\n                if (style.hasFill()) {\n                    return pathContain.contain(pathData, x, y);\n                }\n            }\n            return false;\n        },\n\n        /**\n         * @param  {boolean} dirtyPath\n         */\n        dirty: function (dirtyPath) {\n            if (dirtyPath == null) {\n                dirtyPath = true;\n            }\n            // Only mark dirty, not mark clean\n            if (dirtyPath) {\n                this.__dirtyPath = dirtyPath;\n                this._rect = null;\n            }\n\n            this.__dirty = true;\n\n            this.__zr && this.__zr.refresh();\n\n            // Used as a clipping path\n            if (this.__clipTarget) {\n                this.__clipTarget.dirty();\n            }\n        },\n\n        /**\n         * Alias for animate('shape')\n         * @param {boolean} loop\n         */\n        animateShape: function (loop) {\n            return this.animate('shape', loop);\n        },\n\n        // Overwrite attrKV\n        attrKV: function (key, value) {\n            // FIXME\n            if (key === 'shape') {\n                this.setShape(value);\n                this.__dirtyPath = true;\n                this._rect = null;\n            }\n            else {\n                Displayable.prototype.attrKV.call(this, key, value);\n            }\n        },\n\n        /**\n         * @param {Object|string} key\n         * @param {*} value\n         */\n        setShape: function (key, value) {\n            var shape = this.shape;\n            // Path from string may not have shape\n            if (shape) {\n                if (zrUtil.isObject(key)) {\n                    for (var name in key) {\n                        if (key.hasOwnProperty(name)) {\n                            shape[name] = key[name];\n                        }\n                    }\n                }\n                else {\n                    shape[key] = value;\n                }\n                this.dirty(true);\n            }\n            return this;\n        },\n\n        getLineScale: function () {\n            var m = this.transform;\n            // Get the line scale.\n            // Determinant of `m` means how much the area is enlarged by the\n            // transformation. So its square root can be used as a scale factor\n            // for width.\n            return m && abs(m[0] - 1) > 1e-10 && abs(m[3] - 1) > 1e-10\n                ? Math.sqrt(abs(m[0] * m[3] - m[2] * m[1]))\n                : 1;\n        }\n    };\n\n    /**\n     * 扩展一个 Path element, 比如星形，圆等。\n     * Extend a path element\n     * @param {Object} props\n     * @param {string} props.type Path type\n     * @param {Function} props.init Initialize\n     * @param {Function} props.buildPath Overwrite buildPath method\n     * @param {Object} [props.style] Extended default style config\n     * @param {Object} [props.shape] Extended default shape config\n     */\n    Path.extend = function (defaults) {\n        var Sub = function (opts) {\n            Path.call(this, opts);\n\n            if (defaults.style) {\n                // Extend default style\n                this.style.extendFrom(defaults.style, false);\n            }\n\n            // Extend default shape\n            var defaultShape = defaults.shape;\n            if (defaultShape) {\n                this.shape = this.shape || {};\n                var thisShape = this.shape;\n                for (var name in defaultShape) {\n                    if (\n                        ! thisShape.hasOwnProperty(name)\n                        && defaultShape.hasOwnProperty(name)\n                    ) {\n                        thisShape[name] = defaultShape[name];\n                    }\n                }\n            }\n\n            defaults.init && defaults.init.call(this, opts);\n        };\n\n        zrUtil.inherits(Sub, Path);\n\n        // FIXME 不能 extend position, rotation 等引用对象\n        for (var name in defaults) {\n            // Extending prototype values and methods\n            if (name !== 'style' && name !== 'shape') {\n                Sub.prototype[name] = defaults[name];\n            }\n        }\n\n        return Sub;\n    };\n\n    zrUtil.inherits(Path, Displayable);\n\n    module.exports = Path;\n\n\n/***/ }),\n/* 165 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/model/Model\n */\n\n\n    var zrUtil = __webpack_require__(158);\n    var clazzUtil = __webpack_require__(168);\n    var env = __webpack_require__(167);\n\n    /**\n     * @alias module:echarts/model/Model\n     * @constructor\n     * @param {Object} option\n     * @param {module:echarts/model/Model} [parentModel]\n     * @param {module:echarts/model/Global} [ecModel]\n     */\n    function Model(option, parentModel, ecModel) {\n        /**\n         * @type {module:echarts/model/Model}\n         * @readOnly\n         */\n        this.parentModel = parentModel;\n\n        /**\n         * @type {module:echarts/model/Global}\n         * @readOnly\n         */\n        this.ecModel = ecModel;\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        this.option = option;\n\n        // Simple optimization\n        // if (this.init) {\n        //     if (arguments.length <= 4) {\n        //         this.init(option, parentModel, ecModel, extraOpt);\n        //     }\n        //     else {\n        //         this.init.apply(this, arguments);\n        //     }\n        // }\n    }\n\n    Model.prototype = {\n\n        constructor: Model,\n\n        /**\n         * Model 的初始化函数\n         * @param {Object} option\n         */\n        init: null,\n\n        /**\n         * 从新的 Option merge\n         */\n        mergeOption: function (option) {\n            zrUtil.merge(this.option, option, true);\n        },\n\n        /**\n         * @param {string|Array.<string>} path\n         * @param {boolean} [ignoreParent=false]\n         * @return {*}\n         */\n        get: function (path, ignoreParent) {\n            if (path == null) {\n                return this.option;\n            }\n\n            return doGet(\n                this.option,\n                this.parsePath(path),\n                !ignoreParent && getParent(this, path)\n            );\n        },\n\n        /**\n         * @param {string} key\n         * @param {boolean} [ignoreParent=false]\n         * @return {*}\n         */\n        getShallow: function (key, ignoreParent) {\n            var option = this.option;\n\n            var val = option == null ? option : option[key];\n            var parentModel = !ignoreParent && getParent(this, key);\n            if (val == null && parentModel) {\n                val = parentModel.getShallow(key);\n            }\n            return val;\n        },\n\n        /**\n         * @param {string|Array.<string>} path\n         * @param {module:echarts/model/Model} [parentModel]\n         * @return {module:echarts/model/Model}\n         */\n        getModel: function (path, parentModel) {\n            var obj = path == null\n                ? this.option\n                : doGet(this.option, path = this.parsePath(path));\n\n            var thisParentModel;\n            parentModel = parentModel || (\n                (thisParentModel = getParent(this, path))\n                    && thisParentModel.getModel(path)\n            );\n\n            return new Model(obj, parentModel, this.ecModel);\n        },\n\n        /**\n         * If model has option\n         */\n        isEmpty: function () {\n            return this.option == null;\n        },\n\n        restoreData: function () {},\n\n        // Pending\n        clone: function () {\n            var Ctor = this.constructor;\n            return new Ctor(zrUtil.clone(this.option));\n        },\n\n        setReadOnly: function (properties) {\n            clazzUtil.setReadOnly(this, properties);\n        },\n\n        // If path is null/undefined, return null/undefined.\n        parsePath: function(path) {\n            if (typeof path === 'string') {\n                path = path.split('.');\n            }\n            return path;\n        },\n\n        /**\n         * @param {Function} getParentMethod\n         *        param {Array.<string>|string} path\n         *        return {module:echarts/model/Model}\n         */\n        customizeGetParent: function (getParentMethod) {\n            clazzUtil.set(this, 'getParent', getParentMethod);\n        },\n\n        isAnimationEnabled: function () {\n            if (!env.node) {\n                if (this.option.animation != null) {\n                    return !!this.option.animation;\n                }\n                else if (this.parentModel) {\n                    return this.parentModel.isAnimationEnabled();\n                }\n            }\n        }\n    };\n\n    function doGet(obj, pathArr, parentModel) {\n        for (var i = 0; i < pathArr.length; i++) {\n            // Ignore empty\n            if (!pathArr[i]) {\n                continue;\n            }\n            // obj could be number/string/... (like 0)\n            obj = (obj && typeof obj === 'object') ? obj[pathArr[i]] : null;\n            if (obj == null) {\n                break;\n            }\n        }\n        if (obj == null && parentModel) {\n            obj = parentModel.get(pathArr);\n        }\n        return obj;\n    }\n\n    function getParent(model, path) {\n        var getParentMethod = clazzUtil.get(model, 'getParent');\n        return getParentMethod ? getParentMethod.call(model, path) : model.parentModel;\n    }\n\n    // Enable Model.extend.\n    clazzUtil.enableClassExtend(Model);\n\n    var mixin = zrUtil.mixin;\n    mixin(Model, __webpack_require__(341));\n    mixin(Model, __webpack_require__(338));\n    mixin(Model, __webpack_require__(342));\n    mixin(Model, __webpack_require__(340));\n\n    module.exports = Model;\n\n\n/***/ }),\n/* 166 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(158);\n    var numberUtil = __webpack_require__(161);\n    var textContain = __webpack_require__(172);\n\n    var formatUtil = {};\n\n    /**\n     * 每三位默认加,格式化\n     * @param {string|number} x\n     * @return {string}\n     */\n    formatUtil.addCommas = function (x) {\n        if (isNaN(x)) {\n            return '-';\n        }\n        x = (x + '').split('.');\n        return x[0].replace(/(\\d{1,3})(?=(?:\\d{3})+(?!\\d))/g,'$1,')\n               + (x.length > 1 ? ('.' + x[1]) : '');\n    };\n\n    /**\n     * @param {string} str\n     * @param {boolean} [upperCaseFirst=false]\n     * @return {string} str\n     */\n    formatUtil.toCamelCase = function (str, upperCaseFirst) {\n        str = (str || '').toLowerCase().replace(/-(.)/g, function(match, group1) {\n            return group1.toUpperCase();\n        });\n\n        if (upperCaseFirst && str) {\n            str = str.charAt(0).toUpperCase() + str.slice(1);\n        }\n\n        return str;\n    };\n\n    /**\n     * Normalize css liked array configuration\n     * e.g.\n     *  3 => [3, 3, 3, 3]\n     *  [4, 2] => [4, 2, 4, 2]\n     *  [4, 3, 2] => [4, 3, 2, 3]\n     * @param {number|Array.<number>} val\n     */\n    formatUtil.normalizeCssArray = function (val) {\n        var len = val.length;\n        if (typeof (val) === 'number') {\n            return [val, val, val, val];\n        }\n        else if (len === 2) {\n            // vertical | horizontal\n            return [val[0], val[1], val[0], val[1]];\n        }\n        else if (len === 3) {\n            // top | horizontal | bottom\n            return [val[0], val[1], val[2], val[1]];\n        }\n        return val;\n    };\n\n    var encodeHTML = formatUtil.encodeHTML = function (source) {\n        return String(source)\n            .replace(/&/g, '&amp;')\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;')\n            .replace(/\"/g, '&quot;')\n            .replace(/'/g, '&#39;');\n    };\n\n    var TPL_VAR_ALIAS = ['a', 'b', 'c', 'd', 'e', 'f', 'g'];\n\n    var wrapVar = function (varName, seriesIdx) {\n        return '{' + varName + (seriesIdx == null ? '' : seriesIdx) + '}';\n    };\n\n    /**\n     * Template formatter\n     * @param {string} tpl\n     * @param {Array.<Object>|Object} paramsList\n     * @param {boolean} [encode=false]\n     * @return {string}\n     */\n    formatUtil.formatTpl = function (tpl, paramsList, encode) {\n        if (!zrUtil.isArray(paramsList)) {\n            paramsList = [paramsList];\n        }\n        var seriesLen = paramsList.length;\n        if (!seriesLen) {\n            return '';\n        }\n\n        var $vars = paramsList[0].$vars || [];\n        for (var i = 0; i < $vars.length; i++) {\n            var alias = TPL_VAR_ALIAS[i];\n            var val = wrapVar(alias, 0);\n            tpl = tpl.replace(wrapVar(alias), encode ? encodeHTML(val) : val);\n        }\n        for (var seriesIdx = 0; seriesIdx < seriesLen; seriesIdx++) {\n            for (var k = 0; k < $vars.length; k++) {\n                var val = paramsList[seriesIdx][$vars[k]];\n                tpl = tpl.replace(\n                    wrapVar(TPL_VAR_ALIAS[k], seriesIdx),\n                    encode ? encodeHTML(val) : val\n                );\n            }\n        }\n\n        return tpl;\n    };\n\n    /**\n     * simple Template formatter\n     *\n     * @param {string} tpl\n     * @param {Object} param\n     * @param {boolean} [encode=false]\n     * @return {string}\n     */\n    formatUtil.formatTplSimple = function (tpl, param, encode) {\n        zrUtil.each(param, function (value, key) {\n            tpl = tpl.replace(\n                '{' + key + '}',\n                encode ? encodeHTML(value) : value\n            );\n        });\n        return tpl;\n    };\n\n\n    /**\n     * @param {string} str\n     * @return {string}\n     * @inner\n     */\n    var s2d = function (str) {\n        return str < 10 ? ('0' + str) : str;\n    };\n\n    /**\n     * ISO Date format\n     * @param {string} tpl\n     * @param {number} value\n     * @param {boolean} [isUTC=false] Default in local time.\n     *           see `module:echarts/scale/Time`\n     *           and `module:echarts/util/number#parseDate`.\n     * @inner\n     */\n    formatUtil.formatTime = function (tpl, value, isUTC) {\n        if (tpl === 'week'\n            || tpl === 'month'\n            || tpl === 'quarter'\n            || tpl === 'half-year'\n            || tpl === 'year'\n        ) {\n            tpl = 'MM-dd\\nyyyy';\n        }\n\n        var date = numberUtil.parseDate(value);\n        var utc = isUTC ? 'UTC' : '';\n        var y = date['get' + utc + 'FullYear']();\n        var M = date['get' + utc + 'Month']() + 1;\n        var d = date['get' + utc + 'Date']();\n        var h = date['get' + utc + 'Hours']();\n        var m = date['get' + utc + 'Minutes']();\n        var s = date['get' + utc + 'Seconds']();\n\n        tpl = tpl.replace('MM', s2d(M))\n            .toLowerCase()\n            .replace('yyyy', y)\n            .replace('yy', y % 100)\n            .replace('dd', s2d(d))\n            .replace('d', d)\n            .replace('hh', s2d(h))\n            .replace('h', h)\n            .replace('mm', s2d(m))\n            .replace('m', m)\n            .replace('ss', s2d(s))\n            .replace('s', s);\n\n        return tpl;\n    };\n\n    /**\n     * Capital first\n     * @param {string} str\n     * @return {string}\n     */\n    formatUtil.capitalFirst = function (str) {\n        return str ? str.charAt(0).toUpperCase() + str.substr(1) : str;\n    };\n\n    formatUtil.truncateText = textContain.truncateText;\n\n    module.exports = formatUtil;\n\n\n\n/***/ }),\n/* 167 */\n/***/ (function(module, exports) {\n\n/**\n * echarts设备环境识别\n *\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\n * @author firede[firede@firede.us]\n * @desc thanks zepto.\n */\n\n    var env = {};\n    if (typeof navigator === 'undefined') {\n        // In node\n        env = {\n            browser: {},\n            os: {},\n            node: true,\n            // Assume canvas is supported\n            canvasSupported: true\n        };\n    }\n    else {\n        env = detect(navigator.userAgent);\n    }\n\n    module.exports = env;\n\n    // Zepto.js\n    // (c) 2010-2013 Thomas Fuchs\n    // Zepto.js may be freely distributed under the MIT license.\n\n    function detect(ua) {\n        var os = {};\n        var browser = {};\n        // var webkit = ua.match(/Web[kK]it[\\/]{0,1}([\\d.]+)/);\n        // var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/);\n        // var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n        // var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n        // var iphone = !ipad && ua.match(/(iPhone\\sOS)\\s([\\d_]+)/);\n        // var webos = ua.match(/(webOS|hpwOS)[\\s\\/]([\\d.]+)/);\n        // var touchpad = webos && ua.match(/TouchPad/);\n        // var kindle = ua.match(/Kindle\\/([\\d.]+)/);\n        // var silk = ua.match(/Silk\\/([\\d._]+)/);\n        // var blackberry = ua.match(/(BlackBerry).*Version\\/([\\d.]+)/);\n        // var bb10 = ua.match(/(BB10).*Version\\/([\\d.]+)/);\n        // var rimtabletos = ua.match(/(RIM\\sTablet\\sOS)\\s([\\d.]+)/);\n        // var playbook = ua.match(/PlayBook/);\n        // var chrome = ua.match(/Chrome\\/([\\d.]+)/) || ua.match(/CriOS\\/([\\d.]+)/);\n        var firefox = ua.match(/Firefox\\/([\\d.]+)/);\n        // var safari = webkit && ua.match(/Mobile\\//) && !chrome;\n        // var webview = ua.match(/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/) && !chrome;\n        var ie = ua.match(/MSIE\\s([\\d.]+)/)\n            // IE 11 Trident/7.0; rv:11.0\n            || ua.match(/Trident\\/.+?rv:(([\\d.]+))/);\n        var edge = ua.match(/Edge\\/([\\d.]+)/); // IE 12 and 12+\n\n        var weChat = (/micromessenger/i).test(ua);\n\n        // Todo: clean this up with a better OS/browser seperation:\n        // - discern (more) between multiple browsers on android\n        // - decide if kindle fire in silk mode is android or not\n        // - Firefox on Android doesn't specify the Android version\n        // - possibly devide in os, device and browser hashes\n\n        // if (browser.webkit = !!webkit) browser.version = webkit[1];\n\n        // if (android) os.android = true, os.version = android[2];\n        // if (iphone && !ipod) os.ios = os.iphone = true, os.version = iphone[2].replace(/_/g, '.');\n        // if (ipad) os.ios = os.ipad = true, os.version = ipad[2].replace(/_/g, '.');\n        // if (ipod) os.ios = os.ipod = true, os.version = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n        // if (webos) os.webos = true, os.version = webos[2];\n        // if (touchpad) os.touchpad = true;\n        // if (blackberry) os.blackberry = true, os.version = blackberry[2];\n        // if (bb10) os.bb10 = true, os.version = bb10[2];\n        // if (rimtabletos) os.rimtabletos = true, os.version = rimtabletos[2];\n        // if (playbook) browser.playbook = true;\n        // if (kindle) os.kindle = true, os.version = kindle[1];\n        // if (silk) browser.silk = true, browser.version = silk[1];\n        // if (!silk && os.android && ua.match(/Kindle Fire/)) browser.silk = true;\n        // if (chrome) browser.chrome = true, browser.version = chrome[1];\n        if (firefox) {\n            browser.firefox = true;\n            browser.version = firefox[1];\n        }\n        // if (safari && (ua.match(/Safari/) || !!os.ios)) browser.safari = true;\n        // if (webview) browser.webview = true;\n\n        if (ie) {\n            browser.ie = true;\n            browser.version = ie[1];\n        }\n\n        if (edge) {\n            browser.edge = true;\n            browser.version = edge[1];\n        }\n\n        // It is difficult to detect WeChat in Win Phone precisely, because ua can\n        // not be set on win phone. So we do not consider Win Phone.\n        if (weChat) {\n            browser.weChat = true;\n        }\n\n        // os.tablet = !!(ipad || playbook || (android && !ua.match(/Mobile/)) ||\n        //     (firefox && ua.match(/Tablet/)) || (ie && !ua.match(/Phone/) && ua.match(/Touch/)));\n        // os.phone  = !!(!os.tablet && !os.ipod && (android || iphone || webos ||\n        //     (chrome && ua.match(/Android/)) || (chrome && ua.match(/CriOS\\/([\\d.]+)/)) ||\n        //     (firefox && ua.match(/Mobile/)) || (ie && ua.match(/Touch/))));\n\n        return {\n            browser: browser,\n            os: os,\n            node: false,\n            // 原生canvas支持，改极端点了\n            // canvasSupported : !(browser.ie && parseFloat(browser.version) < 9)\n            canvasSupported : document.createElement('canvas').getContext ? true : false,\n            // @see <http://stackoverflow.com/questions/4817029/whats-the-best-way-to-detect-a-touch-screen-device-using-javascript>\n            // works on most browsers\n            // IE10/11 does not support touch event, and MS Edge supports them but not by\n            // default, so we dont check navigator.maxTouchPoints for them here.\n            touchEventsSupported: 'ontouchstart' in window && !browser.ie && !browser.edge,\n            // <http://caniuse.com/#search=pointer%20event>.\n            pointerEventsSupported: 'onpointerdown' in window\n                // Firefox supports pointer but not by default, only MS browsers are reliable on pointer\n                // events currently. So we dont use that on other browsers unless tested sufficiently.\n                // Although IE 10 supports pointer event, it use old style and is different from the\n                // standard. So we exclude that. (IE 10 is hardly used on touch device)\n                && (browser.edge || (browser.ie && browser.version >= 11))\n        };\n    }\n\n\n/***/ }),\n/* 168 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(158);\n\n    var clazz = {};\n\n    var TYPE_DELIMITER = '.';\n    var IS_CONTAINER = '___EC__COMPONENT__CONTAINER___';\n    var MEMBER_PRIFIX = '\\0ec_\\0';\n\n    /**\n     * Hide private class member.\n     * The same behavior as `host[name] = value;` (can be right-value)\n     * @public\n     */\n    clazz.set = function (host, name, value) {\n        return (host[MEMBER_PRIFIX + name] = value);\n    };\n\n    /**\n     * Hide private class member.\n     * The same behavior as `host[name];`\n     * @public\n     */\n    clazz.get = function (host, name) {\n        return host[MEMBER_PRIFIX + name];\n    };\n\n    /**\n     * For hidden private class member.\n     * The same behavior as `host.hasOwnProperty(name);`\n     * @public\n     */\n    clazz.hasOwn = function (host, name) {\n        return host.hasOwnProperty(MEMBER_PRIFIX + name);\n    };\n\n    /**\n     * Notice, parseClassType('') should returns {main: '', sub: ''}\n     * @public\n     */\n    var parseClassType = clazz.parseClassType = function (componentType) {\n        var ret = {main: '', sub: ''};\n        if (componentType) {\n            componentType = componentType.split(TYPE_DELIMITER);\n            ret.main = componentType[0] || '';\n            ret.sub = componentType[1] || '';\n        }\n        return ret;\n    };\n\n    /**\n     * @public\n     */\n    function checkClassType(componentType) {\n        zrUtil.assert(\n            /^[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)?$/.test(componentType),\n            'componentType \"' + componentType + '\" illegal'\n        );\n    }\n\n    /**\n     * @public\n     */\n    clazz.enableClassExtend = function (RootClass, mandatoryMethods) {\n\n        RootClass.$constructor = RootClass;\n        RootClass.extend = function (proto) {\n\n            if (__DEV__) {\n                zrUtil.each(mandatoryMethods, function (method) {\n                    if (!proto[method]) {\n                        console.warn(\n                            'Method `' + method + '` should be implemented'\n                            + (proto.type ? ' in ' + proto.type : '') + '.'\n                        );\n                    }\n                });\n            }\n\n            var superClass = this;\n            var ExtendedClass = function () {\n                if (!proto.$constructor) {\n                    superClass.apply(this, arguments);\n                }\n                else {\n                    proto.$constructor.apply(this, arguments);\n                }\n            };\n\n            zrUtil.extend(ExtendedClass.prototype, proto);\n\n            ExtendedClass.extend = this.extend;\n            ExtendedClass.superCall = superCall;\n            ExtendedClass.superApply = superApply;\n            zrUtil.inherits(ExtendedClass, this);\n            ExtendedClass.superClass = superClass;\n\n            return ExtendedClass;\n        };\n    };\n\n    // superCall should have class info, which can not be fetch from 'this'.\n    // Consider this case:\n    // class A has method f,\n    // class B inherits class A, overrides method f, f call superApply('f'),\n    // class C inherits class B, do not overrides method f,\n    // then when method of class C is called, dead loop occured.\n    function superCall(context, methodName) {\n        var args = zrUtil.slice(arguments, 2);\n        return this.superClass.prototype[methodName].apply(context, args);\n    }\n\n    function superApply(context, methodName, args) {\n        return this.superClass.prototype[methodName].apply(context, args);\n    }\n\n    /**\n     * @param {Object} entity\n     * @param {Object} options\n     * @param {boolean} [options.registerWhenExtend]\n     * @public\n     */\n    clazz.enableClassManagement = function (entity, options) {\n        options = options || {};\n\n        /**\n         * Component model classes\n         * key: componentType,\n         * value:\n         *     componentClass, when componentType is 'xxx'\n         *     or Object.<subKey, componentClass>, when componentType is 'xxx.yy'\n         * @type {Object}\n         */\n        var storage = {};\n\n        entity.registerClass = function (Clazz, componentType) {\n            if (componentType) {\n                checkClassType(componentType);\n                componentType = parseClassType(componentType);\n\n                if (!componentType.sub) {\n                    if (__DEV__) {\n                        if (storage[componentType.main]) {\n                            console.warn(componentType.main + ' exists.');\n                        }\n                    }\n                    storage[componentType.main] = Clazz;\n                }\n                else if (componentType.sub !== IS_CONTAINER) {\n                    var container = makeContainer(componentType);\n                    container[componentType.sub] = Clazz;\n                }\n            }\n            return Clazz;\n        };\n\n        entity.getClass = function (componentMainType, subType, throwWhenNotFound) {\n            var Clazz = storage[componentMainType];\n\n            if (Clazz && Clazz[IS_CONTAINER]) {\n                Clazz = subType ? Clazz[subType] : null;\n            }\n\n            if (throwWhenNotFound && !Clazz) {\n                throw new Error(\n                    !subType\n                        ? componentMainType + '.' + 'type should be specified.'\n                        : 'Component ' + componentMainType + '.' + (subType || '') + ' not exists. Load it first.'\n                );\n            }\n\n            return Clazz;\n        };\n\n        entity.getClassesByMainType = function (componentType) {\n            componentType = parseClassType(componentType);\n\n            var result = [];\n            var obj = storage[componentType.main];\n\n            if (obj && obj[IS_CONTAINER]) {\n                zrUtil.each(obj, function (o, type) {\n                    type !== IS_CONTAINER && result.push(o);\n                });\n            }\n            else {\n                result.push(obj);\n            }\n\n            return result;\n        };\n\n        entity.hasClass = function (componentType) {\n            // Just consider componentType.main.\n            componentType = parseClassType(componentType);\n            return !!storage[componentType.main];\n        };\n\n        /**\n         * @return {Array.<string>} Like ['aa', 'bb'], but can not be ['aa.xx']\n         */\n        entity.getAllClassMainTypes = function () {\n            var types = [];\n            zrUtil.each(storage, function (obj, type) {\n                types.push(type);\n            });\n            return types;\n        };\n\n        /**\n         * If a main type is container and has sub types\n         * @param  {string}  mainType\n         * @return {boolean}\n         */\n        entity.hasSubTypes = function (componentType) {\n            componentType = parseClassType(componentType);\n            var obj = storage[componentType.main];\n            return obj && obj[IS_CONTAINER];\n        };\n\n        entity.parseClassType = parseClassType;\n\n        function makeContainer(componentType) {\n            var container = storage[componentType.main];\n            if (!container || !container[IS_CONTAINER]) {\n                container = storage[componentType.main] = {};\n                container[IS_CONTAINER] = true;\n            }\n            return container;\n        }\n\n        if (options.registerWhenExtend) {\n            var originalExtend = entity.extend;\n            if (originalExtend) {\n                entity.extend = function (proto) {\n                    var ExtendedClass = originalExtend.call(this, proto);\n                    return entity.registerClass(ExtendedClass, proto.type);\n                };\n            }\n        }\n\n        return entity;\n    };\n\n    /**\n     * @param {string|Array.<string>} properties\n     */\n    clazz.setReadOnly = function (obj, properties) {\n        // FIXME It seems broken in IE8 simulation of IE11\n        // if (!zrUtil.isArray(properties)) {\n        //     properties = properties != null ? [properties] : [];\n        // }\n        // zrUtil.each(properties, function (prop) {\n        //     var value = obj[prop];\n\n        //     Object.defineProperty\n        //         && Object.defineProperty(obj, prop, {\n        //             value: value, writable: false\n        //         });\n        //     zrUtil.isArray(obj[prop])\n        //         && Object.freeze\n        //         && Object.freeze(obj[prop]);\n        // });\n    };\n\n    module.exports = clazz;\n\n\n/***/ }),\n/* 169 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * @module echarts/core/BoundingRect\n */\n\n\n    var vec2 = __webpack_require__(163);\n    var matrix = __webpack_require__(175);\n\n    var v2ApplyTransform = vec2.applyTransform;\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    /**\n     * @alias module:echarts/core/BoundingRect\n     */\n    function BoundingRect(x, y, width, height) {\n\n        if (width < 0) {\n            x = x + width;\n            width = -width;\n        }\n        if (height < 0) {\n            y = y + height;\n            height = -height;\n        }\n\n        /**\n         * @type {number}\n         */\n        this.x = x;\n        /**\n         * @type {number}\n         */\n        this.y = y;\n        /**\n         * @type {number}\n         */\n        this.width = width;\n        /**\n         * @type {number}\n         */\n        this.height = height;\n    }\n\n    BoundingRect.prototype = {\n\n        constructor: BoundingRect,\n\n        /**\n         * @param {module:echarts/core/BoundingRect} other\n         */\n        union: function (other) {\n            var x = mathMin(other.x, this.x);\n            var y = mathMin(other.y, this.y);\n\n            this.width = mathMax(\n                    other.x + other.width,\n                    this.x + this.width\n                ) - x;\n            this.height = mathMax(\n                    other.y + other.height,\n                    this.y + this.height\n                ) - y;\n            this.x = x;\n            this.y = y;\n        },\n\n        /**\n         * @param {Array.<number>} m\n         * @methods\n         */\n        applyTransform: (function () {\n            var lt = [];\n            var rb = [];\n            var lb = [];\n            var rt = [];\n            return function (m) {\n                // In case usage like this\n                // el.getBoundingRect().applyTransform(el.transform)\n                // And element has no transform\n                if (!m) {\n                    return;\n                }\n                lt[0] = lb[0] = this.x;\n                lt[1] = rt[1] = this.y;\n                rb[0] = rt[0] = this.x + this.width;\n                rb[1] = lb[1] = this.y + this.height;\n\n                v2ApplyTransform(lt, lt, m);\n                v2ApplyTransform(rb, rb, m);\n                v2ApplyTransform(lb, lb, m);\n                v2ApplyTransform(rt, rt, m);\n\n                this.x = mathMin(lt[0], rb[0], lb[0], rt[0]);\n                this.y = mathMin(lt[1], rb[1], lb[1], rt[1]);\n                var maxX = mathMax(lt[0], rb[0], lb[0], rt[0]);\n                var maxY = mathMax(lt[1], rb[1], lb[1], rt[1]);\n                this.width = maxX - this.x;\n                this.height = maxY - this.y;\n            };\n        })(),\n\n        /**\n         * Calculate matrix of transforming from self to target rect\n         * @param  {module:zrender/core/BoundingRect} b\n         * @return {Array.<number>}\n         */\n        calculateTransform: function (b) {\n            var a = this;\n            var sx = b.width / a.width;\n            var sy = b.height / a.height;\n\n            var m = matrix.create();\n\n            // 矩阵右乘\n            matrix.translate(m, m, [-a.x, -a.y]);\n            matrix.scale(m, m, [sx, sy]);\n            matrix.translate(m, m, [b.x, b.y]);\n\n            return m;\n        },\n\n        /**\n         * @param {(module:echarts/core/BoundingRect|Object)} b\n         * @return {boolean}\n         */\n        intersect: function (b) {\n            if (!b) {\n                return false;\n            }\n\n            if (!(b instanceof BoundingRect)) {\n                // Normalize negative width/height.\n                b = BoundingRect.create(b);\n            }\n\n            var a = this;\n            var ax0 = a.x;\n            var ax1 = a.x + a.width;\n            var ay0 = a.y;\n            var ay1 = a.y + a.height;\n\n            var bx0 = b.x;\n            var bx1 = b.x + b.width;\n            var by0 = b.y;\n            var by1 = b.y + b.height;\n\n            return ! (ax1 < bx0 || bx1 < ax0 || ay1 < by0 || by1 < ay0);\n        },\n\n        contain: function (x, y) {\n            var rect = this;\n            return x >= rect.x\n                && x <= (rect.x + rect.width)\n                && y >= rect.y\n                && y <= (rect.y + rect.height);\n        },\n\n        /**\n         * @return {module:echarts/core/BoundingRect}\n         */\n        clone: function () {\n            return new BoundingRect(this.x, this.y, this.width, this.height);\n        },\n\n        /**\n         * Copy from another rect\n         */\n        copy: function (other) {\n            this.x = other.x;\n            this.y = other.y;\n            this.width = other.width;\n            this.height = other.height;\n        },\n\n        plain: function () {\n            return {\n                x: this.x,\n                y: this.y,\n                width: this.width,\n                height: this.height\n            };\n        }\n    };\n\n    /**\n     * @param {Object|module:zrender/core/BoundingRect} rect\n     * @param {number} rect.x\n     * @param {number} rect.y\n     * @param {number} rect.width\n     * @param {number} rect.height\n     * @return {module:zrender/core/BoundingRect}\n     */\n    BoundingRect.create = function (rect) {\n        return new BoundingRect(rect.x, rect.y, rect.width, rect.height);\n    };\n\n    module.exports = BoundingRect;\n\n\n/***/ }),\n/* 170 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Component model\n *\n * @module echarts/model/Component\n */\n\n\n    var Model = __webpack_require__(165);\n    var zrUtil = __webpack_require__(158);\n    var arrayPush = Array.prototype.push;\n    var componentUtil = __webpack_require__(194);\n    var clazzUtil = __webpack_require__(168);\n    var layout = __webpack_require__(171);\n\n    /**\n     * @alias module:echarts/model/Component\n     * @constructor\n     * @param {Object} option\n     * @param {module:echarts/model/Model} parentModel\n     * @param {module:echarts/model/Model} ecModel\n     */\n    var ComponentModel = Model.extend({\n\n        type: 'component',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        id: '',\n\n        /**\n         * @readOnly\n         */\n        name: '',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        mainType: '',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        subType: '',\n\n        /**\n         * @readOnly\n         * @type {number}\n         */\n        componentIndex: 0,\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        defaultOption: null,\n\n        /**\n         * @type {module:echarts/model/Global}\n         * @readOnly\n         */\n        ecModel: null,\n\n        /**\n         * key: componentType\n         * value:  Component model list, can not be null.\n         * @type {Object.<string, Array.<module:echarts/model/Model>>}\n         * @readOnly\n         */\n        dependentModels: [],\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        uid: null,\n\n        /**\n         * Support merge layout params.\n         * Only support 'box' now (left/right/top/bottom/width/height).\n         * @type {string|Object} Object can be {ignoreSize: true}\n         * @readOnly\n         */\n        layoutMode: null,\n\n        $constructor: function (option, parentModel, ecModel, extraOpt) {\n            Model.call(this, option, parentModel, ecModel, extraOpt);\n\n            this.uid = componentUtil.getUID('componentModel');\n        },\n\n\n        init: function (option, parentModel, ecModel, extraOpt) {\n            this.mergeDefaultAndTheme(option, ecModel);\n        },\n\n        mergeDefaultAndTheme: function (option, ecModel) {\n            var layoutMode = this.layoutMode;\n            var inputPositionParams = layoutMode\n                ? layout.getLayoutParams(option) : {};\n\n            var themeModel = ecModel.getTheme();\n            zrUtil.merge(option, themeModel.get(this.mainType));\n            zrUtil.merge(option, this.getDefaultOption());\n\n            if (layoutMode) {\n                layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n            }\n        },\n\n        mergeOption: function (option, extraOpt) {\n            zrUtil.merge(this.option, option, true);\n\n            var layoutMode = this.layoutMode;\n            if (layoutMode) {\n                layout.mergeLayoutParam(this.option, option, layoutMode);\n            }\n        },\n\n        // Hooker after init or mergeOption\n        optionUpdated: function (newCptOption, isInit) {},\n\n        getDefaultOption: function () {\n            if (!clazzUtil.hasOwn(this, '__defaultOption')) {\n                var optList = [];\n                var Class = this.constructor;\n                while (Class) {\n                    var opt = Class.prototype.defaultOption;\n                    opt && optList.push(opt);\n                    Class = Class.superClass;\n                }\n\n                var defaultOption = {};\n                for (var i = optList.length - 1; i >= 0; i--) {\n                    defaultOption = zrUtil.merge(defaultOption, optList[i], true);\n                }\n                clazzUtil.set(this, '__defaultOption', defaultOption);\n            }\n            return clazzUtil.get(this, '__defaultOption');\n        },\n\n        getReferringComponents: function (mainType) {\n            return this.ecModel.queryComponents({\n                mainType: mainType,\n                index: this.get(mainType + 'Index', true),\n                id: this.get(mainType + 'Id', true)\n            });\n        }\n\n    });\n\n    // Reset ComponentModel.extend, add preConstruct.\n    // clazzUtil.enableClassExtend(\n    //     ComponentModel,\n    //     function (option, parentModel, ecModel, extraOpt) {\n    //         // Set dependentModels, componentIndex, name, id, mainType, subType.\n    //         zrUtil.extend(this, extraOpt);\n\n    //         this.uid = componentUtil.getUID('componentModel');\n\n    //         // this.setReadOnly([\n    //         //     'type', 'id', 'uid', 'name', 'mainType', 'subType',\n    //         //     'dependentModels', 'componentIndex'\n    //         // ]);\n    //     }\n    // );\n\n    // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(\n        ComponentModel, {registerWhenExtend: true}\n    );\n    componentUtil.enableSubTypeDefaulter(ComponentModel);\n\n    // Add capability of ComponentModel.topologicalTravel.\n    componentUtil.enableTopologicalTravel(ComponentModel, getDependencies);\n\n    function getDependencies(componentType) {\n        var deps = [];\n        zrUtil.each(ComponentModel.getClassesByMainType(componentType), function (Clazz) {\n            arrayPush.apply(deps, Clazz.prototype.dependencies || []);\n        });\n        // Ensure main type\n        return zrUtil.map(deps, function (type) {\n            return clazzUtil.parseClassType(type).main;\n        });\n    }\n\n    zrUtil.mixin(ComponentModel, __webpack_require__(339));\n\n    module.exports = ComponentModel;\n\n\n/***/ }),\n/* 171 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// Layout helpers for each component positioning\n\n\n    var zrUtil = __webpack_require__(158);\n    var BoundingRect = __webpack_require__(169);\n    var numberUtil = __webpack_require__(161);\n    var formatUtil = __webpack_require__(166);\n    var parsePercent = numberUtil.parsePercent;\n    var each = zrUtil.each;\n\n    var layout = {};\n\n    /**\n     * @public\n     */\n    var LOCATION_PARAMS = layout.LOCATION_PARAMS = [\n        'left', 'right', 'top', 'bottom', 'width', 'height'\n    ];\n\n    /**\n     * @public\n     */\n    var HV_NAMES = layout.HV_NAMES = [\n        ['width', 'left', 'right'],\n        ['height', 'top', 'bottom']\n    ];\n\n    function boxLayout(orient, group, gap, maxWidth, maxHeight) {\n        var x = 0;\n        var y = 0;\n        if (maxWidth == null) {\n            maxWidth = Infinity;\n        }\n        if (maxHeight == null) {\n            maxHeight = Infinity;\n        }\n        var currentLineMaxSize = 0;\n        group.eachChild(function (child, idx) {\n            var position = child.position;\n            var rect = child.getBoundingRect();\n            var nextChild = group.childAt(idx + 1);\n            var nextChildRect = nextChild && nextChild.getBoundingRect();\n            var nextX;\n            var nextY;\n            if (orient === 'horizontal') {\n                var moveX = rect.width + (nextChildRect ? (-nextChildRect.x + rect.x) : 0);\n                nextX = x + moveX;\n                // Wrap when width exceeds maxWidth or meet a `newline` group\n                if (nextX > maxWidth || child.newline) {\n                    x = 0;\n                    nextX = moveX;\n                    y += currentLineMaxSize + gap;\n                    currentLineMaxSize = rect.height;\n                }\n                else {\n                    currentLineMaxSize = Math.max(currentLineMaxSize, rect.height);\n                }\n            }\n            else {\n                var moveY = rect.height + (nextChildRect ? (-nextChildRect.y + rect.y) : 0);\n                nextY = y + moveY;\n                // Wrap when width exceeds maxHeight or meet a `newline` group\n                if (nextY > maxHeight || child.newline) {\n                    x += currentLineMaxSize + gap;\n                    y = 0;\n                    nextY = moveY;\n                    currentLineMaxSize = rect.width;\n                }\n                else {\n                    currentLineMaxSize = Math.max(currentLineMaxSize, rect.width);\n                }\n            }\n\n            if (child.newline) {\n                return;\n            }\n\n            position[0] = x;\n            position[1] = y;\n\n            orient === 'horizontal'\n                ? (x = nextX + gap)\n                : (y = nextY + gap);\n        });\n    }\n\n    /**\n     * VBox or HBox layouting\n     * @param {string} orient\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.box = boxLayout;\n\n    /**\n     * VBox layouting\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.vbox = zrUtil.curry(boxLayout, 'vertical');\n\n    /**\n     * HBox layouting\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.hbox = zrUtil.curry(boxLayout, 'horizontal');\n\n    /**\n     * If x or x2 is not specified or 'center' 'left' 'right',\n     * the width would be as long as possible.\n     * If y or y2 is not specified or 'middle' 'top' 'bottom',\n     * the height would be as long as possible.\n     *\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.x]\n     * @param {number|string} [positionInfo.y]\n     * @param {number|string} [positionInfo.x2]\n     * @param {number|string} [positionInfo.y2]\n     * @param {Object} containerRect\n     * @param {string|number} margin\n     * @return {Object} {width, height}\n     */\n    layout.getAvailableSize = function (positionInfo, containerRect, margin) {\n        var containerWidth = containerRect.width;\n        var containerHeight = containerRect.height;\n\n        var x = parsePercent(positionInfo.x, containerWidth);\n        var y = parsePercent(positionInfo.y, containerHeight);\n        var x2 = parsePercent(positionInfo.x2, containerWidth);\n        var y2 = parsePercent(positionInfo.y2, containerHeight);\n\n        (isNaN(x) || isNaN(parseFloat(positionInfo.x))) && (x = 0);\n        (isNaN(x2) || isNaN(parseFloat(positionInfo.x2))) && (x2 = containerWidth);\n        (isNaN(y) || isNaN(parseFloat(positionInfo.y))) && (y = 0);\n        (isNaN(y2) || isNaN(parseFloat(positionInfo.y2))) && (y2 = containerHeight);\n\n        margin = formatUtil.normalizeCssArray(margin || 0);\n\n        return {\n            width: Math.max(x2 - x - margin[1] - margin[3], 0),\n            height: Math.max(y2 - y - margin[0] - margin[2], 0)\n        };\n    };\n\n    /**\n     * Parse position info.\n     *\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.left]\n     * @param {number|string} [positionInfo.top]\n     * @param {number|string} [positionInfo.right]\n     * @param {number|string} [positionInfo.bottom]\n     * @param {number|string} [positionInfo.width]\n     * @param {number|string} [positionInfo.height]\n     * @param {number|string} [positionInfo.aspect] Aspect is width / height\n     * @param {Object} containerRect\n     * @param {string|number} [margin]\n     *\n     * @return {module:zrender/core/BoundingRect}\n     */\n    layout.getLayoutRect = function (\n        positionInfo, containerRect, margin\n    ) {\n        margin = formatUtil.normalizeCssArray(margin || 0);\n\n        var containerWidth = containerRect.width;\n        var containerHeight = containerRect.height;\n\n        var left = parsePercent(positionInfo.left, containerWidth);\n        var top = parsePercent(positionInfo.top, containerHeight);\n        var right = parsePercent(positionInfo.right, containerWidth);\n        var bottom = parsePercent(positionInfo.bottom, containerHeight);\n        var width = parsePercent(positionInfo.width, containerWidth);\n        var height = parsePercent(positionInfo.height, containerHeight);\n\n        var verticalMargin = margin[2] + margin[0];\n        var horizontalMargin = margin[1] + margin[3];\n        var aspect = positionInfo.aspect;\n\n        // If width is not specified, calculate width from left and right\n        if (isNaN(width)) {\n            width = containerWidth - right - horizontalMargin - left;\n        }\n        if (isNaN(height)) {\n            height = containerHeight - bottom - verticalMargin - top;\n        }\n\n        // If width and height are not given\n        // 1. Graph should not exceeds the container\n        // 2. Aspect must be keeped\n        // 3. Graph should take the space as more as possible\n        if (isNaN(width) && isNaN(height)) {\n            if (aspect > containerWidth / containerHeight) {\n                width = containerWidth * 0.8;\n            }\n            else {\n                height = containerHeight * 0.8;\n            }\n        }\n\n        if (aspect != null) {\n            // Calculate width or height with given aspect\n            if (isNaN(width)) {\n                width = aspect * height;\n            }\n            if (isNaN(height)) {\n                height = width / aspect;\n            }\n        }\n\n        // If left is not specified, calculate left from right and width\n        if (isNaN(left)) {\n            left = containerWidth - right - width - horizontalMargin;\n        }\n        if (isNaN(top)) {\n            top = containerHeight - bottom - height - verticalMargin;\n        }\n\n        // Align left and top\n        switch (positionInfo.left || positionInfo.right) {\n            case 'center':\n                left = containerWidth / 2 - width / 2 - margin[3];\n                break;\n            case 'right':\n                left = containerWidth - width - horizontalMargin;\n                break;\n        }\n        switch (positionInfo.top || positionInfo.bottom) {\n            case 'middle':\n            case 'center':\n                top = containerHeight / 2 - height / 2 - margin[0];\n                break;\n            case 'bottom':\n                top = containerHeight - height - verticalMargin;\n                break;\n        }\n        // If something is wrong and left, top, width, height are calculated as NaN\n        left = left || 0;\n        top = top || 0;\n        if (isNaN(width)) {\n            // Width may be NaN if only one value is given except width\n            width = containerWidth - left - (right || 0);\n        }\n        if (isNaN(height)) {\n            // Height may be NaN if only one value is given except height\n            height = containerHeight - top - (bottom || 0);\n        }\n\n        var rect = new BoundingRect(left + margin[3], top + margin[0], width, height);\n        rect.margin = margin;\n        return rect;\n    };\n\n\n    /**\n     * Position a zr element in viewport\n     *  Group position is specified by either\n     *  {left, top}, {right, bottom}\n     *  If all properties exists, right and bottom will be igonred.\n     *\n     * Logic:\n     *     1. Scale (against origin point in parent coord)\n     *     2. Rotate (against origin point in parent coord)\n     *     3. Traslate (with el.position by this method)\n     * So this method only fixes the last step 'Traslate', which does not affect\n     * scaling and rotating.\n     *\n     * If be called repeatly with the same input el, the same result will be gotten.\n     *\n     * @param {module:zrender/Element} el Should have `getBoundingRect` method.\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.left]\n     * @param {number|string} [positionInfo.top]\n     * @param {number|string} [positionInfo.right]\n     * @param {number|string} [positionInfo.bottom]\n     * @param {Object} containerRect\n     * @param {string|number} margin\n     * @param {Object} [opt]\n     * @param {Array.<number>} [opt.hv=[1,1]] Only horizontal or only vertical.\n     * @param {Array.<number>} [opt.boundingMode='all']\n     *        Specify how to calculate boundingRect when locating.\n     *        'all': Position the boundingRect that is transformed and uioned\n     *               both itself and its descendants.\n     *               This mode simplies confine the elements in the bounding\n     *               of their container (e.g., using 'right: 0').\n     *        'raw': Position the boundingRect that is not transformed and only itself.\n     *               This mode is useful when you want a element can overflow its\n     *               container. (Consider a rotated circle needs to be located in a corner.)\n     *               In this mode positionInfo.width/height can only be number.\n     */\n    layout.positionElement = function (el, positionInfo, containerRect, margin, opt) {\n        var h = !opt || !opt.hv || opt.hv[0];\n        var v = !opt || !opt.hv || opt.hv[1];\n        var boundingMode = opt && opt.boundingMode || 'all';\n\n        if (!h && !v) {\n            return;\n        }\n\n        var rect;\n        if (boundingMode === 'raw') {\n            rect = el.type === 'group'\n                ? new BoundingRect(0, 0, +positionInfo.width || 0, +positionInfo.height || 0)\n                : el.getBoundingRect();\n        }\n        else {\n            rect = el.getBoundingRect();\n            if (el.needLocalTransform()) {\n                var transform = el.getLocalTransform();\n                // Notice: raw rect may be inner object of el,\n                // which should not be modified.\n                rect = rect.clone();\n                rect.applyTransform(transform);\n            }\n        }\n\n        positionInfo = layout.getLayoutRect(\n            zrUtil.defaults(\n                {width: rect.width, height: rect.height},\n                positionInfo\n            ),\n            containerRect,\n            margin\n        );\n\n        // Because 'tranlate' is the last step in transform\n        // (see zrender/core/Transformable#getLocalTransfrom),\n        // we can just only modify el.position to get final result.\n        var elPos = el.position;\n        var dx = h ? positionInfo.x - rect.x : 0;\n        var dy = v ? positionInfo.y - rect.y : 0;\n\n        el.attr('position', boundingMode === 'raw' ? [dx, dy] : [elPos[0] + dx, elPos[1] + dy]);\n    };\n\n    /**\n     * @param {Object} option Contains some of the properties in HV_NAMES.\n     * @param {number} hvIdx 0: horizontal; 1: vertical.\n     */\n    layout.sizeCalculable = function (option, hvIdx) {\n        return option[HV_NAMES[hvIdx][0]] != null\n            || (option[HV_NAMES[hvIdx][1]] != null && option[HV_NAMES[hvIdx][2]] != null);\n    };\n\n    /**\n     * Consider Case:\n     * When defulat option has {left: 0, width: 100}, and we set {right: 0}\n     * through setOption or media query, using normal zrUtil.merge will cause\n     * {right: 0} does not take effect.\n     *\n     * @example\n     * ComponentModel.extend({\n     *     init: function () {\n     *         ...\n     *         var inputPositionParams = layout.getLayoutParams(option);\n     *         this.mergeOption(inputPositionParams);\n     *     },\n     *     mergeOption: function (newOption) {\n     *         newOption && zrUtil.merge(thisOption, newOption, true);\n     *         layout.mergeLayoutParam(thisOption, newOption);\n     *     }\n     * });\n     *\n     * @param {Object} targetOption\n     * @param {Object} newOption\n     * @param {Object|string} [opt]\n     * @param {boolean|Array.<boolean>} [opt.ignoreSize=false] Some component must has width and height.\n     */\n    layout.mergeLayoutParam = function (targetOption, newOption, opt) {\n        !zrUtil.isObject(opt) && (opt = {});\n\n        var ignoreSize = opt.ignoreSize;\n        !zrUtil.isArray(ignoreSize) && (ignoreSize = [ignoreSize, ignoreSize]);\n\n        var hResult = merge(HV_NAMES[0], 0);\n        var vResult = merge(HV_NAMES[1], 1);\n\n        copy(HV_NAMES[0], targetOption, hResult);\n        copy(HV_NAMES[1], targetOption, vResult);\n\n        function merge(names, hvIdx) {\n            var newParams = {};\n            var newValueCount = 0;\n            var merged = {};\n            var mergedValueCount = 0;\n            var enoughParamNumber = 2;\n\n            each(names, function (name) {\n                merged[name] = targetOption[name];\n            });\n            each(names, function (name) {\n                // Consider case: newOption.width is null, which is\n                // set by user for removing width setting.\n                hasProp(newOption, name) && (newParams[name] = merged[name] = newOption[name]);\n                hasValue(newParams, name) && newValueCount++;\n                hasValue(merged, name) && mergedValueCount++;\n            });\n\n            if (ignoreSize[hvIdx]) {\n                // Only one of left/right is premitted to exist.\n                if (hasValue(newOption, names[1])) {\n                    merged[names[2]] = null;\n                }\n                else if (hasValue(newOption, names[2])) {\n                    merged[names[1]] = null;\n                }\n                return merged;\n            }\n\n            // Case: newOption: {width: ..., right: ...},\n            // or targetOption: {right: ...} and newOption: {width: ...},\n            // There is no conflict when merged only has params count\n            // little than enoughParamNumber.\n            if (mergedValueCount === enoughParamNumber || !newValueCount) {\n                return merged;\n            }\n            // Case: newOption: {width: ..., right: ...},\n            // Than we can make sure user only want those two, and ignore\n            // all origin params in targetOption.\n            else if (newValueCount >= enoughParamNumber) {\n                return newParams;\n            }\n            else {\n                // Chose another param from targetOption by priority.\n                for (var i = 0; i < names.length; i++) {\n                    var name = names[i];\n                    if (!hasProp(newParams, name) && hasProp(targetOption, name)) {\n                        newParams[name] = targetOption[name];\n                        break;\n                    }\n                }\n                return newParams;\n            }\n        }\n\n        function hasProp(obj, name) {\n            return obj.hasOwnProperty(name);\n        }\n\n        function hasValue(obj, name) {\n            return obj[name] != null && obj[name] !== 'auto';\n        }\n\n        function copy(names, target, source) {\n            each(names, function (name) {\n                target[name] = source[name];\n            });\n        }\n    };\n\n    /**\n     * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n     * @param {Object} source\n     * @return {Object} Result contains those props.\n     */\n    layout.getLayoutParams = function (source) {\n        return layout.copyLayoutParams({}, source);\n    };\n\n    /**\n     * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n     * @param {Object} source\n     * @return {Object} Result contains those props.\n     */\n    layout.copyLayoutParams = function (target, source) {\n        source && target && each(LOCATION_PARAMS, function (name) {\n            source.hasOwnProperty(name) && (target[name] = source[name]);\n        });\n        return target;\n    };\n\n    module.exports = layout;\n\n\n\n/***/ }),\n/* 172 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var textWidthCache = {};\n    var textWidthCacheCounter = 0;\n    var TEXT_CACHE_MAX = 5000;\n\n    var util = __webpack_require__(158);\n    var BoundingRect = __webpack_require__(169);\n    var retrieve = util.retrieve;\n\n    function getTextWidth(text, textFont) {\n        var key = text + ':' + textFont;\n        if (textWidthCache[key]) {\n            return textWidthCache[key];\n        }\n\n        var textLines = (text + '').split('\\n');\n        var width = 0;\n\n        for (var i = 0, l = textLines.length; i < l; i++) {\n            // measureText 可以被覆盖以兼容不支持 Canvas 的环境\n            width = Math.max(textContain.measureText(textLines[i], textFont).width, width);\n        }\n\n        if (textWidthCacheCounter > TEXT_CACHE_MAX) {\n            textWidthCacheCounter = 0;\n            textWidthCache = {};\n        }\n        textWidthCacheCounter++;\n        textWidthCache[key] = width;\n\n        return width;\n    }\n\n    function getTextRect(text, textFont, textAlign, textBaseline) {\n        var textLineLen = ((text || '') + '').split('\\n').length;\n\n        var width = getTextWidth(text, textFont);\n        // FIXME 高度计算比较粗暴\n        var lineHeight = getTextWidth('国', textFont);\n        var height = textLineLen * lineHeight;\n\n        var rect = new BoundingRect(0, 0, width, height);\n        // Text has a special line height property\n        rect.lineHeight = lineHeight;\n\n        switch (textBaseline) {\n            case 'bottom':\n            case 'alphabetic':\n                rect.y -= lineHeight;\n                break;\n            case 'middle':\n                rect.y -= lineHeight / 2;\n                break;\n            // case 'hanging':\n            // case 'top':\n        }\n\n        // FIXME Right to left language\n        switch (textAlign) {\n            case 'end':\n            case 'right':\n                rect.x -= rect.width;\n                break;\n            case 'center':\n                rect.x -= rect.width / 2;\n                break;\n            // case 'start':\n            // case 'left':\n        }\n\n        return rect;\n    }\n\n    function adjustTextPositionOnRect(textPosition, rect, textRect, distance) {\n\n        var x = rect.x;\n        var y = rect.y;\n\n        var height = rect.height;\n        var width = rect.width;\n\n        var textHeight = textRect.height;\n\n        var lineHeight = textRect.lineHeight;\n        var halfHeight = height / 2 - textHeight / 2 + lineHeight;\n\n        var textAlign = 'left';\n\n        switch (textPosition) {\n            case 'left':\n                x -= distance;\n                y += halfHeight;\n                textAlign = 'right';\n                break;\n            case 'right':\n                x += distance + width;\n                y += halfHeight;\n                textAlign = 'left';\n                break;\n            case 'top':\n                x += width / 2;\n                y -= distance + textHeight - lineHeight;\n                textAlign = 'center';\n                break;\n            case 'bottom':\n                x += width / 2;\n                y += height + distance + lineHeight;\n                textAlign = 'center';\n                break;\n            case 'inside':\n                x += width / 2;\n                y += halfHeight;\n                textAlign = 'center';\n                break;\n            case 'insideLeft':\n                x += distance;\n                y += halfHeight;\n                textAlign = 'left';\n                break;\n            case 'insideRight':\n                x += width - distance;\n                y += halfHeight;\n                textAlign = 'right';\n                break;\n            case 'insideTop':\n                x += width / 2;\n                y += distance + lineHeight;\n                textAlign = 'center';\n                break;\n            case 'insideBottom':\n                x += width / 2;\n                y += height - textHeight - distance + lineHeight;\n                textAlign = 'center';\n                break;\n            case 'insideTopLeft':\n                x += distance;\n                y += distance + lineHeight;\n                textAlign = 'left';\n                break;\n            case 'insideTopRight':\n                x += width - distance;\n                y += distance + lineHeight;\n                textAlign = 'right';\n                break;\n            case 'insideBottomLeft':\n                x += distance;\n                y += height - textHeight - distance + lineHeight;\n                break;\n            case 'insideBottomRight':\n                x += width - distance;\n                y += height - textHeight - distance + lineHeight;\n                textAlign = 'right';\n                break;\n        }\n\n        return {\n            x: x,\n            y: y,\n            textAlign: textAlign,\n            textBaseline: 'alphabetic'\n        };\n    }\n\n    /**\n     * Show ellipsis if overflow.\n     *\n     * @param  {string} text\n     * @param  {string} containerWidth\n     * @param  {string} textFont\n     * @param  {number} [ellipsis='...']\n     * @param  {Object} [options]\n     * @param  {number} [options.maxIterations=3]\n     * @param  {number} [options.minChar=0] If truncate result are less\n     *                  then minChar, ellipsis will not show, which is\n     *                  better for user hint in some cases.\n     * @param  {number} [options.placeholder=''] When all truncated, use the placeholder.\n     * @return {string}\n     */\n    function truncateText(text, containerWidth, textFont, ellipsis, options) {\n        if (!containerWidth) {\n            return '';\n        }\n\n        options = options || {};\n\n        ellipsis = retrieve(ellipsis, '...');\n        var maxIterations = retrieve(options.maxIterations, 2);\n        var minChar = retrieve(options.minChar, 0);\n        // FIXME\n        // Other languages?\n        var cnCharWidth = getTextWidth('国', textFont);\n        // FIXME\n        // Consider proportional font?\n        var ascCharWidth = getTextWidth('a', textFont);\n        var placeholder = retrieve(options.placeholder, '');\n\n        // Example 1: minChar: 3, text: 'asdfzxcv', truncate result: 'asdf', but not: 'a...'.\n        // Example 2: minChar: 3, text: '维度', truncate result: '维', but not: '...'.\n        var contentWidth = containerWidth = Math.max(0, containerWidth - 1); // Reserve some gap.\n        for (var i = 0; i < minChar && contentWidth >= ascCharWidth; i++) {\n            contentWidth -= ascCharWidth;\n        }\n\n        var ellipsisWidth = getTextWidth(ellipsis);\n        if (ellipsisWidth > contentWidth) {\n            ellipsis = '';\n            ellipsisWidth = 0;\n        }\n\n        contentWidth = containerWidth - ellipsisWidth;\n\n        var textLines = (text + '').split('\\n');\n\n        for (var i = 0, len = textLines.length; i < len; i++) {\n            var textLine = textLines[i];\n            var lineWidth = getTextWidth(textLine, textFont);\n\n            if (lineWidth <= containerWidth) {\n                continue;\n            }\n\n            for (var j = 0;; j++) {\n                if (lineWidth <= contentWidth || j >= maxIterations) {\n                    textLine += ellipsis;\n                    break;\n                }\n\n                var subLength = j === 0\n                    ? estimateLength(textLine, contentWidth, ascCharWidth, cnCharWidth)\n                    : lineWidth > 0\n                    ? Math.floor(textLine.length * contentWidth / lineWidth)\n                    : 0;\n\n                textLine = textLine.substr(0, subLength);\n                lineWidth = getTextWidth(textLine, textFont);\n            }\n\n            if (textLine === '') {\n                textLine = placeholder;\n            }\n\n            textLines[i] = textLine;\n        }\n\n        return textLines.join('\\n');\n    }\n\n    function estimateLength(text, contentWidth, ascCharWidth, cnCharWidth) {\n        var width = 0;\n        var i = 0;\n        for (var len = text.length; i < len && width < contentWidth; i++) {\n            var charCode = text.charCodeAt(i);\n            width += (0 <= charCode && charCode <= 127) ? ascCharWidth : cnCharWidth;\n        }\n        return i;\n    }\n\n    var textContain = {\n\n        getWidth: getTextWidth,\n\n        getBoundingRect: getTextRect,\n\n        adjustTextPositionOnRect: adjustTextPositionOnRect,\n\n        truncateText: truncateText,\n\n        measureText: function (text, textFont) {\n            var ctx = util.getContext();\n            ctx.font = textFont || '12px sans-serif';\n            return ctx.measureText(text);\n        }\n    };\n\n    module.exports = textContain;\n\n\n/***/ }),\n/* 173 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var OrdinalScale = __webpack_require__(347);\n    var IntervalScale = __webpack_require__(193);\n    __webpack_require__(348);\n    __webpack_require__(346);\n    var Scale = __webpack_require__(181);\n\n    var numberUtil = __webpack_require__(161);\n    var zrUtil = __webpack_require__(158);\n    var textContain = __webpack_require__(172);\n    var axisHelper = {};\n\n    /**\n     * Get axis scale extent before niced.\n     * Item of returned array can only be number (including Infinity and NaN).\n     */\n    axisHelper.getScaleExtent = function (scale, model) {\n        var scaleType = scale.type;\n\n        var min = model.getMin();\n        var max = model.getMax();\n        var fixMin = min != null;\n        var fixMax = max != null;\n        var originalExtent = scale.getExtent();\n\n        var axisDataLen;\n        var boundaryGap;\n        var span;\n        if (scaleType === 'ordinal') {\n            axisDataLen = (model.get('data') || []).length;\n        }\n        else {\n            boundaryGap = model.get('boundaryGap');\n            if (!zrUtil.isArray(boundaryGap)) {\n                boundaryGap = [boundaryGap || 0, boundaryGap || 0];\n            }\n            if (typeof boundaryGap[0] === 'boolean') {\n                if (__DEV__) {\n                    console.warn('Boolean type for boundaryGap is only '\n                        + 'allowed for ordinal axis. Please use string in '\n                        + 'percentage instead, e.g., \"20%\". Currently, '\n                        + 'boundaryGap is set to be 0.');\n                }\n                boundaryGap = [0, 0];\n            }\n            boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], 1);\n            boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], 1);\n            span = (originalExtent[1] - originalExtent[0])\n                || Math.abs(originalExtent[0]);\n        }\n\n        // Notice: When min/max is not set (that is, when there are null/undefined,\n        // which is the most common case), these cases should be ensured:\n        // (1) For 'ordinal', show all axis.data.\n        // (2) For others:\n        //      + `boundaryGap` is applied (if min/max set, boundaryGap is\n        //      disabled).\n        //      + If `needCrossZero`, min/max should be zero, otherwise, min/max should\n        //      be the result that originalExtent enlarged by boundaryGap.\n        // (3) If no data, it should be ensured that `scale.setBlank` is set.\n\n        // FIXME\n        // (1) When min/max is 'dataMin' or 'dataMax', should boundaryGap be able to used?\n        // (2) When `needCrossZero` and all data is positive/negative, should it be ensured\n        // that the results processed by boundaryGap are positive/negative?\n\n        if (min == null) {\n            min = scaleType === 'ordinal'\n                ? (axisDataLen ? 0 : NaN)\n                : originalExtent[0] - boundaryGap[0] * span;\n        }\n        if (max == null) {\n            max = scaleType === 'ordinal'\n                ? (axisDataLen ? axisDataLen - 1 : NaN)\n                : originalExtent[1] + boundaryGap[1] * span;\n        }\n\n        if (min === 'dataMin') {\n            min = originalExtent[0];\n        }\n        if (max === 'dataMax') {\n            max = originalExtent[1];\n        }\n\n        (min == null || !isFinite(min)) && (min = NaN);\n        (max == null || !isFinite(max)) && (max = NaN);\n\n        scale.setBlank(zrUtil.eqNaN(min) || zrUtil.eqNaN(max));\n\n        // Evaluate if axis needs cross zero\n        if (model.getNeedCrossZero()) {\n            // Axis is over zero and min is not set\n            if (min > 0 && max > 0 && !fixMin) {\n                min = 0;\n            }\n            // Axis is under zero and max is not set\n            if (min < 0 && max < 0 && !fixMax) {\n                max = 0;\n            }\n        }\n\n        return [min, max];\n    };\n\n    axisHelper.niceScaleExtent = function (scale, model) {\n        var extent = axisHelper.getScaleExtent(scale, model);\n        var fixMin = model.getMin() != null;\n        var fixMax = model.getMax() != null;\n        var splitNumber = model.get('splitNumber');\n\n        if (scale.type === 'log') {\n            scale.base = model.get('logBase');\n        }\n\n        scale.setExtent(extent[0], extent[1]);\n        scale.niceExtent(splitNumber, fixMin, fixMax);\n\n        // Use minInterval to constraint the calculated interval.\n        // If calculated interval is less than minInterval. increase the interval quantity until\n        // it is larger than minInterval.\n        // For example:\n        //  minInterval is 1, calculated interval is 0.2, so increase it to be 1. In this way we can get\n        //  an integer axis.\n        var minInterval = model.get('minInterval');\n        if (isFinite(minInterval) && !fixMin && !fixMax && scale.type === 'interval') {\n            var interval = scale.getInterval();\n            var intervalScale = Math.max(Math.abs(interval), minInterval) / interval;\n            // while (interval < minInterval) {\n            //     var quantity = numberUtil.quantity(interval);\n            //     interval = quantity * 10;\n            //     scaleQuantity *= 10;\n            // }\n            extent = scale.getExtent();\n            var origin = (extent[1] + extent[0]) / 2;\n            scale.setExtent(\n                intervalScale * (extent[0] - origin) + origin,\n                intervalScale * (extent[1] - origin) + origin\n            );\n            scale.niceExtent(splitNumber);\n        }\n\n        // If some one specified the min, max. And the default calculated interval\n        // is not good enough. He can specify the interval. It is often appeared\n        // in angle axis with angle 0 - 360. Interval calculated in interval scale is hard\n        // to be 60.\n        // FIXME\n        var interval = model.get('interval');\n        if (interval != null) {\n            scale.setInterval && scale.setInterval(interval);\n        }\n    };\n\n    /**\n     * @param {module:echarts/model/Model} model\n     * @param {string} [axisType] Default retrieve from model.type\n     * @return {module:echarts/scale/*}\n     */\n    axisHelper.createScaleByModel = function(model, axisType) {\n        axisType = axisType || model.get('type');\n        if (axisType) {\n            switch (axisType) {\n                // Buildin scale\n                case 'category':\n                    return new OrdinalScale(\n                        model.getCategories(), [Infinity, -Infinity]\n                    );\n                case 'value':\n                    return new IntervalScale();\n                // Extended scale, like time and log\n                default:\n                    return (Scale.getClass(axisType) || IntervalScale).create(model);\n            }\n        }\n    };\n\n    /**\n     * Check if the axis corss 0\n     */\n    axisHelper.ifAxisCrossZero = function (axis) {\n        var dataExtent = axis.scale.getExtent();\n        var min = dataExtent[0];\n        var max = dataExtent[1];\n        return !((min > 0 && max > 0) || (min < 0 && max < 0));\n    };\n\n    /**\n     * @param {Array.<number>} tickCoords In axis self coordinate.\n     * @param {Array.<string>} labels\n     * @param {string} font\n     * @param {boolean} isAxisHorizontal\n     * @return {number}\n     */\n    axisHelper.getAxisLabelInterval = function (tickCoords, labels, font, isAxisHorizontal) {\n        // FIXME\n        // 不同角的axis和label，不只是horizontal和vertical.\n\n        var textSpaceTakenRect;\n        var autoLabelInterval = 0;\n        var accumulatedLabelInterval = 0;\n\n        var step = 1;\n        if (labels.length > 40) {\n            // Simple optimization for large amount of labels\n            step = Math.floor(labels.length / 40);\n        }\n\n        for (var i = 0; i < tickCoords.length; i += step) {\n            var tickCoord = tickCoords[i];\n            var rect = textContain.getBoundingRect(\n                labels[i], font, 'center', 'top'\n            );\n            rect[isAxisHorizontal ? 'x' : 'y'] += tickCoord;\n            // FIXME Magic number 1.5\n            rect[isAxisHorizontal ? 'width' : 'height'] *= 1.3;\n            if (!textSpaceTakenRect) {\n                textSpaceTakenRect = rect.clone();\n            }\n            // There is no space for current label;\n            else if (textSpaceTakenRect.intersect(rect)) {\n                accumulatedLabelInterval++;\n                autoLabelInterval = Math.max(autoLabelInterval, accumulatedLabelInterval);\n            }\n            else {\n                textSpaceTakenRect.union(rect);\n                // Reset\n                accumulatedLabelInterval = 0;\n            }\n        }\n        if (autoLabelInterval === 0 && step > 1) {\n            return step;\n        }\n        return (autoLabelInterval + 1) * step - 1;\n    };\n\n    /**\n     * @param {Object} axis\n     * @param {Function} labelFormatter\n     * @return {Array.<string>}\n     */\n    axisHelper.getFormattedLabels = function (axis, labelFormatter) {\n        var scale = axis.scale;\n        var labels = scale.getTicksLabels();\n        var ticks = scale.getTicks();\n        if (typeof labelFormatter === 'string') {\n            labelFormatter = (function (tpl) {\n                return function (val) {\n                    return tpl.replace('{value}', val != null ? val : '');\n                };\n            })(labelFormatter);\n            // Consider empty array\n            return zrUtil.map(labels, labelFormatter);\n        }\n        else if (typeof labelFormatter === 'function') {\n            return zrUtil.map(ticks, function (tick, idx) {\n                return labelFormatter(\n                    axisHelper.getAxisRawValue(axis, tick),\n                    idx\n                );\n            }, this);\n        }\n        else {\n            return labels;\n        }\n    };\n\n    axisHelper.getAxisRawValue = function (axis, value) {\n        // In category axis with data zoom, tick is not the original\n        // index of axis.data. So tick should not be exposed to user\n        // in category axis.\n        return axis.type === 'category' ? axis.scale.getLabel(value) : value;\n    };\n\n    module.exports = axisHelper;\n\n\n/***/ }),\n/* 174 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 曲线辅助模块\n * @module zrender/core/curve\n * @author pissang(https://www.github.com/pissang)\n */\n\n\n    var vec2 = __webpack_require__(163);\n    var v2Create = vec2.create;\n    var v2DistSquare = vec2.distSquare;\n    var mathPow = Math.pow;\n    var mathSqrt = Math.sqrt;\n\n    var EPSILON = 1e-8;\n    var EPSILON_NUMERIC = 1e-4;\n\n    var THREE_SQRT = mathSqrt(3);\n    var ONE_THIRD = 1 / 3;\n\n    // 临时变量\n    var _v0 = v2Create();\n    var _v1 = v2Create();\n    var _v2 = v2Create();\n    // var _v3 = vec2.create();\n\n    function isAroundZero(val) {\n        return val > -EPSILON && val < EPSILON;\n    }\n    function isNotAroundZero(val) {\n        return val > EPSILON || val < -EPSILON;\n    }\n    /**\n     * 计算三次贝塞尔值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @return {number}\n     */\n    function cubicAt(p0, p1, p2, p3, t) {\n        var onet = 1 - t;\n        return onet * onet * (onet * p0 + 3 * t * p1)\n             + t * t * (t * p3 + 3 * onet * p2);\n    }\n\n    /**\n     * 计算三次贝塞尔导数值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @return {number}\n     */\n    function cubicDerivativeAt(p0, p1, p2, p3, t) {\n        var onet = 1 - t;\n        return 3 * (\n            ((p1 - p0) * onet + 2 * (p2 - p1) * t) * onet\n            + (p3 - p2) * t * t\n        );\n    }\n\n    /**\n     * 计算三次贝塞尔方程根，使用盛金公式\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} val\n     * @param  {Array.<number>} roots\n     * @return {number} 有效根数目\n     */\n    function cubicRootAt(p0, p1, p2, p3, val, roots) {\n        // Evaluate roots of cubic functions\n        var a = p3 + 3 * (p1 - p2) - p0;\n        var b = 3 * (p2 - p1 * 2 + p0);\n        var c = 3 * (p1  - p0);\n        var d = p0 - val;\n\n        var A = b * b - 3 * a * c;\n        var B = b * c - 9 * a * d;\n        var C = c * c - 3 * b * d;\n\n        var n = 0;\n\n        if (isAroundZero(A) && isAroundZero(B)) {\n            if (isAroundZero(b)) {\n                roots[0] = 0;\n            }\n            else {\n                var t1 = -c / b;  //t1, t2, t3, b is not zero\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = B * B - 4 * A * C;\n\n            if (isAroundZero(disc)) {\n                var K = B / A;\n                var t1 = -b / a + K;  // t1, a is not zero\n                var t2 = -K / 2;  // t2, t3\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var Y1 = A * b + 1.5 * a * (-B + discSqrt);\n                var Y2 = A * b + 1.5 * a * (-B - discSqrt);\n                if (Y1 < 0) {\n                    Y1 = -mathPow(-Y1, ONE_THIRD);\n                }\n                else {\n                    Y1 = mathPow(Y1, ONE_THIRD);\n                }\n                if (Y2 < 0) {\n                    Y2 = -mathPow(-Y2, ONE_THIRD);\n                }\n                else {\n                    Y2 = mathPow(Y2, ONE_THIRD);\n                }\n                var t1 = (-b - (Y1 + Y2)) / (3 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n            else {\n                var T = (2 * A * b - 3 * a * B) / (2 * mathSqrt(A * A * A));\n                var theta = Math.acos(T) / 3;\n                var ASqrt = mathSqrt(A);\n                var tmp = Math.cos(theta);\n\n                var t1 = (-b - 2 * ASqrt * tmp) / (3 * a);\n                var t2 = (-b + ASqrt * (tmp + THREE_SQRT * Math.sin(theta))) / (3 * a);\n                var t3 = (-b + ASqrt * (tmp - THREE_SQRT * Math.sin(theta))) / (3 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n                if (t3 >= 0 && t3 <= 1) {\n                    roots[n++] = t3;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 计算三次贝塞尔方程极限值的位置\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {Array.<number>} extrema\n     * @return {number} 有效数目\n     */\n    function cubicExtrema(p0, p1, p2, p3, extrema) {\n        var b = 6 * p2 - 12 * p1 + 6 * p0;\n        var a = 9 * p1 + 3 * p3 - 3 * p0 - 9 * p2;\n        var c = 3 * p1 - 3 * p0;\n\n        var n = 0;\n        if (isAroundZero(a)) {\n            if (isNotAroundZero(b)) {\n                var t1 = -c / b;\n                if (t1 >= 0 && t1 <=1) {\n                    extrema[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = b * b - 4 * a * c;\n            if (isAroundZero(disc)) {\n                extrema[0] = -b / (2 * a);\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var t1 = (-b + discSqrt) / (2 * a);\n                var t2 = (-b - discSqrt) / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    extrema[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    extrema[n++] = t2;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 细分三次贝塞尔曲线\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @param  {Array.<number>} out\n     */\n    function cubicSubdivide(p0, p1, p2, p3, t, out) {\n        var p01 = (p1 - p0) * t + p0;\n        var p12 = (p2 - p1) * t + p1;\n        var p23 = (p3 - p2) * t + p2;\n\n        var p012 = (p12 - p01) * t + p01;\n        var p123 = (p23 - p12) * t + p12;\n\n        var p0123 = (p123 - p012) * t + p012;\n        // Seg0\n        out[0] = p0;\n        out[1] = p01;\n        out[2] = p012;\n        out[3] = p0123;\n        // Seg1\n        out[4] = p0123;\n        out[5] = p123;\n        out[6] = p23;\n        out[7] = p3;\n    }\n\n    /**\n     * 投射点到三次贝塞尔曲线上，返回投射距离。\n     * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x3\n     * @param {number} y3\n     * @param {number} x\n     * @param {number} y\n     * @param {Array.<number>} [out] 投射点\n     * @return {number}\n     */\n    function cubicProjectPoint(\n        x0, y0, x1, y1, x2, y2, x3, y3,\n        x, y, out\n    ) {\n        // http://pomax.github.io/bezierinfo/#projections\n        var t;\n        var interval = 0.005;\n        var d = Infinity;\n        var prev;\n        var next;\n        var d1;\n        var d2;\n\n        _v0[0] = x;\n        _v0[1] = y;\n\n        // 先粗略估计一下可能的最小距离的 t 值\n        // PENDING\n        for (var _t = 0; _t < 1; _t += 0.05) {\n            _v1[0] = cubicAt(x0, x1, x2, x3, _t);\n            _v1[1] = cubicAt(y0, y1, y2, y3, _t);\n            d1 = v2DistSquare(_v0, _v1);\n            if (d1 < d) {\n                t = _t;\n                d = d1;\n            }\n        }\n        d = Infinity;\n\n        // At most 32 iteration\n        for (var i = 0; i < 32; i++) {\n            if (interval < EPSILON_NUMERIC) {\n                break;\n            }\n            prev = t - interval;\n            next = t + interval;\n            // t - interval\n            _v1[0] = cubicAt(x0, x1, x2, x3, prev);\n            _v1[1] = cubicAt(y0, y1, y2, y3, prev);\n\n            d1 = v2DistSquare(_v1, _v0);\n\n            if (prev >= 0 && d1 < d) {\n                t = prev;\n                d = d1;\n            }\n            else {\n                // t + interval\n                _v2[0] = cubicAt(x0, x1, x2, x3, next);\n                _v2[1] = cubicAt(y0, y1, y2, y3, next);\n                d2 = v2DistSquare(_v2, _v0);\n\n                if (next <= 1 && d2 < d) {\n                    t = next;\n                    d = d2;\n                }\n                else {\n                    interval *= 0.5;\n                }\n            }\n        }\n        // t\n        if (out) {\n            out[0] = cubicAt(x0, x1, x2, x3, t);\n            out[1] = cubicAt(y0, y1, y2, y3, t);\n        }\n        // console.log(interval, i);\n        return mathSqrt(d);\n    }\n\n    /**\n     * 计算二次方贝塞尔值\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @return {number}\n     */\n    function quadraticAt(p0, p1, p2, t) {\n        var onet = 1 - t;\n        return onet * (onet * p0 + 2 * t * p1) + t * t * p2;\n    }\n\n    /**\n     * 计算二次方贝塞尔导数值\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @return {number}\n     */\n    function quadraticDerivativeAt(p0, p1, p2, t) {\n        return 2 * ((1 - t) * (p1 - p0) + t * (p2 - p1));\n    }\n\n    /**\n     * 计算二次方贝塞尔方程根\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @param  {Array.<number>} roots\n     * @return {number} 有效根数目\n     */\n    function quadraticRootAt(p0, p1, p2, val, roots) {\n        var a = p0 - 2 * p1 + p2;\n        var b = 2 * (p1 - p0);\n        var c = p0 - val;\n\n        var n = 0;\n        if (isAroundZero(a)) {\n            if (isNotAroundZero(b)) {\n                var t1 = -c / b;\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = b * b - 4 * a * c;\n            if (isAroundZero(disc)) {\n                var t1 = -b / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var t1 = (-b + discSqrt) / (2 * a);\n                var t2 = (-b - discSqrt) / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 计算二次贝塞尔方程极限值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @return {number}\n     */\n    function quadraticExtremum(p0, p1, p2) {\n        var divider = p0 + p2 - 2 * p1;\n        if (divider === 0) {\n            // p1 is center of p0 and p2\n            return 0.5;\n        }\n        else {\n            return (p0 - p1) / divider;\n        }\n    }\n\n    /**\n     * 细分二次贝塞尔曲线\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @param  {Array.<number>} out\n     */\n    function quadraticSubdivide(p0, p1, p2, t, out) {\n        var p01 = (p1 - p0) * t + p0;\n        var p12 = (p2 - p1) * t + p1;\n        var p012 = (p12 - p01) * t + p01;\n\n        // Seg0\n        out[0] = p0;\n        out[1] = p01;\n        out[2] = p012;\n\n        // Seg1\n        out[3] = p012;\n        out[4] = p12;\n        out[5] = p2;\n    }\n\n    /**\n     * 投射点到二次贝塞尔曲线上，返回投射距离。\n     * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x\n     * @param {number} y\n     * @param {Array.<number>} out 投射点\n     * @return {number}\n     */\n    function quadraticProjectPoint(\n        x0, y0, x1, y1, x2, y2,\n        x, y, out\n    ) {\n        // http://pomax.github.io/bezierinfo/#projections\n        var t;\n        var interval = 0.005;\n        var d = Infinity;\n\n        _v0[0] = x;\n        _v0[1] = y;\n\n        // 先粗略估计一下可能的最小距离的 t 值\n        // PENDING\n        for (var _t = 0; _t < 1; _t += 0.05) {\n            _v1[0] = quadraticAt(x0, x1, x2, _t);\n            _v1[1] = quadraticAt(y0, y1, y2, _t);\n            var d1 = v2DistSquare(_v0, _v1);\n            if (d1 < d) {\n                t = _t;\n                d = d1;\n            }\n        }\n        d = Infinity;\n\n        // At most 32 iteration\n        for (var i = 0; i < 32; i++) {\n            if (interval < EPSILON_NUMERIC) {\n                break;\n            }\n            var prev = t - interval;\n            var next = t + interval;\n            // t - interval\n            _v1[0] = quadraticAt(x0, x1, x2, prev);\n            _v1[1] = quadraticAt(y0, y1, y2, prev);\n\n            var d1 = v2DistSquare(_v1, _v0);\n\n            if (prev >= 0 && d1 < d) {\n                t = prev;\n                d = d1;\n            }\n            else {\n                // t + interval\n                _v2[0] = quadraticAt(x0, x1, x2, next);\n                _v2[1] = quadraticAt(y0, y1, y2, next);\n                var d2 = v2DistSquare(_v2, _v0);\n                if (next <= 1 && d2 < d) {\n                    t = next;\n                    d = d2;\n                }\n                else {\n                    interval *= 0.5;\n                }\n            }\n        }\n        // t\n        if (out) {\n            out[0] = quadraticAt(x0, x1, x2, t);\n            out[1] = quadraticAt(y0, y1, y2, t);\n        }\n        // console.log(interval, i);\n        return mathSqrt(d);\n    }\n\n    module.exports = {\n\n        cubicAt: cubicAt,\n\n        cubicDerivativeAt: cubicDerivativeAt,\n\n        cubicRootAt: cubicRootAt,\n\n        cubicExtrema: cubicExtrema,\n\n        cubicSubdivide: cubicSubdivide,\n\n        cubicProjectPoint: cubicProjectPoint,\n\n        quadraticAt: quadraticAt,\n\n        quadraticDerivativeAt: quadraticDerivativeAt,\n\n        quadraticRootAt: quadraticRootAt,\n\n        quadraticExtremum: quadraticExtremum,\n\n        quadraticSubdivide: quadraticSubdivide,\n\n        quadraticProjectPoint: quadraticProjectPoint\n    };\n\n\n/***/ }),\n/* 175 */\n/***/ (function(module, exports) {\n\n\n    var ArrayCtor = typeof Float32Array === 'undefined'\n        ? Array\n        : Float32Array;\n    /**\n     * 3x2矩阵操作类\n     * @exports zrender/tool/matrix\n     */\n    var matrix = {\n        /**\n         * 创建一个单位矩阵\n         * @return {Float32Array|Array.<number>}\n         */\n        create : function() {\n            var out = new ArrayCtor(6);\n            matrix.identity(out);\n\n            return out;\n        },\n        /**\n         * 设置矩阵为单位矩阵\n         * @param {Float32Array|Array.<number>} out\n         */\n        identity : function(out) {\n            out[0] = 1;\n            out[1] = 0;\n            out[2] = 0;\n            out[3] = 1;\n            out[4] = 0;\n            out[5] = 0;\n            return out;\n        },\n        /**\n         * 复制矩阵\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} m\n         */\n        copy: function(out, m) {\n            out[0] = m[0];\n            out[1] = m[1];\n            out[2] = m[2];\n            out[3] = m[3];\n            out[4] = m[4];\n            out[5] = m[5];\n            return out;\n        },\n        /**\n         * 矩阵相乘\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} m1\n         * @param {Float32Array|Array.<number>} m2\n         */\n        mul : function (out, m1, m2) {\n            // Consider matrix.mul(m, m2, m);\n            // where out is the same as m2.\n            // So use temp variable to escape error.\n            var out0 = m1[0] * m2[0] + m1[2] * m2[1];\n            var out1 = m1[1] * m2[0] + m1[3] * m2[1];\n            var out2 = m1[0] * m2[2] + m1[2] * m2[3];\n            var out3 = m1[1] * m2[2] + m1[3] * m2[3];\n            var out4 = m1[0] * m2[4] + m1[2] * m2[5] + m1[4];\n            var out5 = m1[1] * m2[4] + m1[3] * m2[5] + m1[5];\n            out[0] = out0;\n            out[1] = out1;\n            out[2] = out2;\n            out[3] = out3;\n            out[4] = out4;\n            out[5] = out5;\n            return out;\n        },\n        /**\n         * 平移变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {Float32Array|Array.<number>} v\n         */\n        translate : function(out, a, v) {\n            out[0] = a[0];\n            out[1] = a[1];\n            out[2] = a[2];\n            out[3] = a[3];\n            out[4] = a[4] + v[0];\n            out[5] = a[5] + v[1];\n            return out;\n        },\n        /**\n         * 旋转变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {number} rad\n         */\n        rotate : function(out, a, rad) {\n            var aa = a[0];\n            var ac = a[2];\n            var atx = a[4];\n            var ab = a[1];\n            var ad = a[3];\n            var aty = a[5];\n            var st = Math.sin(rad);\n            var ct = Math.cos(rad);\n\n            out[0] = aa * ct + ab * st;\n            out[1] = -aa * st + ab * ct;\n            out[2] = ac * ct + ad * st;\n            out[3] = -ac * st + ct * ad;\n            out[4] = ct * atx + st * aty;\n            out[5] = ct * aty - st * atx;\n            return out;\n        },\n        /**\n         * 缩放变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {Float32Array|Array.<number>} v\n         */\n        scale : function(out, a, v) {\n            var vx = v[0];\n            var vy = v[1];\n            out[0] = a[0] * vx;\n            out[1] = a[1] * vy;\n            out[2] = a[2] * vx;\n            out[3] = a[3] * vy;\n            out[4] = a[4] * vx;\n            out[5] = a[5] * vy;\n            return out;\n        },\n        /**\n         * 求逆矩阵\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         */\n        invert : function(out, a) {\n\n            var aa = a[0];\n            var ac = a[2];\n            var atx = a[4];\n            var ab = a[1];\n            var ad = a[3];\n            var aty = a[5];\n\n            var det = aa * ad - ab * ac;\n            if (!det) {\n                return null;\n            }\n            det = 1.0 / det;\n\n            out[0] = ad * det;\n            out[1] = -ab * det;\n            out[2] = -ac * det;\n            out[3] = aa * det;\n            out[4] = (ac * aty - ad * atx) * det;\n            out[5] = (ab * atx - aa * aty) * det;\n            return out;\n        }\n    };\n\n    module.exports = matrix;\n\n\n\n/***/ }),\n/* 176 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 事件辅助类\n * @module zrender/core/event\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\n\n\n    var Eventful = __webpack_require__(177);\n    var env = __webpack_require__(167);\n\n    var isDomLevel2 = (typeof window !== 'undefined') && !!window.addEventListener;\n\n    function getBoundingClientRect(el) {\n        // BlackBerry 5, iOS 3 (original iPhone) don't have getBoundingRect\n        return el.getBoundingClientRect ? el.getBoundingClientRect() : {left: 0, top: 0};\n    }\n\n    // `calculate` is optional, default false\n    function clientToLocal(el, e, out, calculate) {\n        out = out || {};\n\n        // According to the W3C Working Draft, offsetX and offsetY should be relative\n        // to the padding edge of the target element. The only browser using this convention\n        // is IE. Webkit uses the border edge, Opera uses the content edge, and FireFox does\n        // not support the properties.\n        // (see http://www.jacklmoore.com/notes/mouse-position/)\n        // In zr painter.dom, padding edge equals to border edge.\n\n        // FIXME\n        // When mousemove event triggered on ec tooltip, target is not zr painter.dom, and\n        // offsetX/Y is relative to e.target, where the calculation of zrX/Y via offsetX/Y\n        // is too complex. So css-transfrom dont support in this case temporarily.\n        if (calculate || !env.canvasSupported) {\n            defaultGetZrXY(el, e, out);\n        }\n        // Caution: In FireFox, layerX/layerY Mouse position relative to the closest positioned\n        // ancestor element, so we should make sure el is positioned (e.g., not position:static).\n        // BTW1, Webkit don't return the same results as FF in non-simple cases (like add\n        // zoom-factor, overflow / opacity layers, transforms ...)\n        // BTW2, (ev.offsetY || ev.pageY - $(ev.target).offset().top) is not correct in preserve-3d.\n        // <https://bugs.jquery.com/ticket/8523#comment:14>\n        // BTW3, In ff, offsetX/offsetY is always 0.\n        else if (env.browser.firefox && e.layerX != null && e.layerX !== e.offsetX) {\n            out.zrX = e.layerX;\n            out.zrY = e.layerY;\n        }\n        // For IE6+, chrome, safari, opera. (When will ff support offsetX?)\n        else if (e.offsetX != null) {\n            out.zrX = e.offsetX;\n            out.zrY = e.offsetY;\n        }\n        // For some other device, e.g., IOS safari.\n        else {\n            defaultGetZrXY(el, e, out);\n        }\n\n        return out;\n    }\n\n    function defaultGetZrXY(el, e, out) {\n        // This well-known method below does not support css transform.\n        var box = getBoundingClientRect(el);\n        out.zrX = e.clientX - box.left;\n        out.zrY = e.clientY - box.top;\n    }\n\n    /**\n     * 如果存在第三方嵌入的一些dom触发的事件，或touch事件，需要转换一下事件坐标.\n     * `calculate` is optional, default false.\n     */\n    function normalizeEvent(el, e, calculate) {\n\n        e = e || window.event;\n\n        if (e.zrX != null) {\n            return e;\n        }\n\n        var eventType = e.type;\n        var isTouch = eventType && eventType.indexOf('touch') >= 0;\n\n        if (!isTouch) {\n            clientToLocal(el, e, e, calculate);\n            e.zrDelta = (e.wheelDelta) ? e.wheelDelta / 120 : -(e.detail || 0) / 3;\n        }\n        else {\n            var touch = eventType != 'touchend'\n                ? e.targetTouches[0]\n                : e.changedTouches[0];\n            touch && clientToLocal(el, touch, e, calculate);\n        }\n\n        return e;\n    }\n\n    function addEventListener(el, name, handler) {\n        if (isDomLevel2) {\n            el.addEventListener(name, handler);\n        }\n        else {\n            el.attachEvent('on' + name, handler);\n        }\n    }\n\n    function removeEventListener(el, name, handler) {\n        if (isDomLevel2) {\n            el.removeEventListener(name, handler);\n        }\n        else {\n            el.detachEvent('on' + name, handler);\n        }\n    }\n\n    /**\n     * preventDefault and stopPropagation.\n     * Notice: do not do that in zrender. Upper application\n     * do that if necessary.\n     *\n     * @memberOf module:zrender/core/event\n     * @method\n     * @param {Event} e : event对象\n     */\n    var stop = isDomLevel2\n        ? function (e) {\n            e.preventDefault();\n            e.stopPropagation();\n            e.cancelBubble = true;\n        }\n        : function (e) {\n            e.returnValue = false;\n            e.cancelBubble = true;\n        };\n\n    module.exports = {\n        clientToLocal: clientToLocal,\n        normalizeEvent: normalizeEvent,\n        addEventListener: addEventListener,\n        removeEventListener: removeEventListener,\n\n        stop: stop,\n        // 做向上兼容\n        Dispatcher: Eventful\n    };\n\n\n\n/***/ }),\n/* 177 */\n/***/ (function(module, exports) {\n\n/**\n * 事件扩展\n * @module zrender/mixin/Eventful\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\n\n\n    var arrySlice = Array.prototype.slice;\n\n    /**\n     * 事件分发器\n     * @alias module:zrender/mixin/Eventful\n     * @constructor\n     */\n    var Eventful = function () {\n        this._$handlers = {};\n    };\n\n    Eventful.prototype = {\n\n        constructor: Eventful,\n\n        /**\n         * 单次触发绑定，trigger后销毁\n         *\n         * @param {string} event 事件名\n         * @param {Function} handler 响应函数\n         * @param {Object} context\n         */\n        one: function (event, handler, context) {\n            var _h = this._$handlers;\n\n            if (!handler || !event) {\n                return this;\n            }\n\n            if (!_h[event]) {\n                _h[event] = [];\n            }\n\n            for (var i = 0; i < _h[event].length; i++) {\n                if (_h[event][i].h === handler) {\n                    return this;\n                }\n            }\n\n            _h[event].push({\n                h: handler,\n                one: true,\n                ctx: context || this\n            });\n\n            return this;\n        },\n\n        /**\n         * 绑定事件\n         * @param {string} event 事件名\n         * @param {Function} handler 事件处理函数\n         * @param {Object} [context]\n         */\n        on: function (event, handler, context) {\n            var _h = this._$handlers;\n\n            if (!handler || !event) {\n                return this;\n            }\n\n            if (!_h[event]) {\n                _h[event] = [];\n            }\n\n            for (var i = 0; i < _h[event].length; i++) {\n                if (_h[event][i].h === handler) {\n                    return this;\n                }\n            }\n\n            _h[event].push({\n                h: handler,\n                one: false,\n                ctx: context || this\n            });\n\n            return this;\n        },\n\n        /**\n         * 是否绑定了事件\n         * @param  {string}  event\n         * @return {boolean}\n         */\n        isSilent: function (event) {\n            var _h = this._$handlers;\n            return _h[event] && _h[event].length;\n        },\n\n        /**\n         * 解绑事件\n         * @param {string} event 事件名\n         * @param {Function} [handler] 事件处理函数\n         */\n        off: function (event, handler) {\n            var _h = this._$handlers;\n\n            if (!event) {\n                this._$handlers = {};\n                return this;\n            }\n\n            if (handler) {\n                if (_h[event]) {\n                    var newList = [];\n                    for (var i = 0, l = _h[event].length; i < l; i++) {\n                        if (_h[event][i]['h'] != handler) {\n                            newList.push(_h[event][i]);\n                        }\n                    }\n                    _h[event] = newList;\n                }\n\n                if (_h[event] && _h[event].length === 0) {\n                    delete _h[event];\n                }\n            }\n            else {\n                delete _h[event];\n            }\n\n            return this;\n        },\n\n        /**\n         * 事件分发\n         *\n         * @param {string} type 事件类型\n         */\n        trigger: function (type) {\n            if (this._$handlers[type]) {\n                var args = arguments;\n                var argLen = args.length;\n\n                if (argLen > 3) {\n                    args = arrySlice.call(args, 1);\n                }\n\n                var _h = this._$handlers[type];\n                var len = _h.length;\n                for (var i = 0; i < len;) {\n                    // Optimize advise from backbone\n                    switch (argLen) {\n                        case 1:\n                            _h[i]['h'].call(_h[i]['ctx']);\n                            break;\n                        case 2:\n                            _h[i]['h'].call(_h[i]['ctx'], args[1]);\n                            break;\n                        case 3:\n                            _h[i]['h'].call(_h[i]['ctx'], args[1], args[2]);\n                            break;\n                        default:\n                            // have more than 2 given arguments\n                            _h[i]['h'].apply(_h[i]['ctx'], args);\n                            break;\n                    }\n\n                    if (_h[i]['one']) {\n                        _h.splice(i, 1);\n                        len--;\n                    }\n                    else {\n                        i++;\n                    }\n                }\n            }\n\n            return this;\n        },\n\n        /**\n         * 带有context的事件分发, 最后一个参数是事件回调的context\n         * @param {string} type 事件类型\n         */\n        triggerWithContext: function (type) {\n            if (this._$handlers[type]) {\n                var args = arguments;\n                var argLen = args.length;\n\n                if (argLen > 4) {\n                    args = arrySlice.call(args, 1, args.length - 1);\n                }\n                var ctx = args[args.length - 1];\n\n                var _h = this._$handlers[type];\n                var len = _h.length;\n                for (var i = 0; i < len;) {\n                    // Optimize advise from backbone\n                    switch (argLen) {\n                        case 1:\n                            _h[i]['h'].call(ctx);\n                            break;\n                        case 2:\n                            _h[i]['h'].call(ctx, args[1]);\n                            break;\n                        case 3:\n                            _h[i]['h'].call(ctx, args[1], args[2]);\n                            break;\n                        default:\n                            // have more than 2 given arguments\n                            _h[i]['h'].apply(ctx, args);\n                            break;\n                    }\n\n                    if (_h[i]['one']) {\n                        _h.splice(i, 1);\n                        len--;\n                    }\n                    else {\n                        i++;\n                    }\n                }\n            }\n\n            return this;\n        }\n    };\n\n    // 对象可以通过 onxxxx 绑定事件\n    /**\n     * @event module:zrender/mixin/Eventful#onclick\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseover\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseout\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousemove\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousewheel\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousedown\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseup\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondrag\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragstart\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragend\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragenter\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragleave\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragover\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondrop\n     * @type {Function}\n     * @default null\n     */\n\n    module.exports = Eventful;\n\n\n\n/***/ }),\n/* 178 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module zrender/tool/color\n */\n\n\n    var LRU = __webpack_require__(227);\n\n    var kCSSColorTable = {\n        'transparent': [0,0,0,0], 'aliceblue': [240,248,255,1],\n        'antiquewhite': [250,235,215,1], 'aqua': [0,255,255,1],\n        'aquamarine': [127,255,212,1], 'azure': [240,255,255,1],\n        'beige': [245,245,220,1], 'bisque': [255,228,196,1],\n        'black': [0,0,0,1], 'blanchedalmond': [255,235,205,1],\n        'blue': [0,0,255,1], 'blueviolet': [138,43,226,1],\n        'brown': [165,42,42,1], 'burlywood': [222,184,135,1],\n        'cadetblue': [95,158,160,1], 'chartreuse': [127,255,0,1],\n        'chocolate': [210,105,30,1], 'coral': [255,127,80,1],\n        'cornflowerblue': [100,149,237,1], 'cornsilk': [255,248,220,1],\n        'crimson': [220,20,60,1], 'cyan': [0,255,255,1],\n        'darkblue': [0,0,139,1], 'darkcyan': [0,139,139,1],\n        'darkgoldenrod': [184,134,11,1], 'darkgray': [169,169,169,1],\n        'darkgreen': [0,100,0,1], 'darkgrey': [169,169,169,1],\n        'darkkhaki': [189,183,107,1], 'darkmagenta': [139,0,139,1],\n        'darkolivegreen': [85,107,47,1], 'darkorange': [255,140,0,1],\n        'darkorchid': [153,50,204,1], 'darkred': [139,0,0,1],\n        'darksalmon': [233,150,122,1], 'darkseagreen': [143,188,143,1],\n        'darkslateblue': [72,61,139,1], 'darkslategray': [47,79,79,1],\n        'darkslategrey': [47,79,79,1], 'darkturquoise': [0,206,209,1],\n        'darkviolet': [148,0,211,1], 'deeppink': [255,20,147,1],\n        'deepskyblue': [0,191,255,1], 'dimgray': [105,105,105,1],\n        'dimgrey': [105,105,105,1], 'dodgerblue': [30,144,255,1],\n        'firebrick': [178,34,34,1], 'floralwhite': [255,250,240,1],\n        'forestgreen': [34,139,34,1], 'fuchsia': [255,0,255,1],\n        'gainsboro': [220,220,220,1], 'ghostwhite': [248,248,255,1],\n        'gold': [255,215,0,1], 'goldenrod': [218,165,32,1],\n        'gray': [128,128,128,1], 'green': [0,128,0,1],\n        'greenyellow': [173,255,47,1], 'grey': [128,128,128,1],\n        'honeydew': [240,255,240,1], 'hotpink': [255,105,180,1],\n        'indianred': [205,92,92,1], 'indigo': [75,0,130,1],\n        'ivory': [255,255,240,1], 'khaki': [240,230,140,1],\n        'lavender': [230,230,250,1], 'lavenderblush': [255,240,245,1],\n        'lawngreen': [124,252,0,1], 'lemonchiffon': [255,250,205,1],\n        'lightblue': [173,216,230,1], 'lightcoral': [240,128,128,1],\n        'lightcyan': [224,255,255,1], 'lightgoldenrodyellow': [250,250,210,1],\n        'lightgray': [211,211,211,1], 'lightgreen': [144,238,144,1],\n        'lightgrey': [211,211,211,1], 'lightpink': [255,182,193,1],\n        'lightsalmon': [255,160,122,1], 'lightseagreen': [32,178,170,1],\n        'lightskyblue': [135,206,250,1], 'lightslategray': [119,136,153,1],\n        'lightslategrey': [119,136,153,1], 'lightsteelblue': [176,196,222,1],\n        'lightyellow': [255,255,224,1], 'lime': [0,255,0,1],\n        'limegreen': [50,205,50,1], 'linen': [250,240,230,1],\n        'magenta': [255,0,255,1], 'maroon': [128,0,0,1],\n        'mediumaquamarine': [102,205,170,1], 'mediumblue': [0,0,205,1],\n        'mediumorchid': [186,85,211,1], 'mediumpurple': [147,112,219,1],\n        'mediumseagreen': [60,179,113,1], 'mediumslateblue': [123,104,238,1],\n        'mediumspringgreen': [0,250,154,1], 'mediumturquoise': [72,209,204,1],\n        'mediumvioletred': [199,21,133,1], 'midnightblue': [25,25,112,1],\n        'mintcream': [245,255,250,1], 'mistyrose': [255,228,225,1],\n        'moccasin': [255,228,181,1], 'navajowhite': [255,222,173,1],\n        'navy': [0,0,128,1], 'oldlace': [253,245,230,1],\n        'olive': [128,128,0,1], 'olivedrab': [107,142,35,1],\n        'orange': [255,165,0,1], 'orangered': [255,69,0,1],\n        'orchid': [218,112,214,1], 'palegoldenrod': [238,232,170,1],\n        'palegreen': [152,251,152,1], 'paleturquoise': [175,238,238,1],\n        'palevioletred': [219,112,147,1], 'papayawhip': [255,239,213,1],\n        'peachpuff': [255,218,185,1], 'peru': [205,133,63,1],\n        'pink': [255,192,203,1], 'plum': [221,160,221,1],\n        'powderblue': [176,224,230,1], 'purple': [128,0,128,1],\n        'red': [255,0,0,1], 'rosybrown': [188,143,143,1],\n        'royalblue': [65,105,225,1], 'saddlebrown': [139,69,19,1],\n        'salmon': [250,128,114,1], 'sandybrown': [244,164,96,1],\n        'seagreen': [46,139,87,1], 'seashell': [255,245,238,1],\n        'sienna': [160,82,45,1], 'silver': [192,192,192,1],\n        'skyblue': [135,206,235,1], 'slateblue': [106,90,205,1],\n        'slategray': [112,128,144,1], 'slategrey': [112,128,144,1],\n        'snow': [255,250,250,1], 'springgreen': [0,255,127,1],\n        'steelblue': [70,130,180,1], 'tan': [210,180,140,1],\n        'teal': [0,128,128,1], 'thistle': [216,191,216,1],\n        'tomato': [255,99,71,1], 'turquoise': [64,224,208,1],\n        'violet': [238,130,238,1], 'wheat': [245,222,179,1],\n        'white': [255,255,255,1], 'whitesmoke': [245,245,245,1],\n        'yellow': [255,255,0,1], 'yellowgreen': [154,205,50,1]\n    };\n\n    function clampCssByte(i) {  // Clamp to integer 0 .. 255.\n        i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n        return i < 0 ? 0 : i > 255 ? 255 : i;\n    }\n\n    function clampCssAngle(i) {  // Clamp to integer 0 .. 360.\n        i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n        return i < 0 ? 0 : i > 360 ? 360 : i;\n    }\n\n    function clampCssFloat(f) {  // Clamp to float 0.0 .. 1.0.\n        return f < 0 ? 0 : f > 1 ? 1 : f;\n    }\n\n    function parseCssInt(str) {  // int or percentage.\n        if (str.length && str.charAt(str.length - 1) === '%') {\n            return clampCssByte(parseFloat(str) / 100 * 255);\n        }\n        return clampCssByte(parseInt(str, 10));\n    }\n\n    function parseCssFloat(str) {  // float or percentage.\n        if (str.length && str.charAt(str.length - 1) === '%') {\n            return clampCssFloat(parseFloat(str) / 100);\n        }\n        return clampCssFloat(parseFloat(str));\n    }\n\n    function cssHueToRgb(m1, m2, h) {\n        if (h < 0) {\n            h += 1;\n        }\n        else if (h > 1) {\n            h -= 1;\n        }\n\n        if (h * 6 < 1) {\n            return m1 + (m2 - m1) * h * 6;\n        }\n        if (h * 2 < 1) {\n            return m2;\n        }\n        if (h * 3 < 2) {\n            return m1 + (m2 - m1) * (2/3 - h) * 6;\n        }\n        return m1;\n    }\n\n    function lerp(a, b, p) {\n        return a + (b - a) * p;\n    }\n\n    function setRgba(out, r, g, b, a) {\n        out[0] = r; out[1] = g; out[2] = b; out[3] = a;\n        return out;\n    }\n    function copyRgba(out, a) {\n        out[0] = a[0]; out[1] = a[1]; out[2] = a[2]; out[3] = a[3];\n        return out;\n    }\n    var colorCache = new LRU(20);\n    var lastRemovedArr = null;\n    function putToCache(colorStr, rgbaArr) {\n        // Reuse removed array\n        if (lastRemovedArr) {\n            copyRgba(lastRemovedArr, rgbaArr);\n        }\n        lastRemovedArr = colorCache.put(colorStr, lastRemovedArr || (rgbaArr.slice()));\n    }\n    /**\n     * @param {string} colorStr\n     * @param {Array.<number>} out\n     * @return {Array.<number>}\n     * @memberOf module:zrender/util/color\n     */\n    function parse(colorStr, rgbaArr) {\n        if (!colorStr) {\n            return;\n        }\n        rgbaArr = rgbaArr || [];\n\n        var cached = colorCache.get(colorStr);\n        if (cached) {\n            return copyRgba(rgbaArr, cached);\n        }\n\n        // colorStr may be not string\n        colorStr = colorStr + '';\n        // Remove all whitespace, not compliant, but should just be more accepting.\n        var str = colorStr.replace(/ /g, '').toLowerCase();\n\n        // Color keywords (and transparent) lookup.\n        if (str in kCSSColorTable) {\n            copyRgba(rgbaArr, kCSSColorTable[str]);\n            putToCache(colorStr, rgbaArr);\n            return rgbaArr;\n        }\n\n        // #abc and #abc123 syntax.\n        if (str.charAt(0) === '#') {\n            if (str.length === 4) {\n                var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n                if (!(iv >= 0 && iv <= 0xfff)) {\n                    setRgba(rgbaArr, 0, 0, 0, 1);\n                    return;  // Covers NaN.\n                }\n                setRgba(rgbaArr,\n                    ((iv & 0xf00) >> 4) | ((iv & 0xf00) >> 8),\n                    (iv & 0xf0) | ((iv & 0xf0) >> 4),\n                    (iv & 0xf) | ((iv & 0xf) << 4),\n                    1\n                );\n                putToCache(colorStr, rgbaArr);\n                return rgbaArr;\n            }\n            else if (str.length === 7) {\n                var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n                if (!(iv >= 0 && iv <= 0xffffff)) {\n                    setRgba(rgbaArr, 0, 0, 0, 1);\n                    return;  // Covers NaN.\n                }\n                setRgba(rgbaArr,\n                    (iv & 0xff0000) >> 16,\n                    (iv & 0xff00) >> 8,\n                    iv & 0xff,\n                    1\n                );\n                putToCache(colorStr, rgbaArr);\n                return rgbaArr;\n            }\n\n            return;\n        }\n        var op = str.indexOf('('), ep = str.indexOf(')');\n        if (op !== -1 && ep + 1 === str.length) {\n            var fname = str.substr(0, op);\n            var params = str.substr(op + 1, ep - (op + 1)).split(',');\n            var alpha = 1;  // To allow case fallthrough.\n            switch (fname) {\n                case 'rgba':\n                    if (params.length !== 4) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    alpha = parseCssFloat(params.pop()); // jshint ignore:line\n                // Fall through.\n                case 'rgb':\n                    if (params.length !== 3) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    setRgba(rgbaArr,\n                        parseCssInt(params[0]),\n                        parseCssInt(params[1]),\n                        parseCssInt(params[2]),\n                        alpha\n                    );\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                case 'hsla':\n                    if (params.length !== 4) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    params[3] = parseCssFloat(params[3]);\n                    hsla2rgba(params, rgbaArr);\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                case 'hsl':\n                    if (params.length !== 3) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    hsla2rgba(params, rgbaArr);\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                default:\n                    return;\n            }\n        }\n\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return;\n    }\n\n    /**\n     * @param {Array.<number>} hsla\n     * @param {Array.<number>} rgba\n     * @return {Array.<number>} rgba\n     */\n    function hsla2rgba(hsla, rgba) {\n        var h = (((parseFloat(hsla[0]) % 360) + 360) % 360) / 360;  // 0 .. 1\n        // NOTE(deanm): According to the CSS spec s/l should only be\n        // percentages, but we don't bother and let float or percentage.\n        var s = parseCssFloat(hsla[1]);\n        var l = parseCssFloat(hsla[2]);\n        var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n        var m1 = l * 2 - m2;\n\n        rgba = rgba || [];\n        setRgba(rgba,\n            clampCssByte(cssHueToRgb(m1, m2, h + 1 / 3) * 255),\n            clampCssByte(cssHueToRgb(m1, m2, h) * 255),\n            clampCssByte(cssHueToRgb(m1, m2, h - 1 / 3) * 255),\n            1\n        );\n\n        if (hsla.length === 4) {\n            rgba[3] = hsla[3];\n        }\n\n        return rgba;\n    }\n\n    /**\n     * @param {Array.<number>} rgba\n     * @return {Array.<number>} hsla\n     */\n    function rgba2hsla(rgba) {\n        if (!rgba) {\n            return;\n        }\n\n        // RGB from 0 to 255\n        var R = rgba[0] / 255;\n        var G = rgba[1] / 255;\n        var B = rgba[2] / 255;\n\n        var vMin = Math.min(R, G, B); // Min. value of RGB\n        var vMax = Math.max(R, G, B); // Max. value of RGB\n        var delta = vMax - vMin; // Delta RGB value\n\n        var L = (vMax + vMin) / 2;\n        var H;\n        var S;\n        // HSL results from 0 to 1\n        if (delta === 0) {\n            H = 0;\n            S = 0;\n        }\n        else {\n            if (L < 0.5) {\n                S = delta / (vMax + vMin);\n            }\n            else {\n                S = delta / (2 - vMax - vMin);\n            }\n\n            var deltaR = (((vMax - R) / 6) + (delta / 2)) / delta;\n            var deltaG = (((vMax - G) / 6) + (delta / 2)) / delta;\n            var deltaB = (((vMax - B) / 6) + (delta / 2)) / delta;\n\n            if (R === vMax) {\n                H = deltaB - deltaG;\n            }\n            else if (G === vMax) {\n                H = (1 / 3) + deltaR - deltaB;\n            }\n            else if (B === vMax) {\n                H = (2 / 3) + deltaG - deltaR;\n            }\n\n            if (H < 0) {\n                H += 1;\n            }\n\n            if (H > 1) {\n                H -= 1;\n            }\n        }\n\n        var hsla = [H * 360, S, L];\n\n        if (rgba[3] != null) {\n            hsla.push(rgba[3]);\n        }\n\n        return hsla;\n    }\n\n    /**\n     * @param {string} color\n     * @param {number} level\n     * @return {string}\n     * @memberOf module:zrender/util/color\n     */\n    function lift(color, level) {\n        var colorArr = parse(color);\n        if (colorArr) {\n            for (var i = 0; i < 3; i++) {\n                if (level < 0) {\n                    colorArr[i] = colorArr[i] * (1 - level) | 0;\n                }\n                else {\n                    colorArr[i] = ((255 - colorArr[i]) * level + colorArr[i]) | 0;\n                }\n            }\n            return stringify(colorArr, colorArr.length === 4 ? 'rgba' : 'rgb');\n        }\n    }\n\n    /**\n     * @param {string} color\n     * @return {string}\n     * @memberOf module:zrender/util/color\n     */\n    function toHex(color, level) {\n        var colorArr = parse(color);\n        if (colorArr) {\n            return ((1 << 24) + (colorArr[0] << 16) + (colorArr[1] << 8) + (+colorArr[2])).toString(16).slice(1);\n        }\n    }\n\n    /**\n     * Map value to color. Faster than mapToColor methods because color is represented by rgba array.\n     * @param {number} normalizedValue A float between 0 and 1.\n     * @param {Array.<Array.<number>>} colors List of rgba color array\n     * @param {Array.<number>} [out] Mapped gba color array\n     * @return {Array.<number>} will be null/undefined if input illegal.\n     */\n    function fastMapToColor(normalizedValue, colors, out) {\n        if (!(colors && colors.length)\n            || !(normalizedValue >= 0 && normalizedValue <= 1)\n        ) {\n            return;\n        }\n\n        out = out || [];\n\n        var value = normalizedValue * (colors.length - 1);\n        var leftIndex = Math.floor(value);\n        var rightIndex = Math.ceil(value);\n        var leftColor = colors[leftIndex];\n        var rightColor = colors[rightIndex];\n        var dv = value - leftIndex;\n        out[0] = clampCssByte(lerp(leftColor[0], rightColor[0], dv));\n        out[1] = clampCssByte(lerp(leftColor[1], rightColor[1], dv));\n        out[2] = clampCssByte(lerp(leftColor[2], rightColor[2], dv));\n        out[3] = clampCssFloat(lerp(leftColor[3], rightColor[3], dv));\n\n        return out;\n    }\n    /**\n     * @param {number} normalizedValue A float between 0 and 1.\n     * @param {Array.<string>} colors Color list.\n     * @param {boolean=} fullOutput Default false.\n     * @return {(string|Object)} Result color. If fullOutput,\n     *                           return {color: ..., leftIndex: ..., rightIndex: ..., value: ...},\n     * @memberOf module:zrender/util/color\n     */\n    function mapToColor(normalizedValue, colors, fullOutput) {\n        if (!(colors && colors.length)\n            || !(normalizedValue >= 0 && normalizedValue <= 1)\n        ) {\n            return;\n        }\n\n        var value = normalizedValue * (colors.length - 1);\n        var leftIndex = Math.floor(value);\n        var rightIndex = Math.ceil(value);\n        var leftColor = parse(colors[leftIndex]);\n        var rightColor = parse(colors[rightIndex]);\n        var dv = value - leftIndex;\n\n        var color = stringify(\n            [\n                clampCssByte(lerp(leftColor[0], rightColor[0], dv)),\n                clampCssByte(lerp(leftColor[1], rightColor[1], dv)),\n                clampCssByte(lerp(leftColor[2], rightColor[2], dv)),\n                clampCssFloat(lerp(leftColor[3], rightColor[3], dv))\n            ],\n            'rgba'\n        );\n\n        return fullOutput\n            ? {\n                color: color,\n                leftIndex: leftIndex,\n                rightIndex: rightIndex,\n                value: value\n            }\n            : color;\n    }\n\n    /**\n     * @param {string} color\n     * @param {number=} h 0 ~ 360, ignore when null.\n     * @param {number=} s 0 ~ 1, ignore when null.\n     * @param {number=} l 0 ~ 1, ignore when null.\n     * @return {string} Color string in rgba format.\n     * @memberOf module:zrender/util/color\n     */\n    function modifyHSL(color, h, s, l) {\n        color = parse(color);\n\n        if (color) {\n            color = rgba2hsla(color);\n            h != null && (color[0] = clampCssAngle(h));\n            s != null && (color[1] = parseCssFloat(s));\n            l != null && (color[2] = parseCssFloat(l));\n\n            return stringify(hsla2rgba(color), 'rgba');\n        }\n    }\n\n    /**\n     * @param {string} color\n     * @param {number=} alpha 0 ~ 1\n     * @return {string} Color string in rgba format.\n     * @memberOf module:zrender/util/color\n     */\n    function modifyAlpha(color, alpha) {\n        color = parse(color);\n\n        if (color && alpha != null) {\n            color[3] = clampCssFloat(alpha);\n            return stringify(color, 'rgba');\n        }\n    }\n\n    /**\n     * @param {Array.<number>} arrColor like [12,33,44,0.4]\n     * @param {string} type 'rgba', 'hsva', ...\n     * @return {string} Result color. (If input illegal, return undefined).\n     */\n    function stringify(arrColor, type) {\n        if (!arrColor || !arrColor.length) {\n            return;\n        }\n        var colorStr = arrColor[0] + ',' + arrColor[1] + ',' + arrColor[2];\n        if (type === 'rgba' || type === 'hsva' || type === 'hsla') {\n            colorStr += ',' + arrColor[3];\n        }\n        return type + '(' + colorStr + ')';\n    }\n\n    module.exports = {\n        parse: parse,\n        lift: lift,\n        toHex: toHex,\n        fastMapToColor: fastMapToColor,\n        mapToColor: mapToColor,\n        modifyHSL: modifyHSL,\n        modifyAlpha: modifyAlpha,\n        stringify: stringify\n    };\n\n\n\n\n/***/ }),\n/* 179 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(158);\n    var Model = __webpack_require__(165);\n    var each = zrUtil.each;\n    var curry = zrUtil.curry;\n\n    var helper = {};\n\n    // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n    // allAxesInfo should be updated when setOption performed.\n    helper.collect = function (ecModel, api) {\n        var result = {\n            /**\n             * key: makeKey(axis.model)\n             * value: {\n             *      axis,\n             *      coordSys,\n             *      axisPointerModel,\n             *      triggerTooltip,\n             *      involveSeries,\n             *      snap,\n             *      seriesModels,\n             *      seriesDataCount\n             * }\n             */\n            axesInfo: {},\n            seriesInvolved: false,\n            /**\n             * key: makeKey(coordSys.model)\n             * value: Object: key makeKey(axis.model), value: axisInfo\n             */\n            coordSysAxesInfo: {},\n            coordSysMap: {}\n        };\n\n        collectAxesInfo(result, ecModel, api);\n\n        // Check seriesInvolved for performance, in case too many series in some chart.\n        result.seriesInvolved && collectSeriesInfo(result, ecModel);\n\n        return result;\n    };\n\n    function collectAxesInfo(result, ecModel, api) {\n        var globalTooltipModel = ecModel.getComponent('tooltip');\n        var globalAxisPointerModel = ecModel.getComponent('axisPointer');\n        // links can only be set on global.\n        var linksOption = globalAxisPointerModel.get('link', true) || [];\n        var linkGroups = [];\n\n        // Collect axes info.\n        each(api.getCoordinateSystems(), function (coordSys) {\n            // Some coordinate system do not support axes, like geo.\n            if (!coordSys.axisPointerEnabled) {\n                return;\n            }\n\n            var coordSysKey = makeKey(coordSys.model);\n            var axesInfoInCoordSys = result.coordSysAxesInfo[coordSysKey] = {};\n            result.coordSysMap[coordSysKey] = coordSys;\n\n            // Set tooltip (like 'cross') is a convienent way to show axisPointer\n            // for user. So we enable seting tooltip on coordSys model.\n            var coordSysModel = coordSys.model;\n            var baseTooltipModel = coordSysModel.getModel('tooltip', globalTooltipModel);\n\n            each(coordSys.getAxes(), curry(saveTooltipAxisInfo, false, null));\n\n            // If axis tooltip used, choose tooltip axis for each coordSys.\n            // Notice this case: coordSys is `grid` but not `cartesian2D` here.\n            if (coordSys.getTooltipAxes\n                && globalTooltipModel\n                // If tooltip.showContent is set as false, tooltip will not\n                // show but axisPointer will show as normal.\n                && baseTooltipModel.get('show')\n            ) {\n                // Compatible with previous logic. But series.tooltip.trigger: 'axis'\n                // or series.data[n].tooltip.trigger: 'axis' are not support any more.\n                var triggerAxis = baseTooltipModel.get('trigger') === 'axis';\n                var cross = baseTooltipModel.get('axisPointer.type') === 'cross';\n                var tooltipAxes = coordSys.getTooltipAxes(baseTooltipModel.get('axisPointer.axis'));\n                if (triggerAxis || cross) {\n                    each(tooltipAxes.baseAxes, curry(\n                        saveTooltipAxisInfo, cross ? 'cross' : true, triggerAxis\n                    ));\n                }\n                if (cross) {\n                    each(tooltipAxes.otherAxes, curry(saveTooltipAxisInfo, 'cross', false));\n                }\n            }\n\n            // fromTooltip: true | false | 'cross'\n            // triggerTooltip: true | false | null\n            function saveTooltipAxisInfo(fromTooltip, triggerTooltip, axis) {\n                var axisPointerModel = axis.model.getModel('axisPointer', globalAxisPointerModel);\n\n                var axisPointerShow = axisPointerModel.get('show');\n                if (!axisPointerShow || (\n                    axisPointerShow === 'auto'\n                    && !fromTooltip\n                    && !isHandleTrigger(axisPointerModel)\n                )) {\n                    return;\n                }\n\n                if (triggerTooltip == null) {\n                    triggerTooltip = axisPointerModel.get('triggerTooltip');\n                }\n\n                axisPointerModel = fromTooltip\n                    ? makeAxisPointerModel(\n                        axis, baseTooltipModel, globalAxisPointerModel, ecModel,\n                        fromTooltip, triggerTooltip\n                    )\n                    : axisPointerModel;\n\n                var snap = axisPointerModel.get('snap');\n                var key = makeKey(axis.model);\n                var involveSeries = triggerTooltip || snap || axis.type === 'category';\n\n                // If result.axesInfo[key] exist, override it (tooltip has higher priority).\n                var axisInfo = result.axesInfo[key] = {\n                    key: key,\n                    axis: axis,\n                    coordSys: coordSys,\n                    axisPointerModel: axisPointerModel,\n                    triggerTooltip: triggerTooltip,\n                    involveSeries: involveSeries,\n                    snap: snap,\n                    useHandle: isHandleTrigger(axisPointerModel),\n                    seriesModels: []\n                };\n                axesInfoInCoordSys[key] = axisInfo;\n                result.seriesInvolved |= involveSeries;\n\n                var groupIndex = getLinkGroupIndex(linksOption, axis);\n                if (groupIndex != null) {\n                    var linkGroup = linkGroups[groupIndex] || (linkGroups[groupIndex] = {axesInfo: {}});\n                    linkGroup.axesInfo[key] = axisInfo;\n                    linkGroup.mapper = linksOption[groupIndex].mapper;\n                    axisInfo.linkGroup = linkGroup;\n                }\n            }\n        });\n    }\n\n    function makeAxisPointerModel(\n        axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip\n    ) {\n        var tooltipAxisPointerModel = baseTooltipModel.getModel('axisPointer');\n        var volatileOption = {};\n\n        each(\n            [\n                'type', 'snap', 'lineStyle', 'shadowStyle', 'label',\n                'animation', 'animationDurationUpdate', 'animationEasingUpdate', 'z'\n            ],\n            function (field) {\n                volatileOption[field] = zrUtil.clone(tooltipAxisPointerModel.get(field));\n            }\n        );\n\n        // category axis do not auto snap, otherwise some tick that do not\n        // has value can not be hovered. value/time/log axis default snap if\n        // triggered from tooltip and trigger tooltip.\n        volatileOption.snap = axis.type !== 'category' && !!triggerTooltip;\n\n        // Compatibel with previous behavior, tooltip axis do not show label by default.\n        // Only these properties can be overrided from tooltip to axisPointer.\n        if (tooltipAxisPointerModel.get('type') === 'cross') {\n            volatileOption.type = 'line';\n        }\n        var labelOption = volatileOption.label || (volatileOption.label = {});\n        // Follow the convention, do not show label when triggered by tooltip by default.\n        labelOption.show == null && (labelOption.show = false);\n\n        if (fromTooltip === 'cross') {\n            // When 'cross', both axes show labels.\n            labelOption.show = true;\n            // If triggerTooltip, this is a base axis, which should better not use cross style\n            // (cross style is dashed by default)\n            if (!triggerTooltip) {\n                var crossStyle = volatileOption.lineStyle = tooltipAxisPointerModel.get('crossStyle');\n                crossStyle && zrUtil.defaults(\n                    labelOption.textStyle || (labelOption.textStyle = {}),\n                    crossStyle.textStyle\n                );\n            }\n        }\n\n        return axis.model.getModel(\n            'axisPointer',\n            new Model(volatileOption, globalAxisPointerModel, ecModel)\n        );\n    }\n\n    function collectSeriesInfo(result, ecModel) {\n        // Prepare data for axis trigger\n        ecModel.eachSeries(function (seriesModel) {\n\n            // Notice this case: this coordSys is `cartesian2D` but not `grid`.\n            var coordSys = seriesModel.coordinateSystem;\n            var seriesTooltipTrigger = seriesModel.get('tooltip.trigger', true);\n            if (!coordSys\n                || seriesTooltipTrigger === 'none'\n                || seriesTooltipTrigger === false\n                || seriesTooltipTrigger === 'item'\n                || seriesModel.get('axisPointer.show', true) === false\n            ) {\n                return;\n            }\n\n            each(result.coordSysAxesInfo[makeKey(coordSys.model)], function (axisInfo) {\n                var axis = axisInfo.axis;\n                if (coordSys.getAxis(axis.dim) === axis) {\n                    axisInfo.seriesModels.push(seriesModel);\n                    axisInfo.seriesDataCount == null && (axisInfo.seriesDataCount = 0);\n                    axisInfo.seriesDataCount += seriesModel.getData().count();\n                }\n            });\n\n        }, this);\n    }\n\n    /**\n     * For example:\n     * {\n     *     axisPointer: {\n     *         links: [{\n     *             xAxisIndex: [2, 4],\n     *             yAxisIndex: 'all'\n     *         }, {\n     *             xAxisId: ['a5', 'a7'],\n     *             xAxisName: 'xxx'\n     *         }]\n     *     }\n     * }\n     */\n    function getLinkGroupIndex(linksOption, axis) {\n        var axisModel = axis.model;\n        var dim = axis.dim;\n        for (var i = 0; i < linksOption.length; i++) {\n            var linkOption = linksOption[i] || {};\n            if (checkPropInLink(linkOption[dim + 'AxisId'], axisModel.id)\n                || checkPropInLink(linkOption[dim + 'AxisIndex'], axisModel.componentIndex)\n                || checkPropInLink(linkOption[dim + 'AxisName'], axisModel.name)\n            ) {\n                return i;\n            }\n        }\n    }\n\n    function checkPropInLink(linkPropValue, axisPropValue) {\n        return linkPropValue === 'all'\n            || (zrUtil.isArray(linkPropValue) && zrUtil.indexOf(linkPropValue, axisPropValue) >= 0)\n            || linkPropValue === axisPropValue;\n    }\n\n    helper.fixValue = function (axisModel) {\n        var axisInfo = helper.getAxisInfo(axisModel);\n        if (!axisInfo) {\n            return;\n        }\n\n        var axisPointerModel = axisInfo.axisPointerModel;\n        var scale = axisInfo.axis.scale;\n        var option = axisPointerModel.option;\n        var status = axisPointerModel.get('status');\n        var value = axisPointerModel.get('value');\n\n        // Parse init value for category and time axis.\n        if (value != null) {\n            value = scale.parse(value);\n        }\n\n        var useHandle = isHandleTrigger(axisPointerModel);\n        // If `handle` used, `axisPointer` will always be displayed, so value\n        // and status should be initialized.\n        if (status == null) {\n            option.status = useHandle ? 'show' : 'hide';\n        }\n\n        var extent = scale.getExtent().slice();\n        extent[0] > extent[1] && extent.reverse();\n\n        if (// Pick a value on axis when initializing.\n            value == null\n            // If both `handle` and `dataZoom` are used, value may be out of axis extent,\n            // where we should re-pick a value to keep `handle` displaying normally.\n            || value > extent[1]\n        ) {\n            // Make handle displayed on the end of the axis when init, which looks better.\n            value = extent[1];\n        }\n        if (value < extent[0]) {\n            value = extent[0];\n        }\n\n        option.value = value;\n\n        if (useHandle) {\n            option.status = axisInfo.axis.scale.isBlank() ? 'hide' : 'show';\n        }\n    };\n\n    helper.getAxisInfo = function (axisModel) {\n        var coordSysAxesInfo = (axisModel.ecModel.getComponent('axisPointer') || {}).coordSysAxesInfo;\n        return coordSysAxesInfo && coordSysAxesInfo.axesInfo[makeKey(axisModel)];\n    };\n\n    helper.getAxisPointerModel = function (axisModel) {\n        var axisInfo = helper.getAxisInfo(axisModel);\n        return axisInfo && axisInfo.axisPointerModel;\n    };\n\n    function isHandleTrigger(axisPointerModel) {\n        return !!axisPointerModel.get('handle.show');\n    }\n\n    /**\n     * @param {module:echarts/model/Model} model\n     * @return {string} unique key\n     */\n    var makeKey = helper.makeKey = function (model) {\n        return model.type + '||' + model.id;\n    };\n\n    module.exports = helper;\n\n\n\n/***/ }),\n/* 180 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// TODO Parse shadow style\n// TODO Only shallow path support\n\n    var zrUtil = __webpack_require__(158);\n\n    module.exports = function (properties) {\n        // Normalize\n        for (var i = 0; i < properties.length; i++) {\n            if (!properties[i][1]) {\n               properties[i][1] = properties[i][0];\n            }\n        }\n        return function (excludes, includes) {\n            var style = {};\n            for (var i = 0; i < properties.length; i++) {\n                var propName = properties[i][1];\n                if ((excludes && zrUtil.indexOf(excludes, propName) >= 0)\n                    || (includes && zrUtil.indexOf(includes, propName) < 0)\n                ) {\n                    continue;\n                }\n                var val = this.getShallow(propName);\n                if (val != null) {\n                    style[properties[i][0]] = val;\n                }\n            }\n            return style;\n        };\n    };\n\n\n/***/ }),\n/* 181 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * // Scale class management\n * @module echarts/scale/Scale\n */\n\n\n    var clazzUtil = __webpack_require__(168);\n\n    /**\n     * @param {Object} [setting]\n     */\n    function Scale(setting) {\n        this._setting = setting || {};\n\n        /**\n         * Extent\n         * @type {Array.<number>}\n         * @protected\n         */\n        this._extent = [Infinity, -Infinity];\n\n        /**\n         * Step is calculated in adjustExtent\n         * @type {Array.<number>}\n         * @protected\n         */\n        this._interval = 0;\n\n        this.init && this.init.apply(this, arguments);\n    }\n\n    var scaleProto = Scale.prototype;\n\n    /**\n     * Parse input val to valid inner number.\n     * @param {*} val\n     * @return {number}\n     */\n    scaleProto.parse = function (val) {\n        // Notice: This would be a trap here, If the implementation\n        // of this method depends on extent, and this method is used\n        // before extent set (like in dataZoom), it would be wrong.\n        // Nevertheless, parse does not depend on extent generally.\n        return val;\n    };\n\n    scaleProto.getSetting = function (name) {\n        return this._setting[name];\n    };\n\n    scaleProto.contain = function (val) {\n        var extent = this._extent;\n        return val >= extent[0] && val <= extent[1];\n    };\n\n    /**\n     * Normalize value to linear [0, 1], return 0.5 if extent span is 0\n     * @param {number} val\n     * @return {number}\n     */\n    scaleProto.normalize = function (val) {\n        var extent = this._extent;\n        if (extent[1] === extent[0]) {\n            return 0.5;\n        }\n        return (val - extent[0]) / (extent[1] - extent[0]);\n    };\n\n    /**\n     * Scale normalized value\n     * @param {number} val\n     * @return {number}\n     */\n    scaleProto.scale = function (val) {\n        var extent = this._extent;\n        return val * (extent[1] - extent[0]) + extent[0];\n    };\n\n    /**\n     * Set extent from data\n     * @param {Array.<number>} other\n     */\n    scaleProto.unionExtent = function (other) {\n        var extent = this._extent;\n        other[0] < extent[0] && (extent[0] = other[0]);\n        other[1] > extent[1] && (extent[1] = other[1]);\n        // not setExtent because in log axis it may transformed to power\n        // this.setExtent(extent[0], extent[1]);\n    };\n\n    /**\n     * Set extent from data\n     * @param {module:echarts/data/List} data\n     * @param {string} dim\n     */\n    scaleProto.unionExtentFromData = function (data, dim) {\n        this.unionExtent(data.getDataExtent(dim, true));\n    };\n\n    /**\n     * Get extent\n     * @return {Array.<number>}\n     */\n    scaleProto.getExtent = function () {\n        return this._extent.slice();\n    };\n\n    /**\n     * Set extent\n     * @param {number} start\n     * @param {number} end\n     */\n    scaleProto.setExtent = function (start, end) {\n        var thisExtent = this._extent;\n        if (!isNaN(start)) {\n            thisExtent[0] = start;\n        }\n        if (!isNaN(end)) {\n            thisExtent[1] = end;\n        }\n    };\n\n    /**\n     * @return {Array.<string>}\n     */\n    scaleProto.getTicksLabels = function () {\n        var labels = [];\n        var ticks = this.getTicks();\n        for (var i = 0; i < ticks.length; i++) {\n            labels.push(this.getLabel(ticks[i]));\n        }\n        return labels;\n    };\n\n    /**\n     * When axis extent depends on data and no data exists,\n     * axis ticks should not be drawn, which is named 'blank'.\n     */\n    scaleProto.isBlank = function () {\n        return this._isBlank;\n    },\n\n    /**\n     * When axis extent depends on data and no data exists,\n     * axis ticks should not be drawn, which is named 'blank'.\n     */\n    scaleProto.setBlank = function (isBlank) {\n        this._isBlank = isBlank;\n    };\n\n\n    clazzUtil.enableClassExtend(Scale);\n    clazzUtil.enableClassManagement(Scale, {\n        registerWhenExtend: true\n    });\n\n    module.exports = Scale;\n\n\n/***/ }),\n/* 182 */\n/***/ (function(module, exports) {\n\n\n    var dpr = 1;\n    // If in browser environment\n    if (typeof window !== 'undefined') {\n        dpr = Math.max(window.devicePixelRatio || 1, 1);\n    }\n    /**\n     * config默认配置项\n     * @exports zrender/config\n     * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n     */\n    var config = {\n        /**\n         * debug日志选项：catchBrushException为true下有效\n         * 0 : 不生成debug数据，发布用\n         * 1 : 异常抛出，调试用\n         * 2 : 控制台输出，调试用\n         */\n        debugMode: 0,\n\n        // retina 屏幕优化\n        devicePixelRatio: dpr\n    };\n    module.exports = config;\n\n\n\n\n/***/ }),\n/* 183 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Group是一个容器，可以插入子节点，Group的变换也会被应用到子节点上\n * @module zrender/graphic/Group\n * @example\n *     var Group = require('zrender/lib/container/Group');\n *     var Circle = require('zrender/lib/graphic/shape/Circle');\n *     var g = new Group();\n *     g.position[0] = 100;\n *     g.position[1] = 100;\n *     g.add(new Circle({\n *         style: {\n *             x: 100,\n *             y: 100,\n *             r: 20,\n *         }\n *     }));\n *     zr.add(g);\n */\n\n\n    var zrUtil = __webpack_require__(158);\n    var Element = __webpack_require__(223);\n    var BoundingRect = __webpack_require__(169);\n\n    /**\n     * @alias module:zrender/graphic/Group\n     * @constructor\n     * @extends module:zrender/mixin/Transformable\n     * @extends module:zrender/mixin/Eventful\n     */\n    var Group = function (opts) {\n\n        opts = opts || {};\n\n        Element.call(this, opts);\n\n        for (var key in opts) {\n            if (opts.hasOwnProperty(key)) {\n                this[key] = opts[key];\n            }\n        }\n\n        this._children = [];\n\n        this.__storage = null;\n\n        this.__dirty = true;\n    };\n\n    Group.prototype = {\n\n        constructor: Group,\n\n        isGroup: true,\n\n        /**\n         * @type {string}\n         */\n        type: 'group',\n\n        /**\n         * 所有子孙元素是否响应鼠标事件\n         * @name module:/zrender/container/Group#silent\n         * @type {boolean}\n         * @default false\n         */\n        silent: false,\n\n        /**\n         * @return {Array.<module:zrender/Element>}\n         */\n        children: function () {\n            return this._children.slice();\n        },\n\n        /**\n         * 获取指定 index 的儿子节点\n         * @param  {number} idx\n         * @return {module:zrender/Element}\n         */\n        childAt: function (idx) {\n            return this._children[idx];\n        },\n\n        /**\n         * 获取指定名字的儿子节点\n         * @param  {string} name\n         * @return {module:zrender/Element}\n         */\n        childOfName: function (name) {\n            var children = this._children;\n            for (var i = 0; i < children.length; i++) {\n                if (children[i].name === name) {\n                    return children[i];\n                }\n             }\n        },\n\n        /**\n         * @return {number}\n         */\n        childCount: function () {\n            return this._children.length;\n        },\n\n        /**\n         * 添加子节点到最后\n         * @param {module:zrender/Element} child\n         */\n        add: function (child) {\n            if (child && child !== this && child.parent !== this) {\n\n                this._children.push(child);\n\n                this._doAdd(child);\n            }\n\n            return this;\n        },\n\n        /**\n         * 添加子节点在 nextSibling 之前\n         * @param {module:zrender/Element} child\n         * @param {module:zrender/Element} nextSibling\n         */\n        addBefore: function (child, nextSibling) {\n            if (child && child !== this && child.parent !== this\n                && nextSibling && nextSibling.parent === this) {\n\n                var children = this._children;\n                var idx = children.indexOf(nextSibling);\n\n                if (idx >= 0) {\n                    children.splice(idx, 0, child);\n                    this._doAdd(child);\n                }\n            }\n\n            return this;\n        },\n\n        _doAdd: function (child) {\n            if (child.parent) {\n                child.parent.remove(child);\n            }\n\n            child.parent = this;\n\n            var storage = this.__storage;\n            var zr = this.__zr;\n            if (storage && storage !== child.__storage) {\n\n                storage.addToStorage(child);\n\n                if (child instanceof Group) {\n                    child.addChildrenToStorage(storage);\n                }\n            }\n\n            zr && zr.refresh();\n        },\n\n        /**\n         * 移除子节点\n         * @param {module:zrender/Element} child\n         */\n        remove: function (child) {\n            var zr = this.__zr;\n            var storage = this.__storage;\n            var children = this._children;\n\n            var idx = zrUtil.indexOf(children, child);\n            if (idx < 0) {\n                return this;\n            }\n            children.splice(idx, 1);\n\n            child.parent = null;\n\n            if (storage) {\n\n                storage.delFromStorage(child);\n\n                if (child instanceof Group) {\n                    child.delChildrenFromStorage(storage);\n                }\n            }\n\n            zr && zr.refresh();\n\n            return this;\n        },\n\n        /**\n         * 移除所有子节点\n         */\n        removeAll: function () {\n            var children = this._children;\n            var storage = this.__storage;\n            var child;\n            var i;\n            for (i = 0; i < children.length; i++) {\n                child = children[i];\n                if (storage) {\n                    storage.delFromStorage(child);\n                    if (child instanceof Group) {\n                        child.delChildrenFromStorage(storage);\n                    }\n                }\n                child.parent = null;\n            }\n            children.length = 0;\n\n            return this;\n        },\n\n        /**\n         * 遍历所有子节点\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        eachChild: function (cb, context) {\n            var children = this._children;\n            for (var i = 0; i < children.length; i++) {\n                var child = children[i];\n                cb.call(context, child, i);\n            }\n            return this;\n        },\n\n        /**\n         * 深度优先遍历所有子孙节点\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                cb.call(context, child);\n\n                if (child.type === 'group') {\n                    child.traverse(cb, context);\n                }\n            }\n            return this;\n        },\n\n        addChildrenToStorage: function (storage) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                storage.addToStorage(child);\n                if (child instanceof Group) {\n                    child.addChildrenToStorage(storage);\n                }\n            }\n        },\n\n        delChildrenFromStorage: function (storage) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                storage.delFromStorage(child);\n                if (child instanceof Group) {\n                    child.delChildrenFromStorage(storage);\n                }\n            }\n        },\n\n        dirty: function () {\n            this.__dirty = true;\n            this.__zr && this.__zr.refresh();\n            return this;\n        },\n\n        /**\n         * @return {module:zrender/core/BoundingRect}\n         */\n        getBoundingRect: function (includeChildren) {\n            // TODO Caching\n            var rect = null;\n            var tmpRect = new BoundingRect(0, 0, 0, 0);\n            var children = includeChildren || this._children;\n            var tmpMat = [];\n\n            for (var i = 0; i < children.length; i++) {\n                var child = children[i];\n                if (child.ignore || child.invisible) {\n                    continue;\n                }\n\n                var childRect = child.getBoundingRect();\n                var transform = child.getLocalTransform(tmpMat);\n                // TODO\n                // The boundingRect cacluated by transforming original\n                // rect may be bigger than the actual bundingRect when rotation\n                // is used. (Consider a circle rotated aginst its center, where\n                // the actual boundingRect should be the same as that not be\n                // rotated.) But we can not find better approach to calculate\n                // actual boundingRect yet, considering performance.\n                if (transform) {\n                    tmpRect.copy(childRect);\n                    tmpRect.applyTransform(transform);\n                    rect = rect || tmpRect.clone();\n                    rect.union(tmpRect);\n                }\n                else {\n                    rect = rect || childRect.clone();\n                    rect.union(childRect);\n                }\n            }\n            return rect || tmpRect;\n        }\n    };\n\n    zrUtil.inherits(Group, Element);\n\n    module.exports = Group;\n\n\n/***/ }),\n/* 184 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Path 代理，可以在`buildPath`中用于替代`ctx`, 会保存每个path操作的命令到pathCommands属性中\n * 可以用于 isInsidePath 判断以及获取boundingRect\n *\n * @module zrender/core/PathProxy\n * @author Yi Shen (http://www.github.com/pissang)\n */\n\n // TODO getTotalLength, getPointAtLength\n\n\n    var curve = __webpack_require__(174);\n    var vec2 = __webpack_require__(163);\n    var bbox = __webpack_require__(415);\n    var BoundingRect = __webpack_require__(169);\n    var dpr = __webpack_require__(182).devicePixelRatio;\n\n    var CMD = {\n        M: 1,\n        L: 2,\n        C: 3,\n        Q: 4,\n        A: 5,\n        Z: 6,\n        // Rect\n        R: 7\n    };\n\n    // var CMD_MEM_SIZE = {\n    //     M: 3,\n    //     L: 3,\n    //     C: 7,\n    //     Q: 5,\n    //     A: 9,\n    //     R: 5,\n    //     Z: 1\n    // };\n\n    var min = [];\n    var max = [];\n    var min2 = [];\n    var max2 = [];\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    var mathCos = Math.cos;\n    var mathSin = Math.sin;\n    var mathSqrt = Math.sqrt;\n    var mathAbs = Math.abs;\n\n    var hasTypedArray = typeof Float32Array != 'undefined';\n\n    /**\n     * @alias module:zrender/core/PathProxy\n     * @constructor\n     */\n    var PathProxy = function (notSaveData) {\n\n        this._saveData = !(notSaveData || false);\n\n        if (this._saveData) {\n            /**\n             * Path data. Stored as flat array\n             * @type {Array.<Object>}\n             */\n            this.data = [];\n        }\n\n        this._ctx = null;\n    };\n\n    /**\n     * 快速计算Path包围盒（并不是最小包围盒）\n     * @return {Object}\n     */\n    PathProxy.prototype = {\n\n        constructor: PathProxy,\n\n        _xi: 0,\n        _yi: 0,\n\n        _x0: 0,\n        _y0: 0,\n        // Unit x, Unit y. Provide for avoiding drawing that too short line segment\n        _ux: 0,\n        _uy: 0,\n\n        _len: 0,\n\n        _lineDash: null,\n\n        _dashOffset: 0,\n\n        _dashIdx: 0,\n\n        _dashSum: 0,\n\n        /**\n         * @readOnly\n         */\n        setScale: function (sx, sy) {\n            this._ux = mathAbs(1 / dpr / sx) || 0;\n            this._uy = mathAbs(1 / dpr / sy) || 0;\n        },\n\n        getContext: function () {\n            return this._ctx;\n        },\n\n        /**\n         * @param  {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        beginPath: function (ctx) {\n\n            this._ctx = ctx;\n\n            ctx && ctx.beginPath();\n\n            ctx && (this.dpr = ctx.dpr);\n\n            // Reset\n            if (this._saveData) {\n                this._len = 0;\n            }\n\n            if (this._lineDash) {\n                this._lineDash = null;\n\n                this._dashOffset = 0;\n            }\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x\n         * @param  {number} y\n         * @return {module:zrender/core/PathProxy}\n         */\n        moveTo: function (x, y) {\n            this.addData(CMD.M, x, y);\n            this._ctx && this._ctx.moveTo(x, y);\n\n            // x0, y0, xi, yi 是记录在 _dashedXXXXTo 方法中使用\n            // xi, yi 记录当前点, x0, y0 在 closePath 的时候回到起始点。\n            // 有可能在 beginPath 之后直接调用 lineTo，这时候 x0, y0 需要\n            // 在 lineTo 方法中记录，这里先不考虑这种情况，dashed line 也只在 IE10- 中不支持\n            this._x0 = x;\n            this._y0 = y;\n\n            this._xi = x;\n            this._yi = y;\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x\n         * @param  {number} y\n         * @return {module:zrender/core/PathProxy}\n         */\n        lineTo: function (x, y) {\n            var exceedUnit = mathAbs(x - this._xi) > this._ux\n                || mathAbs(y - this._yi) > this._uy\n                // Force draw the first segment\n                || this._len < 5;\n\n            this.addData(CMD.L, x, y);\n\n            if (this._ctx && exceedUnit) {\n                this._needsDash() ? this._dashedLineTo(x, y)\n                    : this._ctx.lineTo(x, y);\n            }\n            if (exceedUnit) {\n                this._xi = x;\n                this._yi = y;\n            }\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x1\n         * @param  {number} y1\n         * @param  {number} x2\n         * @param  {number} y2\n         * @param  {number} x3\n         * @param  {number} y3\n         * @return {module:zrender/core/PathProxy}\n         */\n        bezierCurveTo: function (x1, y1, x2, y2, x3, y3) {\n            this.addData(CMD.C, x1, y1, x2, y2, x3, y3);\n            if (this._ctx) {\n                this._needsDash() ? this._dashedBezierTo(x1, y1, x2, y2, x3, y3)\n                    : this._ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);\n            }\n            this._xi = x3;\n            this._yi = y3;\n            return this;\n        },\n\n        /**\n         * @param  {number} x1\n         * @param  {number} y1\n         * @param  {number} x2\n         * @param  {number} y2\n         * @return {module:zrender/core/PathProxy}\n         */\n        quadraticCurveTo: function (x1, y1, x2, y2) {\n            this.addData(CMD.Q, x1, y1, x2, y2);\n            if (this._ctx) {\n                this._needsDash() ? this._dashedQuadraticTo(x1, y1, x2, y2)\n                    : this._ctx.quadraticCurveTo(x1, y1, x2, y2);\n            }\n            this._xi = x2;\n            this._yi = y2;\n            return this;\n        },\n\n        /**\n         * @param  {number} cx\n         * @param  {number} cy\n         * @param  {number} r\n         * @param  {number} startAngle\n         * @param  {number} endAngle\n         * @param  {boolean} anticlockwise\n         * @return {module:zrender/core/PathProxy}\n         */\n        arc: function (cx, cy, r, startAngle, endAngle, anticlockwise) {\n            this.addData(\n                CMD.A, cx, cy, r, r, startAngle, endAngle - startAngle, 0, anticlockwise ? 0 : 1\n            );\n            this._ctx && this._ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);\n\n            this._xi = mathCos(endAngle) * r + cx;\n            this._yi = mathSin(endAngle) * r + cx;\n            return this;\n        },\n\n        // TODO\n        arcTo: function (x1, y1, x2, y2, radius) {\n            if (this._ctx) {\n                this._ctx.arcTo(x1, y1, x2, y2, radius);\n            }\n            return this;\n        },\n\n        // TODO\n        rect: function (x, y, w, h) {\n            this._ctx && this._ctx.rect(x, y, w, h);\n            this.addData(CMD.R, x, y, w, h);\n            return this;\n        },\n\n        /**\n         * @return {module:zrender/core/PathProxy}\n         */\n        closePath: function () {\n            this.addData(CMD.Z);\n\n            var ctx = this._ctx;\n            var x0 = this._x0;\n            var y0 = this._y0;\n            if (ctx) {\n                this._needsDash() && this._dashedLineTo(x0, y0);\n                ctx.closePath();\n            }\n\n            this._xi = x0;\n            this._yi = y0;\n            return this;\n        },\n\n        /**\n         * Context 从外部传入，因为有可能是 rebuildPath 完之后再 fill。\n         * stroke 同样\n         * @param {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        fill: function (ctx) {\n            ctx && ctx.fill();\n            this.toStatic();\n        },\n\n        /**\n         * @param {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        stroke: function (ctx) {\n            ctx && ctx.stroke();\n            this.toStatic();\n        },\n\n        /**\n         * 必须在其它绘制命令前调用\n         * Must be invoked before all other path drawing methods\n         * @return {module:zrender/core/PathProxy}\n         */\n        setLineDash: function (lineDash) {\n            if (lineDash instanceof Array) {\n                this._lineDash = lineDash;\n\n                this._dashIdx = 0;\n\n                var lineDashSum = 0;\n                for (var i = 0; i < lineDash.length; i++) {\n                    lineDashSum += lineDash[i];\n                }\n                this._dashSum = lineDashSum;\n            }\n            return this;\n        },\n\n        /**\n         * 必须在其它绘制命令前调用\n         * Must be invoked before all other path drawing methods\n         * @return {module:zrender/core/PathProxy}\n         */\n        setLineDashOffset: function (offset) {\n            this._dashOffset = offset;\n            return this;\n        },\n\n        /**\n         *\n         * @return {boolean}\n         */\n        len: function () {\n            return this._len;\n        },\n\n        /**\n         * 直接设置 Path 数据\n         */\n        setData: function (data) {\n\n            var len = data.length;\n\n            if (! (this.data && this.data.length == len) && hasTypedArray) {\n                this.data = new Float32Array(len);\n            }\n\n            for (var i = 0; i < len; i++) {\n                this.data[i] = data[i];\n            }\n\n            this._len = len;\n        },\n\n        /**\n         * 添加子路径\n         * @param {module:zrender/core/PathProxy|Array.<module:zrender/core/PathProxy>} path\n         */\n        appendPath: function (path) {\n            if (!(path instanceof Array)) {\n                path = [path];\n            }\n            var len = path.length;\n            var appendSize = 0;\n            var offset = this._len;\n            for (var i = 0; i < len; i++) {\n                appendSize += path[i].len();\n            }\n            if (hasTypedArray && (this.data instanceof Float32Array)) {\n                this.data = new Float32Array(offset + appendSize);\n            }\n            for (var i = 0; i < len; i++) {\n                var appendPathData = path[i].data;\n                for (var k = 0; k < appendPathData.length; k++) {\n                    this.data[offset++] = appendPathData[k];\n                }\n            }\n            this._len = offset;\n        },\n\n        /**\n         * 填充 Path 数据。\n         * 尽量复用而不申明新的数组。大部分图形重绘的指令数据长度都是不变的。\n         */\n        addData: function (cmd) {\n            if (!this._saveData) {\n                return;\n            }\n\n            var data = this.data;\n            if (this._len + arguments.length > data.length) {\n                // 因为之前的数组已经转换成静态的 Float32Array\n                // 所以不够用时需要扩展一个新的动态数组\n                this._expandData();\n                data = this.data;\n            }\n            for (var i = 0; i < arguments.length; i++) {\n                data[this._len++] = arguments[i];\n            }\n\n            this._prevCmd = cmd;\n        },\n\n        _expandData: function () {\n            // Only if data is Float32Array\n            if (!(this.data instanceof Array)) {\n                var newData = [];\n                for (var i = 0; i < this._len; i++) {\n                    newData[i] = this.data[i];\n                }\n                this.data = newData;\n            }\n        },\n\n        /**\n         * If needs js implemented dashed line\n         * @return {boolean}\n         * @private\n         */\n        _needsDash: function () {\n            return this._lineDash;\n        },\n\n        _dashedLineTo: function (x1, y1) {\n            var dashSum = this._dashSum;\n            var offset = this._dashOffset;\n            var lineDash = this._lineDash;\n            var ctx = this._ctx;\n\n            var x0 = this._xi;\n            var y0 = this._yi;\n            var dx = x1 - x0;\n            var dy = y1 - y0;\n            var dist = mathSqrt(dx * dx + dy * dy);\n            var x = x0;\n            var y = y0;\n            var dash;\n            var nDash = lineDash.length;\n            var idx;\n            dx /= dist;\n            dy /= dist;\n\n            if (offset < 0) {\n                // Convert to positive offset\n                offset = dashSum + offset;\n            }\n            offset %= dashSum;\n            x -= offset * dx;\n            y -= offset * dy;\n\n            while ((dx > 0 && x <= x1) || (dx < 0 && x >= x1)\n            || (dx == 0 && ((dy > 0 && y <= y1) || (dy < 0 && y >= y1)))) {\n                idx = this._dashIdx;\n                dash = lineDash[idx];\n                x += dx * dash;\n                y += dy * dash;\n                this._dashIdx = (idx + 1) % nDash;\n                // Skip positive offset\n                if ((dx > 0 && x < x0) || (dx < 0 && x > x0) || (dy > 0 && y < y0) || (dy < 0 && y > y0)) {\n                    continue;\n                }\n                ctx[idx % 2 ? 'moveTo' : 'lineTo'](\n                    dx >= 0 ? mathMin(x, x1) : mathMax(x, x1),\n                    dy >= 0 ? mathMin(y, y1) : mathMax(y, y1)\n                );\n            }\n            // Offset for next lineTo\n            dx = x - x1;\n            dy = y - y1;\n            this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n        },\n\n        // Not accurate dashed line to\n        _dashedBezierTo: function (x1, y1, x2, y2, x3, y3) {\n            var dashSum = this._dashSum;\n            var offset = this._dashOffset;\n            var lineDash = this._lineDash;\n            var ctx = this._ctx;\n\n            var x0 = this._xi;\n            var y0 = this._yi;\n            var t;\n            var dx;\n            var dy;\n            var cubicAt = curve.cubicAt;\n            var bezierLen = 0;\n            var idx = this._dashIdx;\n            var nDash = lineDash.length;\n\n            var x;\n            var y;\n\n            var tmpLen = 0;\n\n            if (offset < 0) {\n                // Convert to positive offset\n                offset = dashSum + offset;\n            }\n            offset %= dashSum;\n            // Bezier approx length\n            for (t = 0; t < 1; t += 0.1) {\n                dx = cubicAt(x0, x1, x2, x3, t + 0.1)\n                    - cubicAt(x0, x1, x2, x3, t);\n                dy = cubicAt(y0, y1, y2, y3, t + 0.1)\n                    - cubicAt(y0, y1, y2, y3, t);\n                bezierLen += mathSqrt(dx * dx + dy * dy);\n            }\n\n            // Find idx after add offset\n            for (; idx < nDash; idx++) {\n                tmpLen += lineDash[idx];\n                if (tmpLen > offset) {\n                    break;\n                }\n            }\n            t = (tmpLen - offset) / bezierLen;\n\n            while (t <= 1) {\n\n                x = cubicAt(x0, x1, x2, x3, t);\n                y = cubicAt(y0, y1, y2, y3, t);\n\n                // Use line to approximate dashed bezier\n                // Bad result if dash is long\n                idx % 2 ? ctx.moveTo(x, y)\n                    : ctx.lineTo(x, y);\n\n                t += lineDash[idx] / bezierLen;\n\n                idx = (idx + 1) % nDash;\n            }\n\n            // Finish the last segment and calculate the new offset\n            (idx % 2 !== 0) && ctx.lineTo(x3, y3);\n            dx = x3 - x;\n            dy = y3 - y;\n            this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n        },\n\n        _dashedQuadraticTo: function (x1, y1, x2, y2) {\n            // Convert quadratic to cubic using degree elevation\n            var x3 = x2;\n            var y3 = y2;\n            x2 = (x2 + 2 * x1) / 3;\n            y2 = (y2 + 2 * y1) / 3;\n            x1 = (this._xi + 2 * x1) / 3;\n            y1 = (this._yi + 2 * y1) / 3;\n\n            this._dashedBezierTo(x1, y1, x2, y2, x3, y3);\n        },\n\n        /**\n         * 转成静态的 Float32Array 减少堆内存占用\n         * Convert dynamic array to static Float32Array\n         */\n        toStatic: function () {\n            var data = this.data;\n            if (data instanceof Array) {\n                data.length = this._len;\n                if (hasTypedArray) {\n                    this.data = new Float32Array(data);\n                }\n            }\n        },\n\n        /**\n         * @return {module:zrender/core/BoundingRect}\n         */\n        getBoundingRect: function () {\n            min[0] = min[1] = min2[0] = min2[1] = Number.MAX_VALUE;\n            max[0] = max[1] = max2[0] = max2[1] = -Number.MAX_VALUE;\n\n            var data = this.data;\n            var xi = 0;\n            var yi = 0;\n            var x0 = 0;\n            var y0 = 0;\n\n            for (var i = 0; i < data.length;) {\n                var cmd = data[i++];\n\n                if (i == 1) {\n                    // 如果第一个命令是 L, C, Q\n                    // 则 previous point 同绘制命令的第一个 point\n                    //\n                    // 第一个命令为 Arc 的情况下会在后面特殊处理\n                    xi = data[i];\n                    yi = data[i + 1];\n\n                    x0 = xi;\n                    y0 = yi;\n                }\n\n                switch (cmd) {\n                    case CMD.M:\n                        // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n                        // 在 closePath 的时候使用\n                        x0 = data[i++];\n                        y0 = data[i++];\n                        xi = x0;\n                        yi = y0;\n                        min2[0] = x0;\n                        min2[1] = y0;\n                        max2[0] = x0;\n                        max2[1] = y0;\n                        break;\n                    case CMD.L:\n                        bbox.fromLine(xi, yi, data[i], data[i + 1], min2, max2);\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.C:\n                        bbox.fromCubic(\n                            xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            min2, max2\n                        );\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.Q:\n                        bbox.fromQuadratic(\n                            xi, yi, data[i++], data[i++], data[i], data[i + 1],\n                            min2, max2\n                        );\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.A:\n                        // TODO Arc 判断的开销比较大\n                        var cx = data[i++];\n                        var cy = data[i++];\n                        var rx = data[i++];\n                        var ry = data[i++];\n                        var startAngle = data[i++];\n                        var endAngle = data[i++] + startAngle;\n                        // TODO Arc 旋转\n                        var psi = data[i++];\n                        var anticlockwise = 1 - data[i++];\n\n                        if (i == 1) {\n                            // 直接使用 arc 命令\n                            // 第一个命令起点还未定义\n                            x0 = mathCos(startAngle) * rx + cx;\n                            y0 = mathSin(startAngle) * ry + cy;\n                        }\n\n                        bbox.fromArc(\n                            cx, cy, rx, ry, startAngle, endAngle,\n                            anticlockwise, min2, max2\n                        );\n\n                        xi = mathCos(endAngle) * rx + cx;\n                        yi = mathSin(endAngle) * ry + cy;\n                        break;\n                    case CMD.R:\n                        x0 = xi = data[i++];\n                        y0 = yi = data[i++];\n                        var width = data[i++];\n                        var height = data[i++];\n                        // Use fromLine\n                        bbox.fromLine(x0, y0, x0 + width, y0 + height, min2, max2);\n                        break;\n                    case CMD.Z:\n                        xi = x0;\n                        yi = y0;\n                        break;\n                }\n\n                // Union\n                vec2.min(min, min, min2);\n                vec2.max(max, max, max2);\n            }\n\n            // No data\n            if (i === 0) {\n                min[0] = min[1] = max[0] = max[1] = 0;\n            }\n\n            return new BoundingRect(\n                min[0], min[1], max[0] - min[0], max[1] - min[1]\n            );\n        },\n\n        /**\n         * Rebuild path from current data\n         * Rebuild path will not consider javascript implemented line dash.\n         * @param {CanvasRenderingContext} ctx\n         */\n        rebuildPath: function (ctx) {\n            var d = this.data;\n            var x0, y0;\n            var xi, yi;\n            var x, y;\n            var ux = this._ux;\n            var uy = this._uy;\n            var len = this._len;\n            for (var i = 0; i < len;) {\n                var cmd = d[i++];\n\n                if (i == 1) {\n                    // 如果第一个命令是 L, C, Q\n                    // 则 previous point 同绘制命令的第一个 point\n                    //\n                    // 第一个命令为 Arc 的情况下会在后面特殊处理\n                    xi = d[i];\n                    yi = d[i + 1];\n\n                    x0 = xi;\n                    y0 = yi;\n                }\n                switch (cmd) {\n                    case CMD.M:\n                        x0 = xi = d[i++];\n                        y0 = yi = d[i++];\n                        ctx.moveTo(xi, yi);\n                        break;\n                    case CMD.L:\n                        x = d[i++];\n                        y = d[i++];\n                        // Not draw too small seg between\n                        if (mathAbs(x - xi) > ux || mathAbs(y - yi) > uy || i === len - 1) {\n                            ctx.lineTo(x, y);\n                            xi = x;\n                            yi = y;\n                        }\n                        break;\n                    case CMD.C:\n                        ctx.bezierCurveTo(\n                            d[i++], d[i++], d[i++], d[i++], d[i++], d[i++]\n                        );\n                        xi = d[i - 2];\n                        yi = d[i - 1];\n                        break;\n                    case CMD.Q:\n                        ctx.quadraticCurveTo(d[i++], d[i++], d[i++], d[i++]);\n                        xi = d[i - 2];\n                        yi = d[i - 1];\n                        break;\n                    case CMD.A:\n                        var cx = d[i++];\n                        var cy = d[i++];\n                        var rx = d[i++];\n                        var ry = d[i++];\n                        var theta = d[i++];\n                        var dTheta = d[i++];\n                        var psi = d[i++];\n                        var fs = d[i++];\n                        var r = (rx > ry) ? rx : ry;\n                        var scaleX = (rx > ry) ? 1 : rx / ry;\n                        var scaleY = (rx > ry) ? ry / rx : 1;\n                        var isEllipse = Math.abs(rx - ry) > 1e-3;\n                        var endAngle = theta + dTheta;\n                        if (isEllipse) {\n                            ctx.translate(cx, cy);\n                            ctx.rotate(psi);\n                            ctx.scale(scaleX, scaleY);\n                            ctx.arc(0, 0, r, theta, endAngle, 1 - fs);\n                            ctx.scale(1 / scaleX, 1 / scaleY);\n                            ctx.rotate(-psi);\n                            ctx.translate(-cx, -cy);\n                        }\n                        else {\n                            ctx.arc(cx, cy, r, theta, endAngle, 1 - fs);\n                        }\n\n                        if (i == 1) {\n                            // 直接使用 arc 命令\n                            // 第一个命令起点还未定义\n                            x0 = mathCos(theta) * rx + cx;\n                            y0 = mathSin(theta) * ry + cy;\n                        }\n                        xi = mathCos(endAngle) * rx + cx;\n                        yi = mathSin(endAngle) * ry + cy;\n                        break;\n                    case CMD.R:\n                        x0 = xi = d[i];\n                        y0 = yi = d[i + 1];\n                        ctx.rect(d[i++], d[i++], d[i++], d[i++]);\n                        break;\n                    case CMD.Z:\n                        ctx.closePath();\n                        xi = x0;\n                        yi = y0;\n                }\n            }\n        }\n    };\n\n    PathProxy.CMD = CMD;\n\n    module.exports = PathProxy;\n\n\n/***/ }),\n/* 185 */,\n/* 186 */,\n/* 187 */,\n/* 188 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(158);\n\n    var coordinateSystemCreators = {};\n\n    function CoordinateSystemManager() {\n\n        this._coordinateSystems = [];\n    }\n\n    CoordinateSystemManager.prototype = {\n\n        constructor: CoordinateSystemManager,\n\n        create: function (ecModel, api) {\n            var coordinateSystems = [];\n            zrUtil.each(coordinateSystemCreators, function (creater, type) {\n                var list = creater.create(ecModel, api);\n                coordinateSystems = coordinateSystems.concat(list || []);\n            });\n\n            this._coordinateSystems = coordinateSystems;\n        },\n\n        update: function (ecModel, api) {\n            zrUtil.each(this._coordinateSystems, function (coordSys) {\n                // FIXME MUST have\n                coordSys.update && coordSys.update(ecModel, api);\n            });\n        },\n\n        getCoordinateSystems: function () {\n            return this._coordinateSystems.slice();\n        }\n    };\n\n    CoordinateSystemManager.register = function (type, coordinateSystemCreator) {\n        coordinateSystemCreators[type] = coordinateSystemCreator;\n    };\n\n    CoordinateSystemManager.get = function (type) {\n        return coordinateSystemCreators[type];\n    };\n\n    module.exports = CoordinateSystemManager;\n\n\n/***/ }),\n/* 189 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var echarts = __webpack_require__(159);\n    var graphic = __webpack_require__(160);\n    var layout = __webpack_require__(171);\n\n    // Model\n    echarts.extendComponentModel({\n\n        type: 'title',\n\n        layoutMode: {type: 'box', ignoreSize: true},\n\n        defaultOption: {\n            // 一级层叠\n            zlevel: 0,\n            // 二级层叠\n            z: 6,\n            show: true,\n\n            text: '',\n            // 超链接跳转\n            // link: null,\n            // 仅支持self | blank\n            target: 'blank',\n            subtext: '',\n\n            // 超链接跳转\n            // sublink: null,\n            // 仅支持self | blank\n            subtarget: 'blank',\n\n            // 'center' ¦ 'left' ¦ 'right'\n            // ¦ {number}（x坐标，单位px）\n            left: 0,\n            // 'top' ¦ 'bottom' ¦ 'center'\n            // ¦ {number}（y坐标，单位px）\n            top: 0,\n\n            // 水平对齐\n            // 'auto' | 'left' | 'right' | 'center'\n            // 默认根据 left 的位置判断是左对齐还是右对齐\n            // textAlign: null\n            //\n            // 垂直对齐\n            // 'auto' | 'top' | 'bottom' | 'middle'\n            // 默认根据 top 位置判断是上对齐还是下对齐\n            // textBaseline: null\n\n            backgroundColor: 'rgba(0,0,0,0)',\n\n            // 标题边框颜色\n            borderColor: '#ccc',\n\n            // 标题边框线宽，单位px，默认为0（无边框）\n            borderWidth: 0,\n\n            // 标题内边距，单位px，默认各方向内边距为5，\n            // 接受数组分别设定上右下左边距，同css\n            padding: 5,\n\n            // 主副标题纵向间隔，单位px，默认为10，\n            itemGap: 10,\n            textStyle: {\n                fontSize: 18,\n                fontWeight: 'bolder',\n                color: '#333'\n            },\n            subtextStyle: {\n                color: '#aaa'\n            }\n        }\n    });\n\n    // View\n    echarts.extendComponentView({\n\n        type: 'title',\n\n        render: function (titleModel, ecModel, api) {\n            this.group.removeAll();\n\n            if (!titleModel.get('show')) {\n                return;\n            }\n\n            var group = this.group;\n\n            var textStyleModel = titleModel.getModel('textStyle');\n            var subtextStyleModel = titleModel.getModel('subtextStyle');\n\n            var textAlign = titleModel.get('textAlign');\n            var textBaseline = titleModel.get('textBaseline');\n\n            var textEl = new graphic.Text({\n                style: {\n                    text: titleModel.get('text'),\n                    textFont: textStyleModel.getFont(),\n                    fill: textStyleModel.getTextColor()\n                },\n                z2: 10\n            });\n\n            var textRect = textEl.getBoundingRect();\n\n            var subText = titleModel.get('subtext');\n            var subTextEl = new graphic.Text({\n                style: {\n                    text: subText,\n                    textFont: subtextStyleModel.getFont(),\n                    fill: subtextStyleModel.getTextColor(),\n                    y: textRect.height + titleModel.get('itemGap'),\n                    textBaseline: 'top'\n                },\n                z2: 10\n            });\n\n            var link = titleModel.get('link');\n            var sublink = titleModel.get('sublink');\n\n            textEl.silent = !link;\n            subTextEl.silent = !sublink;\n\n            if (link) {\n                textEl.on('click', function () {\n                    window.open(link, '_' + titleModel.get('target'));\n                });\n            }\n            if (sublink) {\n                subTextEl.on('click', function () {\n                    window.open(sublink, '_' + titleModel.get('subtarget'));\n                });\n            }\n\n            group.add(textEl);\n            subText && group.add(subTextEl);\n            // If no subText, but add subTextEl, there will be an empty line.\n\n            var groupRect = group.getBoundingRect();\n            var layoutOption = titleModel.getBoxLayoutParams();\n            layoutOption.width = groupRect.width;\n            layoutOption.height = groupRect.height;\n            var layoutRect = layout.getLayoutRect(\n                layoutOption, {\n                    width: api.getWidth(),\n                    height: api.getHeight()\n                }, titleModel.get('padding')\n            );\n            // Adjust text align based on position\n            if (!textAlign) {\n                // Align left if title is on the left. center and right is same\n                textAlign = titleModel.get('left') || titleModel.get('right');\n                if (textAlign === 'middle') {\n                    textAlign = 'center';\n                }\n                // Adjust layout by text align\n                if (textAlign === 'right') {\n                    layoutRect.x += layoutRect.width;\n                }\n                else if (textAlign === 'center') {\n                    layoutRect.x += layoutRect.width / 2;\n                }\n            }\n            if (!textBaseline) {\n                textBaseline = titleModel.get('top') || titleModel.get('bottom');\n                if (textBaseline === 'center') {\n                    textBaseline = 'middle';\n                }\n                if (textBaseline === 'bottom') {\n                    layoutRect.y += layoutRect.height;\n                }\n                else if (textBaseline === 'middle') {\n                    layoutRect.y += layoutRect.height / 2;\n                }\n\n                textBaseline = textBaseline || 'top';\n            }\n\n            group.attr('position', [layoutRect.x, layoutRect.y]);\n            var alignStyle = {\n                textAlign: textAlign,\n                textVerticalAlign: textBaseline\n            };\n            textEl.setStyle(alignStyle);\n            subTextEl.setStyle(alignStyle);\n\n            // Render background\n            // Get groupRect again because textAlign has been changed\n            groupRect = group.getBoundingRect();\n            var padding = layoutRect.margin;\n            var style = titleModel.getItemStyle(['color', 'opacity']);\n            style.fill = titleModel.get('backgroundColor');\n            var rect = new graphic.Rect({\n                shape: {\n                    x: groupRect.x - padding[3],\n                    y: groupRect.y - padding[0],\n                    width: groupRect.width + padding[1] + padding[3],\n                    height: groupRect.height + padding[0] + padding[2]\n                },\n                style: style,\n                silent: true\n            });\n            graphic.subPixelOptimizeRect(rect);\n\n            group.add(rect);\n        }\n    });\n\n\n/***/ }),\n/* 190 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// FIXME Better way to pack data in graphic element\n\n\n    __webpack_require__(307);\n\n    __webpack_require__(322);\n\n    __webpack_require__(323);\n\n\n    // Show tip action\n    /**\n     * @action\n     * @property {string} type\n     * @property {number} seriesIndex\n     * @property {number} dataIndex\n     * @property {number} [x]\n     * @property {number} [y]\n     */\n    __webpack_require__(159).registerAction(\n        {\n            type: 'showTip',\n            event: 'showTip',\n            update: 'tooltip:manuallyShowTip'\n        },\n        // noop\n        function () {}\n    );\n    // Hide tip action\n    __webpack_require__(159).registerAction(\n        {\n            type: 'hideTip',\n            event: 'hideTip',\n            update: 'tooltip:manuallyHideTip'\n        },\n        // noop\n        function () {}\n    );\n\n\n/***/ }),\n/* 191 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {/**\n * List for data storage\n * @module echarts/data/List\n */\n\n\n    var UNDEFINED = 'undefined';\n    var globalObj = typeof window === 'undefined' ? global : window;\n    var Float64Array = typeof globalObj.Float64Array === UNDEFINED\n        ? Array : globalObj.Float64Array;\n    var Int32Array = typeof globalObj.Int32Array === UNDEFINED\n        ? Array : globalObj.Int32Array;\n\n    var dataCtors = {\n        'float': Float64Array,\n        'int': Int32Array,\n        // Ordinal data type can be string or int\n        'ordinal': Array,\n        'number': Array,\n        'time': Array\n    };\n\n    var Model = __webpack_require__(165);\n    var DataDiffer = __webpack_require__(331);\n\n    var zrUtil = __webpack_require__(158);\n    var modelUtil = __webpack_require__(162);\n    var isObject = zrUtil.isObject;\n\n    var TRANSFERABLE_PROPERTIES = [\n        'stackedOn', 'hasItemOption', '_nameList', '_idList', '_rawData'\n    ];\n\n    var transferProperties = function (a, b) {\n        zrUtil.each(TRANSFERABLE_PROPERTIES.concat(b.__wrappedMethods || []), function (propName) {\n            if (b.hasOwnProperty(propName)) {\n                a[propName] = b[propName];\n            }\n        });\n\n        a.__wrappedMethods = b.__wrappedMethods;\n    };\n\n    /**\n     * @constructor\n     * @alias module:echarts/data/List\n     *\n     * @param {Array.<string|Object>} dimensions\n     *      For example, ['someDimName', {name: 'someDimName', type: 'someDimType'}, ...].\n     *      Dimensions should be concrete names like x, y, z, lng, lat, angle, radius\n     * @param {module:echarts/model/Model} hostModel\n     */\n    var List = function (dimensions, hostModel) {\n\n        dimensions = dimensions || ['x', 'y'];\n\n        var dimensionInfos = {};\n        var dimensionNames = [];\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimensionName;\n            var dimensionInfo = {};\n            if (typeof dimensions[i] === 'string') {\n                dimensionName = dimensions[i];\n                dimensionInfo = {\n                    name: dimensionName,\n                    stackable: false,\n                    // Type can be 'float', 'int', 'number'\n                    // Default is number, Precision of float may not enough\n                    type: 'number'\n                };\n            }\n            else {\n                dimensionInfo = dimensions[i];\n                dimensionName = dimensionInfo.name;\n                dimensionInfo.type = dimensionInfo.type || 'number';\n            }\n            dimensionNames.push(dimensionName);\n            dimensionInfos[dimensionName] = dimensionInfo;\n        }\n        /**\n         * @readOnly\n         * @type {Array.<string>}\n         */\n        this.dimensions = dimensionNames;\n\n        /**\n         * Infomation of each data dimension, like data type.\n         * @type {Object}\n         */\n        this._dimensionInfos = dimensionInfos;\n\n        /**\n         * @type {module:echarts/model/Model}\n         */\n        this.hostModel = hostModel;\n\n        /**\n         * @type {module:echarts/model/Model}\n         */\n        this.dataType;\n\n        /**\n         * Indices stores the indices of data subset after filtered.\n         * This data subset will be used in chart.\n         * @type {Array.<number>}\n         * @readOnly\n         */\n        this.indices = [];\n\n        /**\n         * Data storage\n         * @type {Object.<key, TypedArray|Array>}\n         * @private\n         */\n        this._storage = {};\n\n        /**\n         * @type {Array.<string>}\n         */\n        this._nameList = [];\n        /**\n         * @type {Array.<string>}\n         */\n        this._idList = [];\n        /**\n         * Models of data option is stored sparse for optimizing memory cost\n         * @type {Array.<module:echarts/model/Model>}\n         * @private\n         */\n        this._optionModels = [];\n\n        /**\n         * @param {module:echarts/data/List}\n         */\n        this.stackedOn = null;\n\n        /**\n         * Global visual properties after visual coding\n         * @type {Object}\n         * @private\n         */\n        this._visual = {};\n\n        /**\n         * Globel layout properties.\n         * @type {Object}\n         * @private\n         */\n        this._layout = {};\n\n        /**\n         * Item visual properties after visual coding\n         * @type {Array.<Object>}\n         * @private\n         */\n        this._itemVisuals = [];\n\n        /**\n         * Item layout properties after layout\n         * @type {Array.<Object>}\n         * @private\n         */\n        this._itemLayouts = [];\n\n        /**\n         * Graphic elemnents\n         * @type {Array.<module:zrender/Element>}\n         * @private\n         */\n        this._graphicEls = [];\n\n        /**\n         * @type {Array.<Array|Object>}\n         * @private\n         */\n        this._rawData;\n\n        /**\n         * @type {Object}\n         * @private\n         */\n        this._extent;\n    };\n\n    var listProto = List.prototype;\n\n    listProto.type = 'list';\n    /**\n     * If each data item has it's own option\n     * @type {boolean}\n     */\n    listProto.hasItemOption = true;\n\n    /**\n     * Get dimension name\n     * @param {string|number} dim\n     *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n     *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n     * @return {string} Concrete dim name.\n     */\n    listProto.getDimension = function (dim) {\n        if (!isNaN(dim)) {\n            dim = this.dimensions[dim] || dim;\n        }\n        return dim;\n    };\n    /**\n     * Get type and stackable info of particular dimension\n     * @param {string|number} dim\n     *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n     *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n     */\n    listProto.getDimensionInfo = function (dim) {\n        return zrUtil.clone(this._dimensionInfos[this.getDimension(dim)]);\n    };\n\n    /**\n     * Initialize from data\n     * @param {Array.<Object|number|Array>} data\n     * @param {Array.<string>} [nameList]\n     * @param {Function} [dimValueGetter] (dataItem, dimName, dataIndex, dimIndex) => number\n     */\n    listProto.initData = function (data, nameList, dimValueGetter) {\n        data = data || [];\n\n        if (__DEV__) {\n            if (!zrUtil.isArray(data)) {\n                throw new Error('Invalid data.');\n            }\n        }\n\n        this._rawData = data;\n\n        // Clear\n        var storage = this._storage = {};\n        var indices = this.indices = [];\n\n        var dimensions = this.dimensions;\n        var size = data.length;\n        var dimensionInfoMap = this._dimensionInfos;\n\n        var idList = [];\n        var nameRepeatCount = {};\n\n        nameList = nameList || [];\n\n        // Init storage\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimInfo = dimensionInfoMap[dimensions[i]];\n            var DataCtor = dataCtors[dimInfo.type];\n            storage[dimensions[i]] = new DataCtor(size);\n        }\n\n        var self = this;\n        if (!dimValueGetter) {\n            self.hasItemOption = false;\n        }\n        // Default dim value getter\n        dimValueGetter = dimValueGetter || function (dataItem, dimName, dataIndex, dimIndex) {\n            var value = modelUtil.getDataItemValue(dataItem);\n            // If any dataItem is like { value: 10 }\n            if (modelUtil.isDataItemOption(dataItem)) {\n                self.hasItemOption = true;\n            }\n            return modelUtil.converDataValue(\n                (value instanceof Array)\n                    ? value[dimIndex]\n                    // If value is a single number or something else not array.\n                    : value,\n                dimensionInfoMap[dimName]\n            );\n        };\n\n        for (var idx = 0; idx < data.length; idx++) {\n            var dataItem = data[idx];\n            // Each data item is value\n            // [1, 2]\n            // 2\n            // Bar chart, line chart which uses category axis\n            // only gives the 'y' value. 'x' value is the indices of cateogry\n            // Use a tempValue to normalize the value to be a (x, y) value\n\n            // Store the data by dimensions\n            for (var k = 0; k < dimensions.length; k++) {\n                var dim = dimensions[k];\n                var dimStorage = storage[dim];\n                // PENDING NULL is empty or zero\n                dimStorage[idx] = dimValueGetter(dataItem, dim, idx, k);\n            }\n\n            indices.push(idx);\n        }\n\n        // Use the name in option and create id\n        for (var i = 0; i < data.length; i++) {\n            if (!nameList[i]) {\n                if (data[i] && data[i].name != null) {\n                    nameList[i] = data[i].name;\n                }\n            }\n            var name = nameList[i] || '';\n            // Try using the id in option\n            var id = data[i] && data[i].id;\n\n            if (!id && name) {\n                // Use name as id and add counter to avoid same name\n                nameRepeatCount[name] = nameRepeatCount[name] || 0;\n                id = name;\n                if (nameRepeatCount[name] > 0) {\n                    id += '__ec__' + nameRepeatCount[name];\n                }\n                nameRepeatCount[name]++;\n            }\n            id && (idList[i] = id);\n        }\n\n        this._nameList = nameList;\n        this._idList = idList;\n    };\n\n    /**\n     * @return {number}\n     */\n    listProto.count = function () {\n        return this.indices.length;\n    };\n\n    /**\n     * Get value. Return NaN if idx is out of range.\n     * @param {string} dim Dim must be concrete name.\n     * @param {number} idx\n     * @param {boolean} stack\n     * @return {number}\n     */\n    listProto.get = function (dim, idx, stack) {\n        var storage = this._storage;\n        var dataIndex = this.indices[idx];\n\n        // If value not exists\n        if (dataIndex == null) {\n            return NaN;\n        }\n\n        var value = storage[dim] && storage[dim][dataIndex];\n        // FIXME ordinal data type is not stackable\n        if (stack) {\n            var dimensionInfo = this._dimensionInfos[dim];\n            if (dimensionInfo && dimensionInfo.stackable) {\n                var stackedOn = this.stackedOn;\n                while (stackedOn) {\n                    // Get no stacked data of stacked on\n                    var stackedValue = stackedOn.get(dim, idx);\n                    // Considering positive stack, negative stack and empty data\n                    if ((value >= 0 && stackedValue > 0)  // Positive stack\n                        || (value <= 0 && stackedValue < 0) // Negative stack\n                    ) {\n                        value += stackedValue;\n                    }\n                    stackedOn = stackedOn.stackedOn;\n                }\n            }\n        }\n        return value;\n    };\n\n    /**\n     * Get value for multi dimensions.\n     * @param {Array.<string>} [dimensions] If ignored, using all dimensions.\n     * @param {number} idx\n     * @param {boolean} stack\n     * @return {number}\n     */\n    listProto.getValues = function (dimensions, idx, stack) {\n        var values = [];\n\n        if (!zrUtil.isArray(dimensions)) {\n            stack = idx;\n            idx = dimensions;\n            dimensions = this.dimensions;\n        }\n\n        for (var i = 0, len = dimensions.length; i < len; i++) {\n            values.push(this.get(dimensions[i], idx, stack));\n        }\n\n        return values;\n    };\n\n    /**\n     * If value is NaN. Inlcuding '-'\n     * @param {string} dim\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.hasValue = function (idx) {\n        var dimensions = this.dimensions;\n        var dimensionInfos = this._dimensionInfos;\n        for (var i = 0, len = dimensions.length; i < len; i++) {\n            if (\n                // Ordinal type can be string or number\n                dimensionInfos[dimensions[i]].type !== 'ordinal'\n                && isNaN(this.get(dimensions[i], idx))\n            ) {\n                return false;\n            }\n        }\n        return true;\n    };\n\n    /**\n     * Get extent of data in one dimension\n     * @param {string} dim\n     * @param {boolean} stack\n     * @param {Function} filter\n     */\n    listProto.getDataExtent = function (dim, stack, filter) {\n        dim = this.getDimension(dim);\n        var dimData = this._storage[dim];\n        var dimInfo = this.getDimensionInfo(dim);\n        stack = (dimInfo && dimInfo.stackable) && stack;\n        var dimExtent = (this._extent || (this._extent = {}))[dim + (!!stack)];\n        var value;\n        if (dimExtent) {\n            return dimExtent;\n        }\n        // var dimInfo = this._dimensionInfos[dim];\n        if (dimData) {\n            var min = Infinity;\n            var max = -Infinity;\n            // var isOrdinal = dimInfo.type === 'ordinal';\n            for (var i = 0, len = this.count(); i < len; i++) {\n                value = this.get(dim, i, stack);\n                // FIXME\n                // if (isOrdinal && typeof value === 'string') {\n                //     value = zrUtil.indexOf(dimData, value);\n                // }\n                if (!filter || filter(value, dim, i)) {\n                    value < min && (min = value);\n                    value > max && (max = value);\n                }\n            }\n            return (this._extent[dim + !!stack] = [min, max]);\n        }\n        else {\n            return [Infinity, -Infinity];\n        }\n    };\n\n    /**\n     * Get sum of data in one dimension\n     * @param {string} dim\n     * @param {boolean} stack\n     */\n    listProto.getSum = function (dim, stack) {\n        var dimData = this._storage[dim];\n        var sum = 0;\n        if (dimData) {\n            for (var i = 0, len = this.count(); i < len; i++) {\n                var value = this.get(dim, i, stack);\n                if (!isNaN(value)) {\n                    sum += value;\n                }\n            }\n        }\n        return sum;\n    };\n\n    /**\n     * Retreive the index with given value\n     * @param {number} idx\n     * @param {number} value\n     * @return {number}\n     */\n    // FIXME Precision of float value\n    listProto.indexOf = function (dim, value) {\n        var storage = this._storage;\n        var dimData = storage[dim];\n        var indices = this.indices;\n\n        if (dimData) {\n            for (var i = 0, len = indices.length; i < len; i++) {\n                var rawIndex = indices[i];\n                if (dimData[rawIndex] === value) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    };\n\n    /**\n     * Retreive the index with given name\n     * @param {number} idx\n     * @param {number} name\n     * @return {number}\n     */\n    listProto.indexOfName = function (name) {\n        var indices = this.indices;\n        var nameList = this._nameList;\n\n        for (var i = 0, len = indices.length; i < len; i++) {\n            var rawIndex = indices[i];\n            if (nameList[rawIndex] === name) {\n                return i;\n            }\n        }\n\n        return -1;\n    };\n\n    /**\n     * Retreive the index with given raw data index\n     * @param {number} idx\n     * @param {number} name\n     * @return {number}\n     */\n    listProto.indexOfRawIndex = function (rawIndex) {\n        // Indices are ascending\n        var indices = this.indices;\n\n        // If rawIndex === dataIndex\n        var rawDataIndex = indices[rawIndex];\n        if (rawDataIndex != null && rawDataIndex === rawIndex) {\n            return rawIndex;\n        }\n\n        var left = 0;\n        var right = indices.length - 1;\n        while (left <= right) {\n            var mid = (left + right) / 2 | 0;\n            if (indices[mid] < rawIndex) {\n                left = mid + 1;\n            }\n            else if (indices[mid] > rawIndex) {\n                right = mid - 1;\n            }\n            else {\n                return mid;\n            }\n        }\n        return -1;\n    };\n\n    /**\n     * Retreive the index of nearest value\n     * @param {string} dim\n     * @param {number} value\n     * @param {boolean} stack If given value is after stacked\n     * @param {number} [maxDistance=Infinity]\n     * @return {Array.<number>} Considere multiple points has the same value.\n     */\n    listProto.indicesOfNearest = function (dim, value, stack, maxDistance) {\n        var storage = this._storage;\n        var dimData = storage[dim];\n        var nearestIndices = [];\n\n        if (!dimData) {\n            return nearestIndices;\n        }\n\n        if (maxDistance == null) {\n            maxDistance = Infinity;\n        }\n\n        var minDist = Number.MAX_VALUE;\n        var minDiff = -1;\n        for (var i = 0, len = this.count(); i < len; i++) {\n            var diff = value - this.get(dim, i, stack);\n            var dist = Math.abs(diff);\n            if (diff <= maxDistance && dist <= minDist) {\n                // For the case of two data are same on xAxis, which has sequence data.\n                // Show the nearest index\n                // https://github.com/ecomfe/echarts/issues/2869\n                if (dist < minDist || (diff >= 0 && minDiff < 0)) {\n                    minDist = dist;\n                    minDiff = diff;\n                    nearestIndices.length = 0;\n                }\n                nearestIndices.push(i);\n            }\n        }\n        return nearestIndices;\n    };\n\n    /**\n     * Get raw data index\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.getRawIndex = function (idx) {\n        var rawIdx = this.indices[idx];\n        return rawIdx == null ? -1 : rawIdx;\n    };\n\n    /**\n     * Get raw data item\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.getRawDataItem = function (idx) {\n        return this._rawData[this.getRawIndex(idx)];\n    };\n\n    /**\n     * @param {number} idx\n     * @param {boolean} [notDefaultIdx=false]\n     * @return {string}\n     */\n    listProto.getName = function (idx) {\n        return this._nameList[this.indices[idx]] || '';\n    };\n\n    /**\n     * @param {number} idx\n     * @param {boolean} [notDefaultIdx=false]\n     * @return {string}\n     */\n    listProto.getId = function (idx) {\n        return this._idList[this.indices[idx]] || (this.getRawIndex(idx) + '');\n    };\n\n\n    function normalizeDimensions(dimensions) {\n        if (!zrUtil.isArray(dimensions)) {\n            dimensions = [dimensions];\n        }\n        return dimensions;\n    }\n\n    /**\n     * Data iteration\n     * @param {string|Array.<string>}\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     *\n     * @example\n     *  list.each('x', function (x, idx) {});\n     *  list.each(['x', 'y'], function (x, y, idx) {});\n     *  list.each(function (idx) {})\n     */\n    listProto.each = function (dims, cb, stack, context) {\n        if (typeof dims === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dims;\n            dims = [];\n        }\n\n        dims = zrUtil.map(normalizeDimensions(dims), this.getDimension, this);\n\n        var value = [];\n        var dimSize = dims.length;\n        var indices = this.indices;\n\n        context = context || this;\n\n        for (var i = 0; i < indices.length; i++) {\n            // Simple optimization\n            switch (dimSize) {\n                case 0:\n                    cb.call(context, i);\n                    break;\n                case 1:\n                    cb.call(context, this.get(dims[0], i, stack), i);\n                    break;\n                case 2:\n                    cb.call(context, this.get(dims[0], i, stack), this.get(dims[1], i, stack), i);\n                    break;\n                default:\n                    for (var k = 0; k < dimSize; k++) {\n                        value[k] = this.get(dims[k], i, stack);\n                    }\n                    // Index\n                    value[k] = i;\n                    cb.apply(context, value);\n            }\n        }\n    };\n\n    /**\n     * Data filter\n     * @param {string|Array.<string>}\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     */\n    listProto.filterSelf = function (dimensions, cb, stack, context) {\n        if (typeof dimensions === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dimensions;\n            dimensions = [];\n        }\n\n        dimensions = zrUtil.map(\n            normalizeDimensions(dimensions), this.getDimension, this\n        );\n\n        var newIndices = [];\n        var value = [];\n        var dimSize = dimensions.length;\n        var indices = this.indices;\n\n        context = context || this;\n\n        for (var i = 0; i < indices.length; i++) {\n            var keep;\n            // Simple optimization\n            if (dimSize === 1) {\n                keep = cb.call(\n                    context, this.get(dimensions[0], i, stack), i\n                );\n            }\n            else {\n                for (var k = 0; k < dimSize; k++) {\n                    value[k] = this.get(dimensions[k], i, stack);\n                }\n                value[k] = i;\n                keep = cb.apply(context, value);\n            }\n            if (keep) {\n                newIndices.push(indices[i]);\n            }\n        }\n\n        this.indices = newIndices;\n\n        // Reset data extent\n        this._extent = {};\n\n        return this;\n    };\n\n    /**\n     * Data mapping to a plain array\n     * @param {string|Array.<string>} [dimensions]\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     * @return {Array}\n     */\n    listProto.mapArray = function (dimensions, cb, stack, context) {\n        if (typeof dimensions === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dimensions;\n            dimensions = [];\n        }\n\n        var result = [];\n        this.each(dimensions, function () {\n            result.push(cb && cb.apply(this, arguments));\n        }, stack, context);\n        return result;\n    };\n\n    function cloneListForMapAndSample(original, excludeDimensions) {\n        var allDimensions = original.dimensions;\n        var list = new List(\n            zrUtil.map(allDimensions, original.getDimensionInfo, original),\n            original.hostModel\n        );\n        // FIXME If needs stackedOn, value may already been stacked\n        transferProperties(list, original);\n\n        var storage = list._storage = {};\n        var originalStorage = original._storage;\n        // Init storage\n        for (var i = 0; i < allDimensions.length; i++) {\n            var dim = allDimensions[i];\n            var dimStore = originalStorage[dim];\n            if (zrUtil.indexOf(excludeDimensions, dim) >= 0) {\n                storage[dim] = new dimStore.constructor(\n                    originalStorage[dim].length\n                );\n            }\n            else {\n                // Direct reference for other dimensions\n                storage[dim] = originalStorage[dim];\n            }\n        }\n        return list;\n    }\n\n    /**\n     * Data mapping to a new List with given dimensions\n     * @param {string|Array.<string>} dimensions\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     * @return {Array}\n     */\n    listProto.map = function (dimensions, cb, stack, context) {\n        dimensions = zrUtil.map(\n            normalizeDimensions(dimensions), this.getDimension, this\n        );\n\n        var list = cloneListForMapAndSample(this, dimensions);\n        // Following properties are all immutable.\n        // So we can reference to the same value\n        var indices = list.indices = this.indices;\n\n        var storage = list._storage;\n\n        var tmpRetValue = [];\n        this.each(dimensions, function () {\n            var idx = arguments[arguments.length - 1];\n            var retValue = cb && cb.apply(this, arguments);\n            if (retValue != null) {\n                // a number\n                if (typeof retValue === 'number') {\n                    tmpRetValue[0] = retValue;\n                    retValue = tmpRetValue;\n                }\n                for (var i = 0; i < retValue.length; i++) {\n                    var dim = dimensions[i];\n                    var dimStore = storage[dim];\n                    var rawIdx = indices[idx];\n                    if (dimStore) {\n                        dimStore[rawIdx] = retValue[i];\n                    }\n                }\n            }\n        }, stack, context);\n\n        return list;\n    };\n\n    /**\n     * Large data down sampling on given dimension\n     * @param {string} dimension\n     * @param {number} rate\n     * @param {Function} sampleValue\n     * @param {Function} sampleIndex Sample index for name and id\n     */\n    listProto.downSample = function (dimension, rate, sampleValue, sampleIndex) {\n        var list = cloneListForMapAndSample(this, [dimension]);\n        var storage = this._storage;\n        var targetStorage = list._storage;\n\n        var originalIndices = this.indices;\n        var indices = list.indices = [];\n\n        var frameValues = [];\n        var frameIndices = [];\n        var frameSize = Math.floor(1 / rate);\n\n        var dimStore = targetStorage[dimension];\n        var len = this.count();\n        // Copy data from original data\n        for (var i = 0; i < storage[dimension].length; i++) {\n            targetStorage[dimension][i] = storage[dimension][i];\n        }\n        for (var i = 0; i < len; i += frameSize) {\n            // Last frame\n            if (frameSize > len - i) {\n                frameSize = len - i;\n                frameValues.length = frameSize;\n            }\n            for (var k = 0; k < frameSize; k++) {\n                var idx = originalIndices[i + k];\n                frameValues[k] = dimStore[idx];\n                frameIndices[k] = idx;\n            }\n            var value = sampleValue(frameValues);\n            var idx = frameIndices[sampleIndex(frameValues, value) || 0];\n            // Only write value on the filtered data\n            dimStore[idx] = value;\n            indices.push(idx);\n        }\n\n        return list;\n    };\n\n    /**\n     * Get model of one data item.\n     *\n     * @param {number} idx\n     */\n    // FIXME Model proxy ?\n    listProto.getItemModel = function (idx) {\n        var hostModel = this.hostModel;\n        idx = this.indices[idx];\n        return new Model(this._rawData[idx], hostModel, hostModel && hostModel.ecModel);\n    };\n\n    /**\n     * Create a data differ\n     * @param {module:echarts/data/List} otherList\n     * @return {module:echarts/data/DataDiffer}\n     */\n    listProto.diff = function (otherList) {\n        var idList = this._idList;\n        var otherIdList = otherList && otherList._idList;\n        var val;\n        // Use prefix to avoid index to be the same as otherIdList[idx],\n        // which will cause weird udpate animation.\n        var prefix = 'e\\0\\0';\n\n        return new DataDiffer(\n            otherList ? otherList.indices : [],\n            this.indices,\n            function (idx) {\n                return (val = otherIdList[idx]) != null ? val : prefix + idx;\n            },\n            function (idx) {\n                return (val = idList[idx]) != null ? val : prefix + idx;\n            }\n        );\n    };\n    /**\n     * Get visual property.\n     * @param {string} key\n     */\n    listProto.getVisual = function (key) {\n        var visual = this._visual;\n        return visual && visual[key];\n    };\n\n    /**\n     * Set visual property\n     * @param {string|Object} key\n     * @param {*} [value]\n     *\n     * @example\n     *  setVisual('color', color);\n     *  setVisual({\n     *      'color': color\n     *  });\n     */\n    listProto.setVisual = function (key, val) {\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    this.setVisual(name, key[name]);\n                }\n            }\n            return;\n        }\n        this._visual = this._visual || {};\n        this._visual[key] = val;\n    };\n\n    /**\n     * Set layout property.\n     * @param {string} key\n     * @param {*} [val]\n     */\n    listProto.setLayout = function (key, val) {\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    this.setLayout(name, key[name]);\n                }\n            }\n            return;\n        }\n        this._layout[key] = val;\n    };\n\n    /**\n     * Get layout property.\n     * @param  {string} key.\n     * @return {*}\n     */\n    listProto.getLayout = function (key) {\n        return this._layout[key];\n    };\n\n    /**\n     * Get layout of single data item\n     * @param {number} idx\n     */\n    listProto.getItemLayout = function (idx) {\n        return this._itemLayouts[idx];\n    };\n\n    /**\n     * Set layout of single data item\n     * @param {number} idx\n     * @param {Object} layout\n     * @param {boolean=} [merge=false]\n     */\n    listProto.setItemLayout = function (idx, layout, merge) {\n        this._itemLayouts[idx] = merge\n            ? zrUtil.extend(this._itemLayouts[idx] || {}, layout)\n            : layout;\n    };\n\n    /**\n     * Clear all layout of single data item\n     */\n    listProto.clearItemLayouts = function () {\n        this._itemLayouts.length = 0;\n    };\n\n    /**\n     * Get visual property of single data item\n     * @param {number} idx\n     * @param {string} key\n     * @param {boolean} ignoreParent\n     */\n    listProto.getItemVisual = function (idx, key, ignoreParent) {\n        var itemVisual = this._itemVisuals[idx];\n        var val = itemVisual && itemVisual[key];\n        if (val == null && !ignoreParent) {\n            // Use global visual property\n            return this.getVisual(key);\n        }\n        return val;\n    };\n\n    /**\n     * Set visual property of single data item\n     *\n     * @param {number} idx\n     * @param {string|Object} key\n     * @param {*} [value]\n     *\n     * @example\n     *  setItemVisual(0, 'color', color);\n     *  setItemVisual(0, {\n     *      'color': color\n     *  });\n     */\n    listProto.setItemVisual = function (idx, key, value) {\n        var itemVisual = this._itemVisuals[idx] || {};\n        this._itemVisuals[idx] = itemVisual;\n\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    itemVisual[name] = key[name];\n                }\n            }\n            return;\n        }\n        itemVisual[key] = value;\n    };\n\n    /**\n     * Clear itemVisuals and list visual.\n     */\n    listProto.clearAllVisual = function () {\n        this._visual = {};\n        this._itemVisuals = [];\n    };\n\n    var setItemDataAndSeriesIndex = function (child) {\n        child.seriesIndex = this.seriesIndex;\n        child.dataIndex = this.dataIndex;\n        child.dataType = this.dataType;\n    };\n    /**\n     * Set graphic element relative to data. It can be set as null\n     * @param {number} idx\n     * @param {module:zrender/Element} [el]\n     */\n    listProto.setItemGraphicEl = function (idx, el) {\n        var hostModel = this.hostModel;\n\n        if (el) {\n            // Add data index and series index for indexing the data by element\n            // Useful in tooltip\n            el.dataIndex = idx;\n            el.dataType = this.dataType;\n            el.seriesIndex = hostModel && hostModel.seriesIndex;\n            if (el.type === 'group') {\n                el.traverse(setItemDataAndSeriesIndex, el);\n            }\n        }\n\n        this._graphicEls[idx] = el;\n    };\n\n    /**\n     * @param {number} idx\n     * @return {module:zrender/Element}\n     */\n    listProto.getItemGraphicEl = function (idx) {\n        return this._graphicEls[idx];\n    };\n\n    /**\n     * @param {Function} cb\n     * @param {*} context\n     */\n    listProto.eachItemGraphicEl = function (cb, context) {\n        zrUtil.each(this._graphicEls, function (el, idx) {\n            if (el) {\n                cb && cb.call(context, el, idx);\n            }\n        });\n    };\n\n    /**\n     * Shallow clone a new list except visual and layout properties, and graph elements.\n     * New list only change the indices.\n     */\n    listProto.cloneShallow = function () {\n        var dimensionInfoList = zrUtil.map(this.dimensions, this.getDimensionInfo, this);\n        var list = new List(dimensionInfoList, this.hostModel);\n\n        // FIXME\n        list._storage = this._storage;\n\n        transferProperties(list, this);\n\n\n        // Clone will not change the data extent and indices\n        list.indices = this.indices.slice();\n\n        if (this._extent) {\n            list._extent = zrUtil.extend({}, this._extent);\n        }\n\n        return list;\n    };\n\n    /**\n     * Wrap some method to add more feature\n     * @param {string} methodName\n     * @param {Function} injectFunction\n     */\n    listProto.wrapMethod = function (methodName, injectFunction) {\n        var originalMethod = this[methodName];\n        if (typeof originalMethod !== 'function') {\n            return;\n        }\n        this.__wrappedMethods = this.__wrappedMethods || [];\n        this.__wrappedMethods.push(methodName);\n        this[methodName] = function () {\n            var res = originalMethod.apply(this, arguments);\n            return injectFunction.apply(this, [res].concat(zrUtil.slice(arguments)));\n        };\n    };\n\n    // Methods that create a new list based on this list should be listed here.\n    // Notice that those method should `RETURN` the new list.\n    listProto.TRANSFERABLE_METHODS = ['cloneShallow', 'downSample', 'map'];\n    // Methods that change indices of this list should be listed here.\n    listProto.CHANGABLE_METHODS = ['filterSelf'];\n\n    module.exports = List;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(32)))\n\n/***/ }),\n/* 192 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Complete dimensions by data (guess dimension).\n */\n\n\n    var zrUtil = __webpack_require__(158);\n\n    /**\n     * Complete the dimensions array guessed from the data structure.\n     * @param  {Array.<string>} dimensions Necessary dimensions, like ['x', 'y']\n     * @param  {Array} data Data list. [[1, 2, 3], [2, 3, 4]]\n     * @param  {Object} [opt]\n     * @param  {Array.<string>} [opt.defaultNames] Default names to fill not necessary dimensions, like ['value']\n     * @param  {string} [opt.extraPrefix] Prefix of name when filling the left dimensions.\n     * @param  {number} [opt.dimCount] If not specified, guess by the first data item.\n     * @return {Array.<string>}\n     */\n    function completeDimensions(dimensions, data, opt) {\n        if (!data) {\n            return dimensions;\n        }\n\n        opt = opt || {};\n\n        var dimCount = opt.dimCount;\n        if (dimCount == null) {\n            var value0 = retrieveValue(data[0]);\n            dimCount = zrUtil.isArray(value0) && value0.length || 1;\n        }\n\n        var defaultNames = opt.defaultNames || [];\n        var extraPrefix = opt.extraPrefix || 'extra';\n        for (var i = 0; i < dimCount; i++) {\n            if (!dimensions[i]) {\n                var name = defaultNames[i] || (extraPrefix + (i - defaultNames.length));\n                dimensions[i] = guessOrdinal(data, i)\n                    ? {type: 'ordinal', name: name}\n                    : name;\n            }\n        }\n\n        return dimensions;\n    }\n\n    // The rule should not be complex, otherwise user might not\n    // be able to known where the data is wrong.\n    var guessOrdinal = completeDimensions.guessOrdinal = function (data, dimIndex) {\n        for (var i = 0, len = data.length; i < len; i++) {\n            var value = retrieveValue(data[i]);\n\n            if (!zrUtil.isArray(value)) {\n                return false;\n            }\n\n            var value = value[dimIndex];\n            if (value != null && isFinite(value)) {\n                return false;\n            }\n            else if (zrUtil.isString(value) && value !== '-') {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    function retrieveValue(o) {\n        return zrUtil.isArray(o) ? o : zrUtil.isObject(o) ? o.value: o;\n    }\n\n    module.exports = completeDimensions;\n\n\n\n/***/ }),\n/* 193 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Interval scale\n * @module echarts/scale/Interval\n */\n\n\n\n    var numberUtil = __webpack_require__(161);\n    var formatUtil = __webpack_require__(166);\n    var Scale = __webpack_require__(181);\n    var helper = __webpack_require__(217);\n\n    var roundNumber = numberUtil.round;\n\n    /**\n     * @alias module:echarts/coord/scale/Interval\n     * @constructor\n     */\n    var IntervalScale = Scale.extend({\n\n        type: 'interval',\n\n        _interval: 0,\n\n        _intervalPrecision: 2,\n\n        setExtent: function (start, end) {\n            var thisExtent = this._extent;\n            //start,end may be a Number like '25',so...\n            if (!isNaN(start)) {\n                thisExtent[0] = parseFloat(start);\n            }\n            if (!isNaN(end)) {\n                thisExtent[1] = parseFloat(end);\n            }\n        },\n\n        unionExtent: function (other) {\n            var extent = this._extent;\n            other[0] < extent[0] && (extent[0] = other[0]);\n            other[1] > extent[1] && (extent[1] = other[1]);\n\n            // unionExtent may called by it's sub classes\n            IntervalScale.prototype.setExtent.call(this, extent[0], extent[1]);\n        },\n        /**\n         * Get interval\n         */\n        getInterval: function () {\n            if (!this._interval) {\n                this.niceTicks();\n            }\n            return this._interval;\n        },\n\n        /**\n         * Set interval\n         */\n        setInterval: function (interval) {\n            this._interval = interval;\n            // Dropped auto calculated niceExtent and use user setted extent\n            // We assume user wan't to set both interval, min, max to get a better result\n            this._niceExtent = this._extent.slice();\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicks: function () {\n            if (!this._interval) {\n                this.niceTicks();\n            }\n            return helper.intervalScaleGetTicks(\n                this._interval, this._extent, this._niceExtent, this._intervalPrecision\n            );\n        },\n\n        /**\n         * @return {Array.<string>}\n         */\n        getTicksLabels: function () {\n            var labels = [];\n            var ticks = this.getTicks();\n            for (var i = 0; i < ticks.length; i++) {\n                labels.push(this.getLabel(ticks[i]));\n            }\n            return labels;\n        },\n\n        /**\n         * @param {number} data\n         * @param {Object} [opt]\n         * @param {number|string} [opt.precision] If 'auto', use nice presision.\n         * @param {boolean} [opt.pad] returns 1.50 but not 1.5 if precision is 2.\n         * @return {string}\n         */\n        getLabel: function (data, opt) {\n            if (data == null) {\n                return '';\n            }\n\n            var precision = opt && opt.precision;\n\n            if (precision == null) {\n                precision = numberUtil.getPrecisionSafe(data) || 0;\n            }\n            else if (precision === 'auto') {\n                // Should be more precise then tick.\n                precision = this._intervalPrecision;\n            }\n\n            // (1) If `precision` is set, 12.005 should be display as '12.00500'.\n            // (2) Use roundNumber (toFixed) to avoid scientific notation like '3.5e-7'.\n            data = roundNumber(data, precision, true);\n\n            return formatUtil.addCommas(data);\n        },\n\n        /**\n         * Update interval and extent of intervals for nice ticks\n         *\n         * @param {number} [splitNumber = 5] Desired number of ticks\n         */\n        niceTicks: function (splitNumber) {\n            splitNumber = splitNumber || 5;\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            if (!isFinite(span)) {\n                return;\n            }\n            // User may set axis min 0 and data are all negative\n            // FIXME If it needs to reverse ?\n            if (span < 0) {\n                span = -span;\n                extent.reverse();\n            }\n\n            var result = helper.intervalScaleNiceTicks(extent, splitNumber);\n\n            this._intervalPrecision = result.intervalPrecision;\n            this._interval = result.interval;\n            this._niceExtent = result.niceTickExtent;\n        },\n\n        /**\n         * Nice extent.\n         * @param {number} [splitNumber = 5] Given approx tick number\n         * @param {boolean} [fixMin=false]\n         * @param {boolean} [fixMax=false]\n         */\n        niceExtent: function (splitNumber, fixMin, fixMax) {\n            var extent = this._extent;\n            // If extent start and end are same, expand them\n            if (extent[0] === extent[1]) {\n                if (extent[0] !== 0) {\n                    // Expand extent\n                    var expandSize = extent[0];\n                    // In the fowllowing case\n                    //      Axis has been fixed max 100\n                    //      Plus data are all 100 and axis extent are [100, 100].\n                    // Extend to the both side will cause expanded max is larger than fixed max.\n                    // So only expand to the smaller side.\n                    if (!fixMax) {\n                        extent[1] += expandSize / 2;\n                        extent[0] -= expandSize / 2;\n                    }\n                    else {\n                        extent[0] -= expandSize / 2;\n                    }\n                }\n                else {\n                    extent[1] = 1;\n                }\n            }\n            var span = extent[1] - extent[0];\n            // If there are no data and extent are [Infinity, -Infinity]\n            if (!isFinite(span)) {\n                extent[0] = 0;\n                extent[1] = 1;\n            }\n\n            this.niceTicks(splitNumber);\n\n            // var extent = this._extent;\n            var interval = this._interval;\n\n            if (!fixMin) {\n                extent[0] = roundNumber(Math.floor(extent[0] / interval) * interval);\n            }\n            if (!fixMax) {\n                extent[1] = roundNumber(Math.ceil(extent[1] / interval) * interval);\n            }\n        }\n    });\n\n    /**\n     * @return {module:echarts/scale/Time}\n     */\n    IntervalScale.create = function () {\n        return new IntervalScale();\n    };\n\n    module.exports = IntervalScale;\n\n\n\n/***/ }),\n/* 194 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(158);\n    var clazz = __webpack_require__(168);\n\n    var parseClassType = clazz.parseClassType;\n\n    var base = 0;\n\n    var componentUtil = {};\n\n    var DELIMITER = '_';\n\n    /**\n     * @public\n     * @param {string} type\n     * @return {string}\n     */\n    componentUtil.getUID = function (type) {\n        // Considering the case of crossing js context,\n        // use Math.random to make id as unique as possible.\n        return [(type || ''), base++, Math.random()].join(DELIMITER);\n    };\n\n    /**\n     * @inner\n     */\n    componentUtil.enableSubTypeDefaulter = function (entity) {\n\n        var subTypeDefaulters = {};\n\n        entity.registerSubTypeDefaulter = function (componentType, defaulter) {\n            componentType = parseClassType(componentType);\n            subTypeDefaulters[componentType.main] = defaulter;\n        };\n\n        entity.determineSubType = function (componentType, option) {\n            var type = option.type;\n            if (!type) {\n                var componentTypeMain = parseClassType(componentType).main;\n                if (entity.hasSubTypes(componentType) && subTypeDefaulters[componentTypeMain]) {\n                    type = subTypeDefaulters[componentTypeMain](option);\n                }\n            }\n            return type;\n        };\n\n        return entity;\n    };\n\n    /**\n     * Topological travel on Activity Network (Activity On Vertices).\n     * Dependencies is defined in Model.prototype.dependencies, like ['xAxis', 'yAxis'].\n     *\n     * If 'xAxis' or 'yAxis' is absent in componentTypeList, just ignore it in topology.\n     *\n     * If there is circle dependencey, Error will be thrown.\n     *\n     */\n    componentUtil.enableTopologicalTravel = function (entity, dependencyGetter) {\n\n        /**\n         * @public\n         * @param {Array.<string>} targetNameList Target Component type list.\n         *                                           Can be ['aa', 'bb', 'aa.xx']\n         * @param {Array.<string>} fullNameList By which we can build dependency graph.\n         * @param {Function} callback Params: componentType, dependencies.\n         * @param {Object} context Scope of callback.\n         */\n        entity.topologicalTravel = function (targetNameList, fullNameList, callback, context) {\n            if (!targetNameList.length) {\n                return;\n            }\n\n            var result = makeDepndencyGraph(fullNameList);\n            var graph = result.graph;\n            var stack = result.noEntryList;\n\n            var targetNameSet = {};\n            zrUtil.each(targetNameList, function (name) {\n                targetNameSet[name] = true;\n            });\n\n            while (stack.length) {\n                var currComponentType = stack.pop();\n                var currVertex = graph[currComponentType];\n                var isInTargetNameSet = !!targetNameSet[currComponentType];\n                if (isInTargetNameSet) {\n                    callback.call(context, currComponentType, currVertex.originalDeps.slice());\n                    delete targetNameSet[currComponentType];\n                }\n                zrUtil.each(\n                    currVertex.successor,\n                    isInTargetNameSet ? removeEdgeAndAdd : removeEdge\n                );\n            }\n\n            zrUtil.each(targetNameSet, function () {\n                throw new Error('Circle dependency may exists');\n            });\n\n            function removeEdge(succComponentType) {\n                graph[succComponentType].entryCount--;\n                if (graph[succComponentType].entryCount === 0) {\n                    stack.push(succComponentType);\n                }\n            }\n\n            // Consider this case: legend depends on series, and we call\n            // chart.setOption({series: [...]}), where only series is in option.\n            // If we do not have 'removeEdgeAndAdd', legendModel.mergeOption will\n            // not be called, but only sereis.mergeOption is called. Thus legend\n            // have no chance to update its local record about series (like which\n            // name of series is available in legend).\n            function removeEdgeAndAdd(succComponentType) {\n                targetNameSet[succComponentType] = true;\n                removeEdge(succComponentType);\n            }\n        };\n\n        /**\n         * DepndencyGraph: {Object}\n         * key: conponentType,\n         * value: {\n         *     successor: [conponentTypes...],\n         *     originalDeps: [conponentTypes...],\n         *     entryCount: {number}\n         * }\n         */\n        function makeDepndencyGraph(fullNameList) {\n            var graph = {};\n            var noEntryList = [];\n\n            zrUtil.each(fullNameList, function (name) {\n\n                var thisItem = createDependencyGraphItem(graph, name);\n                var originalDeps = thisItem.originalDeps = dependencyGetter(name);\n\n                var availableDeps = getAvailableDependencies(originalDeps, fullNameList);\n                thisItem.entryCount = availableDeps.length;\n                if (thisItem.entryCount === 0) {\n                    noEntryList.push(name);\n                }\n\n                zrUtil.each(availableDeps, function (dependentName) {\n                    if (zrUtil.indexOf(thisItem.predecessor, dependentName) < 0) {\n                        thisItem.predecessor.push(dependentName);\n                    }\n                    var thatItem = createDependencyGraphItem(graph, dependentName);\n                    if (zrUtil.indexOf(thatItem.successor, dependentName) < 0) {\n                        thatItem.successor.push(name);\n                    }\n                });\n            });\n\n            return {graph: graph, noEntryList: noEntryList};\n        }\n\n        function createDependencyGraphItem(graph, name) {\n            if (!graph[name]) {\n                graph[name] = {predecessor: [], successor: []};\n            }\n            return graph[name];\n        }\n\n        function getAvailableDependencies(originalDeps, fullNameList) {\n            var availableDeps = [];\n            zrUtil.each(originalDeps, function (dep) {\n                zrUtil.indexOf(fullNameList, dep) >= 0 && availableDeps.push(dep);\n            });\n            return availableDeps;\n        }\n    };\n\n    module.exports = componentUtil;\n\n\n/***/ }),\n/* 195 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n/* styles */\n__webpack_require__(369)\n\nvar Component = __webpack_require__(18)(\n  /* script */\n  __webpack_require__(235),\n  /* template */\n  __webpack_require__(395),\n  /* scopeId */\n  \"data-v-897bed0c\",\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n/* 196 */\n/***/ (function(module, exports) {\n\n// https://github.com/mziccard/node-timsort\n\n    var DEFAULT_MIN_MERGE = 32;\n\n    var DEFAULT_MIN_GALLOPING = 7;\n\n    var DEFAULT_TMP_STORAGE_LENGTH = 256;\n\n    function minRunLength(n) {\n        var r = 0;\n\n        while (n >= DEFAULT_MIN_MERGE) {\n            r |= n & 1;\n            n >>= 1;\n        }\n\n        return n + r;\n    }\n\n    function makeAscendingRun(array, lo, hi, compare) {\n        var runHi = lo + 1;\n\n        if (runHi === hi) {\n            return 1;\n        }\n\n        if (compare(array[runHi++], array[lo]) < 0) {\n            while (runHi < hi && compare(array[runHi], array[runHi - 1]) < 0) {\n                runHi++;\n            }\n\n            reverseRun(array, lo, runHi);\n        }\n        else {\n            while (runHi < hi && compare(array[runHi], array[runHi - 1]) >= 0) {\n                runHi++;\n            }\n        }\n\n        return runHi - lo;\n    }\n\n    function reverseRun(array, lo, hi) {\n        hi--;\n\n        while (lo < hi) {\n            var t = array[lo];\n            array[lo++] = array[hi];\n            array[hi--] = t;\n        }\n    }\n\n    function binaryInsertionSort(array, lo, hi, start, compare) {\n        if (start === lo) {\n            start++;\n        }\n\n        for (; start < hi; start++) {\n            var pivot = array[start];\n\n            var left = lo;\n            var right = start;\n            var mid;\n\n            while (left < right) {\n                mid = left + right >>> 1;\n\n                if (compare(pivot, array[mid]) < 0) {\n                    right = mid;\n                }\n                else {\n                    left = mid + 1;\n                }\n            }\n\n            var n = start - left;\n\n            switch (n) {\n                case 3:\n                    array[left + 3] = array[left + 2];\n\n                case 2:\n                    array[left + 2] = array[left + 1];\n\n                case 1:\n                    array[left + 1] = array[left];\n                    break;\n                default:\n                    while (n > 0) {\n                        array[left + n] = array[left + n - 1];\n                        n--;\n                    }\n            }\n\n            array[left] = pivot;\n        }\n    }\n\n    function gallopLeft(value, array, start, length, hint, compare) {\n        var lastOffset = 0;\n        var maxOffset = 0;\n        var offset = 1;\n\n        if (compare(value, array[start + hint]) > 0) {\n            maxOffset = length - hint;\n\n            while (offset < maxOffset && compare(value, array[start + hint + offset]) > 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            lastOffset += hint;\n            offset += hint;\n        }\n        else {\n            maxOffset = hint + 1;\n            while (offset < maxOffset && compare(value, array[start + hint - offset]) <= 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            var tmp = lastOffset;\n            lastOffset = hint - offset;\n            offset = hint - tmp;\n        }\n\n        lastOffset++;\n        while (lastOffset < offset) {\n            var m = lastOffset + (offset - lastOffset >>> 1);\n\n            if (compare(value, array[start + m]) > 0) {\n                lastOffset = m + 1;\n            }\n            else {\n                offset = m;\n            }\n        }\n        return offset;\n    }\n\n    function gallopRight(value, array, start, length, hint, compare) {\n        var lastOffset = 0;\n        var maxOffset = 0;\n        var offset = 1;\n\n        if (compare(value, array[start + hint]) < 0) {\n            maxOffset = hint + 1;\n\n            while (offset < maxOffset && compare(value, array[start + hint - offset]) < 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            var tmp = lastOffset;\n            lastOffset = hint - offset;\n            offset = hint - tmp;\n        }\n        else {\n            maxOffset = length - hint;\n\n            while (offset < maxOffset && compare(value, array[start + hint + offset]) >= 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            lastOffset += hint;\n            offset += hint;\n        }\n\n        lastOffset++;\n\n        while (lastOffset < offset) {\n            var m = lastOffset + (offset - lastOffset >>> 1);\n\n            if (compare(value, array[start + m]) < 0) {\n                offset = m;\n            }\n            else {\n                lastOffset = m + 1;\n            }\n        }\n\n        return offset;\n    }\n\n    function TimSort(array, compare) {\n        var minGallop = DEFAULT_MIN_GALLOPING;\n        var length = 0;\n        var tmpStorageLength = DEFAULT_TMP_STORAGE_LENGTH;\n        var stackLength = 0;\n        var runStart;\n        var runLength;\n        var stackSize = 0;\n\n        length = array.length;\n\n        if (length < 2 * DEFAULT_TMP_STORAGE_LENGTH) {\n            tmpStorageLength = length >>> 1;\n        }\n\n        var tmp = [];\n\n        stackLength = length < 120 ? 5 : length < 1542 ? 10 : length < 119151 ? 19 : 40;\n\n        runStart = [];\n        runLength = [];\n\n        function pushRun(_runStart, _runLength) {\n            runStart[stackSize] = _runStart;\n            runLength[stackSize] = _runLength;\n            stackSize += 1;\n        }\n\n        function mergeRuns() {\n            while (stackSize > 1) {\n                var n = stackSize - 2;\n\n                if (n >= 1 && runLength[n - 1] <= runLength[n] + runLength[n + 1] || n >= 2 && runLength[n - 2] <= runLength[n] + runLength[n - 1]) {\n                    if (runLength[n - 1] < runLength[n + 1]) {\n                        n--;\n                    }\n                }\n                else if (runLength[n] > runLength[n + 1]) {\n                    break;\n                }\n                mergeAt(n);\n            }\n        }\n\n        function forceMergeRuns() {\n            while (stackSize > 1) {\n                var n = stackSize - 2;\n\n                if (n > 0 && runLength[n - 1] < runLength[n + 1]) {\n                    n--;\n                }\n\n                mergeAt(n);\n            }\n        }\n\n        function mergeAt(i) {\n            var start1 = runStart[i];\n            var length1 = runLength[i];\n            var start2 = runStart[i + 1];\n            var length2 = runLength[i + 1];\n\n            runLength[i] = length1 + length2;\n\n            if (i === stackSize - 3) {\n                runStart[i + 1] = runStart[i + 2];\n                runLength[i + 1] = runLength[i + 2];\n            }\n\n            stackSize--;\n\n            var k = gallopRight(array[start2], array, start1, length1, 0, compare);\n            start1 += k;\n            length1 -= k;\n\n            if (length1 === 0) {\n                return;\n            }\n\n            length2 = gallopLeft(array[start1 + length1 - 1], array, start2, length2, length2 - 1, compare);\n\n            if (length2 === 0) {\n                return;\n            }\n\n            if (length1 <= length2) {\n                mergeLow(start1, length1, start2, length2);\n            }\n            else {\n                mergeHigh(start1, length1, start2, length2);\n            }\n        }\n\n        function mergeLow(start1, length1, start2, length2) {\n            var i = 0;\n\n            for (i = 0; i < length1; i++) {\n                tmp[i] = array[start1 + i];\n            }\n\n            var cursor1 = 0;\n            var cursor2 = start2;\n            var dest = start1;\n\n            array[dest++] = array[cursor2++];\n\n            if (--length2 === 0) {\n                for (i = 0; i < length1; i++) {\n                    array[dest + i] = tmp[cursor1 + i];\n                }\n                return;\n            }\n\n            if (length1 === 1) {\n                for (i = 0; i < length2; i++) {\n                    array[dest + i] = array[cursor2 + i];\n                }\n                array[dest + length2] = tmp[cursor1];\n                return;\n            }\n\n            var _minGallop = minGallop;\n            var count1, count2, exit;\n\n            while (1) {\n                count1 = 0;\n                count2 = 0;\n                exit = false;\n\n                do {\n                    if (compare(array[cursor2], tmp[cursor1]) < 0) {\n                        array[dest++] = array[cursor2++];\n                        count2++;\n                        count1 = 0;\n\n                        if (--length2 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    else {\n                        array[dest++] = tmp[cursor1++];\n                        count1++;\n                        count2 = 0;\n                        if (--length1 === 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                } while ((count1 | count2) < _minGallop);\n\n                if (exit) {\n                    break;\n                }\n\n                do {\n                    count1 = gallopRight(array[cursor2], tmp, cursor1, length1, 0, compare);\n\n                    if (count1 !== 0) {\n                        for (i = 0; i < count1; i++) {\n                            array[dest + i] = tmp[cursor1 + i];\n                        }\n\n                        dest += count1;\n                        cursor1 += count1;\n                        length1 -= count1;\n                        if (length1 <= 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest++] = array[cursor2++];\n\n                    if (--length2 === 0) {\n                        exit = true;\n                        break;\n                    }\n\n                    count2 = gallopLeft(tmp[cursor1], array, cursor2, length2, 0, compare);\n\n                    if (count2 !== 0) {\n                        for (i = 0; i < count2; i++) {\n                            array[dest + i] = array[cursor2 + i];\n                        }\n\n                        dest += count2;\n                        cursor2 += count2;\n                        length2 -= count2;\n\n                        if (length2 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    array[dest++] = tmp[cursor1++];\n\n                    if (--length1 === 1) {\n                        exit = true;\n                        break;\n                    }\n\n                    _minGallop--;\n                } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n                if (exit) {\n                    break;\n                }\n\n                if (_minGallop < 0) {\n                    _minGallop = 0;\n                }\n\n                _minGallop += 2;\n            }\n\n            minGallop = _minGallop;\n\n            minGallop < 1 && (minGallop = 1);\n\n            if (length1 === 1) {\n                for (i = 0; i < length2; i++) {\n                    array[dest + i] = array[cursor2 + i];\n                }\n                array[dest + length2] = tmp[cursor1];\n            }\n            else if (length1 === 0) {\n                throw new Error();\n                // throw new Error('mergeLow preconditions were not respected');\n            }\n            else {\n                for (i = 0; i < length1; i++) {\n                    array[dest + i] = tmp[cursor1 + i];\n                }\n            }\n        }\n\n        function mergeHigh (start1, length1, start2, length2) {\n            var i = 0;\n\n            for (i = 0; i < length2; i++) {\n                tmp[i] = array[start2 + i];\n            }\n\n            var cursor1 = start1 + length1 - 1;\n            var cursor2 = length2 - 1;\n            var dest = start2 + length2 - 1;\n            var customCursor = 0;\n            var customDest = 0;\n\n            array[dest--] = array[cursor1--];\n\n            if (--length1 === 0) {\n                customCursor = dest - (length2 - 1);\n\n                for (i = 0; i < length2; i++) {\n                    array[customCursor + i] = tmp[i];\n                }\n\n                return;\n            }\n\n            if (length2 === 1) {\n                dest -= length1;\n                cursor1 -= length1;\n                customDest = dest + 1;\n                customCursor = cursor1 + 1;\n\n                for (i = length1 - 1; i >= 0; i--) {\n                    array[customDest + i] = array[customCursor + i];\n                }\n\n                array[dest] = tmp[cursor2];\n                return;\n            }\n\n            var _minGallop = minGallop;\n\n            while (true) {\n                var count1 = 0;\n                var count2 = 0;\n                var exit = false;\n\n                do {\n                    if (compare(tmp[cursor2], array[cursor1]) < 0) {\n                        array[dest--] = array[cursor1--];\n                        count1++;\n                        count2 = 0;\n                        if (--length1 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    else {\n                        array[dest--] = tmp[cursor2--];\n                        count2++;\n                        count1 = 0;\n                        if (--length2 === 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                } while ((count1 | count2) < _minGallop);\n\n                if (exit) {\n                    break;\n                }\n\n                do {\n                    count1 = length1 - gallopRight(tmp[cursor2], array, start1, length1, length1 - 1, compare);\n\n                    if (count1 !== 0) {\n                        dest -= count1;\n                        cursor1 -= count1;\n                        length1 -= count1;\n                        customDest = dest + 1;\n                        customCursor = cursor1 + 1;\n\n                        for (i = count1 - 1; i >= 0; i--) {\n                            array[customDest + i] = array[customCursor + i];\n                        }\n\n                        if (length1 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest--] = tmp[cursor2--];\n\n                    if (--length2 === 1) {\n                        exit = true;\n                        break;\n                    }\n\n                    count2 = length2 - gallopLeft(array[cursor1], tmp, 0, length2, length2 - 1, compare);\n\n                    if (count2 !== 0) {\n                        dest -= count2;\n                        cursor2 -= count2;\n                        length2 -= count2;\n                        customDest = dest + 1;\n                        customCursor = cursor2 + 1;\n\n                        for (i = 0; i < count2; i++) {\n                            array[customDest + i] = tmp[customCursor + i];\n                        }\n\n                        if (length2 <= 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest--] = array[cursor1--];\n\n                    if (--length1 === 0) {\n                        exit = true;\n                        break;\n                    }\n\n                    _minGallop--;\n                } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n                if (exit) {\n                    break;\n                }\n\n                if (_minGallop < 0) {\n                    _minGallop = 0;\n                }\n\n                _minGallop += 2;\n            }\n\n            minGallop = _minGallop;\n\n            if (minGallop < 1) {\n                minGallop = 1;\n            }\n\n            if (length2 === 1) {\n                dest -= length1;\n                cursor1 -= length1;\n                customDest = dest + 1;\n                customCursor = cursor1 + 1;\n\n                for (i = length1 - 1; i >= 0; i--) {\n                    array[customDest + i] = array[customCursor + i];\n                }\n\n                array[dest] = tmp[cursor2];\n            }\n            else if (length2 === 0) {\n                throw new Error();\n                // throw new Error('mergeHigh preconditions were not respected');\n            }\n            else {\n                customCursor = dest - (length2 - 1);\n                for (i = 0; i < length2; i++) {\n                    array[customCursor + i] = tmp[i];\n                }\n            }\n        }\n\n        this.mergeRuns = mergeRuns;\n        this.forceMergeRuns = forceMergeRuns;\n        this.pushRun = pushRun;\n    }\n\n    function sort(array, compare, lo, hi) {\n        if (!lo) {\n            lo = 0;\n        }\n        if (!hi) {\n            hi = array.length;\n        }\n\n        var remaining = hi - lo;\n\n        if (remaining < 2) {\n            return;\n        }\n\n        var runLength = 0;\n\n        if (remaining < DEFAULT_MIN_MERGE) {\n            runLength = makeAscendingRun(array, lo, hi, compare);\n            binaryInsertionSort(array, lo, hi, lo + runLength, compare);\n            return;\n        }\n\n        var ts = new TimSort(array, compare);\n\n        var minRun = minRunLength(remaining);\n\n        do {\n            runLength = makeAscendingRun(array, lo, hi, compare);\n            if (runLength < minRun) {\n                var force = remaining;\n                if (force > minRun) {\n                    force = minRun;\n                }\n\n                binaryInsertionSort(array, lo, lo + force, lo + runLength, compare);\n                runLength = force;\n            }\n\n            ts.pushRun(lo, runLength);\n            ts.mergeRuns();\n\n            remaining -= runLength;\n            lo += runLength;\n        } while (remaining !== 0);\n\n        ts.forceMergeRuns();\n    }\n\n    module.exports = sort;\n\n\n/***/ }),\n/* 197 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 可绘制的图形基类\n * Base class of all displayable graphic objects\n * @module zrender/graphic/Displayable\n */\n\n\n\n    var zrUtil = __webpack_require__(158);\n\n    var Style = __webpack_require__(232);\n\n    var Element = __webpack_require__(223);\n    var RectText = __webpack_require__(424);\n    // var Stateful = require('./mixin/Stateful');\n\n    /**\n     * @alias module:zrender/graphic/Displayable\n     * @extends module:zrender/Element\n     * @extends module:zrender/graphic/mixin/RectText\n     */\n    function Displayable(opts) {\n\n        opts = opts || {};\n\n        Element.call(this, opts);\n\n        // Extend properties\n        for (var name in opts) {\n            if (\n                opts.hasOwnProperty(name) &&\n                name !== 'style'\n            ) {\n                this[name] = opts[name];\n            }\n        }\n\n        /**\n         * @type {module:zrender/graphic/Style}\n         */\n        this.style = new Style(opts.style);\n\n        this._rect = null;\n        // Shapes for cascade clipping.\n        this.__clipPaths = [];\n\n        // FIXME Stateful must be mixined after style is setted\n        // Stateful.call(this, opts);\n    }\n\n    Displayable.prototype = {\n\n        constructor: Displayable,\n\n        type: 'displayable',\n\n        /**\n         * Displayable 是否为脏，Painter 中会根据该标记判断是否需要是否需要重新绘制\n         * Dirty flag. From which painter will determine if this displayable object needs brush\n         * @name module:zrender/graphic/Displayable#__dirty\n         * @type {boolean}\n         */\n        __dirty: true,\n\n        /**\n         * 图形是否可见，为true时不绘制图形，但是仍能触发鼠标事件\n         * If ignore drawing of the displayable object. Mouse event will still be triggered\n         * @name module:/zrender/graphic/Displayable#invisible\n         * @type {boolean}\n         * @default false\n         */\n        invisible: false,\n\n        /**\n         * @name module:/zrender/graphic/Displayable#z\n         * @type {number}\n         * @default 0\n         */\n        z: 0,\n\n        /**\n         * @name module:/zrender/graphic/Displayable#z\n         * @type {number}\n         * @default 0\n         */\n        z2: 0,\n\n        /**\n         * z层level，决定绘画在哪层canvas中\n         * @name module:/zrender/graphic/Displayable#zlevel\n         * @type {number}\n         * @default 0\n         */\n        zlevel: 0,\n\n        /**\n         * 是否可拖拽\n         * @name module:/zrender/graphic/Displayable#draggable\n         * @type {boolean}\n         * @default false\n         */\n        draggable: false,\n\n        /**\n         * 是否正在拖拽\n         * @name module:/zrender/graphic/Displayable#draggable\n         * @type {boolean}\n         * @default false\n         */\n        dragging: false,\n\n        /**\n         * 是否相应鼠标事件\n         * @name module:/zrender/graphic/Displayable#silent\n         * @type {boolean}\n         * @default false\n         */\n        silent: false,\n\n        /**\n         * If enable culling\n         * @type {boolean}\n         * @default false\n         */\n        culling: false,\n\n        /**\n         * Mouse cursor when hovered\n         * @name module:/zrender/graphic/Displayable#cursor\n         * @type {string}\n         */\n        cursor: 'pointer',\n\n        /**\n         * If hover area is bounding rect\n         * @name module:/zrender/graphic/Displayable#rectHover\n         * @type {string}\n         */\n        rectHover: false,\n\n        /**\n         * Render the element progressively when the value >= 0,\n         * usefull for large data.\n         * @type {number}\n         */\n        progressive: -1,\n\n        beforeBrush: function (ctx) {},\n\n        afterBrush: function (ctx) {},\n\n        /**\n         * 图形绘制方法\n         * @param {Canvas2DRenderingContext} ctx\n         */\n        // Interface\n        brush: function (ctx, prevEl) {},\n\n        /**\n         * 获取最小包围盒\n         * @return {module:zrender/core/BoundingRect}\n         */\n        // Interface\n        getBoundingRect: function () {},\n\n        /**\n         * 判断坐标 x, y 是否在图形上\n         * If displayable element contain coord x, y\n         * @param  {number} x\n         * @param  {number} y\n         * @return {boolean}\n         */\n        contain: function (x, y) {\n            return this.rectContain(x, y);\n        },\n\n        /**\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {\n            cb.call(context, this);\n        },\n\n        /**\n         * 判断坐标 x, y 是否在图形的包围盒上\n         * If bounding rect of element contain coord x, y\n         * @param  {number} x\n         * @param  {number} y\n         * @return {boolean}\n         */\n        rectContain: function (x, y) {\n            var coord = this.transformCoordToLocal(x, y);\n            var rect = this.getBoundingRect();\n            return rect.contain(coord[0], coord[1]);\n        },\n\n        /**\n         * 标记图形元素为脏，并且在下一帧重绘\n         * Mark displayable element dirty and refresh next frame\n         */\n        dirty: function () {\n            this.__dirty = true;\n\n            this._rect = null;\n\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * 图形是否会触发事件\n         * If displayable object binded any event\n         * @return {boolean}\n         */\n        // TODO, 通过 bind 绑定的事件\n        // isSilent: function () {\n        //     return !(\n        //         this.hoverable || this.draggable\n        //         || this.onmousemove || this.onmouseover || this.onmouseout\n        //         || this.onmousedown || this.onmouseup || this.onclick\n        //         || this.ondragenter || this.ondragover || this.ondragleave\n        //         || this.ondrop\n        //     );\n        // },\n        /**\n         * Alias for animate('style')\n         * @param {boolean} loop\n         */\n        animateStyle: function (loop) {\n            return this.animate('style', loop);\n        },\n\n        attrKV: function (key, value) {\n            if (key !== 'style') {\n                Element.prototype.attrKV.call(this, key, value);\n            }\n            else {\n                this.style.set(value);\n            }\n        },\n\n        /**\n         * @param {Object|string} key\n         * @param {*} value\n         */\n        setStyle: function (key, value) {\n            this.style.set(key, value);\n            this.dirty(false);\n            return this;\n        },\n\n        /**\n         * Use given style object\n         * @param  {Object} obj\n         */\n        useStyle: function (obj) {\n            this.style = new Style(obj);\n            this.dirty(false);\n            return this;\n        }\n    };\n\n    zrUtil.inherits(Displayable, Element);\n\n    zrUtil.mixin(Displayable, RectText);\n    // zrUtil.mixin(Displayable, Stateful);\n\n    module.exports = Displayable;\n\n\n/***/ }),\n/* 198 */\n/***/ (function(module, exports) {\n\n\n\n    /**\n     * @param {Array.<Object>} colorStops\n     */\n    var Gradient = function (colorStops) {\n\n        this.colorStops = colorStops || [];\n    };\n\n    Gradient.prototype = {\n\n        constructor: Gradient,\n\n        addColorStop: function (offset, color) {\n            this.colorStops.push({\n\n                offset: offset,\n\n                color: color\n            });\n        }\n    };\n\n    module.exports = Gradient;\n\n\n/***/ }),\n/* 199 */,\n/* 200 */,\n/* 201 */,\n/* 202 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(158);\n\n    __webpack_require__(214);\n\n    __webpack_require__(297);\n    __webpack_require__(298);\n\n    var barLayoutGrid = __webpack_require__(333);\n    var echarts = __webpack_require__(159);\n\n    echarts.registerLayout(zrUtil.curry(barLayoutGrid, 'bar'));\n    // Visual coding for legend\n    echarts.registerVisual(function (ecModel) {\n        ecModel.eachSeriesByType('bar', function (seriesModel) {\n            var data = seriesModel.getData();\n            data.setVisual('legendSymbol', 'roundRect');\n        });\n    });\n\n    // In case developer forget to include grid component\n    __webpack_require__(314);\n\n\n/***/ }),\n/* 203 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var List = __webpack_require__(191);\n    var completeDimensions = __webpack_require__(192);\n    var zrUtil = __webpack_require__(158);\n    var modelUtil = __webpack_require__(162);\n    var CoordinateSystem = __webpack_require__(188);\n    var getDataItemValue = modelUtil.getDataItemValue;\n    var converDataValue = modelUtil.converDataValue;\n\n    function firstDataNotNull(data) {\n        var i = 0;\n        while (i < data.length && data[i] == null) {\n            i++;\n        }\n        return data[i];\n    }\n    function ifNeedCompleteOrdinalData(data) {\n        var sampleItem = firstDataNotNull(data);\n        return sampleItem != null\n            && !zrUtil.isArray(getDataItemValue(sampleItem));\n    }\n\n    /**\n     * Helper function to create a list from option data\n     */\n    function createListFromArray(data, seriesModel, ecModel) {\n        // If data is undefined\n        data = data || [];\n\n        if (__DEV__) {\n            if (!zrUtil.isArray(data)) {\n                throw new Error('Invalid data.');\n            }\n        }\n\n        var coordSysName = seriesModel.get('coordinateSystem');\n        var creator = creators[coordSysName];\n        var registeredCoordSys = CoordinateSystem.get(coordSysName);\n        // FIXME\n        var axesInfo = creator && creator(data, seriesModel, ecModel);\n        var dimensions = axesInfo && axesInfo.dimensions;\n        if (!dimensions) {\n            // Get dimensions from registered coordinate system\n            dimensions = (registeredCoordSys && (\n                registeredCoordSys.getDimensionsInfo\n                    ? registeredCoordSys.getDimensionsInfo()\n                    : registeredCoordSys.dimensions.slice()\n            )) || ['x', 'y'];\n            dimensions = completeDimensions(dimensions, data, {defaultNames: dimensions.concat(['value'])});\n        }\n\n        var categoryIndex = axesInfo ? axesInfo.categoryIndex : -1;\n\n        var list = new List(dimensions, seriesModel);\n\n        var nameList = createNameList(axesInfo, data);\n\n        var categories = {};\n        var dimValueGetter = (categoryIndex >= 0 && ifNeedCompleteOrdinalData(data))\n            ? function (itemOpt, dimName, dataIndex, dimIndex) {\n                // If any dataItem is like { value: 10 }\n                if (modelUtil.isDataItemOption(itemOpt)) {\n                    list.hasItemOption = true;\n                }\n\n                // Use dataIndex as ordinal value in categoryAxis\n                return dimIndex === categoryIndex\n                    ? dataIndex\n                    : converDataValue(getDataItemValue(itemOpt), dimensions[dimIndex]);\n            }\n            : function (itemOpt, dimName, dataIndex, dimIndex) {\n                var value = getDataItemValue(itemOpt);\n                var val = converDataValue(value && value[dimIndex], dimensions[dimIndex]);\n                // If any dataItem is like { value: 10 }\n                if (modelUtil.isDataItemOption(itemOpt)) {\n                    list.hasItemOption = true;\n                }\n\n                var categoryAxesModels = axesInfo && axesInfo.categoryAxesModels;\n                if (categoryAxesModels && categoryAxesModels[dimName]) {\n                    // If given value is a category string\n                    if (typeof val === 'string') {\n                        // Lazy get categories\n                        categories[dimName] = categories[dimName]\n                            || categoryAxesModels[dimName].getCategories();\n                        val = zrUtil.indexOf(categories[dimName], val);\n                        if (val < 0 && !isNaN(val)) {\n                            // In case some one write '1', '2' istead of 1, 2\n                            val = +val;\n                        }\n                    }\n                }\n                return val;\n            };\n\n        list.hasItemOption = false;\n        list.initData(data, nameList, dimValueGetter);\n\n        return list;\n    }\n\n    function isStackable(axisType) {\n        return axisType !== 'category' && axisType !== 'time';\n    }\n\n    function getDimTypeByAxis(axisType) {\n        return axisType === 'category'\n            ? 'ordinal'\n            : axisType === 'time'\n            ? 'time'\n            : 'float';\n    }\n\n    /**\n     * Creaters for each coord system.\n     */\n    var creators = {\n\n        cartesian2d: function (data, seriesModel, ecModel) {\n\n            var axesModels = zrUtil.map(['xAxis', 'yAxis'], function (name) {\n                return ecModel.queryComponents({\n                    mainType: name,\n                    index: seriesModel.get(name + 'Index'),\n                    id: seriesModel.get(name + 'Id')\n                })[0];\n            });\n            var xAxisModel = axesModels[0];\n            var yAxisModel = axesModels[1];\n\n            if (__DEV__) {\n                if (!xAxisModel) {\n                    throw new Error('xAxis \"' + zrUtil.retrieve(\n                        seriesModel.get('xAxisIndex'),\n                        seriesModel.get('xAxisId'),\n                        0\n                    ) + '\" not found');\n                }\n                if (!yAxisModel) {\n                    throw new Error('yAxis \"' + zrUtil.retrieve(\n                        seriesModel.get('xAxisIndex'),\n                        seriesModel.get('yAxisId'),\n                        0\n                    ) + '\" not found');\n                }\n            }\n\n            var xAxisType = xAxisModel.get('type');\n            var yAxisType = yAxisModel.get('type');\n\n            var dimensions = [\n                {\n                    name: 'x',\n                    type: getDimTypeByAxis(xAxisType),\n                    stackable: isStackable(xAxisType)\n                },\n                {\n                    name: 'y',\n                    // If two category axes\n                    type: getDimTypeByAxis(yAxisType),\n                    stackable: isStackable(yAxisType)\n                }\n            ];\n\n            var isXAxisCateogry = xAxisType === 'category';\n            var isYAxisCategory = yAxisType === 'category';\n\n            completeDimensions(dimensions, data, {defaultNames: ['x', 'y', 'z']});\n\n            var categoryAxesModels = {};\n            if (isXAxisCateogry) {\n                categoryAxesModels.x = xAxisModel;\n            }\n            if (isYAxisCategory) {\n                categoryAxesModels.y = yAxisModel;\n            }\n            return {\n                dimensions: dimensions,\n                categoryIndex: isXAxisCateogry ? 0 : (isYAxisCategory ? 1 : -1),\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        singleAxis: function (data, seriesModel, ecModel) {\n\n            var singleAxisModel = ecModel.queryComponents({\n                mainType: 'singleAxis',\n                index: seriesModel.get('singleAxisIndex'),\n                id: seriesModel.get('singleAxisId')\n            })[0];\n\n            if (__DEV__) {\n                if (!singleAxisModel) {\n                    throw new Error('singleAxis should be specified.');\n                }\n            }\n\n            var singleAxisType = singleAxisModel.get('type');\n            var isCategory = singleAxisType === 'category';\n\n            var dimensions = [{\n                name: 'single',\n                type: getDimTypeByAxis(singleAxisType),\n                stackable: isStackable(singleAxisType)\n            }];\n\n            completeDimensions(dimensions, data);\n\n            var categoryAxesModels = {};\n            if (isCategory) {\n                categoryAxesModels.single = singleAxisModel;\n            }\n\n            return {\n                dimensions: dimensions,\n                categoryIndex: isCategory ? 0 : -1,\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        polar: function (data, seriesModel, ecModel) {\n            var polarModel = ecModel.queryComponents({\n                mainType: 'polar',\n                index: seriesModel.get('polarIndex'),\n                id: seriesModel.get('polarId')\n            })[0];\n\n            var angleAxisModel = polarModel.findAxisModel('angleAxis');\n            var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n\n            if (__DEV__) {\n                if (!angleAxisModel) {\n                    throw new Error('angleAxis option not found');\n                }\n                if (!radiusAxisModel) {\n                    throw new Error('radiusAxis option not found');\n                }\n            }\n\n            var radiusAxisType = radiusAxisModel.get('type');\n            var angleAxisType = angleAxisModel.get('type');\n\n            var dimensions = [\n                {\n                    name: 'radius',\n                    type: getDimTypeByAxis(radiusAxisType),\n                    stackable: isStackable(radiusAxisType)\n                },\n                {\n                    name: 'angle',\n                    type: getDimTypeByAxis(angleAxisType),\n                    stackable: isStackable(angleAxisType)\n                }\n            ];\n            var isAngleAxisCateogry = angleAxisType === 'category';\n            var isRadiusAxisCateogry = radiusAxisType === 'category';\n\n            completeDimensions(dimensions, data, {defaultNames: ['radius', 'angle', 'value']});\n\n            var categoryAxesModels = {};\n            if (isRadiusAxisCateogry) {\n                categoryAxesModels.radius = radiusAxisModel;\n            }\n            if (isAngleAxisCateogry) {\n                categoryAxesModels.angle = angleAxisModel;\n            }\n            return {\n                dimensions: dimensions,\n                categoryIndex: isAngleAxisCateogry ? 1 : (isRadiusAxisCateogry ? 0 : -1),\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        geo: function (data, seriesModel, ecModel) {\n            // TODO Region\n            // 多个散点图系列在同一个地区的时候\n            return {\n                dimensions: completeDimensions([\n                    {name: 'lng'},\n                    {name: 'lat'}\n                ], data, {defaultNames: ['lng', 'lat', 'value']})\n            };\n        }\n    };\n\n    function createNameList(result, data) {\n        var nameList = [];\n\n        var categoryDim = result && result.dimensions[result.categoryIndex];\n        var categoryAxisModel;\n        if (categoryDim) {\n            categoryAxisModel = result.categoryAxesModels[categoryDim.name];\n        }\n\n        if (categoryAxisModel) {\n            // FIXME Two category axis\n            var categories = categoryAxisModel.getCategories();\n            if (categories) {\n                var dataLen = data.length;\n                // Ordered data is given explicitly like\n                // [[3, 0.2], [1, 0.3], [2, 0.15]]\n                // or given scatter data,\n                // pick the category\n                if (zrUtil.isArray(data[0]) && data[0].length > 1) {\n                    nameList = [];\n                    for (var i = 0; i < dataLen; i++) {\n                        nameList[i] = categories[data[i][result.categoryIndex || 0]];\n                    }\n                }\n                else {\n                    nameList = categories.slice(0);\n                }\n            }\n        }\n\n        return nameList;\n    }\n\n    module.exports = createListFromArray;\n\n\n\n/***/ }),\n/* 204 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(158);\n    var modelUtil = __webpack_require__(162);\n\n    /**\n     * @param {Object} finder contains {seriesIndex, dataIndex, dataIndexInside}\n     * @param {module:echarts/model/Global} ecModel\n     * @return {Object} {point: [x, y], el: ...} point Will not be null.\n     */\n    module.exports = function (finder, ecModel) {\n        var point = [];\n        var seriesIndex = finder.seriesIndex;\n        var seriesModel;\n        if (seriesIndex == null || !(\n            seriesModel = ecModel.getSeriesByIndex(seriesIndex)\n        )) {\n            return {point: []};\n        }\n\n        var data = seriesModel.getData();\n        var dataIndex = modelUtil.queryDataIndex(data, finder);\n        if (dataIndex == null || zrUtil.isArray(dataIndex)) {\n            return {point: []};\n        }\n\n        var el = data.getItemGraphicEl(dataIndex);\n        var coordSys = seriesModel.coordinateSystem;\n\n        if (seriesModel.getTooltipPosition) {\n            point = seriesModel.getTooltipPosition(dataIndex) || [];\n        }\n        else if (coordSys && coordSys.dataToPoint) {\n            point = coordSys.dataToPoint(\n                data.getValues(\n                    zrUtil.map(coordSys.dimensions, function (dim) {\n                        return seriesModel.coordDimToDataDim(dim)[0];\n                    }), dataIndex, true\n                )\n            ) || [];\n        }\n        else if (el) {\n            // Use graphic bounding rect\n            var rect = el.getBoundingRect().clone();\n            rect.applyTransform(el.transform);\n            point = [\n                rect.x + rect.width / 2,\n                rect.y + rect.height / 2\n            ];\n        }\n\n        return {point: point, el: el};\n    };\n\n\n\n\n/***/ }),\n/* 205 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var env = __webpack_require__(167);\n    var zrUtil = __webpack_require__(158);\n    var get = __webpack_require__(162).makeGetter();\n\n    var each = zrUtil.each;\n\n    var globalListener = {};\n\n    /**\n     * @param {string} key\n     * @param {module:echarts/ExtensionAPI} api\n     * @param {Function} handler\n     *      param: {string} currTrigger\n     *      param: {Array.<number>} point\n     */\n    globalListener.register = function (key, api, handler) {\n        if (env.node) {\n            return;\n        }\n\n        var zr = api.getZr();\n        get(zr).records || (get(zr).records = {});\n\n        initGlobalListeners(zr, api);\n\n        var record = get(zr).records[key] || (get(zr).records[key] = {});\n        record.handler = handler;\n    };\n\n    function initGlobalListeners(zr, api) {\n        if (get(zr).initialized) {\n            return;\n        }\n\n        get(zr).initialized = true;\n\n        useHandler('click', zrUtil.curry(doEnter, 'click'));\n        useHandler('mousemove', zrUtil.curry(doEnter, 'mousemove'));\n        // useHandler('mouseout', onLeave);\n        useHandler('globalout', onLeave);\n\n        function useHandler(eventType, cb) {\n            zr.on(eventType, function (e) {\n                var dis = makeDispatchAction(api);\n\n                each(get(zr).records, function (record) {\n                    record && cb(record, e, dis.dispatchAction);\n                });\n\n                dispatchTooltipFinally(dis.pendings, api);\n            });\n        }\n    }\n\n    function dispatchTooltipFinally(pendings, api) {\n        var showLen = pendings.showTip.length;\n        var hideLen = pendings.hideTip.length;\n\n        var actuallyPayload;\n        if (showLen) {\n            actuallyPayload = pendings.showTip[showLen - 1];\n        }\n        else if (hideLen) {\n            actuallyPayload = pendings.hideTip[hideLen - 1];\n        }\n        if (actuallyPayload) {\n            actuallyPayload.dispatchAction = null;\n            api.dispatchAction(actuallyPayload);\n        }\n    }\n\n    function onLeave(record, e, dispatchAction) {\n        record.handler('leave', null, dispatchAction);\n    }\n\n    function doEnter(currTrigger, record, e, dispatchAction) {\n        record.handler(currTrigger, e, dispatchAction);\n    }\n\n    function makeDispatchAction(api) {\n        var pendings = {\n            showTip: [],\n            hideTip: []\n        };\n        // FIXME\n        // better approach?\n        // 'showTip' and 'hideTip' can be triggered by axisPointer and tooltip,\n        // which may be conflict, (axisPointer call showTip but tooltip call hideTip);\n        // So we have to add \"final stage\" to merge those dispatched actions.\n        var dispatchAction = function (payload) {\n            var pendingList = pendings[payload.type];\n            if (pendingList) {\n                pendingList.push(payload);\n            }\n            else {\n                payload.dispatchAction = dispatchAction;\n                api.dispatchAction(payload);\n            }\n        };\n\n        return {\n            dispatchAction: dispatchAction,\n            pendings: pendings\n        };\n    }\n\n    /**\n     * @param {string} key\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    globalListener.unregister = function (key, api) {\n        if (env.node) {\n            return;\n        }\n        var zr = api.getZr();\n        var record = (get(zr).records || {})[key];\n        if (record) {\n            get(zr).records[key] = null;\n        }\n    };\n\n    module.exports = globalListener;\n\n\n/***/ }),\n/* 206 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(158);\n    var graphic = __webpack_require__(160);\n    var textContain = __webpack_require__(172);\n    var formatUtil = __webpack_require__(166);\n    var matrix = __webpack_require__(175);\n    var axisHelper = __webpack_require__(173);\n    var AxisBuilder = __webpack_require__(207);\n\n    var helper = {};\n\n    /**\n     * @param {module:echarts/model/Model} axisPointerModel\n     */\n    helper.buildElStyle = function (axisPointerModel) {\n        var axisPointerType = axisPointerModel.get('type');\n        var styleModel = axisPointerModel.getModel(axisPointerType + 'Style');\n        var style;\n        if (axisPointerType === 'line') {\n            style = styleModel.getLineStyle();\n            style.fill = null;\n        }\n        else if (axisPointerType === 'shadow') {\n            style = styleModel.getAreaStyle();\n            style.stroke = null;\n        }\n        return style;\n    };\n\n    /**\n     * @param {Function} labelPos {align, verticalAlign, position}\n     */\n    helper.buildLabelElOption = function (\n        elOption, axisModel, axisPointerModel, api, labelPos\n    ) {\n        var value = axisPointerModel.get('value');\n        var text = helper.getValueLabel(\n            value, axisModel.axis, axisModel.ecModel,\n            axisPointerModel.get('seriesDataIndices'),\n            {\n                precision: axisPointerModel.get('label.precision'),\n                formatter: axisPointerModel.get('label.formatter')\n            }\n        );\n        var labelModel = axisPointerModel.getModel('label');\n        var textStyleModel = labelModel.getModel('textStyle');\n        var paddings = formatUtil.normalizeCssArray(labelModel.get('padding') || 0);\n\n        var font = textStyleModel.getFont();\n        var textRect = textContain.getBoundingRect(\n            text, font, labelPos.textAlign, labelPos.textBaseline\n        );\n\n        var position = labelPos.position;\n        var width = textRect.width + paddings[1] + paddings[3];\n        var height = textRect.height + paddings[0] + paddings[2];\n\n        // Adjust by align.\n        var align = labelPos.align;\n        align === 'right' && (position[0] -= width);\n        align === 'center' && (position[0] -= width / 2);\n        var verticalAlign = labelPos.verticalAlign;\n        verticalAlign === 'bottom' && (position[1] -= height);\n        verticalAlign === 'middle' && (position[1] -= height / 2);\n\n        // Not overflow ec container\n        confineInContainer(position, width, height, api);\n\n        var bgColor = labelModel.get('backgroundColor');\n        if (!bgColor || bgColor === 'auto') {\n            bgColor = axisModel.get('axisLine.lineStyle.color');\n        }\n\n        elOption.label = {\n            shape: {x: 0, y: 0, width: width, height: height, r: labelModel.get('borderRadius')},\n            position: position.slice(),\n            style: {\n                text: text,\n                textFont: font,\n                textFill: textStyleModel.getTextColor(),\n                textPosition: 'inside',\n                fill: bgColor,\n                stroke: labelModel.get('borderColor') || 'transparent',\n                lineWidth: labelModel.get('borderWidth') || 0,\n                shadowBlur: labelModel.get('shadowBlur'),\n                shadowColor: labelModel.get('shadowColor'),\n                shadowOffsetX: labelModel.get('shadowOffsetX'),\n                shadowOffsetY: labelModel.get('shadowOffsetY')\n            },\n            // Lable should be over axisPointer.\n            z2: 10\n        };\n    };\n\n    // Do not overflow ec container\n    function confineInContainer(position, width, height, api) {\n        var viewWidth = api.getWidth();\n        var viewHeight = api.getHeight();\n        position[0] = Math.min(position[0] + width, viewWidth) - width;\n        position[1] = Math.min(position[1] + height, viewHeight) - height;\n        position[0] = Math.max(position[0], 0);\n        position[1] = Math.max(position[1], 0);\n    }\n\n    /**\n     * @param {number} value\n     * @param {module:echarts/coord/Axis} axis\n     * @param {module:echarts/model/Global} ecModel\n     * @param {Object} opt\n     * @param {Array.<Object>} seriesDataIndices\n     * @param {number|string} opt.precision 'auto' or a number\n     * @param {string|Function} opt.formatter label formatter\n     */\n    helper.getValueLabel = function (value, axis, ecModel, seriesDataIndices, opt) {\n        var text = axis.scale.getLabel(\n            // If `precision` is set, width can be fixed (like '12.00500'), which\n            // helps to debounce when when moving label.\n            value, {precision: opt.precision}\n        );\n        var formatter = opt.formatter;\n\n        if (formatter) {\n            var params = {\n                value: axisHelper.getAxisRawValue(axis, value),\n                seriesData: []\n            };\n            zrUtil.each(seriesDataIndices, function (idxItem) {\n                var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n                var dataIndex = idxItem.dataIndexInside;\n                var dataParams = series && series.getDataParams(dataIndex);\n                dataParams && params.seriesData.push(dataParams);\n            });\n\n            if (zrUtil.isString(formatter)) {\n                text = formatter.replace('{value}', text);\n            }\n            else if (zrUtil.isFunction(formatter)) {\n                text = formatter(params);\n            }\n        }\n\n        return text;\n    };\n\n    /**\n     * @param {module:echarts/coord/Axis} axis\n     * @param {number} value\n     * @param {Object} layoutInfo {\n     *  rotation, position, labelOffset, labelDirection, labelMargin\n     * }\n     */\n    helper.getTransformedPosition = function (axis, value, layoutInfo) {\n        var transform = matrix.create();\n        matrix.rotate(transform, transform, layoutInfo.rotation);\n        matrix.translate(transform, transform, layoutInfo.position);\n\n        return graphic.applyTransform([\n            axis.dataToCoord(value),\n            (layoutInfo.labelOffset || 0)\n                + (layoutInfo.labelDirection || 1) * (layoutInfo.labelMargin || 0)\n        ], transform);\n    };\n\n    helper.buildCartesianSingleLabelElOption = function (\n        value, elOption, layoutInfo, axisModel, axisPointerModel, api\n    ) {\n        var textLayout = AxisBuilder.innerTextLayout(\n            layoutInfo.rotation, 0, layoutInfo.labelDirection\n        );\n        layoutInfo.labelMargin = axisPointerModel.get('label.margin');\n        helper.buildLabelElOption(elOption, axisModel, axisPointerModel, api, {\n            position: helper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n            align: textLayout.textAlign,\n            verticalAlign: textLayout.textVerticalAlign\n        });\n    };\n\n    /**\n     * @param {Array.<number>} p1\n     * @param {Array.<number>} p2\n     * @param {number} [xDimIndex=0] or 1\n     */\n    helper.makeLineShape = function (p1, p2, xDimIndex) {\n        xDimIndex = xDimIndex || 0;\n        return {\n            x1: p1[xDimIndex],\n            y1: p1[1 - xDimIndex],\n            x2: p2[xDimIndex],\n            y2: p2[1 - xDimIndex]\n        };\n    };\n\n    /**\n     * @param {Array.<number>} xy\n     * @param {Array.<number>} wh\n     * @param {number} [xDimIndex=0] or 1\n     */\n    helper.makeRectShape = function (xy, wh, xDimIndex) {\n        xDimIndex = xDimIndex || 0;\n        return {\n            x: xy[xDimIndex],\n            y: xy[1 - xDimIndex],\n            width: wh[xDimIndex],\n            height: wh[1 - xDimIndex]\n        };\n    };\n\n    helper.makeSectorShape = function (cx, cy, r0, r, startAngle, endAngle) {\n        return {\n            cx: cx,\n            cy: cy,\n            r0: r0,\n            r: r,\n            startAngle: startAngle,\n            endAngle: endAngle,\n            clockwise: true\n        };\n    };\n\n    module.exports = helper;\n\n\n/***/ }),\n/* 207 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(158);\n    var formatUtil = __webpack_require__(166);\n    var graphic = __webpack_require__(160);\n    var Model = __webpack_require__(165);\n    var numberUtil = __webpack_require__(161);\n    var remRadian = numberUtil.remRadian;\n    var isRadianAroundZero = numberUtil.isRadianAroundZero;\n    var vec2 = __webpack_require__(163);\n    var matrix = __webpack_require__(175);\n    var v2ApplyTransform = vec2.applyTransform;\n    var retrieve = zrUtil.retrieve;\n\n    var PI = Math.PI;\n\n    function makeAxisEventDataBase(axisModel) {\n        var eventData = {\n            componentType: axisModel.mainType\n        };\n        eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\n        return eventData;\n    }\n\n    /**\n     * A final axis is translated and rotated from a \"standard axis\".\n     * So opt.position and opt.rotation is required.\n     *\n     * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\n     * for example: (0, 0) ------------> (0, 50)\n     *\n     * nameDirection or tickDirection or labelDirection is 1 means tick\n     * or label is below the standard axis, whereas is -1 means above\n     * the standard axis. labelOffset means offset between label and axis,\n     * which is useful when 'onZero', where axisLabel is in the grid and\n     * label in outside grid.\n     *\n     * Tips: like always,\n     * positive rotation represents anticlockwise, and negative rotation\n     * represents clockwise.\n     * The direction of position coordinate is the same as the direction\n     * of screen coordinate.\n     *\n     * Do not need to consider axis 'inverse', which is auto processed by\n     * axis extent.\n     *\n     * @param {module:zrender/container/Group} group\n     * @param {Object} axisModel\n     * @param {Object} opt Standard axis parameters.\n     * @param {Array.<number>} opt.position [x, y]\n     * @param {number} opt.rotation by radian\n     * @param {number} [opt.nameDirection=1] 1 or -1 Used when nameLocation is 'middle'.\n     * @param {number} [opt.tickDirection=1] 1 or -1\n     * @param {number} [opt.labelDirection=1] 1 or -1\n     * @param {number} [opt.labelOffset=0] Usefull when onZero.\n     * @param {string} [opt.axisLabelShow] default get from axisModel.\n     * @param {string} [opt.axisName] default get from axisModel.\n     * @param {number} [opt.axisNameAvailableWidth]\n     * @param {number} [opt.labelRotate] by degree, default get from axisModel.\n     * @param {number} [opt.labelInterval] Default label interval when label\n     *                                     interval from model is null or 'auto'.\n     * @param {number} [opt.strokeContainThreshold] Default label interval when label\n     * @param {number} [opt.nameTruncateMaxWidth]\n     */\n    var AxisBuilder = function (axisModel, opt) {\n\n        /**\n         * @readOnly\n         */\n        this.opt = opt;\n\n        /**\n         * @readOnly\n         */\n        this.axisModel = axisModel;\n\n        // Default value\n        zrUtil.defaults(\n            opt,\n            {\n                labelOffset: 0,\n                nameDirection: 1,\n                tickDirection: 1,\n                labelDirection: 1,\n                silent: true\n            }\n        );\n\n        /**\n         * @readOnly\n         */\n        this.group = new graphic.Group();\n\n        // FIXME Not use a seperate text group?\n        var dumbGroup = new graphic.Group({\n            position: opt.position.slice(),\n            rotation: opt.rotation\n        });\n\n        // this.group.add(dumbGroup);\n        // this._dumbGroup = dumbGroup;\n\n        dumbGroup.updateTransform();\n        this._transform = dumbGroup.transform;\n\n        this._dumbGroup = dumbGroup;\n    };\n\n    AxisBuilder.prototype = {\n\n        constructor: AxisBuilder,\n\n        hasBuilder: function (name) {\n            return !!builders[name];\n        },\n\n        add: function (name) {\n            builders[name].call(this);\n        },\n\n        getGroup: function () {\n            return this.group;\n        }\n\n    };\n\n    var builders = {\n\n        /**\n         * @private\n         */\n        axisLine: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n\n            if (!axisModel.get('axisLine.show')) {\n                return;\n            }\n\n            var extent = this.axisModel.axis.getExtent();\n\n            var matrix = this._transform;\n            var pt1 = [extent[0], 0];\n            var pt2 = [extent[1], 0];\n            if (matrix) {\n                v2ApplyTransform(pt1, pt1, matrix);\n                v2ApplyTransform(pt2, pt2, matrix);\n            }\n\n            this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n\n                // Id for animation\n                anid: 'line',\n\n                shape: {\n                    x1: pt1[0],\n                    y1: pt1[1],\n                    x2: pt2[0],\n                    y2: pt2[1]\n                },\n                style: zrUtil.extend(\n                    {lineCap: 'round'},\n                    axisModel.getModel('axisLine.lineStyle').getLineStyle()\n                ),\n                strokeContainThreshold: opt.strokeContainThreshold || 5,\n                silent: true,\n                z2: 1\n            })));\n        },\n\n        /**\n         * @private\n         */\n        axisTick: function () {\n            var axisModel = this.axisModel;\n            var axis = axisModel.axis;\n\n            if (!axisModel.get('axisTick.show') || axis.scale.isBlank()) {\n                return;\n            }\n\n            var tickModel = axisModel.getModel('axisTick');\n            var opt = this.opt;\n\n            var lineStyleModel = tickModel.getModel('lineStyle');\n            var tickLen = tickModel.get('length');\n\n            var tickInterval = getInterval(tickModel, opt.labelInterval);\n            var ticksCoords = axis.getTicksCoords(tickModel.get('alignWithLabel'));\n            var ticks = axis.scale.getTicks();\n\n            var pt1 = [];\n            var pt2 = [];\n            var matrix = this._transform;\n\n            for (var i = 0; i < ticksCoords.length; i++) {\n                // Only ordinal scale support tick interval\n                if (ifIgnoreOnTick(axis, i, tickInterval)) {\n                     continue;\n                }\n\n                var tickCoord = ticksCoords[i];\n\n                pt1[0] = tickCoord;\n                pt1[1] = 0;\n                pt2[0] = tickCoord;\n                pt2[1] = opt.tickDirection * tickLen;\n\n                if (matrix) {\n                    v2ApplyTransform(pt1, pt1, matrix);\n                    v2ApplyTransform(pt2, pt2, matrix);\n                }\n                // Tick line, Not use group transform to have better line draw\n                this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n\n                    // Id for animation\n                    anid: 'tick_' + ticks[i],\n\n                    shape: {\n                        x1: pt1[0],\n                        y1: pt1[1],\n                        x2: pt2[0],\n                        y2: pt2[1]\n                    },\n                    style: zrUtil.defaults(\n                        lineStyleModel.getLineStyle(),\n                        {\n                            stroke: axisModel.get('axisLine.lineStyle.color')\n                        }\n                    ),\n                    z2: 2,\n                    silent: true\n                })));\n            }\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @private\n         */\n        axisLabel: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n            var axis = axisModel.axis;\n            var show = retrieve(opt.axisLabelShow, axisModel.get('axisLabel.show'));\n\n            if (!show || axis.scale.isBlank()) {\n                return;\n            }\n\n            var labelModel = axisModel.getModel('axisLabel');\n            var textStyleModel = labelModel.getModel('textStyle');\n            var labelMargin = labelModel.get('margin');\n            var ticks = axis.scale.getTicks();\n            var labels = axisModel.getFormattedLabels();\n\n            // Special label rotate.\n            var labelRotation = (\n                retrieve(opt.labelRotate, labelModel.get('rotate')) || 0\n            ) * PI / 180;\n\n            var labelLayout = innerTextLayout(opt.rotation, labelRotation, opt.labelDirection);\n            var categoryData = axisModel.get('data');\n\n            var textEls = [];\n            var silent = isSilent(axisModel);\n            var triggerEvent = axisModel.get('triggerEvent');\n\n            zrUtil.each(ticks, function (tickVal, index) {\n                if (ifIgnoreOnTick(axis, index, opt.labelInterval)) {\n                     return;\n                }\n\n                var itemTextStyleModel = textStyleModel;\n                if (categoryData && categoryData[tickVal] && categoryData[tickVal].textStyle) {\n                    itemTextStyleModel = new Model(\n                        categoryData[tickVal].textStyle, textStyleModel, axisModel.ecModel\n                    );\n                }\n                var textColor = itemTextStyleModel.getTextColor()\n                    || axisModel.get('axisLine.lineStyle.color');\n\n                var tickCoord = axis.dataToCoord(tickVal);\n                var pos = [\n                    tickCoord,\n                    opt.labelOffset + opt.labelDirection * labelMargin\n                ];\n                var labelStr = axis.scale.getLabel(tickVal);\n\n                var textEl = new graphic.Text({\n\n                    // Id for animation\n                    anid: 'label_' + tickVal,\n\n                    style: {\n                        text: labels[index],\n                        textAlign: itemTextStyleModel.get('align', true) || labelLayout.textAlign,\n                        textVerticalAlign: itemTextStyleModel.get('baseline', true) || labelLayout.textVerticalAlign,\n                        textFont: itemTextStyleModel.getFont(),\n                        fill: typeof textColor === 'function'\n                            ? textColor(\n                                // (1) In category axis with data zoom, tick is not the original\n                                // index of axis.data. So tick should not be exposed to user\n                                // in category axis.\n                                // (2) Compatible with previous version, which always returns labelStr.\n                                // But in interval scale labelStr is like '223,445', which maked\n                                // user repalce ','. So we modify it to return original val but remain\n                                // it as 'string' to avoid error in replacing.\n                                axis.type === 'category' ? labelStr : axis.type === 'value' ? tickVal + '' : tickVal,\n                                index\n                            )\n                            : textColor\n                    },\n                    position: pos,\n                    rotation: labelLayout.rotation,\n                    silent: silent,\n                    z2: 10\n                });\n\n                // Pack data for mouse event\n                if (triggerEvent) {\n                    textEl.eventData = makeAxisEventDataBase(axisModel);\n                    textEl.eventData.targetType = 'axisLabel';\n                    textEl.eventData.value = labelStr;\n                }\n\n                // FIXME\n                this._dumbGroup.add(textEl);\n                textEl.updateTransform();\n\n                textEls.push(textEl);\n                this.group.add(textEl);\n\n                textEl.decomposeTransform();\n\n            }, this);\n\n            fixMinMaxLabelShow(axisModel, textEls);\n        },\n\n        /**\n         * @private\n         */\n        axisName: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n            var name = retrieve(opt.axisName, axisModel.get('name'));\n\n            if (!name) {\n                return;\n            }\n\n            var nameLocation = axisModel.get('nameLocation');\n            var nameDirection = opt.nameDirection;\n            var textStyleModel = axisModel.getModel('nameTextStyle');\n            var gap = axisModel.get('nameGap') || 0;\n\n            var extent = this.axisModel.axis.getExtent();\n            var gapSignal = extent[0] > extent[1] ? -1 : 1;\n            var pos = [\n                nameLocation === 'start'\n                    ? extent[0] - gapSignal * gap\n                    : nameLocation === 'end'\n                    ? extent[1] + gapSignal * gap\n                    : (extent[0] + extent[1]) / 2, // 'middle'\n                // Reuse labelOffset.\n                nameLocation === 'middle' ? opt.labelOffset + nameDirection * gap : 0\n            ];\n\n            var labelLayout;\n\n            var nameRotation = axisModel.get('nameRotate');\n            if (nameRotation != null) {\n                nameRotation = nameRotation * PI / 180; // To radian.\n            }\n\n            var axisNameAvailableWidth;\n\n            if (nameLocation === 'middle') {\n                labelLayout = innerTextLayout(\n                    opt.rotation,\n                    nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\n                    nameDirection\n                );\n            }\n            else {\n                labelLayout = endTextLayout(\n                    opt, nameLocation, nameRotation || 0, extent\n                );\n\n                axisNameAvailableWidth = opt.axisNameAvailableWidth;\n                if (axisNameAvailableWidth != null) {\n                    axisNameAvailableWidth = Math.abs(\n                        axisNameAvailableWidth / Math.sin(labelLayout.rotation)\n                    );\n                    !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\n                }\n            }\n\n            var textFont = textStyleModel.getFont();\n\n            var truncateOpt = axisModel.get('nameTruncate', true) || {};\n            var ellipsis = truncateOpt.ellipsis;\n            var maxWidth = retrieve(\n                opt.nameTruncateMaxWidth, truncateOpt.maxWidth, axisNameAvailableWidth\n            );\n            var truncatedText = (ellipsis != null && maxWidth != null)\n                ? formatUtil.truncateText(\n                    name, maxWidth, textFont, ellipsis,\n                    {minChar: 2, placeholder: truncateOpt.placeholder}\n                )\n                : name;\n\n            var tooltipOpt = axisModel.get('tooltip', true);\n\n            var mainType = axisModel.mainType;\n            var formatterParams = {\n                componentType: mainType,\n                name: name,\n                $vars: ['name']\n            };\n            formatterParams[mainType + 'Index'] = axisModel.componentIndex;\n\n            var textEl = new graphic.Text({\n\n                // Id for animation\n                anid: 'name',\n\n                __fullText: name,\n                __truncatedText: truncatedText,\n\n                style: {\n                    text: truncatedText,\n                    textFont: textFont,\n                    fill: textStyleModel.getTextColor()\n                        || axisModel.get('axisLine.lineStyle.color'),\n                    textAlign: labelLayout.textAlign,\n                    textVerticalAlign: labelLayout.textVerticalAlign\n                },\n                position: pos,\n                rotation: labelLayout.rotation,\n                silent: isSilent(axisModel),\n                z2: 1,\n                tooltip: (tooltipOpt && tooltipOpt.show)\n                    ? zrUtil.extend({\n                        content: name,\n                        formatter: function () {\n                            return name;\n                        },\n                        formatterParams: formatterParams\n                    }, tooltipOpt)\n                    : null\n            });\n\n            if (axisModel.get('triggerEvent')) {\n                textEl.eventData = makeAxisEventDataBase(axisModel);\n                textEl.eventData.targetType = 'axisName';\n                textEl.eventData.name = name;\n            }\n\n            // FIXME\n            this._dumbGroup.add(textEl);\n            textEl.updateTransform();\n\n            this.group.add(textEl);\n\n            textEl.decomposeTransform();\n        }\n\n    };\n\n    /**\n     * @public\n     * @static\n     * @param {Object} opt\n     * @param {number} axisRotation in radian\n     * @param {number} textRotation in radian\n     * @param {number} direction\n     * @return {Object} {\n     *  rotation, // according to axis\n     *  textAlign,\n     *  textVerticalAlign\n     * }\n     */\n    var innerTextLayout = AxisBuilder.innerTextLayout = function (axisRotation, textRotation, direction) {\n        var rotationDiff = remRadian(textRotation - axisRotation);\n        var textAlign;\n        var textVerticalAlign;\n\n        if (isRadianAroundZero(rotationDiff)) { // Label is parallel with axis line.\n            textVerticalAlign = direction > 0 ? 'top' : 'bottom';\n            textAlign = 'center';\n        }\n        else if (isRadianAroundZero(rotationDiff - PI)) { // Label is inverse parallel with axis line.\n            textVerticalAlign = direction > 0 ? 'bottom' : 'top';\n            textAlign = 'center';\n        }\n        else {\n            textVerticalAlign = 'middle';\n\n            if (rotationDiff > 0 && rotationDiff < PI) {\n                textAlign = direction > 0 ? 'right' : 'left';\n            }\n            else {\n                textAlign = direction > 0 ? 'left' : 'right';\n            }\n        }\n\n        return {\n            rotation: rotationDiff,\n            textAlign: textAlign,\n            textVerticalAlign: textVerticalAlign\n        };\n    };\n\n    function endTextLayout(opt, textPosition, textRotate, extent) {\n        var rotationDiff = remRadian(textRotate - opt.rotation);\n        var textAlign;\n        var textVerticalAlign;\n        var inverse = extent[0] > extent[1];\n        var onLeft = (textPosition === 'start' && !inverse)\n            || (textPosition !== 'start' && inverse);\n\n        if (isRadianAroundZero(rotationDiff - PI / 2)) {\n            textVerticalAlign = onLeft ? 'bottom' : 'top';\n            textAlign = 'center';\n        }\n        else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\n            textVerticalAlign = onLeft ? 'top' : 'bottom';\n            textAlign = 'center';\n        }\n        else {\n            textVerticalAlign = 'middle';\n            if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\n                textAlign = onLeft ? 'left' : 'right';\n            }\n            else {\n                textAlign = onLeft ? 'right' : 'left';\n            }\n        }\n\n        return {\n            rotation: rotationDiff,\n            textAlign: textAlign,\n            textVerticalAlign: textVerticalAlign\n        };\n    }\n\n    function isSilent(axisModel) {\n        var tooltipOpt = axisModel.get('tooltip');\n        return axisModel.get('silent')\n            // Consider mouse cursor, add these restrictions.\n            || !(\n                axisModel.get('triggerEvent') || (tooltipOpt && tooltipOpt.show)\n            );\n    }\n\n    function fixMinMaxLabelShow(axisModel, textEls) {\n        // If min or max are user set, we need to check\n        // If the tick on min(max) are overlap on their neighbour tick\n        // If they are overlapped, we need to hide the min(max) tick label\n        var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n        var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n        var firstLabel = textEls[0];\n        var nextLabel = textEls[1];\n        var lastLabel = textEls[textEls.length - 1];\n        var prevLabel = textEls[textEls.length - 2];\n\n        if (showMinLabel === false) {\n            firstLabel.ignore = true;\n        }\n        else if (axisModel.getMin() != null && isTwoLabelOverlapped(firstLabel, nextLabel)) {\n            showMinLabel ? (nextLabel.ignore = true) : (firstLabel.ignore = true);\n        }\n\n        if (showMaxLabel === false) {\n            lastLabel.ignore = true;\n        }\n        else if (axisModel.getMax() != null && isTwoLabelOverlapped(prevLabel, lastLabel)) {\n            showMaxLabel ? (prevLabel.ignore = true) : (lastLabel.ignore = true);\n        }\n    }\n\n    function isTwoLabelOverlapped(current, next, labelLayout) {\n        // current and next has the same rotation.\n        var firstRect = current && current.getBoundingRect().clone();\n        var nextRect = next && next.getBoundingRect().clone();\n\n        if (!firstRect || !nextRect) {\n            return;\n        }\n\n        // When checking intersect of two rotated labels, we use mRotationBack\n        // to avoid that boundingRect is enlarge when using `boundingRect.applyTransform`.\n        var mRotationBack = matrix.identity([]);\n        matrix.rotate(mRotationBack, mRotationBack, -current.rotation);\n\n        firstRect.applyTransform(matrix.mul([], mRotationBack, current.getLocalTransform()));\n        nextRect.applyTransform(matrix.mul([], mRotationBack, next.getLocalTransform()));\n\n        return firstRect.intersect(nextRect);\n    }\n\n\n    /**\n     * @static\n     */\n    var ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick = function (axis, i, interval) {\n        var rawTick;\n        var scale = axis.scale;\n        return scale.type === 'ordinal'\n            && (\n                typeof interval === 'function'\n                    ? (\n                        rawTick = scale.getTicks()[i],\n                        !interval(rawTick, scale.getLabel(rawTick))\n                    )\n                    : i % (interval + 1)\n            );\n    };\n\n    /**\n     * @static\n     */\n    var getInterval = AxisBuilder.getInterval = function (model, labelInterval) {\n        var interval = model.get('interval');\n        if (interval == null || interval == 'auto') {\n            interval = labelInterval;\n        }\n        return interval;\n    };\n\n    module.exports = AxisBuilder;\n\n\n\n/***/ }),\n/* 208 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var axisPointerModelHelper = __webpack_require__(179);\n\n    /**\n     * Base class of AxisView.\n     */\n    var AxisView = __webpack_require__(159).extendComponentView({\n\n        type: 'axis',\n\n        /**\n         * @private\n         */\n        _axisPointer: null,\n\n        /**\n         * @protected\n         * @type {string}\n         */\n        axisPointerClass: null,\n\n        /**\n         * @override\n         */\n        render: function (axisModel, ecModel, api, payload) {\n            // FIXME\n            // This process should proformed after coordinate systems updated\n            // (axis scale updated), and should be performed each time update.\n            // So put it here temporarily, although it is not appropriate to\n            // put a model-writing procedure in `view`.\n            this.axisPointerClass && axisPointerModelHelper.fixValue(axisModel);\n\n            AxisView.superApply(this, 'render', arguments);\n\n            updateAxisPointer(this, axisModel, ecModel, api, payload, true);\n        },\n\n        /**\n         * Action handler.\n         * @public\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/model/Global} ecModel\n         * @param {module:echarts/ExtensionAPI} api\n         * @param {Object} payload\n         */\n        updateAxisPointer: function (axisModel, ecModel, api, payload, force) {\n            updateAxisPointer(this, axisModel, ecModel, api, payload, false);\n        },\n\n        /**\n         * @override\n         */\n        remove: function (ecModel, api) {\n            var axisPointer = this._axisPointer;\n            axisPointer && axisPointer.remove(api);\n            AxisView.superApply(this, 'remove', arguments);\n        },\n\n        /**\n         * @override\n         */\n        dispose: function (ecModel, api) {\n            disposeAxisPointer(this, api);\n            AxisView.superApply(this, 'dispose', arguments);\n        }\n\n    });\n\n    function updateAxisPointer(axisView, axisModel, ecModel, api, payload, forceRender) {\n        var Clazz = AxisView.getAxisPointerClass(axisView.axisPointerClass);\n        if (!Clazz) {\n            return;\n        }\n        var axisPointerModel = axisPointerModelHelper.getAxisPointerModel(axisModel);\n        axisPointerModel\n            ? (axisView._axisPointer || (axisView._axisPointer = new Clazz()))\n                .render(axisModel, axisPointerModel, api, forceRender)\n            : disposeAxisPointer(axisView, api);\n    }\n\n    function disposeAxisPointer(axisView, ecModel, api) {\n        var axisPointer = axisView._axisPointer;\n        axisPointer && axisPointer.dispose(ecModel, api);\n        axisView._axisPointer = null;\n    }\n\n    var axisPointerClazz = [];\n\n    AxisView.registerAxisPointerClass = function (type, clazz) {\n        if (__DEV__) {\n            if (axisPointerClazz[type]) {\n                throw new Error('axisPointer ' + type + ' exists');\n            }\n        }\n        axisPointerClazz[type] = clazz;\n    };\n\n    AxisView.getAxisPointerClass = function (type) {\n        return type && axisPointerClazz[type];\n    };\n\n    module.exports = AxisView;\n\n\n/***/ }),\n/* 209 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(158);\n\n    var helper = {};\n\n    /**\n     * @param {Object} opt {labelInside}\n     * @return {Object} {\n     *  position, rotation, labelDirection, labelOffset,\n     *  tickDirection, labelRotate, labelInterval, z2\n     * }\n     */\n    helper.layout = function (gridModel, axisModel, opt) {\n        opt = opt || {};\n        var grid = gridModel.coordinateSystem;\n        var axis = axisModel.axis;\n        var layout = {};\n\n        var rawAxisPosition = axis.position;\n        var axisPosition = axis.onZero ? 'onZero' : rawAxisPosition;\n        var axisDim = axis.dim;\n\n        // [left, right, top, bottom]\n        var rect = grid.getRect();\n        var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n\n        var axisOffset = axisModel.get('offset') || 0;\n\n        var posMap = {\n            x: { top: rectBound[2] - axisOffset, bottom: rectBound[3] + axisOffset },\n            y: { left: rectBound[0] - axisOffset, right: rectBound[1] + axisOffset }\n        };\n\n        posMap.x.onZero = Math.max(Math.min(getZero('y'), posMap.x.bottom), posMap.x.top);\n        posMap.y.onZero = Math.max(Math.min(getZero('x'), posMap.y.right), posMap.y.left);\n\n        function getZero(dim, val) {\n            var theAxis = grid.getAxis(dim);\n            return theAxis.toGlobalCoord(theAxis.dataToCoord(0));\n        }\n\n        // Axis position\n        layout.position = [\n            axisDim === 'y' ? posMap.y[axisPosition] : rectBound[0],\n            axisDim === 'x' ? posMap.x[axisPosition] : rectBound[3]\n        ];\n\n        // Axis rotation\n        layout.rotation = Math.PI / 2 * (axisDim === 'x' ? 0 : 1);\n\n        // Tick and label direction, x y is axisDim\n        var dirMap = {top: -1, bottom: 1, left: -1, right: 1};\n\n        layout.labelDirection = layout.tickDirection = layout.nameDirection = dirMap[rawAxisPosition];\n        layout.labelOffset = axis.onZero ? posMap[axisDim][rawAxisPosition] - posMap[axisDim].onZero : 0;\n\n        if (axisModel.get('axisTick.inside')) {\n            layout.tickDirection = -layout.tickDirection;\n        }\n        if (zrUtil.retrieve(opt.labelInside, axisModel.get('axisLabel.inside'))) {\n            layout.labelDirection = -layout.labelDirection;\n        }\n\n        // Special label rotation\n        var labelRotate = axisModel.get('axisLabel.rotate');\n        layout.labelRotate = axisPosition === 'top' ? -labelRotate : labelRotate;\n\n        // label interval when auto mode.\n        layout.labelInterval = axis.getLabelInterval();\n\n        // Over splitLine and splitArea\n        layout.z2 = 1;\n\n        return layout;\n    };\n\n    module.exports = helper;\n\n\n\n/***/ }),\n/* 210 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Legend component entry file8\n */\n\n\n    __webpack_require__(317);\n    __webpack_require__(319);\n    __webpack_require__(318);\n\n    var echarts = __webpack_require__(159);\n    // Series Filter\n    echarts.registerProcessor(__webpack_require__(320));\n\n\n/***/ }),\n/* 211 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var numberUtil = __webpack_require__(161);\n    var linearMap = numberUtil.linearMap;\n    var zrUtil = __webpack_require__(158);\n\n    function fixExtentWithBands(extent, nTick) {\n        var size = extent[1] - extent[0];\n        var len = nTick;\n        var margin = size / len / 2;\n        extent[0] += margin;\n        extent[1] -= margin;\n    }\n\n    var normalizedExtent = [0, 1];\n    /**\n     * @name module:echarts/coord/CartesianAxis\n     * @constructor\n     */\n    var Axis = function (dim, scale, extent) {\n\n        /**\n         * Axis dimension. Such as 'x', 'y', 'z', 'angle', 'radius'\n         * @type {string}\n         */\n        this.dim = dim;\n\n        /**\n         * Axis scale\n         * @type {module:echarts/coord/scale/*}\n         */\n        this.scale = scale;\n\n        /**\n         * @type {Array.<number>}\n         * @private\n         */\n        this._extent = extent || [0, 0];\n\n        /**\n         * @type {boolean}\n         */\n        this.inverse = false;\n\n        /**\n         * Usually true when axis has a ordinal scale\n         * @type {boolean}\n         */\n        this.onBand = false;\n    };\n\n    Axis.prototype = {\n\n        constructor: Axis,\n\n        /**\n         * If axis extent contain given coord\n         * @param {number} coord\n         * @return {boolean}\n         */\n        contain: function (coord) {\n            var extent = this._extent;\n            var min = Math.min(extent[0], extent[1]);\n            var max = Math.max(extent[0], extent[1]);\n            return coord >= min && coord <= max;\n        },\n\n        /**\n         * If axis extent contain given data\n         * @param {number} data\n         * @return {boolean}\n         */\n        containData: function (data) {\n            return this.contain(this.dataToCoord(data));\n        },\n\n        /**\n         * Get coord extent.\n         * @return {Array.<number>}\n         */\n        getExtent: function () {\n            var ret = this._extent.slice();\n            return ret;\n        },\n\n        /**\n         * Get precision used for formatting\n         * @param {Array.<number>} [dataExtent]\n         * @return {number}\n         */\n        getPixelPrecision: function (dataExtent) {\n            return numberUtil.getPixelPrecision(\n                dataExtent || this.scale.getExtent(),\n                this._extent\n            );\n        },\n\n        /**\n         * Set coord extent\n         * @param {number} start\n         * @param {number} end\n         */\n        setExtent: function (start, end) {\n            var extent = this._extent;\n            extent[0] = start;\n            extent[1] = end;\n        },\n\n        /**\n         * Convert data to coord. Data is the rank if it has a ordinal scale\n         * @param {number} data\n         * @param  {boolean} clamp\n         * @return {number}\n         */\n        dataToCoord: function (data, clamp) {\n            var extent = this._extent;\n            var scale = this.scale;\n            data = scale.normalize(data);\n\n            if (this.onBand && scale.type === 'ordinal') {\n                extent = extent.slice();\n                fixExtentWithBands(extent, scale.count());\n            }\n\n            return linearMap(data, normalizedExtent, extent, clamp);\n        },\n\n        /**\n         * Convert coord to data. Data is the rank if it has a ordinal scale\n         * @param {number} coord\n         * @param  {boolean} clamp\n         * @return {number}\n         */\n        coordToData: function (coord, clamp) {\n            var extent = this._extent;\n            var scale = this.scale;\n\n            if (this.onBand && scale.type === 'ordinal') {\n                extent = extent.slice();\n                fixExtentWithBands(extent, scale.count());\n            }\n\n            var t = linearMap(coord, extent, normalizedExtent, clamp);\n\n            return this.scale.scale(t);\n        },\n\n        /**\n         * Convert pixel point to data in axis\n         * @param {Array.<number>} point\n         * @param  {boolean} clamp\n         * @return {number} data\n         */\n        pointToData: function (point, clamp) {\n            // Should be implemented in derived class if necessary.\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicksCoords: function (alignWithLabel) {\n            if (this.onBand && !alignWithLabel) {\n                var bands = this.getBands();\n                var coords = [];\n                for (var i = 0; i < bands.length; i++) {\n                    coords.push(bands[i][0]);\n                }\n                if (bands[i - 1]) {\n                    coords.push(bands[i - 1][1]);\n                }\n                return coords;\n            }\n            else {\n                return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n            }\n        },\n\n        /**\n         * Coords of labels are on the ticks or on the middle of bands\n         * @return {Array.<number>}\n         */\n        getLabelsCoords: function () {\n            return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n        },\n\n        /**\n         * Get bands.\n         *\n         * If axis has labels [1, 2, 3, 4]. Bands on the axis are\n         * |---1---|---2---|---3---|---4---|.\n         *\n         * @return {Array}\n         */\n         // FIXME Situation when labels is on ticks\n        getBands: function () {\n            var extent = this.getExtent();\n            var bands = [];\n            var len = this.scale.count();\n            var start = extent[0];\n            var end = extent[1];\n            var span = end - start;\n\n            for (var i = 0; i < len; i++) {\n                bands.push([\n                    span * i / len + start,\n                    span * (i + 1) / len + start\n                ]);\n            }\n            return bands;\n        },\n\n        /**\n         * Get width of band\n         * @return {number}\n         */\n        getBandWidth: function () {\n            var axisExtent = this._extent;\n            var dataExtent = this.scale.getExtent();\n\n            var len = dataExtent[1] - dataExtent[0] + (this.onBand ? 1 : 0);\n            // Fix #2728, avoid NaN when only one data.\n            len === 0 && (len = 1);\n\n            var size = Math.abs(axisExtent[1] - axisExtent[0]);\n\n            return Math.abs(size) / len;\n        }\n\n    };\n\n    module.exports = Axis;\n\n\n/***/ }),\n/* 212 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(158);\n    var axisHelper = __webpack_require__(173);\n\n    function getName(obj) {\n        if (zrUtil.isObject(obj) && obj.value != null) {\n            return obj.value;\n        }\n        else {\n            return obj;\n        }\n    }\n\n    module.exports = {\n\n        /**\n         * Format labels\n         * @return {Array.<string>}\n         */\n        getFormattedLabels: function () {\n            return axisHelper.getFormattedLabels(\n                this.axis,\n                this.get('axisLabel.formatter')\n            );\n        },\n\n        /**\n         * Get categories\n         */\n        getCategories: function () {\n            return this.get('type') === 'category'\n                && zrUtil.map(this.get('data'), getName);\n        },\n\n        /**\n         * @param {boolean} origin\n         * @return {number|string} min value or 'dataMin' or null/undefined (means auto) or NaN\n         */\n        getMin: function (origin) {\n            var option = this.option;\n            var min = (!origin && option.rangeStart != null)\n                ? option.rangeStart : option.min;\n\n            if (this.axis && min != null && min !== 'dataMin' && !zrUtil.eqNaN(min)) {\n                min = this.axis.scale.parse(min);\n            }\n            return min;\n        },\n\n        /**\n         * @param {boolean} origin\n         * @return {number|string} max value or 'dataMax' or null/undefined (means auto) or NaN\n         */\n        getMax: function (origin) {\n            var option = this.option;\n            var max = (!origin && option.rangeEnd != null)\n                ? option.rangeEnd : option.max;\n\n            if (this.axis && max != null && max !== 'dataMax' && !zrUtil.eqNaN(max)) {\n                max = this.axis.scale.parse(max);\n            }\n            return max;\n        },\n\n        /**\n         * @return {boolean}\n         */\n        getNeedCrossZero: function () {\n            var option = this.option;\n            return (option.rangeStart != null || option.rangeEnd != null)\n                ? false : !option.scale;\n        },\n\n        /**\n         * Should be implemented by each axis model if necessary.\n         * @return {module:echarts/model/Component} coordinate system model\n         */\n        getCoordSysModel: zrUtil.noop,\n\n        /**\n         * @param {number} rangeStart Can only be finite number or null/undefined or NaN.\n         * @param {number} rangeEnd Can only be finite number or null/undefined or NaN.\n         */\n        setRange: function (rangeStart, rangeEnd) {\n            this.option.rangeStart = rangeStart;\n            this.option.rangeEnd = rangeEnd;\n        },\n\n        /**\n         * Reset range\n         */\n        resetRange: function () {\n            // rangeStart and rangeEnd is readonly.\n            this.option.rangeStart = this.option.rangeEnd = null;\n        }\n    };\n\n\n/***/ }),\n/* 213 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var ComponentModel = __webpack_require__(170);\n    var zrUtil = __webpack_require__(158);\n    var axisModelCreator = __webpack_require__(325);\n\n    var AxisModel = ComponentModel.extend({\n\n        type: 'cartesian2dAxis',\n\n        /**\n         * @type {module:echarts/coord/cartesian/Axis2D}\n         */\n        axis: null,\n\n        /**\n         * @override\n         */\n        init: function () {\n            AxisModel.superApply(this, 'init', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         */\n        mergeOption: function () {\n            AxisModel.superApply(this, 'mergeOption', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         */\n        restoreData: function () {\n            AxisModel.superApply(this, 'restoreData', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         * @return {module:echarts/model/Component}\n         */\n        getCoordSysModel: function () {\n            return this.ecModel.queryComponents({\n                mainType: 'grid',\n                index: this.option.gridIndex,\n                id: this.option.gridId\n            })[0];\n        }\n\n    });\n\n    function getAxisType(axisDim, option) {\n        // Default axis with data is category axis\n        return option.type || (option.data ? 'category' : 'value');\n    }\n\n    zrUtil.merge(AxisModel.prototype, __webpack_require__(212));\n\n    var extraOption = {\n        // gridIndex: 0,\n        // gridId: '',\n\n        // Offset is for multiple axis on the same position\n        offset: 0\n    };\n\n    axisModelCreator('x', AxisModel, getAxisType, extraOption);\n    axisModelCreator('y', AxisModel, getAxisType, extraOption);\n\n    module.exports = AxisModel;\n\n\n/***/ }),\n/* 214 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Grid is a region which contains at most 4 cartesian systems\n *\n * TODO Default cartesian\n */\nvar factory = exports;\n\n    var layout = __webpack_require__(171);\n    var axisHelper = __webpack_require__(173);\n\n    var zrUtil = __webpack_require__(158);\n    var Cartesian2D = __webpack_require__(328);\n    var Axis2D = __webpack_require__(326);\n\n    var each = zrUtil.each;\n\n    var ifAxisCrossZero = axisHelper.ifAxisCrossZero;\n    var niceScaleExtent = axisHelper.niceScaleExtent;\n\n    // 依赖 GridModel, AxisModel 做预处理\n    __webpack_require__(329);\n\n    /**\n     * Check if the axis is used in the specified grid\n     * @inner\n     */\n    function isAxisUsedInTheGrid(axisModel, gridModel, ecModel) {\n        return axisModel.getCoordSysModel() === gridModel;\n    }\n\n    function getLabelUnionRect(axis) {\n        var axisModel = axis.model;\n        var labels = axisModel.getFormattedLabels();\n        var textStyleModel = axisModel.getModel('axisLabel.textStyle');\n        var rect;\n        var step = 1;\n        var labelCount = labels.length;\n        if (labelCount > 40) {\n            // Simple optimization for large amount of labels\n            step = Math.ceil(labelCount / 40);\n        }\n        for (var i = 0; i < labelCount; i += step) {\n            if (!axis.isLabelIgnored(i)) {\n                var singleRect = textStyleModel.getTextRect(labels[i]);\n                // FIXME consider label rotate\n                rect ? rect.union(singleRect) : (rect = singleRect);\n            }\n        }\n        return rect;\n    }\n\n    function Grid(gridModel, ecModel, api) {\n        /**\n         * @type {Object.<string, module:echarts/coord/cartesian/Cartesian2D>}\n         * @private\n         */\n        this._coordsMap = {};\n\n        /**\n         * @type {Array.<module:echarts/coord/cartesian/Cartesian>}\n         * @private\n         */\n        this._coordsList = [];\n\n        /**\n         * @type {Object.<string, module:echarts/coord/cartesian/Axis2D>}\n         * @private\n         */\n        this._axesMap = {};\n\n        /**\n         * @type {Array.<module:echarts/coord/cartesian/Axis2D>}\n         * @private\n         */\n        this._axesList = [];\n\n        this._initCartesian(gridModel, ecModel, api);\n\n        this.model = gridModel;\n    }\n\n    var gridProto = Grid.prototype;\n\n    gridProto.type = 'grid';\n\n    gridProto.axisPointerEnabled = true;\n\n    gridProto.getRect = function () {\n        return this._rect;\n    };\n\n    gridProto.update = function (ecModel, api) {\n\n        var axesMap = this._axesMap;\n\n        this._updateScale(ecModel, this.model);\n\n        function ifAxisCanNotOnZero(otherAxisDim) {\n            var axes = axesMap[otherAxisDim];\n            for (var idx in axes) {\n                if (axes.hasOwnProperty(idx)) {\n                    var axis = axes[idx];\n                    if (axis && (axis.type === 'category' || !ifAxisCrossZero(axis))) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        }\n\n        each(axesMap.x, function (xAxis) {\n            niceScaleExtent(xAxis.scale, xAxis.model);\n        });\n        each(axesMap.y, function (yAxis) {\n            niceScaleExtent(yAxis.scale, yAxis.model);\n        });\n        // Fix configuration\n        each(axesMap.x, function (xAxis) {\n            // onZero can not be enabled in these two situations\n            // 1. When any other axis is a category axis\n            // 2. When any other axis not across 0 point\n            if (ifAxisCanNotOnZero('y')) {\n                xAxis.onZero = false;\n            }\n        });\n        each(axesMap.y, function (yAxis) {\n            if (ifAxisCanNotOnZero('x')) {\n                yAxis.onZero = false;\n            }\n        });\n\n        // Resize again if containLabel is enabled\n        // FIXME It may cause getting wrong grid size in data processing stage\n        this.resize(this.model, api);\n    };\n\n    /**\n     * Resize the grid\n     * @param {module:echarts/coord/cartesian/GridModel} gridModel\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    gridProto.resize = function (gridModel, api) {\n\n        var gridRect = layout.getLayoutRect(\n            gridModel.getBoxLayoutParams(), {\n                width: api.getWidth(),\n                height: api.getHeight()\n            });\n\n        this._rect = gridRect;\n\n        var axesList = this._axesList;\n\n        adjustAxes();\n\n        // Minus label size\n        if (gridModel.get('containLabel')) {\n            each(axesList, function (axis) {\n                if (!axis.model.get('axisLabel.inside')) {\n                    var labelUnionRect = getLabelUnionRect(axis);\n                    if (labelUnionRect) {\n                        var dim = axis.isHorizontal() ? 'height' : 'width';\n                        var margin = axis.model.get('axisLabel.margin');\n                        gridRect[dim] -= labelUnionRect[dim] + margin;\n                        if (axis.position === 'top') {\n                            gridRect.y += labelUnionRect.height + margin;\n                        }\n                        else if (axis.position === 'left')  {\n                            gridRect.x += labelUnionRect.width + margin;\n                        }\n                    }\n                }\n            });\n\n            adjustAxes();\n        }\n\n        function adjustAxes() {\n            each(axesList, function (axis) {\n                var isHorizontal = axis.isHorizontal();\n                var extent = isHorizontal ? [0, gridRect.width] : [0, gridRect.height];\n                var idx = axis.inverse ? 1 : 0;\n                axis.setExtent(extent[idx], extent[1 - idx]);\n                updateAxisTransfrom(axis, isHorizontal ? gridRect.x : gridRect.y);\n            });\n        }\n    };\n\n    /**\n     * @param {string} axisType\n     * @param {ndumber} [axisIndex]\n     */\n    gridProto.getAxis = function (axisType, axisIndex) {\n        var axesMapOnDim = this._axesMap[axisType];\n        if (axesMapOnDim != null) {\n            if (axisIndex == null) {\n                // Find first axis\n                for (var name in axesMapOnDim) {\n                    if (axesMapOnDim.hasOwnProperty(name)) {\n                        return axesMapOnDim[name];\n                    }\n                }\n            }\n            return axesMapOnDim[axisIndex];\n        }\n    };\n\n    /**\n     * @return {Array.<module:echarts/coord/Axis>}\n     */\n    gridProto.getAxes = function () {\n        return this._axesList.slice();\n    };\n\n    /**\n     * Usage:\n     *      grid.getCartesian(xAxisIndex, yAxisIndex);\n     *      grid.getCartesian(xAxisIndex);\n     *      grid.getCartesian(null, yAxisIndex);\n     *      grid.getCartesian({xAxisIndex: ..., yAxisIndex: ...});\n     *\n     * @param {number|Object} [xAxisIndex]\n     * @param {number} [yAxisIndex]\n     */\n    gridProto.getCartesian = function (xAxisIndex, yAxisIndex) {\n        if (xAxisIndex != null && yAxisIndex != null) {\n            var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n            return this._coordsMap[key];\n        }\n\n        if (zrUtil.isObject(xAxisIndex)) {\n            yAxisIndex = xAxisIndex.yAxisIndex;\n            xAxisIndex = xAxisIndex.xAxisIndex;\n        }\n        // When only xAxisIndex or yAxisIndex given, find its first cartesian.\n        for (var i = 0, coordList = this._coordsList; i < coordList.length; i++) {\n            if (coordList[i].getAxis('x').index === xAxisIndex\n                || coordList[i].getAxis('y').index === yAxisIndex\n            ) {\n                return coordList[i];\n            }\n        }\n    };\n\n    gridProto.getCartesians = function () {\n        return this._coordsList.slice();\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.convertToPixel = function (ecModel, finder, value) {\n        var target = this._findConvertTarget(ecModel, finder);\n\n        return target.cartesian\n            ? target.cartesian.dataToPoint(value)\n            : target.axis\n            ? target.axis.toGlobalCoord(target.axis.dataToCoord(value))\n            : null;\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.convertFromPixel = function (ecModel, finder, value) {\n        var target = this._findConvertTarget(ecModel, finder);\n\n        return target.cartesian\n            ? target.cartesian.pointToData(value)\n            : target.axis\n            ? target.axis.coordToData(target.axis.toLocalCoord(value))\n            : null;\n    };\n\n    /**\n     * @inner\n     */\n    gridProto._findConvertTarget = function (ecModel, finder) {\n        var seriesModel = finder.seriesModel;\n        var xAxisModel = finder.xAxisModel\n            || (seriesModel && seriesModel.getReferringComponents('xAxis')[0]);\n        var yAxisModel = finder.yAxisModel\n            || (seriesModel && seriesModel.getReferringComponents('yAxis')[0]);\n        var gridModel = finder.gridModel;\n        var coordsList = this._coordsList;\n        var cartesian;\n        var axis;\n\n        if (seriesModel) {\n            cartesian = seriesModel.coordinateSystem;\n            zrUtil.indexOf(coordsList, cartesian) < 0 && (cartesian = null);\n        }\n        else if (xAxisModel && yAxisModel) {\n            cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n        }\n        else if (xAxisModel) {\n            axis = this.getAxis('x', xAxisModel.componentIndex);\n        }\n        else if (yAxisModel) {\n            axis = this.getAxis('y', yAxisModel.componentIndex);\n        }\n        // Lowest priority.\n        else if (gridModel) {\n            var grid = gridModel.coordinateSystem;\n            if (grid === this) {\n                cartesian = this._coordsList[0];\n            }\n        }\n\n        return {cartesian: cartesian, axis: axis};\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.containPoint = function (point) {\n        var coord = this._coordsList[0];\n        if (coord) {\n            return coord.containPoint(point);\n        }\n    };\n\n    /**\n     * Initialize cartesian coordinate systems\n     * @private\n     */\n    gridProto._initCartesian = function (gridModel, ecModel, api) {\n        var axisPositionUsed = {\n            left: false,\n            right: false,\n            top: false,\n            bottom: false\n        };\n\n        var axesMap = {\n            x: {},\n            y: {}\n        };\n        var axesCount = {\n            x: 0,\n            y: 0\n        };\n\n        /// Create axis\n        ecModel.eachComponent('xAxis', createAxisCreator('x'), this);\n        ecModel.eachComponent('yAxis', createAxisCreator('y'), this);\n\n        if (!axesCount.x || !axesCount.y) {\n            // Roll back when there no either x or y axis\n            this._axesMap = {};\n            this._axesList = [];\n            return;\n        }\n\n        this._axesMap = axesMap;\n\n        /// Create cartesian2d\n        each(axesMap.x, function (xAxis, xAxisIndex) {\n            each(axesMap.y, function (yAxis, yAxisIndex) {\n                var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n                var cartesian = new Cartesian2D(key);\n\n                cartesian.grid = this;\n                cartesian.model = gridModel;\n\n                this._coordsMap[key] = cartesian;\n                this._coordsList.push(cartesian);\n\n                cartesian.addAxis(xAxis);\n                cartesian.addAxis(yAxis);\n            }, this);\n        }, this);\n\n        function createAxisCreator(axisType) {\n            return function (axisModel, idx) {\n                if (!isAxisUsedInTheGrid(axisModel, gridModel, ecModel)) {\n                    return;\n                }\n\n                var axisPosition = axisModel.get('position');\n                if (axisType === 'x') {\n                    // Fix position\n                    if (axisPosition !== 'top' && axisPosition !== 'bottom') {\n                        // Default bottom of X\n                        axisPosition = 'bottom';\n                        if (axisPositionUsed[axisPosition]) {\n                            axisPosition = axisPosition === 'top' ? 'bottom' : 'top';\n                        }\n                    }\n                }\n                else {\n                    // Fix position\n                    if (axisPosition !== 'left' && axisPosition !== 'right') {\n                        // Default left of Y\n                        axisPosition = 'left';\n                        if (axisPositionUsed[axisPosition]) {\n                            axisPosition = axisPosition === 'left' ? 'right' : 'left';\n                        }\n                    }\n                }\n                axisPositionUsed[axisPosition] = true;\n\n                var axis = new Axis2D(\n                    axisType, axisHelper.createScaleByModel(axisModel),\n                    [0, 0],\n                    axisModel.get('type'),\n                    axisPosition\n                );\n\n                var isCategory = axis.type === 'category';\n                axis.onBand = isCategory && axisModel.get('boundaryGap');\n                axis.inverse = axisModel.get('inverse');\n\n                axis.onZero = axisModel.get('axisLine.onZero');\n\n                // Inject axis into axisModel\n                axisModel.axis = axis;\n\n                // Inject axisModel into axis\n                axis.model = axisModel;\n\n                // Inject grid info axis\n                axis.grid = this;\n\n                // Index of axis, can be used as key\n                axis.index = idx;\n\n                this._axesList.push(axis);\n\n                axesMap[axisType][idx] = axis;\n                axesCount[axisType]++;\n            };\n        }\n    };\n\n    /**\n     * Update cartesian properties from series\n     * @param  {module:echarts/model/Option} option\n     * @private\n     */\n    gridProto._updateScale = function (ecModel, gridModel) {\n        // Reset scale\n        zrUtil.each(this._axesList, function (axis) {\n            axis.scale.setExtent(Infinity, -Infinity);\n        });\n        ecModel.eachSeries(function (seriesModel) {\n            if (isCartesian2D(seriesModel)) {\n                var axesModels = findAxesModels(seriesModel, ecModel);\n                var xAxisModel = axesModels[0];\n                var yAxisModel = axesModels[1];\n\n                if (!isAxisUsedInTheGrid(xAxisModel, gridModel, ecModel)\n                    || !isAxisUsedInTheGrid(yAxisModel, gridModel, ecModel)\n                 ) {\n                    return;\n                }\n\n                var cartesian = this.getCartesian(\n                    xAxisModel.componentIndex, yAxisModel.componentIndex\n                );\n                var data = seriesModel.getData();\n                var xAxis = cartesian.getAxis('x');\n                var yAxis = cartesian.getAxis('y');\n\n                if (data.type === 'list') {\n                    unionExtent(data, xAxis, seriesModel);\n                    unionExtent(data, yAxis, seriesModel);\n                }\n            }\n        }, this);\n\n        function unionExtent(data, axis, seriesModel) {\n            each(seriesModel.coordDimToDataDim(axis.dim), function (dim) {\n                axis.scale.unionExtentFromData(data, dim);\n            });\n        }\n    };\n\n    /**\n     * @param {string} [dim] 'x' or 'y' or 'auto' or null/undefined\n     * @return {Object} {baseAxes: [], otherAxes: []}\n     */\n    gridProto.getTooltipAxes = function (dim) {\n        var baseAxes = [];\n        var otherAxes = [];\n\n        each(this.getCartesians(), function (cartesian) {\n            var baseAxis = (dim != null && dim !== 'auto')\n                ? cartesian.getAxis(dim) : cartesian.getBaseAxis();\n            var otherAxis = cartesian.getOtherAxis(baseAxis);\n            zrUtil.indexOf(baseAxes, baseAxis) < 0 && baseAxes.push(baseAxis);\n            zrUtil.indexOf(otherAxes, otherAxis) < 0 && otherAxes.push(otherAxis);\n        });\n\n        return {baseAxes: baseAxes, otherAxes: otherAxes};\n    };\n\n    /**\n     * @inner\n     */\n    function updateAxisTransfrom(axis, coordBase) {\n        var axisExtent = axis.getExtent();\n        var axisExtentSum = axisExtent[0] + axisExtent[1];\n\n        // Fast transform\n        axis.toGlobalCoord = axis.dim === 'x'\n            ? function (coord) {\n                return coord + coordBase;\n            }\n            : function (coord) {\n                return axisExtentSum - coord + coordBase;\n            };\n        axis.toLocalCoord = axis.dim === 'x'\n            ? function (coord) {\n                return coord - coordBase;\n            }\n            : function (coord) {\n                return axisExtentSum - coord + coordBase;\n            };\n    }\n\n    var axesTypes = ['xAxis', 'yAxis'];\n    /**\n     * @inner\n     */\n    function findAxesModels(seriesModel, ecModel) {\n        return zrUtil.map(axesTypes, function (axisType) {\n            var axisModel = seriesModel.getReferringComponents(axisType)[0];\n\n            if (__DEV__) {\n                if (!axisModel) {\n                    throw new Error(axisType + ' \"' + zrUtil.retrieve(\n                        seriesModel.get(axisType + 'Index'),\n                        seriesModel.get(axisType + 'Id'),\n                        0\n                    ) + '\" not found');\n                }\n            }\n            return axisModel;\n        });\n    }\n\n    /**\n     * @inner\n     */\n    function isCartesian2D(seriesModel) {\n        return seriesModel.get('coordinateSystem') === 'cartesian2d';\n    }\n\n    Grid.create = function (ecModel, api) {\n        var grids = [];\n        ecModel.eachComponent('grid', function (gridModel, idx) {\n            var grid = new Grid(gridModel, ecModel, api);\n            grid.name = 'grid_' + idx;\n            grid.resize(gridModel, api);\n\n            gridModel.coordinateSystem = grid;\n\n            grids.push(grid);\n        });\n\n        // Inject the coordinateSystems into seriesModel\n        ecModel.eachSeries(function (seriesModel) {\n            if (!isCartesian2D(seriesModel)) {\n                return;\n            }\n\n            var axesModels = findAxesModels(seriesModel, ecModel);\n            var xAxisModel = axesModels[0];\n            var yAxisModel = axesModels[1];\n\n            var gridModel = xAxisModel.getCoordSysModel();\n\n            if (__DEV__) {\n                if (!gridModel) {\n                    throw new Error(\n                        'Grid \"' + zrUtil.retrieve(\n                            xAxisModel.get('gridIndex'),\n                            xAxisModel.get('gridId'),\n                            0\n                        ) + '\" not found'\n                    );\n                }\n                if (xAxisModel.getCoordSysModel() !== yAxisModel.getCoordSysModel()) {\n                    throw new Error('xAxis and yAxis must use the same grid');\n                }\n            }\n\n            var grid = gridModel.coordinateSystem;\n\n            seriesModel.coordinateSystem = grid.getCartesian(\n                xAxisModel.componentIndex, yAxisModel.componentIndex\n            );\n        });\n\n        return grids;\n    };\n\n    // For deciding which dimensions to use when creating list data\n    Grid.dimensions = Grid.prototype.dimensions = Cartesian2D.prototype.dimensions;\n\n    __webpack_require__(188).register('cartesian2d', Grid);\n\n    module.exports = Grid;\n\n\n/***/ }),\n/* 215 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(158);\n    var formatUtil = __webpack_require__(166);\n    var classUtil = __webpack_require__(168);\n    var modelUtil = __webpack_require__(162);\n    var ComponentModel = __webpack_require__(170);\n    var colorPaletteMixin = __webpack_require__(216);\n    var env = __webpack_require__(167);\n    var layout = __webpack_require__(171);\n\n    var set = classUtil.set;\n    var get = classUtil.get;\n    var encodeHTML = formatUtil.encodeHTML;\n    var addCommas = formatUtil.addCommas;\n\n    var SeriesModel = ComponentModel.extend({\n\n        type: 'series.__base__',\n\n        /**\n         * @readOnly\n         */\n        seriesIndex: 0,\n\n        // coodinateSystem will be injected in the echarts/CoordinateSystem\n        coordinateSystem: null,\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        defaultOption: null,\n\n        /**\n         * Data provided for legend\n         * @type {Function}\n         */\n        // PENDING\n        legendDataProvider: null,\n\n        /**\n         * Access path of color for visual\n         */\n        visualColorAccessPath: 'itemStyle.normal.color',\n\n        /**\n         * Support merge layout params.\n         * Only support 'box' now (left/right/top/bottom/width/height).\n         * @type {string|Object} Object can be {ignoreSize: true}\n         * @readOnly\n         */\n        layoutMode: null,\n\n        init: function (option, parentModel, ecModel, extraOpt) {\n\n            /**\n             * @type {number}\n             * @readOnly\n             */\n            this.seriesIndex = this.componentIndex;\n\n            this.mergeDefaultAndTheme(option, ecModel);\n\n            var data = this.getInitialData(option, ecModel);\n            if (__DEV__) {\n                zrUtil.assert(data, 'getInitialData returned invalid data.');\n            }\n            /**\n             * @type {module:echarts/data/List|module:echarts/data/Tree|module:echarts/data/Graph}\n             * @private\n             */\n            set(this, 'dataBeforeProcessed', data);\n\n            // If we reverse the order (make data firstly, and then make\n            // dataBeforeProcessed by cloneShallow), cloneShallow will\n            // cause data.graph.data !== data when using\n            // module:echarts/data/Graph or module:echarts/data/Tree.\n            // See module:echarts/data/helper/linkList\n            this.restoreData();\n        },\n\n        /**\n         * Util for merge default and theme to option\n         * @param  {Object} option\n         * @param  {module:echarts/model/Global} ecModel\n         */\n        mergeDefaultAndTheme: function (option, ecModel) {\n            var layoutMode = this.layoutMode;\n            var inputPositionParams = layoutMode\n                ? layout.getLayoutParams(option) : {};\n\n            zrUtil.merge(\n                option,\n                ecModel.getTheme().get(this.subType)\n            );\n            zrUtil.merge(option, this.getDefaultOption());\n\n            // Default label emphasis `position` and `show`\n            // FIXME Set label in mergeOption\n            modelUtil.defaultEmphasis(option.label, modelUtil.LABEL_OPTIONS);\n\n            this.fillDataTextStyle(option.data);\n\n            if (layoutMode) {\n                layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n            }\n        },\n\n        mergeOption: function (newSeriesOption, ecModel) {\n            newSeriesOption = zrUtil.merge(this.option, newSeriesOption, true);\n            this.fillDataTextStyle(newSeriesOption.data);\n\n            var layoutMode = this.layoutMode;\n            if (layoutMode) {\n                layout.mergeLayoutParam(this.option, newSeriesOption, layoutMode);\n            }\n\n            var data = this.getInitialData(newSeriesOption, ecModel);\n            // TODO Merge data?\n            if (data) {\n                set(this, 'data', data);\n                set(this, 'dataBeforeProcessed', data.cloneShallow());\n            }\n        },\n\n        fillDataTextStyle: function (data) {\n            // Default data label emphasis `position` and `show`\n            // FIXME Tree structure data ?\n            // FIXME Performance ?\n            if (data) {\n                for (var i = 0; i < data.length; i++) {\n                    if (data[i] && data[i].label) {\n                        modelUtil.defaultEmphasis(data[i].label, modelUtil.LABEL_OPTIONS);\n                    }\n                }\n            }\n        },\n\n        /**\n         * Init a data structure from data related option in series\n         * Must be overwritten\n         */\n        getInitialData: function () {},\n\n        /**\n         * @param {string} [dataType]\n         * @return {module:echarts/data/List}\n         */\n        getData: function (dataType) {\n            var data = get(this, 'data');\n            return dataType == null ? data : data.getLinkedData(dataType);\n        },\n\n        /**\n         * @param {module:echarts/data/List} data\n         */\n        setData: function (data) {\n            set(this, 'data', data);\n        },\n\n        /**\n         * Get data before processed\n         * @return {module:echarts/data/List}\n         */\n        getRawData: function () {\n            return get(this, 'dataBeforeProcessed');\n        },\n\n        /**\n         * Coord dimension to data dimension.\n         *\n         * By default the result is the same as dimensions of series data.\n         * But in some series data dimensions are different from coord dimensions (i.e.\n         * candlestick and boxplot). Override this method to handle those cases.\n         *\n         * Coord dimension to data dimension can be one-to-many\n         *\n         * @param {string} coordDim\n         * @return {Array.<string>} dimensions on the axis.\n         */\n        coordDimToDataDim: function (coordDim) {\n            return [coordDim];\n        },\n\n        /**\n         * Convert data dimension to coord dimension.\n         *\n         * @param {string|number} dataDim\n         * @return {string}\n         */\n        dataDimToCoordDim: function (dataDim) {\n            return dataDim;\n        },\n\n        /**\n         * Get base axis if has coordinate system and has axis.\n         * By default use coordSys.getBaseAxis();\n         * Can be overrided for some chart.\n         * @return {type} description\n         */\n        getBaseAxis: function () {\n            var coordSys = this.coordinateSystem;\n            return coordSys && coordSys.getBaseAxis && coordSys.getBaseAxis();\n        },\n\n        // FIXME\n        /**\n         * Default tooltip formatter\n         *\n         * @param {number} dataIndex\n         * @param {boolean} [multipleSeries=false]\n         * @param {number} [dataType]\n         */\n        formatTooltip: function (dataIndex, multipleSeries, dataType) {\n            function formatArrayValue(value) {\n                var result = [];\n\n                zrUtil.each(value, function (val, idx) {\n                    var dimInfo = data.getDimensionInfo(idx);\n                    var dimType = dimInfo && dimInfo.type;\n                    var valStr;\n\n                    if (dimType === 'ordinal') {\n                        valStr = val + '';\n                    }\n                    else if (dimType === 'time') {\n                        valStr = multipleSeries ? '' : formatUtil.formatTime('yyyy/MM/dd hh:mm:ss', val);\n                    }\n                    else {\n                        valStr = addCommas(val);\n                    }\n\n                    valStr && result.push(valStr);\n                });\n\n                return result.join(', ');\n            }\n\n            var data = get(this, 'data');\n\n            var value = this.getRawValue(dataIndex);\n            var formattedValue = encodeHTML(\n                zrUtil.isArray(value) ? formatArrayValue(value) : addCommas(value)\n            );\n            var name = data.getName(dataIndex);\n\n            var color = data.getItemVisual(dataIndex, 'color');\n            if (zrUtil.isObject(color) && color.colorStops) {\n                color = (color.colorStops[0] || {}).color;\n            }\n            color = color || 'transparent';\n\n            var colorEl = '<span style=\"display:inline-block;margin-right:5px;'\n                + 'border-radius:10px;width:9px;height:9px;background-color:' + encodeHTML(color) + '\"></span>';\n\n            var seriesName = this.name;\n            // FIXME\n            if (seriesName === '\\0-') {\n                // Not show '-'\n                seriesName = '';\n            }\n            return !multipleSeries\n                ? ((seriesName && encodeHTML(seriesName) + '<br />') + colorEl\n                    + (name\n                        ? encodeHTML(name) + ' : ' + formattedValue\n                        : formattedValue\n                    )\n                  )\n                : (colorEl + encodeHTML(this.name) + ' : ' + formattedValue);\n        },\n\n        /**\n         * @return {boolean}\n         */\n        isAnimationEnabled: function () {\n            if (env.node) {\n                return false;\n            }\n\n            var animationEnabled = this.getShallow('animation');\n            if (animationEnabled) {\n                if (this.getData().count() > this.getShallow('animationThreshold')) {\n                    animationEnabled = false;\n                }\n            }\n            return animationEnabled;\n        },\n\n        restoreData: function () {\n            set(this, 'data', get(this, 'dataBeforeProcessed').cloneShallow());\n        },\n\n        getColorFromPalette: function (name, scope) {\n            var ecModel = this.ecModel;\n            // PENDING\n            var color = colorPaletteMixin.getColorFromPalette.call(this, name, scope);\n            if (!color) {\n                color = ecModel.getColorFromPalette(name, scope);\n            }\n            return color;\n        },\n\n        /**\n         * Get data indices for show tooltip content. See tooltip.\n         * @abstract\n         * @param {Array.<string>|string} dim\n         * @param {Array.<number>} value\n         * @param {module:echarts/coord/single/SingleAxis} baseAxis\n         * @return {Object} {dataIndices, nestestValue}.\n         */\n        getAxisTooltipData: null,\n\n        /**\n         * See tooltip.\n         * @abstract\n         * @param {number} dataIndex\n         * @return {Array.<number>} Point of tooltip. null/undefined can be returned.\n         */\n        getTooltipPosition: null\n    });\n\n    zrUtil.mixin(SeriesModel, modelUtil.dataFormatMixin);\n    zrUtil.mixin(SeriesModel, colorPaletteMixin);\n\n    module.exports = SeriesModel;\n\n\n/***/ }),\n/* 216 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var classUtil = __webpack_require__(168);\n    var set = classUtil.set;\n    var get = classUtil.get;\n\n    module.exports = {\n        clearColorPalette: function () {\n            set(this, 'colorIdx', 0);\n            set(this, 'colorNameMap', {});\n        },\n\n        getColorFromPalette: function (name, scope) {\n            scope = scope || this;\n            var colorIdx = get(scope, 'colorIdx') || 0;\n            var colorNameMap = get(scope, 'colorNameMap') || set(scope, 'colorNameMap', {});\n            if (colorNameMap[name]) {\n                return colorNameMap[name];\n            }\n            var colorPalette = this.get('color', true) || [];\n            if (!colorPalette.length) {\n                return;\n            }\n\n            var color = colorPalette[colorIdx];\n            if (name) {\n                colorNameMap[name] = color;\n            }\n            set(scope, 'colorIdx', (colorIdx + 1) % colorPalette.length);\n\n            return color;\n        }\n    };\n\n\n/***/ }),\n/* 217 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * For testable.\n */\n\n\n    var numberUtil = __webpack_require__(161);\n\n    var roundNumber = numberUtil.round;\n\n    var helper = {};\n\n    /**\n     * @param {Array.<number>} extent Both extent[0] and extent[1] should be valid number.\n     *                                Should be extent[0] < extent[1].\n     * @param {number} splitNumber splitNumber should be >= 1.\n     * @return {Object} {interval, intervalPrecision, niceTickExtent}\n     */\n    helper.intervalScaleNiceTicks = function (extent, splitNumber) {\n        var result = {};\n        var span = extent[1] - extent[0];\n\n        var interval = result.interval = numberUtil.nice(span / splitNumber, true);\n        // Tow more digital for tick.\n        var precision = result.intervalPrecision = numberUtil.getPrecisionSafe(interval) + 2;\n        // Niced extent inside original extent\n        var niceTickExtent = result.niceTickExtent = [\n            roundNumber(Math.ceil(extent[0] / interval) * interval, precision),\n            roundNumber(Math.floor(extent[1] / interval) * interval, precision)\n        ];\n\n        helper.fixExtent(niceTickExtent, extent);\n\n        return result;\n    };\n\n    function clamp(niceTickExtent, idx, extent) {\n        niceTickExtent[idx] = Math.max(Math.min(niceTickExtent[idx], extent[1]), extent[0]);\n    }\n\n    // In some cases (e.g., splitNumber is 1), niceTickExtent may be out of extent.\n    helper.fixExtent = function (niceTickExtent, extent) {\n        !isFinite(niceTickExtent[0]) && (niceTickExtent[0] = extent[0]);\n        !isFinite(niceTickExtent[1]) && (niceTickExtent[1] = extent[1]);\n        clamp(niceTickExtent, 0, extent);\n        clamp(niceTickExtent, 1, extent);\n        if (niceTickExtent[0] > niceTickExtent[1]) {\n            niceTickExtent[0] = niceTickExtent[1];\n        }\n    };\n\n    helper.intervalScaleGetTicks = function (interval, extent, niceTickExtent, intervalPrecision) {\n        var ticks = [];\n\n        // If interval is 0, return [];\n        if (!interval) {\n            return ticks;\n        }\n\n        // Consider this case: using dataZoom toolbox, zoom and zoom.\n        var safeLimit = 10000;\n\n        if (extent[0] < niceTickExtent[0]) {\n            ticks.push(extent[0]);\n        }\n        var tick = niceTickExtent[0];\n\n        while (tick <= niceTickExtent[1]) {\n            ticks.push(tick);\n            // Avoid rounding error\n            tick = roundNumber(tick + interval, intervalPrecision);\n            if (tick === ticks[ticks.length - 1]) {\n                // Consider out of safe float point, e.g.,\n                // -3711126.9907707 + 2e-10 === -3711126.9907707\n                break;\n            }\n            if (ticks.length > safeLimit) {\n                return [];\n            }\n        }\n        // Consider this case: the last item of ticks is smaller\n        // than niceTickExtent[1] and niceTickExtent[1] === extent[1].\n        if (extent[1] > (ticks.length ? ticks[ticks.length - 1] : niceTickExtent[1])) {\n            ticks.push(extent[1]);\n        }\n\n        return ticks;\n    };\n\n    module.exports = helper;\n\n\n/***/ }),\n/* 218 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// Symbol factory\n\n\n    var graphic = __webpack_require__(160);\n    var BoundingRect = __webpack_require__(169);\n\n    /**\n     * Triangle shape\n     * @inner\n     */\n    var Triangle = graphic.extendShape({\n        type: 'triangle',\n        shape: {\n            cx: 0,\n            cy: 0,\n            width: 0,\n            height: 0\n        },\n        buildPath: function (path, shape) {\n            var cx = shape.cx;\n            var cy = shape.cy;\n            var width = shape.width / 2;\n            var height = shape.height / 2;\n            path.moveTo(cx, cy - height);\n            path.lineTo(cx + width, cy + height);\n            path.lineTo(cx - width, cy + height);\n            path.closePath();\n        }\n    });\n    /**\n     * Diamond shape\n     * @inner\n     */\n    var Diamond = graphic.extendShape({\n        type: 'diamond',\n        shape: {\n            cx: 0,\n            cy: 0,\n            width: 0,\n            height: 0\n        },\n        buildPath: function (path, shape) {\n            var cx = shape.cx;\n            var cy = shape.cy;\n            var width = shape.width / 2;\n            var height = shape.height / 2;\n            path.moveTo(cx, cy - height);\n            path.lineTo(cx + width, cy);\n            path.lineTo(cx, cy + height);\n            path.lineTo(cx - width, cy);\n            path.closePath();\n        }\n    });\n\n    /**\n     * Pin shape\n     * @inner\n     */\n    var Pin = graphic.extendShape({\n        type: 'pin',\n        shape: {\n            // x, y on the cusp\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (path, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var w = shape.width / 5 * 3;\n            // Height must be larger than width\n            var h = Math.max(w, shape.height);\n            var r = w / 2;\n\n            // Dist on y with tangent point and circle center\n            var dy = r * r / (h - r);\n            var cy = y - h + r + dy;\n            var angle = Math.asin(dy / r);\n            // Dist on x with tangent point and circle center\n            var dx = Math.cos(angle) * r;\n\n            var tanX = Math.sin(angle);\n            var tanY = Math.cos(angle);\n\n            path.arc(\n                x, cy, r,\n                Math.PI - angle,\n                Math.PI * 2 + angle\n            );\n\n            var cpLen = r * 0.6;\n            var cpLen2 = r * 0.7;\n            path.bezierCurveTo(\n                x + dx - tanX * cpLen, cy + dy + tanY * cpLen,\n                x, y - cpLen2,\n                x, y\n            );\n            path.bezierCurveTo(\n                x, y - cpLen2,\n                x - dx + tanX * cpLen, cy + dy + tanY * cpLen,\n                x - dx, cy + dy\n            );\n            path.closePath();\n        }\n    });\n\n    /**\n     * Arrow shape\n     * @inner\n     */\n    var Arrow = graphic.extendShape({\n\n        type: 'arrow',\n\n        shape: {\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var height = shape.height;\n            var width = shape.width;\n            var x = shape.x;\n            var y = shape.y;\n            var dx = width / 3 * 2;\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + dx, y + height);\n            ctx.lineTo(x, y + height / 4 * 3);\n            ctx.lineTo(x - dx, y + height);\n            ctx.lineTo(x, y);\n            ctx.closePath();\n        }\n    });\n\n    /**\n     * Map of path contructors\n     * @type {Object.<string, module:zrender/graphic/Path>}\n     */\n    var symbolCtors = {\n        line: graphic.Line,\n\n        rect: graphic.Rect,\n\n        roundRect: graphic.Rect,\n\n        square: graphic.Rect,\n\n        circle: graphic.Circle,\n\n        diamond: Diamond,\n\n        pin: Pin,\n\n        arrow: Arrow,\n\n        triangle: Triangle\n    };\n\n    var symbolShapeMakers = {\n\n        line: function (x, y, w, h, shape) {\n            // FIXME\n            shape.x1 = x;\n            shape.y1 = y + h / 2;\n            shape.x2 = x + w;\n            shape.y2 = y + h / 2;\n        },\n\n        rect: function (x, y, w, h, shape) {\n            shape.x = x;\n            shape.y = y;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        roundRect: function (x, y, w, h, shape) {\n            shape.x = x;\n            shape.y = y;\n            shape.width = w;\n            shape.height = h;\n            shape.r = Math.min(w, h) / 4;\n        },\n\n        square: function (x, y, w, h, shape) {\n            var size = Math.min(w, h);\n            shape.x = x;\n            shape.y = y;\n            shape.width = size;\n            shape.height = size;\n        },\n\n        circle: function (x, y, w, h, shape) {\n            // Put circle in the center of square\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.r = Math.min(w, h) / 2;\n        },\n\n        diamond: function (x, y, w, h, shape) {\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        pin: function (x, y, w, h, shape) {\n            shape.x = x + w / 2;\n            shape.y = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        arrow: function (x, y, w, h, shape) {\n            shape.x = x + w / 2;\n            shape.y = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        triangle: function (x, y, w, h, shape) {\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        }\n    };\n\n    var symbolBuildProxies = {};\n    for (var name in symbolCtors) {\n        if (symbolCtors.hasOwnProperty(name)) {\n            symbolBuildProxies[name] = new symbolCtors[name]();\n        }\n    }\n\n    var Symbol = graphic.extendShape({\n\n        type: 'symbol',\n\n        shape: {\n            symbolType: '',\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        beforeBrush: function () {\n            var style = this.style;\n            var shape = this.shape;\n            // FIXME\n            if (shape.symbolType === 'pin' && style.textPosition === 'inside') {\n                style.textPosition = ['50%', '40%'];\n                style.textAlign = 'center';\n                style.textVerticalAlign = 'middle';\n            }\n        },\n\n        buildPath: function (ctx, shape, inBundle) {\n            var symbolType = shape.symbolType;\n            var proxySymbol = symbolBuildProxies[symbolType];\n            if (shape.symbolType !== 'none') {\n                if (!proxySymbol) {\n                    // Default rect\n                    symbolType = 'rect';\n                    proxySymbol = symbolBuildProxies[symbolType];\n                }\n                symbolShapeMakers[symbolType](\n                    shape.x, shape.y, shape.width, shape.height, proxySymbol.shape\n                );\n                proxySymbol.buildPath(ctx, proxySymbol.shape, inBundle);\n            }\n        }\n    });\n\n    // Provide setColor helper method to avoid determine if set the fill or stroke outside\n    var symbolPathSetColor = function (color) {\n        if (this.type !== 'image') {\n            var symbolStyle = this.style;\n            var symbolShape = this.shape;\n            if (symbolShape && symbolShape.symbolType === 'line') {\n                symbolStyle.stroke = color;\n            }\n            else if (this.__isEmptyBrush) {\n                symbolStyle.stroke = color;\n                symbolStyle.fill = '#fff';\n            }\n            else {\n                // FIXME 判断图形默认是填充还是描边，使用 onlyStroke ?\n                symbolStyle.fill && (symbolStyle.fill = color);\n                symbolStyle.stroke && (symbolStyle.stroke = color);\n            }\n            this.dirty(false);\n        }\n    };\n\n    var symbolUtil = {\n        /**\n         * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n         * @param {string} symbolType\n         * @param {number} x\n         * @param {number} y\n         * @param {number} w\n         * @param {number} h\n         * @param {string} color\n         */\n        createSymbol: function (symbolType, x, y, w, h, color) {\n            // TODO Support image object, DynamicImage.\n\n            var isEmpty = symbolType.indexOf('empty') === 0;\n            if (isEmpty) {\n                symbolType = symbolType.substr(5, 1).toLowerCase() + symbolType.substr(6);\n            }\n            var symbolPath;\n\n            if (symbolType.indexOf('image://') === 0) {\n                symbolPath = new graphic.Image({\n                    style: {\n                        image: symbolType.slice(8),\n                        x: x,\n                        y: y,\n                        width: w,\n                        height: h\n                    }\n                });\n            }\n            else if (symbolType.indexOf('path://') === 0) {\n                symbolPath = graphic.makePath(symbolType.slice(7), {}, new BoundingRect(x, y, w, h));\n            }\n            else {\n                symbolPath = new Symbol({\n                    shape: {\n                        symbolType: symbolType,\n                        x: x,\n                        y: y,\n                        width: w,\n                        height: h\n                    }\n                });\n            }\n\n            symbolPath.__isEmptyBrush = isEmpty;\n\n            symbolPath.setColor = symbolPathSetColor;\n\n            symbolPath.setColor(color);\n\n            return symbolPath;\n        }\n    };\n\n    module.exports = symbolUtil;\n\n\n/***/ }),\n/* 219 */\n/***/ (function(module, exports) {\n\n\n\n    var lib = {};\n\n    var ORIGIN_METHOD = '\\0__throttleOriginMethod';\n    var RATE = '\\0__throttleRate';\n    var THROTTLE_TYPE = '\\0__throttleType';\n\n    /**\n     * @public\n     * @param {(Function)} fn\n     * @param {number} [delay=0] Unit: ms.\n     * @param {boolean} [debounce=false]\n     *        true: If call interval less than `delay`, only the last call works.\n     *        false: If call interval less than `delay, call works on fixed rate.\n     * @return {(Function)} throttled fn.\n     */\n    lib.throttle = function (fn, delay, debounce) {\n\n        var currCall;\n        var lastCall = 0;\n        var lastExec = 0;\n        var timer = null;\n        var diff;\n        var scope;\n        var args;\n        var debounceNextCall;\n\n        delay = delay || 0;\n\n        function exec() {\n            lastExec = (new Date()).getTime();\n            timer = null;\n            fn.apply(scope, args || []);\n        }\n\n        var cb = function () {\n            currCall = (new Date()).getTime();\n            scope = this;\n            args = arguments;\n            var thisDelay = debounceNextCall || delay;\n            var thisDebounce = debounceNextCall || debounce;\n            debounceNextCall = null;\n            diff = currCall - (thisDebounce ? lastCall : lastExec) - thisDelay;\n\n            clearTimeout(timer);\n\n            if (thisDebounce) {\n                timer = setTimeout(exec, thisDelay);\n            }\n            else {\n                if (diff >= 0) {\n                    exec();\n                }\n                else {\n                    timer = setTimeout(exec, -diff);\n                }\n            }\n\n            lastCall = currCall;\n        };\n\n        /**\n         * Clear throttle.\n         * @public\n         */\n        cb.clear = function () {\n            if (timer) {\n                clearTimeout(timer);\n                timer = null;\n            }\n        };\n\n        /**\n         * Enable debounce once.\n         */\n        cb.debounceNextCall = function (debounceDelay) {\n            debounceNextCall = debounceDelay;\n        };\n\n        return cb;\n    };\n\n    /**\n     * Create throttle method or update throttle rate.\n     *\n     * @example\n     * ComponentView.prototype.render = function () {\n     *     ...\n     *     throttle.createOrUpdate(\n     *         this,\n     *         '_dispatchAction',\n     *         this.model.get('throttle'),\n     *         'fixRate'\n     *     );\n     * };\n     * ComponentView.prototype.remove = function () {\n     *     throttle.clear(this, '_dispatchAction');\n     * };\n     * ComponentView.prototype.dispose = function () {\n     *     throttle.clear(this, '_dispatchAction');\n     * };\n     *\n     * @public\n     * @param {Object} obj\n     * @param {string} fnAttr\n     * @param {number} [rate]\n     * @param {string} [throttleType='fixRate'] 'fixRate' or 'debounce'\n     * @return {Function} throttled function.\n     */\n    lib.createOrUpdate = function (obj, fnAttr, rate, throttleType) {\n        var fn = obj[fnAttr];\n\n        if (!fn) {\n            return;\n        }\n\n        var originFn = fn[ORIGIN_METHOD] || fn;\n        var lastThrottleType = fn[THROTTLE_TYPE];\n        var lastRate = fn[RATE];\n\n        if (lastRate !== rate || lastThrottleType !== throttleType) {\n            if (rate == null || !throttleType) {\n                return (obj[fnAttr] = originFn);\n            }\n\n            fn = obj[fnAttr] = lib.throttle(\n                originFn, rate, throttleType === 'debounce'\n            );\n            fn[ORIGIN_METHOD] = originFn;\n            fn[THROTTLE_TYPE] = throttleType;\n            fn[RATE] = rate;\n        }\n\n        return fn;\n    };\n\n    /**\n     * Clear throttle. Example see throttle.createOrUpdate.\n     *\n     * @public\n     * @param {Object} obj\n     * @param {string} fnAttr\n     */\n    lib.clear = function (obj, fnAttr) {\n        var fn = obj[fnAttr];\n        if (fn && fn[ORIGIN_METHOD]) {\n            obj[fnAttr] = fn[ORIGIN_METHOD];\n        }\n    };\n\n    module.exports = lib;\n\n\n\n/***/ }),\n/* 220 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var Group = __webpack_require__(183);\n    var componentUtil = __webpack_require__(194);\n    var clazzUtil = __webpack_require__(168);\n    var modelUtil = __webpack_require__(162);\n    var zrUtil = __webpack_require__(158);\n\n    function Chart() {\n\n        /**\n         * @type {module:zrender/container/Group}\n         * @readOnly\n         */\n        this.group = new Group();\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        this.uid = componentUtil.getUID('viewChart');\n    }\n\n    Chart.prototype = {\n\n        type: 'chart',\n\n        /**\n         * Init the chart\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        init: function (ecModel, api) {},\n\n        /**\n         * Render the chart\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        render: function (seriesModel, ecModel, api, payload) {},\n\n        /**\n         * Highlight series or specified data item\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        highlight: function (seriesModel, ecModel, api, payload) {\n            toggleHighlight(seriesModel.getData(), payload, 'emphasis');\n        },\n\n        /**\n         * Downplay series or specified data item\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        downplay: function (seriesModel, ecModel, api, payload) {\n            toggleHighlight(seriesModel.getData(), payload, 'normal');\n        },\n\n        /**\n         * Remove self\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        remove: function (ecModel, api) {\n            this.group.removeAll();\n        },\n\n        /**\n         * Dispose self\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        dispose: function () {}\n\n        /**\n         * The view contains the given point.\n         * @interface\n         * @param {Array.<number>} point\n         * @return {boolean}\n         */\n        // containPoint: function () {}\n\n    };\n\n    var chartProto = Chart.prototype;\n    chartProto.updateView\n        = chartProto.updateLayout\n        = chartProto.updateVisual\n        = function (seriesModel, ecModel, api, payload) {\n            this.render(seriesModel, ecModel, api, payload);\n        };\n\n    /**\n     * Set state of single element\n     * @param  {module:zrender/Element} el\n     * @param  {string} state\n     */\n    function elSetState(el, state) {\n        if (el) {\n            el.trigger(state);\n            if (el.type === 'group') {\n                for (var i = 0; i < el.childCount(); i++) {\n                    elSetState(el.childAt(i), state);\n                }\n            }\n        }\n    }\n    /**\n     * @param  {module:echarts/data/List} data\n     * @param  {Object} payload\n     * @param  {string} state 'normal'|'emphasis'\n     * @inner\n     */\n    function toggleHighlight(data, payload, state) {\n        var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n        if (dataIndex != null) {\n            zrUtil.each(modelUtil.normalizeToArray(dataIndex), function (dataIdx) {\n                elSetState(data.getItemGraphicEl(dataIdx), state);\n            });\n        }\n        else {\n            data.eachItemGraphicEl(function (el) {\n                elSetState(el, state);\n            });\n        }\n    }\n\n    // Enable Chart.extend.\n    clazzUtil.enableClassExtend(Chart, ['dispose']);\n\n    // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(Chart, {registerWhenExtend: true});\n\n    module.exports = Chart;\n\n\n/***/ }),\n/* 221 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar detector = module.exports = {};\n\ndetector.isIE = function(version) {\n    function isAnyIeVersion() {\n        var agent = navigator.userAgent.toLowerCase();\n        return agent.indexOf(\"msie\") !== -1 || agent.indexOf(\"trident\") !== -1 || agent.indexOf(\" edge/\") !== -1;\n    }\n\n    if(!isAnyIeVersion()) {\n        return false;\n    }\n\n    if(!version) {\n        return true;\n    }\n\n    //Shamelessly stolen from https://gist.github.com/padolsey/527683\n    var ieVersion = (function(){\n        var undef,\n            v = 3,\n            div = document.createElement(\"div\"),\n            all = div.getElementsByTagName(\"i\");\n\n        do {\n            div.innerHTML = \"<!--[if gt IE \" + (++v) + \"]><i></i><![endif]-->\";\n        }\n        while (all[0]);\n\n        return v > 4 ? v : undef;\n    }());\n\n    return version === ieVersion;\n};\n\ndetector.isLegacyOpera = function() {\n    return !!window.opera;\n};\n\n\n/***/ }),\n/* 222 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar utils = module.exports = {};\n\n/**\n * Loops through the collection and calls the callback for each element. if the callback returns truthy, the loop is broken and returns the same value.\n * @public\n * @param {*} collection The collection to loop through. Needs to have a length property set and have indices set from 0 to length - 1.\n * @param {function} callback The callback to be called for each element. The element will be given as a parameter to the callback. If this callback returns truthy, the loop is broken and the same value is returned.\n * @returns {*} The value that a callback has returned (if truthy). Otherwise nothing.\n */\nutils.forEach = function(collection, callback) {\n    for(var i = 0; i < collection.length; i++) {\n        var result = callback(collection[i]);\n        if(result) {\n            return result;\n        }\n    }\n};\n\n\n/***/ }),\n/* 223 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * @module zrender/Element\n */\n\n\n    var guid = __webpack_require__(228);\n    var Eventful = __webpack_require__(177);\n    var Transformable = __webpack_require__(234);\n    var Animatable = __webpack_require__(434);\n    var zrUtil = __webpack_require__(158);\n\n    /**\n     * @alias module:zrender/Element\n     * @constructor\n     * @extends {module:zrender/mixin/Animatable}\n     * @extends {module:zrender/mixin/Transformable}\n     * @extends {module:zrender/mixin/Eventful}\n     */\n    var Element = function (opts) {\n\n        Transformable.call(this, opts);\n        Eventful.call(this, opts);\n        Animatable.call(this, opts);\n\n        /**\n         * 画布元素ID\n         * @type {string}\n         */\n        this.id = opts.id || guid();\n    };\n\n    Element.prototype = {\n\n        /**\n         * 元素类型\n         * Element type\n         * @type {string}\n         */\n        type: 'element',\n\n        /**\n         * 元素名字\n         * Element name\n         * @type {string}\n         */\n        name: '',\n\n        /**\n         * ZRender 实例对象，会在 element 添加到 zrender 实例中后自动赋值\n         * ZRender instance will be assigned when element is associated with zrender\n         * @name module:/zrender/Element#__zr\n         * @type {module:zrender/ZRender}\n         */\n        __zr: null,\n\n        /**\n         * 图形是否忽略，为true时忽略图形的绘制以及事件触发\n         * If ignore drawing and events of the element object\n         * @name module:/zrender/Element#ignore\n         * @type {boolean}\n         * @default false\n         */\n        ignore: false,\n\n        /**\n         * 用于裁剪的路径(shape)，所有 Group 内的路径在绘制时都会被这个路径裁剪\n         * 该路径会继承被裁减对象的变换\n         * @type {module:zrender/graphic/Path}\n         * @see http://www.w3.org/TR/2dcontext/#clipping-region\n         * @readOnly\n         */\n        clipPath: null,\n\n        /**\n         * Drift element\n         * @param  {number} dx dx on the global space\n         * @param  {number} dy dy on the global space\n         */\n        drift: function (dx, dy) {\n            switch (this.draggable) {\n                case 'horizontal':\n                    dy = 0;\n                    break;\n                case 'vertical':\n                    dx = 0;\n                    break;\n            }\n\n            var m = this.transform;\n            if (!m) {\n                m = this.transform = [1, 0, 0, 1, 0, 0];\n            }\n            m[4] += dx;\n            m[5] += dy;\n\n            this.decomposeTransform();\n            this.dirty(false);\n        },\n\n        /**\n         * Hook before update\n         */\n        beforeUpdate: function () {},\n        /**\n         * Hook after update\n         */\n        afterUpdate: function () {},\n        /**\n         * Update each frame\n         */\n        update: function () {\n            this.updateTransform();\n        },\n\n        /**\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {},\n\n        /**\n         * @protected\n         */\n        attrKV: function (key, value) {\n            if (key === 'position' || key === 'scale' || key === 'origin') {\n                // Copy the array\n                if (value) {\n                    var target = this[key];\n                    if (!target) {\n                        target = this[key] = [];\n                    }\n                    target[0] = value[0];\n                    target[1] = value[1];\n                }\n            }\n            else {\n                this[key] = value;\n            }\n        },\n\n        /**\n         * Hide the element\n         */\n        hide: function () {\n            this.ignore = true;\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * Show the element\n         */\n        show: function () {\n            this.ignore = false;\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * @param {string|Object} key\n         * @param {*} value\n         */\n        attr: function (key, value) {\n            if (typeof key === 'string') {\n                this.attrKV(key, value);\n            }\n            else if (zrUtil.isObject(key)) {\n                for (var name in key) {\n                    if (key.hasOwnProperty(name)) {\n                        this.attrKV(name, key[name]);\n                    }\n                }\n            }\n\n            this.dirty(false);\n\n            return this;\n        },\n\n        /**\n         * @param {module:zrender/graphic/Path} clipPath\n         */\n        setClipPath: function (clipPath) {\n            var zr = this.__zr;\n            if (zr) {\n                clipPath.addSelfToZr(zr);\n            }\n\n            // Remove previous clip path\n            if (this.clipPath && this.clipPath !== clipPath) {\n                this.removeClipPath();\n            }\n\n            this.clipPath = clipPath;\n            clipPath.__zr = zr;\n            clipPath.__clipTarget = this;\n\n            this.dirty(false);\n        },\n\n        /**\n         */\n        removeClipPath: function () {\n            var clipPath = this.clipPath;\n            if (clipPath) {\n                if (clipPath.__zr) {\n                    clipPath.removeSelfFromZr(clipPath.__zr);\n                }\n\n                clipPath.__zr = null;\n                clipPath.__clipTarget = null;\n                this.clipPath = null;\n\n                this.dirty(false);\n            }\n        },\n\n        /**\n         * Add self from zrender instance.\n         * Not recursively because it will be invoked when element added to storage.\n         * @param {module:zrender/ZRender} zr\n         */\n        addSelfToZr: function (zr) {\n            this.__zr = zr;\n            // 添加动画\n            var animators = this.animators;\n            if (animators) {\n                for (var i = 0; i < animators.length; i++) {\n                    zr.animation.addAnimator(animators[i]);\n                }\n            }\n\n            if (this.clipPath) {\n                this.clipPath.addSelfToZr(zr);\n            }\n        },\n\n        /**\n         * Remove self from zrender instance.\n         * Not recursively because it will be invoked when element added to storage.\n         * @param {module:zrender/ZRender} zr\n         */\n        removeSelfFromZr: function (zr) {\n            this.__zr = null;\n            // 移除动画\n            var animators = this.animators;\n            if (animators) {\n                for (var i = 0; i < animators.length; i++) {\n                    zr.animation.removeAnimator(animators[i]);\n                }\n            }\n\n            if (this.clipPath) {\n                this.clipPath.removeSelfFromZr(zr);\n            }\n        }\n    };\n\n    zrUtil.mixin(Element, Animatable);\n    zrUtil.mixin(Element, Transformable);\n    zrUtil.mixin(Element, Eventful);\n\n    module.exports = Element;\n\n\n/***/ }),\n/* 224 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/animation/Animator\n */\n\n\n    var Clip = __webpack_require__(406);\n    var color = __webpack_require__(178);\n    var util = __webpack_require__(158);\n    var isArrayLike = util.isArrayLike;\n\n    var arraySlice = Array.prototype.slice;\n\n    function defaultGetter(target, key) {\n        return target[key];\n    }\n\n    function defaultSetter(target, key, value) {\n        target[key] = value;\n    }\n\n    /**\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} percent\n     * @return {number}\n     */\n    function interpolateNumber(p0, p1, percent) {\n        return (p1 - p0) * percent + p0;\n    }\n\n    /**\n     * @param  {string} p0\n     * @param  {string} p1\n     * @param  {number} percent\n     * @return {string}\n     */\n    function interpolateString(p0, p1, percent) {\n        return percent > 0.5 ? p1 : p0;\n    }\n\n    /**\n     * @param  {Array} p0\n     * @param  {Array} p1\n     * @param  {number} percent\n     * @param  {Array} out\n     * @param  {number} arrDim\n     */\n    function interpolateArray(p0, p1, percent, out, arrDim) {\n        var len = p0.length;\n        if (arrDim == 1) {\n            for (var i = 0; i < len; i++) {\n                out[i] = interpolateNumber(p0[i], p1[i], percent);\n            }\n        }\n        else {\n            var len2 = p0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    out[i][j] = interpolateNumber(\n                        p0[i][j], p1[i][j], percent\n                    );\n                }\n            }\n        }\n    }\n\n    // arr0 is source array, arr1 is target array.\n    // Do some preprocess to avoid error happened when interpolating from arr0 to arr1\n    function fillArr(arr0, arr1, arrDim) {\n        var arr0Len = arr0.length;\n        var arr1Len = arr1.length;\n        if (arr0Len !== arr1Len) {\n            // FIXME Not work for TypedArray\n            var isPreviousLarger = arr0Len > arr1Len;\n            if (isPreviousLarger) {\n                // Cut the previous\n                arr0.length = arr1Len;\n            }\n            else {\n                // Fill the previous\n                for (var i = arr0Len; i < arr1Len; i++) {\n                    arr0.push(\n                        arrDim === 1 ? arr1[i] : arraySlice.call(arr1[i])\n                    );\n                }\n            }\n        }\n        // Handling NaN value\n        var len2 = arr0[0] && arr0[0].length;\n        for (var i = 0; i < arr0.length; i++) {\n            if (arrDim === 1) {\n                if (isNaN(arr0[i])) {\n                    arr0[i] = arr1[i];\n                }\n            }\n            else {\n                for (var j = 0; j < len2; j++) {\n                    if (isNaN(arr0[i][j])) {\n                        arr0[i][j] = arr1[i][j];\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @param  {Array} arr0\n     * @param  {Array} arr1\n     * @param  {number} arrDim\n     * @return {boolean}\n     */\n    function isArraySame(arr0, arr1, arrDim) {\n        if (arr0 === arr1) {\n            return true;\n        }\n        var len = arr0.length;\n        if (len !== arr1.length) {\n            return false;\n        }\n        if (arrDim === 1) {\n            for (var i = 0; i < len; i++) {\n                if (arr0[i] !== arr1[i]) {\n                    return false;\n                }\n            }\n        }\n        else {\n            var len2 = arr0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    if (arr0[i][j] !== arr1[i][j]) {\n                        return false;\n                    }\n                }\n            }\n        }\n        return true;\n    }\n\n    /**\n     * Catmull Rom interpolate array\n     * @param  {Array} p0\n     * @param  {Array} p1\n     * @param  {Array} p2\n     * @param  {Array} p3\n     * @param  {number} t\n     * @param  {number} t2\n     * @param  {number} t3\n     * @param  {Array} out\n     * @param  {number} arrDim\n     */\n    function catmullRomInterpolateArray(\n        p0, p1, p2, p3, t, t2, t3, out, arrDim\n    ) {\n        var len = p0.length;\n        if (arrDim == 1) {\n            for (var i = 0; i < len; i++) {\n                out[i] = catmullRomInterpolate(\n                    p0[i], p1[i], p2[i], p3[i], t, t2, t3\n                );\n            }\n        }\n        else {\n            var len2 = p0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    out[i][j] = catmullRomInterpolate(\n                        p0[i][j], p1[i][j], p2[i][j], p3[i][j],\n                        t, t2, t3\n                    );\n                }\n            }\n        }\n    }\n\n    /**\n     * Catmull Rom interpolate number\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @param  {number} t2\n     * @param  {number} t3\n     * @return {number}\n     */\n    function catmullRomInterpolate(p0, p1, p2, p3, t, t2, t3) {\n        var v0 = (p2 - p0) * 0.5;\n        var v1 = (p3 - p1) * 0.5;\n        return (2 * (p1 - p2) + v0 + v1) * t3\n                + (-3 * (p1 - p2) - 2 * v0 - v1) * t2\n                + v0 * t + p1;\n    }\n\n    function cloneValue(value) {\n        if (isArrayLike(value)) {\n            var len = value.length;\n            if (isArrayLike(value[0])) {\n                var ret = [];\n                for (var i = 0; i < len; i++) {\n                    ret.push(arraySlice.call(value[i]));\n                }\n                return ret;\n            }\n\n            return arraySlice.call(value);\n        }\n\n        return value;\n    }\n\n    function rgba2String(rgba) {\n        rgba[0] = Math.floor(rgba[0]);\n        rgba[1] = Math.floor(rgba[1]);\n        rgba[2] = Math.floor(rgba[2]);\n\n        return 'rgba(' + rgba.join(',') + ')';\n    }\n\n    function createTrackClip (animator, easing, oneTrackDone, keyframes, propName) {\n        var getter = animator._getter;\n        var setter = animator._setter;\n        var useSpline = easing === 'spline';\n\n        var trackLen = keyframes.length;\n        if (!trackLen) {\n            return;\n        }\n        // Guess data type\n        var firstVal = keyframes[0].value;\n        var isValueArray = isArrayLike(firstVal);\n        var isValueColor = false;\n        var isValueString = false;\n\n        // For vertices morphing\n        var arrDim = (\n                isValueArray\n                && isArrayLike(firstVal[0])\n            )\n            ? 2 : 1;\n        var trackMaxTime;\n        // Sort keyframe as ascending\n        keyframes.sort(function(a, b) {\n            return a.time - b.time;\n        });\n\n        trackMaxTime = keyframes[trackLen - 1].time;\n        // Percents of each keyframe\n        var kfPercents = [];\n        // Value of each keyframe\n        var kfValues = [];\n        var prevValue = keyframes[0].value;\n        var isAllValueEqual = true;\n        for (var i = 0; i < trackLen; i++) {\n            kfPercents.push(keyframes[i].time / trackMaxTime);\n            // Assume value is a color when it is a string\n            var value = keyframes[i].value;\n\n            // Check if value is equal, deep check if value is array\n            if (!((isValueArray && isArraySame(value, prevValue, arrDim))\n                || (!isValueArray && value === prevValue))) {\n                isAllValueEqual = false;\n            }\n            prevValue = value;\n\n            // Try converting a string to a color array\n            if (typeof value == 'string') {\n                var colorArray = color.parse(value);\n                if (colorArray) {\n                    value = colorArray;\n                    isValueColor = true;\n                }\n                else {\n                    isValueString = true;\n                }\n            }\n            kfValues.push(value);\n        }\n        if (isAllValueEqual) {\n            return;\n        }\n\n        var lastValue = kfValues[trackLen - 1];\n        // Polyfill array and NaN value\n        for (var i = 0; i < trackLen - 1; i++) {\n            if (isValueArray) {\n                fillArr(kfValues[i], lastValue, arrDim);\n            }\n            else {\n                if (isNaN(kfValues[i]) && !isNaN(lastValue) && !isValueString && !isValueColor) {\n                    kfValues[i] = lastValue;\n                }\n            }\n        }\n        isValueArray && fillArr(getter(animator._target, propName), lastValue, arrDim);\n\n        // Cache the key of last frame to speed up when\n        // animation playback is sequency\n        var lastFrame = 0;\n        var lastFramePercent = 0;\n        var start;\n        var w;\n        var p0;\n        var p1;\n        var p2;\n        var p3;\n\n        if (isValueColor) {\n            var rgba = [0, 0, 0, 0];\n        }\n\n        var onframe = function (target, percent) {\n            // Find the range keyframes\n            // kf1-----kf2---------current--------kf3\n            // find kf2 and kf3 and do interpolation\n            var frame;\n            // In the easing function like elasticOut, percent may less than 0\n            if (percent < 0) {\n                frame = 0;\n            }\n            else if (percent < lastFramePercent) {\n                // Start from next key\n                // PENDING start from lastFrame ?\n                start = Math.min(lastFrame + 1, trackLen - 1);\n                for (frame = start; frame >= 0; frame--) {\n                    if (kfPercents[frame] <= percent) {\n                        break;\n                    }\n                }\n                // PENDING really need to do this ?\n                frame = Math.min(frame, trackLen - 2);\n            }\n            else {\n                for (frame = lastFrame; frame < trackLen; frame++) {\n                    if (kfPercents[frame] > percent) {\n                        break;\n                    }\n                }\n                frame = Math.min(frame - 1, trackLen - 2);\n            }\n            lastFrame = frame;\n            lastFramePercent = percent;\n\n            var range = (kfPercents[frame + 1] - kfPercents[frame]);\n            if (range === 0) {\n                return;\n            }\n            else {\n                w = (percent - kfPercents[frame]) / range;\n            }\n            if (useSpline) {\n                p1 = kfValues[frame];\n                p0 = kfValues[frame === 0 ? frame : frame - 1];\n                p2 = kfValues[frame > trackLen - 2 ? trackLen - 1 : frame + 1];\n                p3 = kfValues[frame > trackLen - 3 ? trackLen - 1 : frame + 2];\n                if (isValueArray) {\n                    catmullRomInterpolateArray(\n                        p0, p1, p2, p3, w, w * w, w * w * w,\n                        getter(target, propName),\n                        arrDim\n                    );\n                }\n                else {\n                    var value;\n                    if (isValueColor) {\n                        value = catmullRomInterpolateArray(\n                            p0, p1, p2, p3, w, w * w, w * w * w,\n                            rgba, 1\n                        );\n                        value = rgba2String(rgba);\n                    }\n                    else if (isValueString) {\n                        // String is step(0.5)\n                        return interpolateString(p1, p2, w);\n                    }\n                    else {\n                        value = catmullRomInterpolate(\n                            p0, p1, p2, p3, w, w * w, w * w * w\n                        );\n                    }\n                    setter(\n                        target,\n                        propName,\n                        value\n                    );\n                }\n            }\n            else {\n                if (isValueArray) {\n                    interpolateArray(\n                        kfValues[frame], kfValues[frame + 1], w,\n                        getter(target, propName),\n                        arrDim\n                    );\n                }\n                else {\n                    var value;\n                    if (isValueColor) {\n                        interpolateArray(\n                            kfValues[frame], kfValues[frame + 1], w,\n                            rgba, 1\n                        );\n                        value = rgba2String(rgba);\n                    }\n                    else if (isValueString) {\n                        // String is step(0.5)\n                        return interpolateString(kfValues[frame], kfValues[frame + 1], w);\n                    }\n                    else {\n                        value = interpolateNumber(kfValues[frame], kfValues[frame + 1], w);\n                    }\n                    setter(\n                        target,\n                        propName,\n                        value\n                    );\n                }\n            }\n        };\n\n        var clip = new Clip({\n            target: animator._target,\n            life: trackMaxTime,\n            loop: animator._loop,\n            delay: animator._delay,\n            onframe: onframe,\n            ondestroy: oneTrackDone\n        });\n\n        if (easing && easing !== 'spline') {\n            clip.easing = easing;\n        }\n\n        return clip;\n    }\n\n    /**\n     * @alias module:zrender/animation/Animator\n     * @constructor\n     * @param {Object} target\n     * @param {boolean} loop\n     * @param {Function} getter\n     * @param {Function} setter\n     */\n    var Animator = function(target, loop, getter, setter) {\n        this._tracks = {};\n        this._target = target;\n\n        this._loop = loop || false;\n\n        this._getter = getter || defaultGetter;\n        this._setter = setter || defaultSetter;\n\n        this._clipCount = 0;\n\n        this._delay = 0;\n\n        this._doneList = [];\n\n        this._onframeList = [];\n\n        this._clipList = [];\n    };\n\n    Animator.prototype = {\n        /**\n         * 设置动画关键帧\n         * @param  {number} time 关键帧时间，单位是ms\n         * @param  {Object} props 关键帧的属性值，key-value表示\n         * @return {module:zrender/animation/Animator}\n         */\n        when: function(time /* ms */, props) {\n            var tracks = this._tracks;\n            for (var propName in props) {\n                if (!props.hasOwnProperty(propName)) {\n                    continue;\n                }\n\n                if (!tracks[propName]) {\n                    tracks[propName] = [];\n                    // Invalid value\n                    var value = this._getter(this._target, propName);\n                    if (value == null) {\n                        // zrLog('Invalid property ' + propName);\n                        continue;\n                    }\n                    // If time is 0\n                    //  Then props is given initialize value\n                    // Else\n                    //  Initialize value from current prop value\n                    if (time !== 0) {\n                        tracks[propName].push({\n                            time: 0,\n                            value: cloneValue(value)\n                        });\n                    }\n                }\n                tracks[propName].push({\n                    time: time,\n                    value: props[propName]\n                });\n            }\n            return this;\n        },\n        /**\n         * 添加动画每一帧的回调函数\n         * @param  {Function} callback\n         * @return {module:zrender/animation/Animator}\n         */\n        during: function (callback) {\n            this._onframeList.push(callback);\n            return this;\n        },\n\n        pause: function () {\n            for (var i = 0; i < this._clipList.length; i++) {\n                this._clipList[i].pause();\n            }\n            this._paused = true;\n        },\n\n        resume: function () {\n            for (var i = 0; i < this._clipList.length; i++) {\n                this._clipList[i].resume();\n            }\n            this._paused = false;\n        },\n\n        isPaused: function () {\n            return !!this._paused;\n        },\n\n        _doneCallback: function () {\n            // Clear all tracks\n            this._tracks = {};\n            // Clear all clips\n            this._clipList.length = 0;\n\n            var doneList = this._doneList;\n            var len = doneList.length;\n            for (var i = 0; i < len; i++) {\n                doneList[i].call(this);\n            }\n        },\n        /**\n         * 开始执行动画\n         * @param  {string|Function} easing\n         *         动画缓动函数，详见{@link module:zrender/animation/easing}\n         * @return {module:zrender/animation/Animator}\n         */\n        start: function (easing) {\n\n            var self = this;\n            var clipCount = 0;\n\n            var oneTrackDone = function() {\n                clipCount--;\n                if (!clipCount) {\n                    self._doneCallback();\n                }\n            };\n\n            var lastClip;\n            for (var propName in this._tracks) {\n                if (!this._tracks.hasOwnProperty(propName)) {\n                    continue;\n                }\n                var clip = createTrackClip(\n                    this, easing, oneTrackDone,\n                    this._tracks[propName], propName\n                );\n                if (clip) {\n                    this._clipList.push(clip);\n                    clipCount++;\n\n                    // If start after added to animation\n                    if (this.animation) {\n                        this.animation.addClip(clip);\n                    }\n\n                    lastClip = clip;\n                }\n            }\n\n            // Add during callback on the last clip\n            if (lastClip) {\n                var oldOnFrame = lastClip.onframe;\n                lastClip.onframe = function (target, percent) {\n                    oldOnFrame(target, percent);\n\n                    for (var i = 0; i < self._onframeList.length; i++) {\n                        self._onframeList[i](target, percent);\n                    }\n                };\n            }\n\n            if (!clipCount) {\n                this._doneCallback();\n            }\n            return this;\n        },\n        /**\n         * 停止动画\n         * @param {boolean} forwardToLast If move to last frame before stop\n         */\n        stop: function (forwardToLast) {\n            var clipList = this._clipList;\n            var animation = this.animation;\n            for (var i = 0; i < clipList.length; i++) {\n                var clip = clipList[i];\n                if (forwardToLast) {\n                    // Move to last frame before stop\n                    clip.onframe(this._target, 1);\n                }\n                animation && animation.removeClip(clip);\n            }\n            clipList.length = 0;\n        },\n        /**\n         * 设置动画延迟开始的时间\n         * @param  {number} time 单位ms\n         * @return {module:zrender/animation/Animator}\n         */\n        delay: function (time) {\n            this._delay = time;\n            return this;\n        },\n        /**\n         * 添加动画结束的回调\n         * @param  {Function} cb\n         * @return {module:zrender/animation/Animator}\n         */\n        done: function(cb) {\n            if (cb) {\n                this._doneList.push(cb);\n            }\n            return this;\n        },\n\n        /**\n         * @return {Array.<module:zrender/animation/Clip>}\n         */\n        getClips: function () {\n            return this._clipList;\n        }\n    };\n\n    module.exports = Animator;\n\n\n/***/ }),\n/* 225 */\n/***/ (function(module, exports) {\n\n\n\n    module.exports = (typeof window !== 'undefined' &&\n                                    (window.requestAnimationFrame\n                                    || window.msRequestAnimationFrame\n                                    || window.mozRequestAnimationFrame\n                                    || window.webkitRequestAnimationFrame))\n                                || function (func) {\n                                    setTimeout(func, 16);\n                                };\n\n\n\n/***/ }),\n/* 226 */\n/***/ (function(module, exports) {\n\n\n\n    var PI2 = Math.PI * 2;\n    module.exports = {\n        normalizeRadian: function(angle) {\n            angle %= PI2;\n            if (angle < 0) {\n                angle += PI2;\n            }\n            return angle;\n        }\n    };\n\n\n/***/ }),\n/* 227 */\n/***/ (function(module, exports) {\n\n// Simple LRU cache use doubly linked list\n// @module zrender/core/LRU\n\n\n    /**\n     * Simple double linked list. Compared with array, it has O(1) remove operation.\n     * @constructor\n     */\n    var LinkedList = function () {\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.head = null;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.tail = null;\n\n        this._len = 0;\n    };\n\n    var linkedListProto = LinkedList.prototype;\n    /**\n     * Insert a new value at the tail\n     * @param  {} val\n     * @return {module:zrender/core/LRU~Entry}\n     */\n    linkedListProto.insert = function (val) {\n        var entry = new Entry(val);\n        this.insertEntry(entry);\n        return entry;\n    };\n\n    /**\n     * Insert an entry at the tail\n     * @param  {module:zrender/core/LRU~Entry} entry\n     */\n    linkedListProto.insertEntry = function (entry) {\n        if (!this.head) {\n            this.head = this.tail = entry;\n        }\n        else {\n            this.tail.next = entry;\n            entry.prev = this.tail;\n            entry.next = null;\n            this.tail = entry;\n        }\n        this._len++;\n    };\n\n    /**\n     * Remove entry.\n     * @param  {module:zrender/core/LRU~Entry} entry\n     */\n    linkedListProto.remove = function (entry) {\n        var prev = entry.prev;\n        var next = entry.next;\n        if (prev) {\n            prev.next = next;\n        }\n        else {\n            // Is head\n            this.head = next;\n        }\n        if (next) {\n            next.prev = prev;\n        }\n        else {\n            // Is tail\n            this.tail = prev;\n        }\n        entry.next = entry.prev = null;\n        this._len--;\n    };\n\n    /**\n     * @return {number}\n     */\n    linkedListProto.len = function () {\n        return this._len;\n    };\n\n    /**\n     * Clear list\n     */\n    linkedListProto.clear = function () {\n        this.head = this.tail = null;\n        this._len = 0;\n    };\n\n    /**\n     * @constructor\n     * @param {} val\n     */\n    var Entry = function (val) {\n        /**\n         * @type {}\n         */\n        this.value = val;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.next;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.prev;\n    };\n\n    /**\n     * LRU Cache\n     * @constructor\n     * @alias module:zrender/core/LRU\n     */\n    var LRU = function (maxSize) {\n\n        this._list = new LinkedList();\n\n        this._map = {};\n\n        this._maxSize = maxSize || 10;\n\n        this._lastRemovedEntry = null;\n    };\n\n    var LRUProto = LRU.prototype;\n\n    /**\n     * @param  {string} key\n     * @param  {} value\n     * @return {} Removed value\n     */\n    LRUProto.put = function (key, value) {\n        var list = this._list;\n        var map = this._map;\n        var removed = null;\n        if (map[key] == null) {\n            var len = list.len();\n            // Reuse last removed entry\n            var entry = this._lastRemovedEntry;\n\n            if (len >= this._maxSize && len > 0) {\n                // Remove the least recently used\n                var leastUsedEntry = list.head;\n                list.remove(leastUsedEntry);\n                delete map[leastUsedEntry.key];\n\n                removed = leastUsedEntry.value;\n                this._lastRemovedEntry = leastUsedEntry;\n            }\n\n            if (entry) {\n                entry.value = value;\n            }\n            else {\n                entry = new Entry(value);\n            }\n            entry.key = key;\n            list.insertEntry(entry);\n            map[key] = entry;\n        }\n\n        return removed;\n    };\n\n    /**\n     * @param  {string} key\n     * @return {}\n     */\n    LRUProto.get = function (key) {\n        var entry = this._map[key];\n        var list = this._list;\n        if (entry != null) {\n            // Put the latest used entry in the tail\n            if (entry !== list.tail) {\n                list.remove(entry);\n                list.insertEntry(entry);\n            }\n\n            return entry.value;\n        }\n    };\n\n    /**\n     * Clear the cache\n     */\n    LRUProto.clear = function () {\n        this._list.clear();\n        this._map = {};\n    };\n\n    module.exports = LRU;\n\n\n/***/ }),\n/* 228 */\n/***/ (function(module, exports) {\n\n/**\n * zrender: 生成唯一id\n *\n * @author errorrik (errorrik@gmail.com)\n */\n\n\n    var idStart = 0x0907;\n\n    module.exports = function () {\n        return idStart++;\n    };\n\n\n\n/***/ }),\n/* 229 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n        var config = __webpack_require__(182);\n\n        /**\n         * @exports zrender/tool/log\n         * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n         */\n        module.exports = function() {\n            if (config.debugMode === 0) {\n                return;\n            }\n            else if (config.debugMode == 1) {\n                for (var k in arguments) {\n                    throw new Error(arguments[k]);\n                }\n            }\n            else if (config.debugMode > 1) {\n                for (var k in arguments) {\n                    console.log(arguments[k]);\n                }\n            }\n        };\n\n        /* for debug\n        return function(mes) {\n            document.getElementById('wrong-message').innerHTML =\n                mes + ' ' + (new Date() - 0)\n                + '<br/>'\n                + document.getElementById('wrong-message').innerHTML;\n        };\n        */\n    \n\n\n/***/ }),\n/* 230 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Image element\n * @module zrender/graphic/Image\n */\n\n\n\n    var Displayable = __webpack_require__(197);\n    var BoundingRect = __webpack_require__(169);\n    var zrUtil = __webpack_require__(158);\n\n    var LRU = __webpack_require__(227);\n    var globalImageCache = new LRU(50);\n    /**\n     * @alias zrender/graphic/Image\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    function ZImage(opts) {\n        Displayable.call(this, opts);\n    }\n\n    ZImage.prototype = {\n\n        constructor: ZImage,\n\n        type: 'image',\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n            var src = style.image;\n            var image;\n\n            // Must bind each time\n            style.bind(ctx, this, prevEl);\n            // style.image is a url string\n            if (typeof src === 'string') {\n                image = this._image;\n            }\n            // style.image is an HTMLImageElement or HTMLCanvasElement or Canvas\n            else {\n                image = src;\n            }\n            // FIXME Case create many images with src\n            if (!image && src) {\n                // Try get from global image cache\n                var cachedImgObj = globalImageCache.get(src);\n                if (!cachedImgObj) {\n                    // Create a new image\n                    image = new Image();\n                    image.onload = function () {\n                        image.onload = null;\n                        for (var i = 0; i < cachedImgObj.pending.length; i++) {\n                            cachedImgObj.pending[i].dirty();\n                        }\n                    };\n                    cachedImgObj = {\n                        image: image,\n                        pending: [this]\n                    };\n                    image.src = src;\n                    globalImageCache.put(src, cachedImgObj);\n                    this._image = image;\n                    return;\n                }\n                else {\n                    image = cachedImgObj.image;\n                    this._image = image;\n                    // Image is not complete finish, add to pending list\n                    if (!image.width || !image.height) {\n                        cachedImgObj.pending.push(this);\n                        return;\n                    }\n                }\n            }\n\n            if (image) {\n                // 图片已经加载完成\n                // if (image.nodeName.toUpperCase() == 'IMG') {\n                //     if (!image.complete) {\n                //         return;\n                //     }\n                // }\n                // Else is canvas\n\n                var x = style.x || 0;\n                var y = style.y || 0;\n                // 图片加载失败\n                if (!image.width || !image.height) {\n                    return;\n                }\n                var width = style.width;\n                var height = style.height;\n                var aspect = image.width / image.height;\n                if (width == null && height != null) {\n                    // Keep image/height ratio\n                    width = height * aspect;\n                }\n                else if (height == null && width != null) {\n                    height = width / aspect;\n                }\n                else if (width == null && height == null) {\n                    width = image.width;\n                    height = image.height;\n                }\n\n                // 设置transform\n                this.setTransform(ctx);\n\n                if (style.sWidth && style.sHeight) {\n                    var sx = style.sx || 0;\n                    var sy = style.sy || 0;\n                    ctx.drawImage(\n                        image,\n                        sx, sy, style.sWidth, style.sHeight,\n                        x, y, width, height\n                    );\n                }\n                else if (style.sx && style.sy) {\n                    var sx = style.sx;\n                    var sy = style.sy;\n                    var sWidth = width - sx;\n                    var sHeight = height - sy;\n                    ctx.drawImage(\n                        image,\n                        sx, sy, sWidth, sHeight,\n                        x, y, width, height\n                    );\n                }\n                else {\n                    ctx.drawImage(image, x, y, width, height);\n                }\n\n                this.restoreTransform(ctx);\n\n                // Draw rect text\n                if (style.text != null) {\n                    this.drawRectText(ctx, this.getBoundingRect());\n                }\n\n            }\n        },\n\n        getBoundingRect: function () {\n            var style = this.style;\n            if (! this._rect) {\n                this._rect = new BoundingRect(\n                    style.x || 0, style.y || 0, style.width || 0, style.height || 0\n                );\n            }\n            return this._rect;\n        }\n    };\n\n    zrUtil.inherits(ZImage, Displayable);\n\n    module.exports = ZImage;\n\n\n/***/ }),\n/* 231 */\n/***/ (function(module, exports) {\n\n\n\n    var Pattern = function (image, repeat) {\n        // Should do nothing more in this constructor. Because gradient can be\n        // declard by `color: {image: ...}`, where this constructor will not be called.\n\n        this.image = image;\n        this.repeat = repeat;\n\n        // Can be cloned\n        this.type = 'pattern';\n    };\n\n    Pattern.prototype.getCanvasPattern = function (ctx) {\n        return ctx.createPattern(this.image, this.repeat || 'repeat');\n    };\n\n    module.exports = Pattern;\n\n\n/***/ }),\n/* 232 */\n/***/ (function(module, exports) {\n\n/**\n * @module zrender/graphic/Style\n */\n\n\n    var STYLE_COMMON_PROPS = [\n        ['shadowBlur', 0], ['shadowOffsetX', 0], ['shadowOffsetY', 0], ['shadowColor', '#000'],\n        ['lineCap', 'butt'], ['lineJoin', 'miter'], ['miterLimit', 10]\n    ];\n\n    // var SHADOW_PROPS = STYLE_COMMON_PROPS.slice(0, 4);\n    // var LINE_PROPS = STYLE_COMMON_PROPS.slice(4);\n\n    var Style = function (opts) {\n        this.extendFrom(opts);\n    };\n\n    function createLinearGradient(ctx, obj, rect) {\n        var x = obj.x == null ? 0 : obj.x;\n        var x2 = obj.x2 == null ? 1 : obj.x2;\n        var y = obj.y == null ? 0 : obj.y;\n        var y2 = obj.y2 == null ? 0 : obj.y2;\n\n        if (!obj.global) {\n            x = x * rect.width + rect.x;\n            x2 = x2 * rect.width + rect.x;\n            y = y * rect.height + rect.y;\n            y2 = y2 * rect.height + rect.y;\n        }\n\n        var canvasGradient = ctx.createLinearGradient(x, y, x2, y2);\n\n        return canvasGradient;\n    }\n\n    function createRadialGradient(ctx, obj, rect) {\n        var width = rect.width;\n        var height = rect.height;\n        var min = Math.min(width, height);\n\n        var x = obj.x == null ? 0.5 : obj.x;\n        var y = obj.y == null ? 0.5 : obj.y;\n        var r = obj.r == null ? 0.5 : obj.r;\n        if (!obj.global) {\n            x = x * width + rect.x;\n            y = y * height + rect.y;\n            r = r * min;\n        }\n\n        var canvasGradient = ctx.createRadialGradient(x, y, 0, x, y, r);\n\n        return canvasGradient;\n    }\n\n\n    Style.prototype = {\n\n        constructor: Style,\n\n        /**\n         * @type {string}\n         */\n        fill: '#000000',\n\n        /**\n         * @type {string}\n         */\n        stroke: null,\n\n        /**\n         * @type {number}\n         */\n        opacity: 1,\n\n        /**\n         * @type {Array.<number>}\n         */\n        lineDash: null,\n\n        /**\n         * @type {number}\n         */\n        lineDashOffset: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowBlur: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowOffsetX: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowOffsetY: 0,\n\n        /**\n         * @type {number}\n         */\n        lineWidth: 1,\n\n        /**\n         * If stroke ignore scale\n         * @type {Boolean}\n         */\n        strokeNoScale: false,\n\n        // Bounding rect text configuration\n        // Not affected by element transform\n        /**\n         * @type {string}\n         */\n        text: null,\n\n        /**\n         * @type {string}\n         */\n        textFill: '#000',\n\n        /**\n         * @type {string}\n         */\n        textStroke: null,\n\n        /**\n         * 'inside', 'left', 'right', 'top', 'bottom'\n         * [x, y]\n         * @type {string|Array.<number>}\n         * @default 'inside'\n         */\n        textPosition: 'inside',\n\n        /**\n         * [x, y]\n         * @type {Array.<number>}\n         */\n        textOffset: null,\n\n        /**\n         * @type {string}\n         */\n        textBaseline: null,\n\n        /**\n         * @type {string}\n         */\n        textAlign: null,\n\n        /**\n         * @type {string}\n         */\n        textVerticalAlign: null,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textDistance: 5,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textShadowBlur: 0,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textShadowOffsetX: 0,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textShadowOffsetY: 0,\n\n        /**\n         * If transform text\n         * Only useful in Path and Image element\n         * @type {boolean}\n         */\n        textTransform: false,\n\n        /**\n         * Text rotate around position of Path or Image\n         * Only useful in Path and Image element and textTransform is false.\n         */\n        textRotation: 0,\n\n        /**\n         * @type {string}\n         * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n         */\n        blend: null,\n\n        /**\n         * @param {CanvasRenderingContext2D} ctx\n         */\n        bind: function (ctx, el, prevEl) {\n            var style = this;\n            var prevStyle = prevEl && prevEl.style;\n            var firstDraw = !prevStyle;\n\n            for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n                var prop = STYLE_COMMON_PROPS[i];\n                var styleName = prop[0];\n\n                if (firstDraw || style[styleName] !== prevStyle[styleName]) {\n                    // FIXME Invalid property value will cause style leak from previous element.\n                    ctx[styleName] = style[styleName] || prop[1];\n                }\n            }\n\n            if ((firstDraw || style.fill !== prevStyle.fill)) {\n                ctx.fillStyle = style.fill;\n            }\n            if ((firstDraw || style.stroke !== prevStyle.stroke)) {\n                ctx.strokeStyle = style.stroke;\n            }\n            if ((firstDraw || style.opacity !== prevStyle.opacity)) {\n                ctx.globalAlpha = style.opacity == null ? 1 : style.opacity;\n            }\n\n            if ((firstDraw || style.blend !== prevStyle.blend)) {\n                ctx.globalCompositeOperation = style.blend || 'source-over';\n            }\n            if (this.hasStroke()) {\n                var lineWidth = style.lineWidth;\n                ctx.lineWidth = lineWidth / (\n                    (this.strokeNoScale && el && el.getLineScale) ? el.getLineScale() : 1\n                );\n            }\n        },\n\n        hasFill: function () {\n            var fill = this.fill;\n            return fill != null && fill !== 'none';\n        },\n\n        hasStroke: function () {\n            var stroke = this.stroke;\n            return stroke != null && stroke !== 'none' && this.lineWidth > 0;\n        },\n\n        /**\n         * Extend from other style\n         * @param {zrender/graphic/Style} otherStyle\n         * @param {boolean} overwrite\n         */\n        extendFrom: function (otherStyle, overwrite) {\n            if (otherStyle) {\n                var target = this;\n                for (var name in otherStyle) {\n                    if (otherStyle.hasOwnProperty(name)\n                        && (overwrite || ! target.hasOwnProperty(name))\n                    ) {\n                        target[name] = otherStyle[name];\n                    }\n                }\n            }\n        },\n\n        /**\n         * Batch setting style with a given object\n         * @param {Object|string} obj\n         * @param {*} [obj]\n         */\n        set: function (obj, value) {\n            if (typeof obj === 'string') {\n                this[obj] = value;\n            }\n            else {\n                this.extendFrom(obj, true);\n            }\n        },\n\n        /**\n         * Clone\n         * @return {zrender/graphic/Style} [description]\n         */\n        clone: function () {\n            var newStyle = new this.constructor();\n            newStyle.extendFrom(this, true);\n            return newStyle;\n        },\n\n        getGradient: function (ctx, obj, rect) {\n            var method = obj.type === 'radial' ? createRadialGradient : createLinearGradient;\n            var canvasGradient = method(ctx, obj, rect);\n            var colorStops = obj.colorStops;\n            for (var i = 0; i < colorStops.length; i++) {\n                canvasGradient.addColorStop(\n                    colorStops[i].offset, colorStops[i].color\n                );\n            }\n            return canvasGradient;\n        }\n    };\n\n    var styleProto = Style.prototype;\n    for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n        var prop = STYLE_COMMON_PROPS[i];\n        if (!(prop[0] in styleProto)) {\n            styleProto[prop[0]] = prop[1];\n        }\n    }\n\n    // Provide for others\n    Style.getGradient = styleProto.getGradient;\n\n    module.exports = Style;\n\n\n/***/ }),\n/* 233 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var smoothSpline = __webpack_require__(423);\n    var smoothBezier = __webpack_require__(422);\n\n    module.exports = {\n        buildPath: function (ctx, shape, closePath) {\n            var points = shape.points;\n            var smooth = shape.smooth;\n            if (points && points.length >= 2) {\n                if (smooth && smooth !== 'spline') {\n                    var controlPoints = smoothBezier(\n                        points, smooth, closePath, shape.smoothConstraint\n                    );\n\n                    ctx.moveTo(points[0][0], points[0][1]);\n                    var len = points.length;\n                    for (var i = 0; i < (closePath ? len : len - 1); i++) {\n                        var cp1 = controlPoints[i * 2];\n                        var cp2 = controlPoints[i * 2 + 1];\n                        var p = points[(i + 1) % len];\n                        ctx.bezierCurveTo(\n                            cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]\n                        );\n                    }\n                }\n                else {\n                    if (smooth === 'spline') {\n                        points = smoothSpline(points, closePath);\n                    }\n\n                    ctx.moveTo(points[0][0], points[0][1]);\n                    for (var i = 1, l = points.length; i < l; i++) {\n                        ctx.lineTo(points[i][0], points[i][1]);\n                    }\n                }\n\n                closePath && ctx.closePath();\n            }\n        }\n    };\n\n\n/***/ }),\n/* 234 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 提供变换扩展\n * @module zrender/mixin/Transformable\n * @author pissang (https://www.github.com/pissang)\n */\n\n\n    var matrix = __webpack_require__(175);\n    var vector = __webpack_require__(163);\n    var mIdentity = matrix.identity;\n\n    var EPSILON = 5e-5;\n\n    function isNotAroundZero(val) {\n        return val > EPSILON || val < -EPSILON;\n    }\n\n    /**\n     * @alias module:zrender/mixin/Transformable\n     * @constructor\n     */\n    var Transformable = function (opts) {\n        opts = opts || {};\n        // If there are no given position, rotation, scale\n        if (!opts.position) {\n            /**\n             * 平移\n             * @type {Array.<number>}\n             * @default [0, 0]\n             */\n            this.position = [0, 0];\n        }\n        if (opts.rotation == null) {\n            /**\n             * 旋转\n             * @type {Array.<number>}\n             * @default 0\n             */\n            this.rotation = 0;\n        }\n        if (!opts.scale) {\n            /**\n             * 缩放\n             * @type {Array.<number>}\n             * @default [1, 1]\n             */\n            this.scale = [1, 1];\n        }\n        /**\n         * 旋转和缩放的原点\n         * @type {Array.<number>}\n         * @default null\n         */\n        this.origin = this.origin || null;\n    };\n\n    var transformableProto = Transformable.prototype;\n    transformableProto.transform = null;\n\n    /**\n     * 判断是否需要有坐标变换\n     * 如果有坐标变换, 则从position, rotation, scale以及父节点的transform计算出自身的transform矩阵\n     */\n    transformableProto.needLocalTransform = function () {\n        return isNotAroundZero(this.rotation)\n            || isNotAroundZero(this.position[0])\n            || isNotAroundZero(this.position[1])\n            || isNotAroundZero(this.scale[0] - 1)\n            || isNotAroundZero(this.scale[1] - 1);\n    };\n\n    transformableProto.updateTransform = function () {\n        var parent = this.parent;\n        var parentHasTransform = parent && parent.transform;\n        var needLocalTransform = this.needLocalTransform();\n\n        var m = this.transform;\n        if (!(needLocalTransform || parentHasTransform)) {\n            m && mIdentity(m);\n            return;\n        }\n\n        m = m || matrix.create();\n\n        if (needLocalTransform) {\n            this.getLocalTransform(m);\n        }\n        else {\n            mIdentity(m);\n        }\n\n        // 应用父节点变换\n        if (parentHasTransform) {\n            if (needLocalTransform) {\n                matrix.mul(m, parent.transform, m);\n            }\n            else {\n                matrix.copy(m, parent.transform);\n            }\n        }\n        // 保存这个变换矩阵\n        this.transform = m;\n\n        this.invTransform = this.invTransform || matrix.create();\n        matrix.invert(this.invTransform, m);\n    };\n\n    transformableProto.getLocalTransform = function (m) {\n        return Transformable.getLocalTransform(this, m);\n    };\n\n    /**\n     * 将自己的transform应用到context上\n     * @param {Context2D} ctx\n     */\n    transformableProto.setTransform = function (ctx) {\n        var m = this.transform;\n        var dpr = ctx.dpr || 1;\n        if (m) {\n            ctx.setTransform(dpr * m[0], dpr * m[1], dpr * m[2], dpr * m[3], dpr * m[4], dpr * m[5]);\n        }\n        else {\n            ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n        }\n    };\n\n    transformableProto.restoreTransform = function (ctx) {\n        var dpr = ctx.dpr || 1;\n        ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n    };\n\n    var tmpTransform = [];\n\n    /**\n     * 分解`transform`矩阵到`position`, `rotation`, `scale`\n     */\n    transformableProto.decomposeTransform = function () {\n        if (!this.transform) {\n            return;\n        }\n        var parent = this.parent;\n        var m = this.transform;\n        if (parent && parent.transform) {\n            // Get local transform and decompose them to position, scale, rotation\n            matrix.mul(tmpTransform, parent.invTransform, m);\n            m = tmpTransform;\n        }\n        var sx = m[0] * m[0] + m[1] * m[1];\n        var sy = m[2] * m[2] + m[3] * m[3];\n        var position = this.position;\n        var scale = this.scale;\n        if (isNotAroundZero(sx - 1)) {\n            sx = Math.sqrt(sx);\n        }\n        if (isNotAroundZero(sy - 1)) {\n            sy = Math.sqrt(sy);\n        }\n        if (m[0] < 0) {\n            sx = -sx;\n        }\n        if (m[3] < 0) {\n            sy = -sy;\n        }\n        position[0] = m[4];\n        position[1] = m[5];\n        scale[0] = sx;\n        scale[1] = sy;\n        this.rotation = Math.atan2(-m[1] / sy, m[0] / sx);\n    };\n\n    /**\n     * Get global scale\n     * @return {Array.<number>}\n     */\n    transformableProto.getGlobalScale = function () {\n        var m = this.transform;\n        if (!m) {\n            return [1, 1];\n        }\n        var sx = Math.sqrt(m[0] * m[0] + m[1] * m[1]);\n        var sy = Math.sqrt(m[2] * m[2] + m[3] * m[3]);\n        if (m[0] < 0) {\n            sx = -sx;\n        }\n        if (m[3] < 0) {\n            sy = -sy;\n        }\n        return [sx, sy];\n    };\n    /**\n     * 变换坐标位置到 shape 的局部坐标空间\n     * @method\n     * @param {number} x\n     * @param {number} y\n     * @return {Array.<number>}\n     */\n    transformableProto.transformCoordToLocal = function (x, y) {\n        var v2 = [x, y];\n        var invTransform = this.invTransform;\n        if (invTransform) {\n            vector.applyTransform(v2, v2, invTransform);\n        }\n        return v2;\n    };\n\n    /**\n     * 变换局部坐标位置到全局坐标空间\n     * @method\n     * @param {number} x\n     * @param {number} y\n     * @return {Array.<number>}\n     */\n    transformableProto.transformCoordToGlobal = function (x, y) {\n        var v2 = [x, y];\n        var transform = this.transform;\n        if (transform) {\n            vector.applyTransform(v2, v2, transform);\n        }\n        return v2;\n    };\n\n    /**\n     * @static\n     * @param {Object} target\n     * @param {Array.<number>} target.origin\n     * @param {number} target.rotation\n     * @param {Array.<number>} target.position\n     * @param {Array.<number>} [m]\n     */\n    Transformable.getLocalTransform = function (target, m) {\n        m = m || [];\n        mIdentity(m);\n\n        var origin = target.origin;\n        var scale = target.scale || [1, 1];\n        var rotation = target.rotation || 0;\n        var position = target.position || [0, 0];\n\n        if (origin) {\n            // Translate to origin\n            m[4] -= origin[0];\n            m[5] -= origin[1];\n        }\n        matrix.scale(m, m, scale);\n        if (rotation) {\n            matrix.rotate(m, m, rotation);\n        }\n        if (origin) {\n            // Translate back from origin\n            m[4] += origin[0];\n            m[5] += origin[1];\n        }\n\n        m[4] += position[0];\n        m[5] += position[1];\n\n        return m;\n    };\n\n    module.exports = Transformable;\n\n\n\n/***/ }),\n/* 235 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_echarts_lib_echarts_js__ = __webpack_require__(159);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_echarts_lib_echarts_js___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_echarts_lib_echarts_js__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_lodash_debounce__ = __webpack_require__(377);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_lodash_debounce___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_lodash_debounce__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_element_resize_detector__ = __webpack_require__(354);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_element_resize_detector___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_element_resize_detector__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__wrapper_js__ = __webpack_require__(379);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__wrapper_js___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3__wrapper_js__);\n\n\n\n\n\n\n\n\nvar IEcharts = __WEBPACK_IMPORTED_MODULE_3__wrapper_js___default()(__WEBPACK_IMPORTED_MODULE_0_echarts_lib_echarts_js___default.a, __WEBPACK_IMPORTED_MODULE_2_element_resize_detector___default.a, __WEBPACK_IMPORTED_MODULE_1_lodash_debounce___default.a);\n/* harmony default export */ __webpack_exports__[\"default\"] = (IEcharts);\n\n/***/ }),\n/* 236 */,\n/* 237 */,\n/* 238 */,\n/* 239 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  data: function data() {\n    return {};\n  }\n});\n\n/***/ }),\n/* 240 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue_echarts_v3_src_lite_vue__ = __webpack_require__(195);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue_echarts_v3_src_lite_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_vue_echarts_v3_src_lite_vue__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_echarts_lib_chart_bar__ = __webpack_require__(202);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_echarts_lib_chart_bar___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_echarts_lib_chart_bar__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_echarts_lib_component_title__ = __webpack_require__(189);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_echarts_lib_component_title___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_echarts_lib_component_title__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_echarts_lib_component_tooltip__ = __webpack_require__(190);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_echarts_lib_component_tooltip___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_echarts_lib_component_tooltip__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_echarts_lib_component_legend__ = __webpack_require__(210);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_echarts_lib_component_legend___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_echarts_lib_component_legend__);\n\n\n\n\n\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  components: {\n    chart: __WEBPACK_IMPORTED_MODULE_0_vue_echarts_v3_src_lite_vue___default.a\n  },\n  props: {\n    title: String,\n    data: Array\n  },\n  watch: {\n    data: function data(newValue) {}\n  },\n  mounted: function mounted() {\n    var data = this.data;\n    var x = data.map(function (item) {\n      return item.name;\n    });\n    var seriesData = data.map(function (item) {\n      return item.percent;\n    });\n\n    this.bar.title.text = this.title;\n    this.bar.xAxis.data = x;\n    this.bar.series[0].data = seriesData;\n  },\n\n  data: function data() {\n    return {\n      bar: {\n        color: ['#f69899'],\n        title: {\n          text: '',\n          textStyle: {\n            color: '#666',\n            fontWeight: 'normal',\n            fontSize: 16\n          }\n        },\n        legend: {\n          data: ['占比'],\n          top: 'bottom'\n        },\n        tooltip: {},\n        xAxis: {\n          data: []\n        },\n        yAxis: {},\n        series: [{\n          name: '占比',\n          type: 'bar',\n          data: []\n        }]\n      }\n    };\n  }\n});\n\n/***/ }),\n/* 241 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue_count_to__ = __webpack_require__(378);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue_count_to___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_vue_count_to__);\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  data: function data() {\n    return {};\n  },\n\n  components: {\n    countTo: __WEBPACK_IMPORTED_MODULE_0_vue_count_to___default.a\n  },\n  props: {\n    icon: String,\n    title: String,\n    color: String,\n    number: Number\n  }\n});\n\n/***/ }),\n/* 242 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue_echarts_v3_src_lite_vue__ = __webpack_require__(195);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue_echarts_v3_src_lite_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_vue_echarts_v3_src_lite_vue__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_echarts_lib_chart_Pie__ = __webpack_require__(296);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_echarts_lib_chart_Pie___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_echarts_lib_chart_Pie__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_echarts_lib_component_title__ = __webpack_require__(189);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_echarts_lib_component_title___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_echarts_lib_component_title__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_echarts_lib_component_tooltip__ = __webpack_require__(190);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_echarts_lib_component_tooltip___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_echarts_lib_component_tooltip__);\n\n\n\n\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  components: {\n    chart: __WEBPACK_IMPORTED_MODULE_0_vue_echarts_v3_src_lite_vue___default.a\n  },\n  props: {\n    title: String,\n    data: Array\n  },\n  watch: {\n    data: function data(newValue) {}\n  },\n  mounted: function mounted() {\n    var data = this.data;\n\n    this.chartOpts.title.text = this.title;\n    this.chartOpts.series[0].data = data;\n  },\n\n  data: function data() {\n    return {\n      chartOpts: {\n        color: ['#d897eb', '#64ea91', '#8fc9fb', '#f69899'],\n        title: {\n          text: '',\n          textStyle: {\n            color: '#666',\n            fontWeight: 'normal',\n            fontSize: 16\n          }\n        },\n        tooltip: {},\n        series: [{\n          name: '系统',\n          type: 'pie',\n          radius: '55%',\n          data: []\n        }]\n      }\n    };\n  }\n});\n\n/***/ }),\n/* 243 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue_echarts_v3_src_lite_vue__ = __webpack_require__(195);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue_echarts_v3_src_lite_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_vue_echarts_v3_src_lite_vue__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_echarts_lib_chart_bar__ = __webpack_require__(202);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_echarts_lib_chart_bar___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_echarts_lib_chart_bar__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_echarts_lib_component_title__ = __webpack_require__(189);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_echarts_lib_component_title___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_echarts_lib_component_title__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_echarts_lib_component_tooltip__ = __webpack_require__(190);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_echarts_lib_component_tooltip___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_echarts_lib_component_tooltip__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_echarts_lib_component_legend__ = __webpack_require__(210);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_echarts_lib_component_legend___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_echarts_lib_component_legend__);\n\n\n\n\n\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  components: {\n    chart: __WEBPACK_IMPORTED_MODULE_0_vue_echarts_v3_src_lite_vue___default.a\n  },\n  props: {\n    title: String,\n    data: Array\n  },\n  watch: {\n    data: function data(newValue) {}\n  },\n  mounted: function mounted() {\n    var data = this.data;\n    var x = data.map(function (item) {\n      return item.name;\n    });\n    var seriesData = data.map(function (item) {\n      return item.percent;\n    });\n\n    this.bar.title.text = this.title;\n    this.bar.xAxis.data = x;\n    this.bar.series[0].data = seriesData;\n  },\n\n  data: function data() {\n    return {\n      bar: {\n        color: ['#8fc9fb'],\n        title: {\n          text: '',\n          textStyle: {\n            color: '#666',\n            fontWeight: 'normal',\n            fontSize: 16\n          }\n        },\n        legend: {\n          data: ['占比'],\n          top: 'bottom'\n        },\n        tooltip: {},\n        xAxis: {\n          data: []\n        },\n        yAxis: {},\n        series: [{\n          name: '占比',\n          type: 'bar',\n          data: []\n        }]\n      }\n    };\n  }\n});\n\n/***/ }),\n/* 244 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_extends__ = __webpack_require__(60);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_extends___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_extends__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_vuex__ = __webpack_require__(64);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__LoadingMarker__ = __webpack_require__(382);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__LoadingMarker___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__LoadingMarker__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__components_NumberCard__ = __webpack_require__(384);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__components_NumberCard___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3__components_NumberCard__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__components_RegionChart__ = __webpack_require__(386);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__components_RegionChart___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4__components_RegionChart__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__components_AgeChart__ = __webpack_require__(383);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__components_AgeChart___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5__components_AgeChart__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__components_OSChart__ = __webpack_require__(385);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__components_OSChart___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6__components_OSChart__);\n\n\n\n\n\n\n\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  data: function data() {\n    return {\n      loading: true\n    };\n  },\n  created: function created() {\n    var _this = this;\n\n    this.$store.dispatch('fetchDashboard');\n    setTimeout(function () {\n      _this.loading = false;\n    }, 2000);\n  },\n\n  computed: __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_extends___default()({}, __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1_vuex__[\"b\" /* mapGetters */])({\n    numbers: 'statisticsNumbers',\n    region: 'regionChartData',\n    age: 'ageChartData',\n    os: 'osChartData',\n    terminal: 'terminalChartData'\n  })),\n  methods: {},\n  components: {\n    LoadingMarker: __WEBPACK_IMPORTED_MODULE_2__LoadingMarker___default.a,\n    NumberCard: __WEBPACK_IMPORTED_MODULE_3__components_NumberCard___default.a,\n    RegionChart: __WEBPACK_IMPORTED_MODULE_4__components_RegionChart___default.a,\n    AgeChart: __WEBPACK_IMPORTED_MODULE_5__components_AgeChart___default.a,\n    OSChart: __WEBPACK_IMPORTED_MODULE_6__components_OSChart___default.a\n  }\n});\n\n/***/ }),\n/* 245 */,\n/* 246 */,\n/* 247 */,\n/* 248 */,\n/* 249 */,\n/* 250 */,\n/* 251 */,\n/* 252 */,\n/* 253 */,\n/* 254 */,\n/* 255 */,\n/* 256 */,\n/* 257 */,\n/* 258 */,\n/* 259 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar utils = __webpack_require__(260);\n\nmodule.exports = function batchProcessorMaker(options) {\n    options             = options || {};\n    var reporter        = options.reporter;\n    var asyncProcess    = utils.getOption(options, \"async\", true);\n    var autoProcess     = utils.getOption(options, \"auto\", true);\n\n    if(autoProcess && !asyncProcess) {\n        reporter && reporter.warn(\"Invalid options combination. auto=true and async=false is invalid. Setting async=true.\");\n        asyncProcess = true;\n    }\n\n    var batch = Batch();\n    var asyncFrameHandler;\n    var isProcessing = false;\n\n    function addFunction(level, fn) {\n        if(!isProcessing && autoProcess && asyncProcess && batch.size() === 0) {\n            // Since this is async, it is guaranteed to be executed after that the fn is added to the batch.\n            // This needs to be done before, since we're checking the size of the batch to be 0.\n            processBatchAsync();\n        }\n\n        batch.add(level, fn);\n    }\n\n    function processBatch() {\n        // Save the current batch, and create a new batch so that incoming functions are not added into the currently processing batch.\n        // Continue processing until the top-level batch is empty (functions may be added to the new batch while processing, and so on).\n        isProcessing = true;\n        while (batch.size()) {\n            var processingBatch = batch;\n            batch = Batch();\n            processingBatch.process();\n        }\n        isProcessing = false;\n    }\n\n    function forceProcessBatch(localAsyncProcess) {\n        if (isProcessing) {\n            return;\n        }\n\n        if(localAsyncProcess === undefined) {\n            localAsyncProcess = asyncProcess;\n        }\n\n        if(asyncFrameHandler) {\n            cancelFrame(asyncFrameHandler);\n            asyncFrameHandler = null;\n        }\n\n        if(localAsyncProcess) {\n            processBatchAsync();\n        } else {\n            processBatch();\n        }\n    }\n\n    function processBatchAsync() {\n        asyncFrameHandler = requestFrame(processBatch);\n    }\n\n    function clearBatch() {\n        batch           = {};\n        batchSize       = 0;\n        topLevel        = 0;\n        bottomLevel     = 0;\n    }\n\n    function cancelFrame(listener) {\n        // var cancel = window.cancelAnimationFrame || window.mozCancelAnimationFrame || window.webkitCancelAnimationFrame || window.clearTimeout;\n        var cancel = clearTimeout;\n        return cancel(listener);\n    }\n\n    function requestFrame(callback) {\n        // var raf = window.requestAnimationFrame || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame || function(fn) { return window.setTimeout(fn, 20); };\n        var raf = function(fn) { return setTimeout(fn, 0); };\n        return raf(callback);\n    }\n\n    return {\n        add: addFunction,\n        force: forceProcessBatch\n    };\n};\n\nfunction Batch() {\n    var batch       = {};\n    var size        = 0;\n    var topLevel    = 0;\n    var bottomLevel = 0;\n\n    function add(level, fn) {\n        if(!fn) {\n            fn = level;\n            level = 0;\n        }\n\n        if(level > topLevel) {\n            topLevel = level;\n        } else if(level < bottomLevel) {\n            bottomLevel = level;\n        }\n\n        if(!batch[level]) {\n            batch[level] = [];\n        }\n\n        batch[level].push(fn);\n        size++;\n    }\n\n    function process() {\n        for(var level = bottomLevel; level <= topLevel; level++) {\n            var fns = batch[level];\n\n            for(var i = 0; i < fns.length; i++) {\n                var fn = fns[i];\n                fn();\n            }\n        }\n    }\n\n    function getSize() {\n        return size;\n    }\n\n    return {\n        add: add,\n        process: process,\n        size: getSize\n    };\n}\n\n\n/***/ }),\n/* 260 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar utils = module.exports = {};\n\nutils.getOption = getOption;\n\nfunction getOption(options, name, defaultValue) {\n    var value = options[name];\n\n    if((value === undefined || value === null) && defaultValue !== undefined) {\n        return defaultValue;\n    }\n\n    return value;\n}\n\n\n/***/ }),\n/* 261 */,\n/* 262 */,\n/* 263 */,\n/* 264 */,\n/* 265 */,\n/* 266 */,\n/* 267 */,\n/* 268 */,\n/* 269 */,\n/* 270 */,\n/* 271 */,\n/* 272 */,\n/* 273 */,\n/* 274 */,\n/* 275 */,\n/* 276 */,\n/* 277 */,\n/* 278 */,\n/* 279 */\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(150)(true);\n// imports\n\n\n// module\nexports.push([module.i, \".chart-box[data-v-1108af1c]{height:250px;width:100%}\", \"\", {\"version\":3,\"sources\":[\"D:/z/p/vue-mdmp/src/pages/Dashboard/components/RegionChart.vue\"],\"names\":[],\"mappings\":\"AACA,4BACE,aAAc,AACd,UAAY,CACb\",\"file\":\"RegionChart.vue\",\"sourcesContent\":[\"\\n.chart-box[data-v-1108af1c] {\\n  height: 250px;\\n  width: 100%;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n/***/ }),\n/* 280 */\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(150)(true);\n// imports\n\n\n// module\nexports.push([module.i, \".dashboard-grid .ivu-col[data-v-17dfc345]{margin-bottom:16px}\", \"\", {\"version\":3,\"sources\":[\"D:/z/p/vue-mdmp/src/pages/Dashboard/LoadingMarker.vue\"],\"names\":[],\"mappings\":\"AACA,0CACE,kBAAoB,CACrB\",\"file\":\"LoadingMarker.vue\",\"sourcesContent\":[\"\\n.dashboard-grid .ivu-col[data-v-17dfc345] {\\n  margin-bottom: 16px;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n/***/ }),\n/* 281 */\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(150)(true);\n// imports\n\n\n// module\nexports.push([module.i, \".chart-box[data-v-2f29b3a2]{height:250px;width:100%}\", \"\", {\"version\":3,\"sources\":[\"D:/z/p/vue-mdmp/src/pages/Dashboard/components/OSChart.vue\"],\"names\":[],\"mappings\":\"AACA,4BACE,aAAc,AACd,UAAY,CACb\",\"file\":\"OSChart.vue\",\"sourcesContent\":[\"\\n.chart-box[data-v-2f29b3a2] {\\n  height: 250px;\\n  width: 100%;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n/***/ }),\n/* 282 */\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(150)(true);\n// imports\n\n\n// module\nexports.push([module.i, \".chart-box[data-v-443ef9a7]{height:250px;width:100%}\", \"\", {\"version\":3,\"sources\":[\"D:/z/p/vue-mdmp/src/pages/Dashboard/components/AgeChart.vue\"],\"names\":[],\"mappings\":\"AACA,4BACE,aAAc,AACd,UAAY,CACb\",\"file\":\"AgeChart.vue\",\"sourcesContent\":[\"\\n.chart-box[data-v-443ef9a7] {\\n  height: 250px;\\n  width: 100%;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n/***/ }),\n/* 283 */\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(150)(true);\n// imports\n\n\n// module\nexports.push([module.i, \".dashboard-grid .ivu-col[data-v-61c0d0a1]{margin-bottom:16px}\", \"\", {\"version\":3,\"sources\":[\"D:/z/p/vue-mdmp/src/pages/Dashboard/index.vue\"],\"names\":[],\"mappings\":\"AACA,0CACE,kBAAoB,CACrB\",\"file\":\"index.vue\",\"sourcesContent\":[\"\\n.dashboard-grid .ivu-col[data-v-61c0d0a1] {\\n  margin-bottom: 16px;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n/***/ }),\n/* 284 */\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(150)(true);\n// imports\n\n\n// module\nexports.push([module.i, \".icon[data-v-6840e881]{float:left;font-size:48px;line-height:56px;width:56px;text-align:center}.content[data-v-6840e881]{width:100%;padding-left:62px}.title[data-v-6840e881]{line-height:16px;font-size:14px;font-weight:500;margin-bottom:8px;height:16px}.number[data-v-6840e881],.title[data-v-6840e881]{white-space:nowrap;text-overflow:ellipsis;overflow:hidden}.number[data-v-6840e881]{line-height:32px;font-size:24px;height:32px}\", \"\", {\"version\":3,\"sources\":[\"D:/z/p/vue-mdmp/src/pages/Dashboard/components/NumberCard.vue\"],\"names\":[],\"mappings\":\"AACA,uBACE,WAAY,AACZ,eAAgB,AAChB,iBAAkB,AAClB,WAAY,AACZ,iBAAmB,CACpB,AACD,0BACE,WAAY,AACZ,iBAAmB,CACpB,AACD,wBACE,iBAAkB,AAClB,eAAgB,AAChB,gBAAiB,AACjB,kBAAmB,AACnB,WAAa,CAId,AACD,iDAJE,mBAAoB,AACpB,uBAAwB,AACxB,eAAiB,CASlB,AAPD,yBACE,iBAAkB,AAClB,eAAgB,AAChB,WAAa,CAId\",\"file\":\"NumberCard.vue\",\"sourcesContent\":[\"\\n.icon[data-v-6840e881] {\\n  float: left;\\n  font-size: 48px;\\n  line-height: 56px;\\n  width: 56px;\\n  text-align: center;\\n}\\n.content[data-v-6840e881] {\\n  width: 100%;\\n  padding-left: 62px;\\n}\\n.title[data-v-6840e881] {\\n  line-height: 16px;\\n  font-size: 14px;\\n  font-weight: 500;\\n  margin-bottom: 8px;\\n  height: 16px;\\n  white-space: nowrap;\\n  text-overflow: ellipsis;\\n  overflow: hidden;\\n}\\n.number[data-v-6840e881] {\\n  line-height: 32px;\\n  font-size: 24px;\\n  height: 32px;\\n  white-space: nowrap;\\n  text-overflow: ellipsis;\\n  overflow: hidden;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n/***/ }),\n/* 285 */,\n/* 286 */\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(150)(true);\n// imports\n\n\n// module\nexports.push([module.i, \".vue-echarts[data-v-897bed0c]{width:100%;height:100%}\", \"\", {\"version\":3,\"sources\":[\"D:/z/p/vue-mdmp/node_modules/.vue-echarts-v3@1.0.4@vue-echarts-v3/src/lite.vue\"],\"names\":[],\"mappings\":\"AACA,8BACE,WAAY,AACZ,WAAa,CACd\",\"file\":\"lite.vue\",\"sourcesContent\":[\"\\n.vue-echarts[data-v-897bed0c] {\\n  width: 100%;\\n  height: 100%;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n/***/ }),\n/* 287 */,\n/* 288 */,\n/* 289 */,\n/* 290 */,\n/* 291 */,\n/* 292 */,\n/* 293 */,\n/* 294 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(158);\n\n    var echartsAPIList = [\n        'getDom', 'getZr', 'getWidth', 'getHeight', 'getDevicePixelRatio', 'dispatchAction', 'isDisposed',\n        'on', 'off', 'getDataURL', 'getConnectedDataURL', 'getModel', 'getOption',\n        'getViewOfComponentModel', 'getViewOfSeriesModel'\n    ];\n    // And `getCoordinateSystems` and `getComponentByElement` will be injected in echarts.js\n\n    function ExtensionAPI(chartInstance) {\n        zrUtil.each(echartsAPIList, function (name) {\n            this[name] = zrUtil.bind(chartInstance[name], chartInstance);\n        }, this);\n    }\n\n    module.exports = ExtensionAPI;\n\n\n/***/ }),\n/* 295 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    var echarts = __webpack_require__(159);\n    var zrUtil = __webpack_require__(158);\n    module.exports = function (seriesType, actionInfos) {\n        zrUtil.each(actionInfos, function (actionInfo) {\n            actionInfo.update = 'updateView';\n            /**\n             * @payload\n             * @property {string} seriesName\n             * @property {string} name\n             */\n            echarts.registerAction(actionInfo, function (payload, ecModel) {\n                var selected = {};\n                ecModel.eachComponent(\n                    {mainType: 'series', subType: seriesType, query: payload},\n                    function (seriesModel) {\n                        if (seriesModel[actionInfo.method]) {\n                            seriesModel[actionInfo.method](payload.name);\n                        }\n                        var data = seriesModel.getData();\n                        // Create selected map\n                        data.each(function (idx) {\n                            var name = data.getName(idx);\n                            selected[name] = seriesModel.isSelected(name) || false;\n                        });\n                    }\n                );\n                return {\n                    name: payload.name,\n                    selected: selected\n                };\n            });\n        });\n    };\n\n\n/***/ }),\n/* 296 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(158);\n    var echarts = __webpack_require__(159);\n\n    __webpack_require__(302);\n    __webpack_require__(303);\n\n    __webpack_require__(295)('pie', [{\n        type: 'pieToggleSelect',\n        event: 'pieselectchanged',\n        method: 'toggleSelected'\n    }, {\n        type: 'pieSelect',\n        event: 'pieselected',\n        method: 'select'\n    }, {\n        type: 'pieUnSelect',\n        event: 'pieunselected',\n        method: 'unSelect'\n    }]);\n\n    echarts.registerVisual(zrUtil.curry(__webpack_require__(350), 'pie'));\n\n    echarts.registerLayout(zrUtil.curry(\n        __webpack_require__(305), 'pie'\n    ));\n\n    echarts.registerProcessor(zrUtil.curry(__webpack_require__(345), 'pie'));\n\n\n/***/ }),\n/* 297 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    module.exports = __webpack_require__(299).extend({\n\n        type: 'series.bar',\n\n        dependencies: ['grid', 'polar'],\n\n        brushSelector: 'rect'\n    });\n\n\n/***/ }),\n/* 298 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(158);\n    var graphic = __webpack_require__(160);\n    var helper = __webpack_require__(301);\n\n    var BAR_BORDER_WIDTH_QUERY = ['itemStyle', 'normal', 'barBorderWidth'];\n\n    // FIXME\n    // Just for compatible with ec2.\n    zrUtil.extend(__webpack_require__(165).prototype, __webpack_require__(300));\n\n    var BarView = __webpack_require__(159).extendChartView({\n\n        type: 'bar',\n\n        render: function (seriesModel, ecModel, api) {\n            var coordinateSystemType = seriesModel.get('coordinateSystem');\n\n            if (coordinateSystemType === 'cartesian2d') {\n                this._renderOnCartesian(seriesModel, ecModel, api);\n            }\n\n            return this.group;\n        },\n\n        dispose: zrUtil.noop,\n\n        _renderOnCartesian: function (seriesModel, ecModel, api) {\n            var group = this.group;\n            var data = seriesModel.getData();\n            var oldData = this._data;\n\n            var cartesian = seriesModel.coordinateSystem;\n            var baseAxis = cartesian.getBaseAxis();\n            var isHorizontal = baseAxis.isHorizontal();\n            var animationModel = seriesModel.isAnimationEnabled() ? seriesModel : null;\n\n            data.diff(oldData)\n                .add(function (dataIndex) {\n                    if (!data.hasValue(dataIndex)) {\n                        return;\n                    }\n\n                    var itemModel = data.getItemModel(dataIndex);\n                    var layout = getRectItemLayout(data, dataIndex, itemModel);\n                    var el = createRect(data, dataIndex, itemModel, layout, isHorizontal, animationModel);\n                    data.setItemGraphicEl(dataIndex, el);\n                    group.add(el);\n\n                    updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontal);\n                })\n                .update(function (newIndex, oldIndex) {\n                    var el = oldData.getItemGraphicEl(oldIndex);\n\n                    if (!data.hasValue(newIndex)) {\n                        group.remove(el);\n                        return;\n                    }\n\n                    var itemModel = data.getItemModel(newIndex);\n                    var layout = getRectItemLayout(data, newIndex, itemModel);\n\n                    if (el) {\n                        graphic.updateProps(el, {shape: layout}, animationModel, newIndex);\n                    }\n                    else {\n                        el = createRect(data, newIndex, itemModel, layout, isHorizontal, animationModel, true);\n                    }\n\n                    data.setItemGraphicEl(newIndex, el);\n                    // Add back\n                    group.add(el);\n\n                    updateStyle(el, data, newIndex, itemModel, layout, seriesModel, isHorizontal);\n                })\n                .remove(function (dataIndex) {\n                    var el = oldData.getItemGraphicEl(dataIndex);\n                    el && removeRect(dataIndex, animationModel, el);\n                })\n                .execute();\n\n            this._data = data;\n        },\n\n        remove: function (ecModel, api) {\n            var group = this.group;\n            var data = this._data;\n            if (ecModel.get('animation')) {\n                if (data) {\n                    data.eachItemGraphicEl(function (el) {\n                        removeRect(el.dataIndex, ecModel, el);\n                    });\n                }\n            }\n            else {\n                group.removeAll();\n            }\n        }\n    });\n\n    function createRect(data, dataIndex, itemModel, layout, isHorizontal, animationModel, isUpdate) {\n        var rect = new graphic.Rect({shape: zrUtil.extend({}, layout)});\n\n        // Animation\n        if (animationModel) {\n            var rectShape = rect.shape;\n            var animateProperty = isHorizontal ? 'height' : 'width';\n            var animateTarget = {};\n            rectShape[animateProperty] = 0;\n            animateTarget[animateProperty] = layout[animateProperty];\n            graphic[isUpdate ? 'updateProps' : 'initProps'](rect, {\n                shape: animateTarget\n            }, animationModel, dataIndex);\n        }\n\n        return rect;\n    }\n\n    function removeRect(dataIndex, animationModel, el) {\n        // Not show text when animating\n        el.style.text = '';\n        graphic.updateProps(el, {\n            shape: {\n                width: 0\n            }\n        }, animationModel, dataIndex, function () {\n            el.parent && el.parent.remove(el);\n        });\n    }\n\n    function getRectItemLayout(data, dataIndex, itemModel) {\n        var layout = data.getItemLayout(dataIndex);\n        var fixedLineWidth = getLineWidth(itemModel, layout);\n\n        // fix layout with lineWidth\n        var signX = layout.width > 0 ? 1 : -1;\n        var signY = layout.height > 0 ? 1 : -1;\n        return {\n            x: layout.x + signX * fixedLineWidth / 2,\n            y: layout.y + signY * fixedLineWidth / 2,\n            width: layout.width - signX * fixedLineWidth,\n            height: layout.height - signY * fixedLineWidth\n        };\n    }\n\n    function updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontal) {\n        var color = data.getItemVisual(dataIndex, 'color');\n        var opacity = data.getItemVisual(dataIndex, 'opacity');\n        var itemStyleModel = itemModel.getModel('itemStyle.normal');\n        var hoverStyle = itemModel.getModel('itemStyle.emphasis').getBarItemStyle();\n\n        el.setShape('r', itemStyleModel.get('barBorderRadius') || 0);\n\n        el.useStyle(zrUtil.defaults(\n            {\n                fill: color,\n                opacity: opacity\n            },\n            itemStyleModel.getBarItemStyle()\n        ));\n\n        var labelPositionOutside = isHorizontal\n            ? (layout.height > 0 ? 'bottom' : 'top')\n            : (layout.width > 0 ? 'left' : 'right');\n\n        helper.setLabel(\n            el.style, hoverStyle, itemModel, color,\n            seriesModel, dataIndex, labelPositionOutside\n        );\n\n        graphic.setHoverStyle(el, hoverStyle);\n    }\n\n    // In case width or height are too small.\n    function getLineWidth(itemModel, rawLayout) {\n        var lineWidth = itemModel.get(BAR_BORDER_WIDTH_QUERY) || 0;\n        return Math.min(lineWidth, Math.abs(rawLayout.width), Math.abs(rawLayout.height));\n    }\n\n    module.exports = BarView;\n\n\n/***/ }),\n/* 299 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var SeriesModel = __webpack_require__(215);\n    var createListFromArray = __webpack_require__(203);\n\n    module.exports = SeriesModel.extend({\n\n        type: 'series.__base_bar__',\n\n        getInitialData: function (option, ecModel) {\n            if (__DEV__) {\n                var coordSys = option.coordinateSystem;\n                if (coordSys !== 'cartesian2d') {\n                    throw new Error('Bar only support cartesian2d coordinateSystem');\n                }\n            }\n            return createListFromArray(option.data, this, ecModel);\n        },\n\n        getMarkerPosition: function (value) {\n            var coordSys = this.coordinateSystem;\n            if (coordSys) {\n                // PENDING if clamp ?\n                var pt = coordSys.dataToPoint(value, true);\n                var data = this.getData();\n                var offset = data.getLayout('offset');\n                var size = data.getLayout('size');\n                var offsetIndex = coordSys.getBaseAxis().isHorizontal() ? 0 : 1;\n                pt[offsetIndex] += offset + size / 2;\n                return pt;\n            }\n            return [NaN, NaN];\n        },\n\n        defaultOption: {\n            zlevel: 0,                  // 一级层叠\n            z: 2,                       // 二级层叠\n            coordinateSystem: 'cartesian2d',\n            legendHoverLink: true,\n            // stack: null\n\n            // Cartesian coordinate system\n            // xAxisIndex: 0,\n            // yAxisIndex: 0,\n\n            // 最小高度改为0\n            barMinHeight: 0,\n\n            // barMaxWidth: null,\n            // 默认自适应\n            // barWidth: null,\n            // 柱间距离，默认为柱形宽度的30%，可设固定值\n            // barGap: '30%',\n            // 类目间柱形距离，默认为类目间距的20%，可设固定值\n            // barCategoryGap: '20%',\n            // label: {\n            //     normal: {\n            //         show: false\n            //     }\n            // },\n            itemStyle: {\n                normal: {\n                    // color: '各异'\n                },\n                emphasis: {}\n            }\n        }\n    });\n\n\n/***/ }),\n/* 300 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n\n    var getBarItemStyle = __webpack_require__(180)(\n        [\n            ['fill', 'color'],\n            ['stroke', 'borderColor'],\n            ['lineWidth', 'borderWidth'],\n            // Compatitable with 2\n            ['stroke', 'barBorderColor'],\n            ['lineWidth', 'barBorderWidth'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor']\n        ]\n    );\n    module.exports = {\n        getBarItemStyle: function (excludes) {\n            var style = getBarItemStyle.call(this, excludes);\n            if (this.getBorderLineDash) {\n                var lineDash = this.getBorderLineDash();\n                lineDash && (style.lineDash = lineDash);\n            }\n            return style;\n        }\n    };\n\n\n/***/ }),\n/* 301 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(158);\n    var graphic = __webpack_require__(160);\n\n    var helper = {};\n\n    helper.setLabel = function (\n        normalStyle, hoverStyle, itemModel, color, seriesModel, dataIndex, labelPositionOutside\n    ) {\n        var labelModel = itemModel.getModel('label.normal');\n        var hoverLabelModel = itemModel.getModel('label.emphasis');\n\n        if (labelModel.get('show')) {\n            setLabel(\n                normalStyle, labelModel, color,\n                zrUtil.retrieve(\n                    seriesModel.getFormattedLabel(dataIndex, 'normal'),\n                    seriesModel.getRawValue(dataIndex)\n                ),\n                labelPositionOutside\n            );\n        }\n        else {\n            normalStyle.text = '';\n        }\n\n        if (hoverLabelModel.get('show')) {\n            setLabel(\n                hoverStyle, hoverLabelModel, color,\n                zrUtil.retrieve(\n                    seriesModel.getFormattedLabel(dataIndex, 'emphasis'),\n                    seriesModel.getRawValue(dataIndex)\n                ),\n                labelPositionOutside\n            );\n        }\n        else {\n            hoverStyle.text = '';\n        }\n    };\n\n    function setLabel(style, model, color, labelText, labelPositionOutside) {\n        graphic.setText(style, model, color);\n        style.text = labelText;\n        if (style.textPosition === 'outside') {\n            style.textPosition = labelPositionOutside;\n        }\n    }\n\n    module.exports = helper;\n\n\n/***/ }),\n/* 302 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var List = __webpack_require__(191);\n    var zrUtil = __webpack_require__(158);\n    var modelUtil = __webpack_require__(162);\n    var completeDimensions = __webpack_require__(192);\n\n    var dataSelectableMixin = __webpack_require__(316);\n\n    var PieSeries = __webpack_require__(159).extendSeriesModel({\n\n        type: 'series.pie',\n\n        // Overwrite\n        init: function (option) {\n            PieSeries.superApply(this, 'init', arguments);\n\n            // Enable legend selection for each data item\n            // Use a function instead of direct access because data reference may changed\n            this.legendDataProvider = function () {\n                return this.getRawData();\n            };\n\n            this.updateSelectedMap(option.data);\n\n            this._defaultLabelLine(option);\n        },\n\n        // Overwrite\n        mergeOption: function (newOption) {\n            PieSeries.superCall(this, 'mergeOption', newOption);\n            this.updateSelectedMap(this.option.data);\n        },\n\n        getInitialData: function (option, ecModel) {\n            var dimensions = completeDimensions(['value'], option.data);\n            var list = new List(dimensions, this);\n            list.initData(option.data);\n            return list;\n        },\n\n        // Overwrite\n        getDataParams: function (dataIndex) {\n            var data = this.getData();\n            var params = PieSeries.superCall(this, 'getDataParams', dataIndex);\n            var sum = data.getSum('value');\n            // FIXME toFixed?\n            //\n            // Percent is 0 if sum is 0\n            params.percent = !sum ? 0 : +(data.get('value', dataIndex) / sum * 100).toFixed(2);\n\n            params.$vars.push('percent');\n            return params;\n        },\n\n        _defaultLabelLine: function (option) {\n            // Extend labelLine emphasis\n            modelUtil.defaultEmphasis(option.labelLine, ['show']);\n\n            var labelLineNormalOpt = option.labelLine.normal;\n            var labelLineEmphasisOpt = option.labelLine.emphasis;\n            // Not show label line if `label.normal.show = false`\n            labelLineNormalOpt.show = labelLineNormalOpt.show\n                && option.label.normal.show;\n            labelLineEmphasisOpt.show = labelLineEmphasisOpt.show\n                && option.label.emphasis.show;\n        },\n\n        defaultOption: {\n            zlevel: 0,\n            z: 2,\n            legendHoverLink: true,\n\n            hoverAnimation: true,\n            // 默认全局居中\n            center: ['50%', '50%'],\n            radius: [0, '75%'],\n            // 默认顺时针\n            clockwise: true,\n            startAngle: 90,\n            // 最小角度改为0\n            minAngle: 0,\n            // 选中是扇区偏移量\n            selectedOffset: 10,\n\n            // If use strategy to avoid label overlapping\n            avoidLabelOverlap: true,\n            // 选择模式，默认关闭，可选single，multiple\n            // selectedMode: false,\n            // 南丁格尔玫瑰图模式，'radius'（半径） | 'area'（面积）\n            // roseType: null,\n\n            // If still show when all data zero.\n            stillShowZeroSum: true,\n\n            label: {\n                normal: {\n                    // If rotate around circle\n                    rotate: false,\n                    show: true,\n                    // 'outer', 'inside', 'center'\n                    position: 'outer'\n                    // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n                    // textStyle: null      // 默认使用全局文本样式，详见TEXTSTYLE\n                    // distance: 当position为inner时有效，为label位置到圆心的距离与圆半径(环状图为内外半径和)的比例系数\n                },\n                emphasis: {}\n            },\n            // Enabled when label.normal.position is 'outer'\n            labelLine: {\n                normal: {\n                    show: true,\n                    // 引导线两段中的第一段长度\n                    length: 15,\n                    // 引导线两段中的第二段长度\n                    length2: 15,\n                    smooth: false,\n                    lineStyle: {\n                        // color: 各异,\n                        width: 1,\n                        type: 'solid'\n                    }\n                }\n            },\n            itemStyle: {\n                normal: {\n                    borderWidth: 1\n                },\n                emphasis: {}\n            },\n\n            // Animation type canbe expansion, scale\n            animationType: 'expansion',\n\n            animationEasing: 'cubicOut',\n\n            data: []\n        }\n    });\n\n    zrUtil.mixin(PieSeries, dataSelectableMixin);\n\n    module.exports = PieSeries;\n\n\n/***/ }),\n/* 303 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var graphic = __webpack_require__(160);\n    var zrUtil = __webpack_require__(158);\n\n    /**\n     * @param {module:echarts/model/Series} seriesModel\n     * @param {boolean} hasAnimation\n     * @inner\n     */\n    function updateDataSelected(uid, seriesModel, hasAnimation, api) {\n        var data = seriesModel.getData();\n        var dataIndex = this.dataIndex;\n        var name = data.getName(dataIndex);\n        var selectedOffset = seriesModel.get('selectedOffset');\n\n        api.dispatchAction({\n            type: 'pieToggleSelect',\n            from: uid,\n            name: name,\n            seriesId: seriesModel.id\n        });\n\n        data.each(function (idx) {\n            toggleItemSelected(\n                data.getItemGraphicEl(idx),\n                data.getItemLayout(idx),\n                seriesModel.isSelected(data.getName(idx)),\n                selectedOffset,\n                hasAnimation\n            );\n        });\n    }\n\n    /**\n     * @param {module:zrender/graphic/Sector} el\n     * @param {Object} layout\n     * @param {boolean} isSelected\n     * @param {number} selectedOffset\n     * @param {boolean} hasAnimation\n     * @inner\n     */\n    function toggleItemSelected(el, layout, isSelected, selectedOffset, hasAnimation) {\n        var midAngle = (layout.startAngle + layout.endAngle) / 2;\n\n        var dx = Math.cos(midAngle);\n        var dy = Math.sin(midAngle);\n\n        var offset = isSelected ? selectedOffset : 0;\n        var position = [dx * offset, dy * offset];\n\n        hasAnimation\n            // animateTo will stop revious animation like update transition\n            ? el.animate()\n                .when(200, {\n                    position: position\n                })\n                .start('bounceOut')\n            : el.attr('position', position);\n    }\n\n    /**\n     * Piece of pie including Sector, Label, LabelLine\n     * @constructor\n     * @extends {module:zrender/graphic/Group}\n     */\n    function PiePiece(data, idx) {\n\n        graphic.Group.call(this);\n\n        var sector = new graphic.Sector({\n            z2: 2\n        });\n        var polyline = new graphic.Polyline();\n        var text = new graphic.Text();\n        this.add(sector);\n        this.add(polyline);\n        this.add(text);\n\n        this.updateData(data, idx, true);\n\n        // Hover to change label and labelLine\n        function onEmphasis() {\n            polyline.ignore = polyline.hoverIgnore;\n            text.ignore = text.hoverIgnore;\n        }\n        function onNormal() {\n            polyline.ignore = polyline.normalIgnore;\n            text.ignore = text.normalIgnore;\n        }\n        this.on('emphasis', onEmphasis)\n            .on('normal', onNormal)\n            .on('mouseover', onEmphasis)\n            .on('mouseout', onNormal);\n    }\n\n    var piePieceProto = PiePiece.prototype;\n\n    function getLabelStyle(data, idx, state, labelModel, labelPosition) {\n        var textStyleModel = labelModel.getModel('textStyle');\n        var isLabelInside = labelPosition === 'inside' || labelPosition === 'inner';\n        return {\n            fill: textStyleModel.getTextColor()\n                || (isLabelInside ? '#fff' : data.getItemVisual(idx, 'color')),\n            opacity: data.getItemVisual(idx, 'opacity'),\n            textFont: textStyleModel.getFont(),\n            text: zrUtil.retrieve(\n                data.hostModel.getFormattedLabel(idx, state), data.getName(idx)\n            )\n        };\n    }\n\n    piePieceProto.updateData = function (data, idx, firstCreate) {\n\n        var sector = this.childAt(0);\n\n        var seriesModel = data.hostModel;\n        var itemModel = data.getItemModel(idx);\n        var layout = data.getItemLayout(idx);\n        var sectorShape = zrUtil.extend({}, layout);\n        sectorShape.label = null;\n\n        if (firstCreate) {\n            sector.setShape(sectorShape);\n\n            var animationType = seriesModel.getShallow('animationType');\n            if (animationType === 'scale') {\n                sector.shape.r = layout.r0;\n                graphic.initProps(sector, {\n                    shape: {\n                        r: layout.r\n                    }\n                }, seriesModel, idx);\n            }\n            // Expansion\n            else {\n                sector.shape.endAngle = layout.startAngle;\n                graphic.updateProps(sector, {\n                    shape: {\n                        endAngle: layout.endAngle\n                    }\n                }, seriesModel, idx);\n            }\n\n        }\n        else {\n            graphic.updateProps(sector, {\n                shape: sectorShape\n            }, seriesModel, idx);\n        }\n\n        // Update common style\n        var itemStyleModel = itemModel.getModel('itemStyle');\n        var visualColor = data.getItemVisual(idx, 'color');\n\n        sector.useStyle(\n            zrUtil.defaults(\n                {\n                    lineJoin: 'bevel',\n                    fill: visualColor\n                },\n                itemStyleModel.getModel('normal').getItemStyle()\n            )\n        );\n        sector.hoverStyle = itemStyleModel.getModel('emphasis').getItemStyle();\n\n        // Toggle selected\n        toggleItemSelected(\n            this,\n            data.getItemLayout(idx),\n            itemModel.get('selected'),\n            seriesModel.get('selectedOffset'),\n            seriesModel.get('animation')\n        );\n\n        function onEmphasis() {\n            // Sector may has animation of updating data. Force to move to the last frame\n            // Or it may stopped on the wrong shape\n            sector.stopAnimation(true);\n            sector.animateTo({\n                shape: {\n                    r: layout.r + 10\n                }\n            }, 300, 'elasticOut');\n        }\n        function onNormal() {\n            sector.stopAnimation(true);\n            sector.animateTo({\n                shape: {\n                    r: layout.r\n                }\n            }, 300, 'elasticOut');\n        }\n        sector.off('mouseover').off('mouseout').off('emphasis').off('normal');\n        if (itemModel.get('hoverAnimation') && seriesModel.isAnimationEnabled()) {\n            sector\n                .on('mouseover', onEmphasis)\n                .on('mouseout', onNormal)\n                .on('emphasis', onEmphasis)\n                .on('normal', onNormal);\n        }\n\n        this._updateLabel(data, idx);\n\n        graphic.setHoverStyle(this);\n    };\n\n    piePieceProto._updateLabel = function (data, idx) {\n\n        var labelLine = this.childAt(1);\n        var labelText = this.childAt(2);\n\n        var seriesModel = data.hostModel;\n        var itemModel = data.getItemModel(idx);\n        var layout = data.getItemLayout(idx);\n        var labelLayout = layout.label;\n        var visualColor = data.getItemVisual(idx, 'color');\n\n        graphic.updateProps(labelLine, {\n            shape: {\n                points: labelLayout.linePoints || [\n                    [labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y]\n                ]\n            }\n        }, seriesModel, idx);\n\n        graphic.updateProps(labelText, {\n            style: {\n                x: labelLayout.x,\n                y: labelLayout.y\n            }\n        }, seriesModel, idx);\n        labelText.attr({\n            style: {\n                textVerticalAlign: labelLayout.verticalAlign,\n                textAlign: labelLayout.textAlign,\n                textFont: labelLayout.font\n            },\n            rotation: labelLayout.rotation,\n            origin: [labelLayout.x, labelLayout.y],\n            z2: 10\n        });\n\n        var labelModel = itemModel.getModel('label.normal');\n        var labelHoverModel = itemModel.getModel('label.emphasis');\n        var labelLineModel = itemModel.getModel('labelLine.normal');\n        var labelLineHoverModel = itemModel.getModel('labelLine.emphasis');\n        var labelPosition = labelModel.get('position') || labelHoverModel.get('position');\n\n        labelText.setStyle(getLabelStyle(data, idx, 'normal', labelModel, labelPosition));\n\n        labelText.ignore = labelText.normalIgnore = !labelModel.get('show');\n        labelText.hoverIgnore = !labelHoverModel.get('show');\n\n        labelLine.ignore = labelLine.normalIgnore = !labelLineModel.get('show');\n        labelLine.hoverIgnore = !labelLineHoverModel.get('show');\n\n        // Default use item visual color\n        labelLine.setStyle({\n            stroke: visualColor,\n            opacity: data.getItemVisual(idx, 'opacity')\n        });\n        labelLine.setStyle(labelLineModel.getModel('lineStyle').getLineStyle());\n\n        labelText.hoverStyle = getLabelStyle(data, idx, 'emphasis', labelHoverModel, labelPosition);\n        labelLine.hoverStyle = labelLineHoverModel.getModel('lineStyle').getLineStyle();\n\n        var smooth = labelLineModel.get('smooth');\n        if (smooth && smooth === true) {\n            smooth = 0.4;\n        }\n        labelLine.setShape({\n            smooth: smooth\n        });\n    };\n\n    zrUtil.inherits(PiePiece, graphic.Group);\n\n\n    // Pie view\n    var Pie = __webpack_require__(220).extend({\n\n        type: 'pie',\n\n        init: function () {\n            var sectorGroup = new graphic.Group();\n            this._sectorGroup = sectorGroup;\n        },\n\n        render: function (seriesModel, ecModel, api, payload) {\n            if (payload && (payload.from === this.uid)) {\n                return;\n            }\n\n            var data = seriesModel.getData();\n            var oldData = this._data;\n            var group = this.group;\n\n            var hasAnimation = ecModel.get('animation');\n            var isFirstRender = !oldData;\n            var animationType = seriesModel.get('animationType');\n\n            var onSectorClick = zrUtil.curry(\n                updateDataSelected, this.uid, seriesModel, hasAnimation, api\n            );\n\n            var selectedMode = seriesModel.get('selectedMode');\n\n            data.diff(oldData)\n                .add(function (idx) {\n                    var piePiece = new PiePiece(data, idx);\n                    // Default expansion animation\n                    if (isFirstRender && animationType !== 'scale') {\n                        piePiece.eachChild(function (child) {\n                            child.stopAnimation(true);\n                        });\n                    }\n\n                    selectedMode && piePiece.on('click', onSectorClick);\n\n                    data.setItemGraphicEl(idx, piePiece);\n\n                    group.add(piePiece);\n                })\n                .update(function (newIdx, oldIdx) {\n                    var piePiece = oldData.getItemGraphicEl(oldIdx);\n\n                    piePiece.updateData(data, newIdx);\n\n                    piePiece.off('click');\n                    selectedMode && piePiece.on('click', onSectorClick);\n                    group.add(piePiece);\n                    data.setItemGraphicEl(newIdx, piePiece);\n                })\n                .remove(function (idx) {\n                    var piePiece = oldData.getItemGraphicEl(idx);\n                    group.remove(piePiece);\n                })\n                .execute();\n\n            if (\n                hasAnimation && isFirstRender && data.count() > 0\n                // Default expansion animation\n                && animationType !== 'scale'\n            ) {\n                var shape = data.getItemLayout(0);\n                var r = Math.max(api.getWidth(), api.getHeight()) / 2;\n\n                var removeClipPath = zrUtil.bind(group.removeClipPath, group);\n                group.setClipPath(this._createClipPath(\n                    shape.cx, shape.cy, r, shape.startAngle, shape.clockwise, removeClipPath, seriesModel\n                ));\n            }\n\n            this._data = data;\n        },\n\n        dispose: function () {},\n\n        _createClipPath: function (\n            cx, cy, r, startAngle, clockwise, cb, seriesModel\n        ) {\n            var clipPath = new graphic.Sector({\n                shape: {\n                    cx: cx,\n                    cy: cy,\n                    r0: 0,\n                    r: r,\n                    startAngle: startAngle,\n                    endAngle: startAngle,\n                    clockwise: clockwise\n                }\n            });\n\n            graphic.initProps(clipPath, {\n                shape: {\n                    endAngle: startAngle + (clockwise ? 1 : -1) * Math.PI * 2\n                }\n            }, seriesModel, cb);\n\n            return clipPath;\n        },\n\n        /**\n         * @implement\n         */\n        containPoint: function (point, seriesModel) {\n            var data = seriesModel.getData();\n            var itemLayout = data.getItemLayout(0);\n            if (itemLayout) {\n                var dx = point[0] - itemLayout.cx;\n                var dy = point[1] - itemLayout.cy;\n                var radius = Math.sqrt(dx * dx + dy * dy);\n                return radius <= itemLayout.r && radius >= itemLayout.r0;\n            }\n        }\n\n    });\n\n    module.exports = Pie;\n\n\n/***/ }),\n/* 304 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// FIXME emphasis label position is not same with normal label position\n\n\n    var textContain = __webpack_require__(172);\n\n    function adjustSingleSide(list, cx, cy, r, dir, viewWidth, viewHeight) {\n        list.sort(function (a, b) {\n            return a.y - b.y;\n        });\n\n        // 压\n        function shiftDown(start, end, delta, dir) {\n            for (var j = start; j < end; j++) {\n                list[j].y += delta;\n                if (j > start\n                    && j + 1 < end\n                    && list[j + 1].y > list[j].y + list[j].height\n                ) {\n                    shiftUp(j, delta / 2);\n                    return;\n                }\n            }\n\n            shiftUp(end - 1, delta / 2);\n        }\n\n        // 弹\n        function shiftUp(end, delta) {\n            for (var j = end; j >= 0; j--) {\n                list[j].y -= delta;\n                if (j > 0\n                    && list[j].y > list[j - 1].y + list[j - 1].height\n                ) {\n                    break;\n                }\n            }\n        }\n\n        function changeX(list, isDownList, cx, cy, r, dir) {\n            var lastDeltaX = dir > 0\n                ? isDownList                // 右侧\n                    ? Number.MAX_VALUE      // 下\n                    : 0                     // 上\n                : isDownList                // 左侧\n                    ? Number.MAX_VALUE      // 下\n                    : 0;                    // 上\n\n            for (var i = 0, l = list.length; i < l; i++) {\n                // Not change x for center label\n                if (list[i].position === 'center') {\n                    continue;\n                }\n                var deltaY = Math.abs(list[i].y - cy);\n                var length = list[i].len;\n                var length2 = list[i].len2;\n                var deltaX = (deltaY < r + length)\n                    ? Math.sqrt(\n                          (r + length + length2) * (r + length + length2)\n                          - deltaY * deltaY\n                      )\n                    : Math.abs(list[i].x - cx);\n                if (isDownList && deltaX >= lastDeltaX) {\n                    // 右下，左下\n                    deltaX = lastDeltaX - 10;\n                }\n                if (!isDownList && deltaX <= lastDeltaX) {\n                    // 右上，左上\n                    deltaX = lastDeltaX + 10;\n                }\n\n                list[i].x = cx + deltaX * dir;\n                lastDeltaX = deltaX;\n            }\n        }\n\n        var lastY = 0;\n        var delta;\n        var len = list.length;\n        var upList = [];\n        var downList = [];\n        for (var i = 0; i < len; i++) {\n            delta = list[i].y - lastY;\n            if (delta < 0) {\n                shiftDown(i, len, -delta, dir);\n            }\n            lastY = list[i].y + list[i].height;\n        }\n        if (viewHeight - lastY < 0) {\n            shiftUp(len - 1, lastY - viewHeight);\n        }\n        for (var i = 0; i < len; i++) {\n            if (list[i].y >= cy) {\n                downList.push(list[i]);\n            }\n            else {\n                upList.push(list[i]);\n            }\n        }\n        changeX(upList, false, cx, cy, r, dir);\n        changeX(downList, true, cx, cy, r, dir);\n    }\n\n    function avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight) {\n        var leftList = [];\n        var rightList = [];\n        for (var i = 0; i < labelLayoutList.length; i++) {\n            if (labelLayoutList[i].x < cx) {\n                leftList.push(labelLayoutList[i]);\n            }\n            else {\n                rightList.push(labelLayoutList[i]);\n            }\n        }\n\n        adjustSingleSide(rightList, cx, cy, r, 1, viewWidth, viewHeight);\n        adjustSingleSide(leftList, cx, cy, r, -1, viewWidth, viewHeight);\n\n        for (var i = 0; i < labelLayoutList.length; i++) {\n            var linePoints = labelLayoutList[i].linePoints;\n            if (linePoints) {\n                var dist = linePoints[1][0] - linePoints[2][0];\n                if (labelLayoutList[i].x < cx) {\n                    linePoints[2][0] = labelLayoutList[i].x + 3;\n                }\n                else {\n                    linePoints[2][0] = labelLayoutList[i].x - 3;\n                }\n                linePoints[1][1] = linePoints[2][1] = labelLayoutList[i].y;\n                linePoints[1][0] = linePoints[2][0] + dist;\n            }\n        }\n    }\n\n    module.exports = function (seriesModel, r, viewWidth, viewHeight) {\n        var data = seriesModel.getData();\n        var labelLayoutList = [];\n        var cx;\n        var cy;\n        var hasLabelRotate = false;\n\n        data.each(function (idx) {\n            var layout = data.getItemLayout(idx);\n\n            var itemModel = data.getItemModel(idx);\n            var labelModel = itemModel.getModel('label.normal');\n            // Use position in normal or emphasis\n            var labelPosition = labelModel.get('position') || itemModel.get('label.emphasis.position');\n\n            var labelLineModel = itemModel.getModel('labelLine.normal');\n            var labelLineLen = labelLineModel.get('length');\n            var labelLineLen2 = labelLineModel.get('length2');\n\n            var midAngle = (layout.startAngle + layout.endAngle) / 2;\n            var dx = Math.cos(midAngle);\n            var dy = Math.sin(midAngle);\n\n            var textX;\n            var textY;\n            var linePoints;\n            var textAlign;\n\n            cx = layout.cx;\n            cy = layout.cy;\n\n            var isLabelInside = labelPosition === 'inside' || labelPosition === 'inner';\n            if (labelPosition === 'center') {\n                textX = layout.cx;\n                textY = layout.cy;\n                textAlign = 'center';\n            }\n            else {\n                var x1 = (isLabelInside ? (layout.r + layout.r0) / 2 * dx : layout.r * dx) + cx;\n                var y1 = (isLabelInside ? (layout.r + layout.r0) / 2 * dy : layout.r * dy) + cy;\n\n                textX = x1 + dx * 3;\n                textY = y1 + dy * 3;\n\n                if (!isLabelInside) {\n                    // For roseType\n                    var x2 = x1 + dx * (labelLineLen + r - layout.r);\n                    var y2 = y1 + dy * (labelLineLen + r - layout.r);\n                    var x3 = x2 + ((dx < 0 ? -1 : 1) * labelLineLen2);\n                    var y3 = y2;\n\n                    textX = x3 + (dx < 0 ? -5 : 5);\n                    textY = y3;\n                    linePoints = [[x1, y1], [x2, y2], [x3, y3]];\n                }\n\n                textAlign = isLabelInside ? 'center' : (dx > 0 ? 'left' : 'right');\n            }\n            var font = labelModel.getModel('textStyle').getFont();\n\n            var labelRotate = labelModel.get('rotate')\n                ? (dx < 0 ? -midAngle + Math.PI : -midAngle) : 0;\n            var text = seriesModel.getFormattedLabel(idx, 'normal')\n                        || data.getName(idx);\n            var textRect = textContain.getBoundingRect(\n                text, font, textAlign, 'top'\n            );\n            hasLabelRotate = !!labelRotate;\n            layout.label = {\n                x: textX,\n                y: textY,\n                position: labelPosition,\n                height: textRect.height,\n                len: labelLineLen,\n                len2: labelLineLen2,\n                linePoints: linePoints,\n                textAlign: textAlign,\n                verticalAlign: 'middle',\n                font: font,\n                rotation: labelRotate\n            };\n\n            // Not layout the inside label\n            if (!isLabelInside) {\n                labelLayoutList.push(layout.label);\n            }\n        });\n        if (!hasLabelRotate && seriesModel.get('avoidLabelOverlap')) {\n            avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight);\n        }\n    };\n\n\n/***/ }),\n/* 305 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// TODO minAngle\n\n\n\n    var numberUtil = __webpack_require__(161);\n    var parsePercent = numberUtil.parsePercent;\n    var labelLayout = __webpack_require__(304);\n    var zrUtil = __webpack_require__(158);\n\n    var PI2 = Math.PI * 2;\n    var RADIAN = Math.PI / 180;\n\n    module.exports = function (seriesType, ecModel, api, payload) {\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n            var center = seriesModel.get('center');\n            var radius = seriesModel.get('radius');\n\n            if (!zrUtil.isArray(radius)) {\n                radius = [0, radius];\n            }\n            if (!zrUtil.isArray(center)) {\n                center = [center, center];\n            }\n\n            var width = api.getWidth();\n            var height = api.getHeight();\n            var size = Math.min(width, height);\n            var cx = parsePercent(center[0], width);\n            var cy = parsePercent(center[1], height);\n            var r0 = parsePercent(radius[0], size / 2);\n            var r = parsePercent(radius[1], size / 2);\n\n            var data = seriesModel.getData();\n\n            var startAngle = -seriesModel.get('startAngle') * RADIAN;\n\n            var minAngle = seriesModel.get('minAngle') * RADIAN;\n\n            var sum = data.getSum('value');\n            // Sum may be 0\n            var unitRadian = Math.PI / (sum || data.count()) * 2;\n\n            var clockwise = seriesModel.get('clockwise');\n\n            var roseType = seriesModel.get('roseType');\n            var stillShowZeroSum = seriesModel.get('stillShowZeroSum');\n\n            // [0...max]\n            var extent = data.getDataExtent('value');\n            extent[0] = 0;\n\n            // In the case some sector angle is smaller than minAngle\n            var restAngle = PI2;\n            var valueSumLargerThanMinAngle = 0;\n\n            var currentAngle = startAngle;\n\n            var dir = clockwise ? 1 : -1;\n            data.each('value', function (value, idx) {\n                var angle;\n                if (isNaN(value)) {\n                    data.setItemLayout(idx, {\n                        angle: NaN,\n                        startAngle: NaN,\n                        endAngle: NaN,\n                        clockwise: clockwise,\n                        cx: cx,\n                        cy: cy,\n                        r0: r0,\n                        r: roseType\n                            ? NaN\n                            : r\n                    });\n                    return;\n                }\n\n                // FIXME 兼容 2.0 但是 roseType 是 area 的时候才是这样？\n                if (roseType !== 'area') {\n                    angle = (sum === 0 && stillShowZeroSum)\n                        ? unitRadian : (value * unitRadian);\n                }\n                else {\n                    angle = PI2 / (data.count() || 1);\n                }\n\n                if (angle < minAngle) {\n                    angle = minAngle;\n                    restAngle -= minAngle;\n                }\n                else {\n                    valueSumLargerThanMinAngle += value;\n                }\n\n                var endAngle = currentAngle + dir * angle;\n                data.setItemLayout(idx, {\n                    angle: angle,\n                    startAngle: currentAngle,\n                    endAngle: endAngle,\n                    clockwise: clockwise,\n                    cx: cx,\n                    cy: cy,\n                    r0: r0,\n                    r: roseType\n                        ? numberUtil.linearMap(value, extent, [r0, r])\n                        : r\n                });\n\n                currentAngle = endAngle;\n            }, true);\n\n            // Some sector is constrained by minAngle\n            // Rest sectors needs recalculate angle\n            if (restAngle < PI2) {\n                // Average the angle if rest angle is not enough after all angles is\n                // Constrained by minAngle\n                if (restAngle <= 1e-3) {\n                    var angle = PI2 / data.count();\n                    data.each(function (idx) {\n                        var layout = data.getItemLayout(idx);\n                        layout.startAngle = startAngle + dir * idx * angle;\n                        layout.endAngle = startAngle + dir * (idx + 1) * angle;\n                    });\n                }\n                else {\n                    unitRadian = restAngle / valueSumLargerThanMinAngle;\n                    currentAngle = startAngle;\n                    data.each('value', function (value, idx) {\n                        var layout = data.getItemLayout(idx);\n                        var angle = layout.angle === minAngle\n                            ? minAngle : value * unitRadian;\n                        layout.startAngle = currentAngle;\n                        layout.endAngle = currentAngle + dir * angle;\n                        currentAngle += dir * angle;\n                    });\n                }\n            }\n\n            labelLayout(seriesModel, r, width, height);\n        });\n    };\n\n\n/***/ }),\n/* 306 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// TODO boundaryGap\n\n\n    __webpack_require__(213);\n\n    __webpack_require__(313);\n\n\n/***/ }),\n/* 307 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var echarts = __webpack_require__(159);\n    var axisPointerModelHelper = __webpack_require__(179);\n    var axisTrigger = __webpack_require__(312);\n    var zrUtil = __webpack_require__(158);\n\n    __webpack_require__(308);\n    __webpack_require__(309);\n\n    // CartesianAxisPointer is not supposed to be required here. But consider\n    // echarts.simple.js and online build tooltip, which only require gridSimple,\n    // CartesianAxisPointer should be able to required somewhere.\n    __webpack_require__(311);\n\n    echarts.registerPreprocessor(function (option) {\n        // Always has a global axisPointerModel for default setting.\n        if (option) {\n            (!option.axisPointer || option.axisPointer.length === 0)\n                && (option.axisPointer = {});\n\n            var link = option.axisPointer.link;\n            // Normalize to array to avoid object mergin. But if link\n            // is not set, remain null/undefined, otherwise it will\n            // override existent link setting.\n            if (link && !zrUtil.isArray(link)) {\n                option.axisPointer.link = [link];\n            }\n        }\n    });\n\n    // This process should proformed after coordinate systems created\n    // and series data processed. So put it on statistic processing stage.\n    echarts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, function (ecModel, api) {\n        // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n        // allAxesInfo should be updated when setOption performed.\n        ecModel.getComponent('axisPointer').coordSysAxesInfo\n            = axisPointerModelHelper.collect(ecModel, api);\n    });\n\n    // Broadcast to all views.\n    echarts.registerAction({\n        type: 'updateAxisPointer',\n        event: 'updateAxisPointer',\n        update: ':updateAxisPointer'\n    }, function (payload, ecModel, api) {\n        var outputFinder = axisTrigger(\n            ecModel.getComponent('axisPointer').coordSysAxesInfo,\n            payload.currTrigger,\n            [payload.x, payload.y],\n            payload,\n            payload.dispatchAction || zrUtil.bind(api.dispatchAction, api),\n            ecModel,\n            api,\n            payload.tooltipOption,\n            payload.highDownKey\n        );\n\n        return outputFinder;\n    });\n\n\n\n/***/ }),\n/* 308 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var echarts = __webpack_require__(159);\n\n    var AxisPointerModel = echarts.extendComponentModel({\n\n        type: 'axisPointer',\n\n        coordSysAxesInfo: null,\n\n        defaultOption: {\n            // 'auto' means that show when triggered by tooltip or handle.\n            show: 'auto',\n            // 'click' | 'mousemove' | 'none'\n            triggerOn: null, // set default in AxisPonterView.js\n\n            zlevel: 0,\n            z: 50,\n\n            type: 'line',\n            // axispointer triggered by tootip determine snap automatically,\n            // see `modelHelper`.\n            snap: false,\n            triggerTooltip: true,\n\n            value: null,\n            status: null, // Init value depends on whether handle is used.\n\n            // [group0, group1, ...]\n            // Each group can be: {\n            //      mapper: function () {},\n            //      singleTooltip: 'multiple',  // 'multiple' or 'single'\n            //      xAxisId: ...,\n            //      yAxisName: ...,\n            //      angleAxisIndex: ...\n            // }\n            // mapper: can be ignored.\n            //      input: {axisInfo, value}\n            //      output: {axisInfo, value}\n            link: [],\n\n            // Do not set 'auto' here, otherwise global animation: false\n            // will not effect at this axispointer.\n            animation: null,\n            animationDurationUpdate: 200,\n\n            lineStyle: {\n                color: '#aaa',\n                width: 1,\n                type: 'solid'\n            },\n\n            shadowStyle: {\n                color: 'rgba(150,150,150,0.3)'\n            },\n\n            label: {\n                show: true,\n                formatter: null, // string | Function\n                precision: 'auto', // Or a number like 0, 1, 2 ...\n                margin: 3,\n                textStyle: {\n                    color: '#fff'\n                },\n                padding: [5, 7, 5, 7],\n                backgroundColor: 'auto', // default: axis line color\n                borderColor: null,\n                borderWidth: 0,\n                shadowBlur: 3,\n                shadowColor: '#aaa'\n                // Considering applicability, common style should\n                // better not have shadowOffset.\n                // shadowOffsetX: 0,\n                // shadowOffsetY: 2\n            },\n\n            handle: {\n                show: false,\n                icon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7v-1.2h6.6z M13.3,22H6.7v-1.2h6.6z M13.3,19.6H6.7v-1.2h6.6z', // jshint ignore:line\n                size: 45,\n                // handle margin is from symbol center to axis, which is stable when circular move.\n                margin: 50,\n                // color: '#1b8bbd'\n                // color: '#2f4554'\n                color: '#333',\n                shadowBlur: 3,\n                shadowColor: '#aaa',\n                shadowOffsetX: 0,\n                shadowOffsetY: 2,\n\n                // For mobile performance\n                throttle: 40\n            }\n        }\n\n    });\n\n    module.exports = AxisPointerModel;\n\n\n\n/***/ }),\n/* 309 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var globalListener = __webpack_require__(205);\n\n    var AxisPonterView = __webpack_require__(159).extendComponentView({\n\n        type: 'axisPointer',\n\n        render: function (globalAxisPointerModel, ecModel, api) {\n            var globalTooltipModel = ecModel.getComponent('tooltip');\n            var triggerOn = globalAxisPointerModel.get('triggerOn')\n                || (globalTooltipModel && globalTooltipModel.get('triggerOn') || 'mousemove|click');\n\n            // Register global listener in AxisPointerView to enable\n            // AxisPointerView to be independent to Tooltip.\n            globalListener.register(\n                'axisPointer',\n                api,\n                function (currTrigger, e, dispatchAction) {\n                    // If 'none', it is not controlled by mouse totally.\n                    if (triggerOn !== 'none'\n                        && (currTrigger === 'leave' || triggerOn.indexOf(currTrigger) >= 0)\n                    ) {\n                        dispatchAction({\n                            type: 'updateAxisPointer',\n                            currTrigger: currTrigger,\n                            x: e && e.offsetX,\n                            y: e && e.offsetY\n                        });\n                    }\n                }\n            );\n        },\n\n        /**\n         * @override\n         */\n        remove: function (ecModel, api) {\n            globalListener.disopse(api.getZr(), 'axisPointer');\n            AxisPonterView.superApply(this._model, 'remove', arguments);\n        },\n\n        /**\n         * @override\n         */\n        dispose: function (ecModel, api) {\n            globalListener.unregister('axisPointer', api);\n            AxisPonterView.superApply(this._model, 'dispose', arguments);\n        }\n\n    });\n\n\n\n/***/ }),\n/* 310 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(158);\n    var clazzUtil = __webpack_require__(168);\n    var graphic = __webpack_require__(160);\n    var get = __webpack_require__(162).makeGetter();\n    var axisPointerModelHelper = __webpack_require__(179);\n    var eventTool = __webpack_require__(176);\n    var throttle = __webpack_require__(219);\n\n    var clone = zrUtil.clone;\n    var bind = zrUtil.bind;\n\n    /**\n     * Base axis pointer class in 2D.\n     * Implemenents {module:echarts/component/axis/IAxisPointer}.\n     */\n    function BaseAxisPointer () {\n    }\n\n    BaseAxisPointer.prototype = {\n\n        /**\n         * @private\n         */\n        _group: null,\n\n        /**\n         * @private\n         */\n        _lastGraphicKey: null,\n\n        /**\n         * @private\n         */\n        _handle: null,\n\n        /**\n         * @private\n         */\n        _dragging: false,\n\n        /**\n         * @private\n         */\n        _lastValue: null,\n\n        /**\n         * @private\n         */\n        _lastStatus: null,\n\n        /**\n         * @private\n         */\n        _payloadInfo: null,\n\n        /**\n         * In px, arbitrary value. Do not set too small,\n         * no animation is ok for most cases.\n         * @protected\n         */\n        animationThreshold: 15,\n\n        /**\n         * @implement\n         */\n        render: function (axisModel, axisPointerModel, api, forceRender) {\n            var value = axisPointerModel.get('value');\n            var status = axisPointerModel.get('status');\n\n            // Bind them to `this`, not in closure, otherwise they will not\n            // be replaced when user calling setOption in not merge mode.\n            this._axisModel = axisModel;\n            this._axisPointerModel = axisPointerModel;\n            this._api = api;\n\n            // Optimize: `render` will be called repeatly during mouse move.\n            // So it is power consuming if performing `render` each time,\n            // especially on mobile device.\n            if (!forceRender\n                && this._lastValue === value\n                && this._lastStatus === status\n            ) {\n                return;\n            }\n            this._lastValue = value;\n            this._lastStatus = status;\n\n            var group = this._group;\n            var handle = this._handle;\n\n            if (!status || status === 'hide') {\n                // Do not clear here, for animation better.\n                group && group.hide();\n                handle && handle.hide();\n                return;\n            }\n            group && group.show();\n            handle && handle.show();\n\n            // Otherwise status is 'show'\n            var elOption = {};\n            this.makeElOption(elOption, value, axisModel, axisPointerModel, api);\n\n            // Enable change axis pointer type.\n            var graphicKey = elOption.graphicKey;\n            if (graphicKey !== this._lastGraphicKey) {\n                this.clear(api);\n            }\n            this._lastGraphicKey = graphicKey;\n\n            var moveAnimation = this._moveAnimation =\n                this.determineAnimation(axisModel, axisPointerModel);\n\n            if (!group) {\n                group = this._group = new graphic.Group();\n                this.createPointerEl(group, elOption, axisModel, axisPointerModel);\n                this.createLabelEl(group, elOption, axisModel, axisPointerModel);\n                api.getZr().add(group);\n            }\n            else {\n                var doUpdateProps = zrUtil.curry(updateProps, axisPointerModel, moveAnimation);\n                this.updatePointerEl(group, elOption, doUpdateProps, axisPointerModel);\n                this.updateLabelEl(group, elOption, doUpdateProps, axisPointerModel);\n            }\n\n            updateMandatoryProps(group, axisPointerModel, true);\n\n            this._renderHandle(value);\n        },\n\n        /**\n         * @implement\n         */\n        remove: function (api) {\n            this.clear(api);\n        },\n\n        /**\n         * @implement\n         */\n        dispose: function (api) {\n            this.clear(api);\n        },\n\n        /**\n         * @protected\n         */\n        determineAnimation: function (axisModel, axisPointerModel) {\n            var animation = axisPointerModel.get('animation');\n            var axis = axisModel.axis;\n            var isCategoryAxis = axis.type === 'category';\n            var useSnap = axisPointerModel.get('snap');\n\n            // Value axis without snap always do not snap.\n            if (!useSnap && !isCategoryAxis) {\n                return false;\n            }\n\n            if (animation === 'auto' || animation == null) {\n                var animationThreshold = this.animationThreshold;\n                if (isCategoryAxis && axis.getBandWidth() > animationThreshold) {\n                    return true;\n                }\n\n                // It is important to auto animation when snap used. Consider if there is\n                // a dataZoom, animation will be disabled when too many points exist, while\n                // it will be enabled for better visual effect when little points exist.\n                if (useSnap) {\n                    var seriesDataCount = axisPointerModelHelper.getAxisInfo(axisModel).seriesDataCount;\n                    var axisExtent = axis.getExtent();\n                    // Approximate band width\n                    return Math.abs(axisExtent[0] - axisExtent[1]) / seriesDataCount > animationThreshold;\n                }\n\n                return false;\n            }\n\n            return animation === true;\n        },\n\n        /**\n         * add {pointer, label, graphicKey} to elOption\n         * @protected\n         */\n        makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n            // Shoule be implemenented by sub-class.\n        },\n\n        /**\n         * @protected\n         */\n        createPointerEl: function (group, elOption, axisModel, axisPointerModel) {\n            var pointerOption = elOption.pointer;\n            if (pointerOption) {\n                var pointerEl = get(group).pointerEl = new graphic[pointerOption.type](\n                    clone(elOption.pointer)\n                );\n                group.add(pointerEl);\n            }\n        },\n\n        /**\n         * @protected\n         */\n        createLabelEl: function (group, elOption, axisModel, axisPointerModel) {\n            if (elOption.label) {\n                var labelEl = get(group).labelEl = new graphic.Rect(\n                    clone(elOption.label)\n                );\n\n                group.add(labelEl);\n                updateLabelShowHide(labelEl, axisPointerModel);\n            }\n        },\n\n        /**\n         * @protected\n         */\n        updatePointerEl: function (group, elOption, updateProps) {\n            var pointerEl = get(group).pointerEl;\n            if (pointerEl) {\n                pointerEl.setStyle(elOption.pointer.style);\n                updateProps(pointerEl, {shape: elOption.pointer.shape});\n            }\n        },\n\n        /**\n         * @protected\n         */\n        updateLabelEl: function (group, elOption, updateProps, axisPointerModel) {\n            var labelEl = get(group).labelEl;\n            if (labelEl) {\n                labelEl.setStyle(elOption.label.style);\n                updateProps(labelEl, {\n                    // Consider text length change in vertical axis, animation should\n                    // be used on shape, otherwise the effect will be weird.\n                    shape: elOption.label.shape,\n                    position: elOption.label.position\n                });\n\n                updateLabelShowHide(labelEl, axisPointerModel);\n            }\n        },\n\n        /**\n         * @private\n         */\n        _renderHandle: function (value) {\n            if (this._dragging || !this.updateHandleTransform) {\n                return;\n            }\n\n            var axisPointerModel = this._axisPointerModel;\n            var zr = this._api.getZr();\n            var handle = this._handle;\n            var handleModel = axisPointerModel.getModel('handle');\n\n            var status = axisPointerModel.get('status');\n            if (!handleModel.get('show') || !status || status === 'hide') {\n                handle && zr.remove(handle);\n                this._handle = null;\n                return;\n            }\n\n            var isInit;\n            if (!this._handle) {\n                isInit = true;\n                handle = this._handle = createIcon(handleModel, {\n                    onmousemove: function (e) {\n                        // Fot mobile devicem, prevent screen slider on the button.\n                        eventTool.stop(e.event);\n                    },\n                    onmousedown: bind(this._onHandleDragMove, this, 0, 0),\n                    drift: bind(this._onHandleDragMove, this),\n                    ondragend: bind(this._onHandleDragEnd, this)\n                });\n                zr.add(handle);\n            }\n\n            updateMandatoryProps(handle, axisPointerModel, false);\n\n            // update style\n            var includeStyles = [\n                'color', 'borderColor', 'borderWidth', 'opacity',\n                'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY'\n            ];\n            handle.setStyle(handleModel.getItemStyle(null, includeStyles));\n\n            // update position\n            var handleSize = handleModel.get('size');\n            if (!zrUtil.isArray(handleSize)) {\n                handleSize = [handleSize, handleSize];\n            }\n            handle.attr('scale', [handleSize[0] / 2, handleSize[1] / 2]);\n\n            throttle.createOrUpdate(\n                this,\n                '_doDispatchAxisPointer',\n                handleModel.get('throttle') || 0,\n                'fixRate'\n            );\n\n            this._moveHandleToValue(value, isInit);\n        },\n\n        /**\n         * @private\n         */\n        _moveHandleToValue: function (value, isInit) {\n            updateProps(\n                this._axisPointerModel,\n                !isInit && this._moveAnimation,\n                this._handle,\n                getHandleTransProps(this.getHandleTransform(\n                    value, this._axisModel, this._axisPointerModel\n                ))\n            );\n        },\n\n        /**\n         * @private\n         */\n        _onHandleDragMove: function (dx, dy) {\n            var handle = this._handle;\n            if (!handle) {\n                return;\n            }\n\n            this._dragging = true;\n\n            // Persistent for throttle.\n            var trans = this.updateHandleTransform(\n                getHandleTransProps(handle),\n                [dx, dy],\n                this._axisModel,\n                this._axisPointerModel\n            );\n            this._payloadInfo = trans;\n\n            handle.stopAnimation();\n            handle.attr(getHandleTransProps(trans));\n            get(handle).lastProp = null;\n\n            this._doDispatchAxisPointer();\n        },\n\n        /**\n         * Throttled method.\n         * @private\n         */\n        _doDispatchAxisPointer: function () {\n            var handle = this._handle;\n            if (!handle) {\n                return;\n            }\n\n            var payloadInfo = this._payloadInfo;\n            var payload = {\n                type: 'updateAxisPointer',\n                x: payloadInfo.cursorPoint[0],\n                y: payloadInfo.cursorPoint[1],\n                tooltipOption: payloadInfo.tooltipOption,\n                highDownKey: 'axisPointerHandle'\n            };\n            var axis = this._axisModel.axis;\n            payload[axis.dim + 'AxisId'] = this._axisModel.id;\n            this._api.dispatchAction(payload);\n        },\n\n        /**\n         * @private\n         */\n        _onHandleDragEnd: function (moveAnimation) {\n            this._dragging = false;\n            var handle = this._handle;\n            if (!handle) {\n                return;\n            }\n\n            var value = this._axisPointerModel.get('value');\n            // Consider snap or categroy axis, handle may be not consistent with\n            // axisPointer. So move handle to align the exact value position when\n            // drag ended.\n            this._moveHandleToValue(value);\n\n            // For the effect: tooltip will be shown when finger holding on handle\n            // button, and will be hidden after finger left handle button.\n            this._api.dispatchAction({\n                type: 'hideTip'\n            });\n        },\n\n        /**\n         * Should be implemenented by sub-class if support `handle`.\n         * @protected\n         * @param {number} value\n         * @param {module:echarts/model/Model} axisModel\n         * @param {module:echarts/model/Model} axisPointerModel\n         * @return {Object} {position: [x, y], rotation: 0}\n         */\n        getHandleTransform: null,\n\n        /**\n         * * Should be implemenented by sub-class if support `handle`.\n         * @protected\n         * @param {Object} transform {position, rotation}\n         * @param {Array.<number>} delta [dx, dy]\n         * @param {module:echarts/model/Model} axisModel\n         * @param {module:echarts/model/Model} axisPointerModel\n         * @return {Object} {position: [x, y], rotation: 0, cursorPoint: [x, y]}\n         */\n        updateHandleTransform: null,\n\n        /**\n         * @private\n         */\n        clear: function (api) {\n            this._lastValue = null;\n            this._lastStatus = null;\n\n            var zr = api.getZr();\n            var group = this._group;\n            var handle = this._handle;\n            if (zr && group) {\n                this._lastGraphicKey = null;\n                group && zr.remove(group);\n                handle && zr.remove(handle);\n                this._group = null;\n                this._handle = null;\n                this._payloadInfo = null;\n            }\n        },\n\n        /**\n         * @protected\n         */\n        doClear: function () {\n            // Implemented by sub-class if necessary.\n        },\n\n        /**\n         * @protected\n         * @param {Array.<number>} xy\n         * @param {Array.<number>} wh\n         * @param {number} [xDimIndex=0] or 1\n         */\n        buildLabel: function (xy, wh, xDimIndex) {\n            xDimIndex = xDimIndex || 0;\n            return {\n                x: xy[xDimIndex],\n                y: xy[1 - xDimIndex],\n                width: wh[xDimIndex],\n                height: wh[1 - xDimIndex]\n            };\n        }\n    };\n\n    BaseAxisPointer.prototype.constructor = BaseAxisPointer;\n\n\n    function updateProps(animationModel, moveAnimation, el, props) {\n        // Animation optimize.\n        if (!propsEqual(get(el).lastProp, props)) {\n            get(el).lastProp = props;\n            moveAnimation\n                ? graphic.updateProps(el, props, animationModel)\n                : (el.stopAnimation(), el.attr(props));\n        }\n    }\n\n    function propsEqual(lastProps, newProps) {\n        if (zrUtil.isObject(lastProps) && zrUtil.isObject(newProps)) {\n            var equals = true;\n            zrUtil.each(newProps, function (item, key) {\n                equals &= propsEqual(lastProps[key], item);\n            });\n            return !!equals;\n        }\n        else {\n            return lastProps === newProps;\n        }\n    }\n\n    function updateLabelShowHide(labelEl, axisPointerModel) {\n        labelEl[axisPointerModel.get('label.show') ? 'show' : 'hide']();\n    }\n\n    function getHandleTransProps(trans) {\n        return {\n            position: trans.position.slice(),\n            rotation: trans.rotation || 0\n        };\n    }\n\n    function createIcon(handleModel, handlers) {\n        var iconStr = handleModel.get('icon');\n        var style = {\n            x: -1, y: -1, width: 2, height: 2\n        };\n        var opt = zrUtil.extend({\n            style: {\n                strokeNoScale: true\n            },\n            rectHover: true,\n            cursor: 'move',\n            draggable: true\n        }, handlers);\n\n        return iconStr.indexOf('image://') === 0\n            ? (\n                style.image = iconStr.slice(8),\n                opt.style = style,\n                new graphic.Image(opt)\n            )\n            : graphic.makePath(\n                iconStr.replace('path://', ''),\n                opt,\n                style,\n                'center'\n            );\n    }\n\n    function updateMandatoryProps(group, axisPointerModel, silent) {\n        var z = axisPointerModel.get('z');\n        var zlevel = axisPointerModel.get('zlevel');\n\n        group && group.traverse(function (el) {\n            if (el.type !== 'group') {\n                z != null && (el.z = z);\n                zlevel != null && (el.zlevel = zlevel);\n                el.silent = silent;\n            }\n        });\n    }\n\n    clazzUtil.enableClassExtend(BaseAxisPointer);\n\n    module.exports = BaseAxisPointer;\n\n\n/***/ }),\n/* 311 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var graphic = __webpack_require__(160);\n    var BaseAxisPointer = __webpack_require__(310);\n    var viewHelper = __webpack_require__(206);\n    var cartesianAxisHelper = __webpack_require__(209);\n    var AxisView = __webpack_require__(208);\n\n    var CartesianAxisPointer = BaseAxisPointer.extend({\n\n        /**\n         * @override\n         */\n        makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n            var axis = axisModel.axis;\n            var grid = axis.grid;\n            var axisPointerType = axisPointerModel.get('type');\n            var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n            var pixelValue = axis.toGlobalCoord(axis.dataToCoord(value, true));\n\n            if (axisPointerType && axisPointerType !== 'none') {\n                var elStyle = viewHelper.buildElStyle(axisPointerModel);\n                var pointerOption = pointerShapeBuilder[axisPointerType](\n                    axis, pixelValue, otherExtent, elStyle\n                );\n                pointerOption.style = elStyle;\n                elOption.graphicKey = pointerOption.type;\n                elOption.pointer = pointerOption;\n            }\n\n            var layoutInfo = cartesianAxisHelper.layout(grid.model, axisModel);\n            viewHelper.buildCartesianSingleLabelElOption(\n                value, elOption, layoutInfo, axisModel, axisPointerModel, api\n            );\n        },\n\n        /**\n         * @override\n         */\n        getHandleTransform: function (value, axisModel, axisPointerModel) {\n            var layoutInfo = cartesianAxisHelper.layout(axisModel.axis.grid.model, axisModel, {\n                labelInside: false\n            });\n            layoutInfo.labelMargin = axisPointerModel.get('handle.margin');\n            return {\n                position: viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n                rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\n            };\n        },\n\n        /**\n         * @override\n         */\n        updateHandleTransform: function (transform, delta, axisModel, axisPointerModel) {\n            var axis = axisModel.axis;\n            var grid = axis.grid;\n            var axisExtent = axis.getGlobalExtent(true);\n            var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n            var dimIndex = axis.dim === 'x' ? 0 : 1;\n\n            var currPosition = transform.position;\n            currPosition[dimIndex] += delta[dimIndex];\n            currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\n            currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\n\n            var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\n            var cursorPoint = [cursorOtherValue, cursorOtherValue];\n            cursorPoint[dimIndex] = currPosition[dimIndex];\n\n            // Make tooltip do not overlap axisPointer and in the middle of the grid.\n            var tooltipOptions = [{verticalAlign: 'middle'}, {align: 'center'}];\n\n            return {\n                position: currPosition,\n                rotation: transform.rotation,\n                cursorPoint: cursorPoint,\n                tooltipOption: tooltipOptions[dimIndex]\n            };\n        }\n\n    });\n\n    function getCartesian(grid, axis) {\n        var opt = {};\n        opt[axis.dim + 'AxisIndex'] = axis.index;\n        return grid.getCartesian(opt);\n    }\n\n    var pointerShapeBuilder = {\n\n        line: function (axis, pixelValue, otherExtent, elStyle) {\n            var targetShape = viewHelper.makeLineShape(\n                [pixelValue, otherExtent[0]],\n                [pixelValue, otherExtent[1]],\n                getAxisDimIndex(axis)\n            );\n            graphic.subPixelOptimizeLine({\n                shape: targetShape,\n                style: elStyle\n            });\n            return {\n                type: 'Line',\n                shape: targetShape\n            };\n        },\n\n        shadow: function (axis, pixelValue, otherExtent, elStyle) {\n            var bandWidth = axis.getBandWidth();\n            var span = otherExtent[1] - otherExtent[0];\n            return {\n                type: 'Rect',\n                shape: viewHelper.makeRectShape(\n                    [pixelValue - bandWidth / 2, otherExtent[0]],\n                    [bandWidth, span],\n                    getAxisDimIndex(axis)\n                )\n            };\n        }\n    };\n\n    function getAxisDimIndex(axis) {\n        return axis.dim === 'x' ? 0 : 1;\n    }\n\n    AxisView.registerAxisPointerClass('CartesianAxisPointer', CartesianAxisPointer);\n\n    module.exports = CartesianAxisPointer;\n\n\n/***/ }),\n/* 312 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(158);\n    var modelUtil = __webpack_require__(162);\n    var modelHelper = __webpack_require__(179);\n    var findPointFromSeries = __webpack_require__(204);\n\n    var each = zrUtil.each;\n    var curry = zrUtil.curry;\n    var get = modelUtil.makeGetter();\n\n    /**\n     * Basic logic: check all axis, if they do not demand show/highlight,\n     * then hide/downplay them.\n     *\n     * @param {Object} coordSysAxesInfo\n     * @param {string} [currTrigger] 'click' | 'mousemove' | 'leave'\n     * @param {Array.<number>} [point] x and y, which are mandatory, specify a point to\n     *              tigger axisPointer and tooltip.\n     * @param {Object} [finder] {xAxisId: ...[], yAxisName: ...[], angleAxisIndex: ...[]}\n     *              These properties, which are optional, restrict target axes.\n     * @param {Function} dispatchAction\n     * @param {module:echarts/ExtensionAPI} api\n     * @param {Object} [tooltipOption]\n     * @param {string} [highDownKey]\n     * @return {Object} content of event obj for echarts.connect.\n     */\n    function axisTrigger(\n        coordSysAxesInfo, currTrigger, point, finder, dispatchAction,\n        ecModel, api, tooltipOption, highDownKey\n    ) {\n        finder = finder || {};\n        if (!point || point[0] == null || point[1] == null) {\n            point = findPointFromSeries({\n                seriesIndex: finder.seriesIndex,\n                // Do not use dataIndexInside from other ec instance.\n                // FIXME: auto detect it?\n                dataIndex: finder.dataIndex\n            }, ecModel).point;\n        }\n\n        var axesInfo = coordSysAxesInfo.axesInfo;\n        var shouldHide = currTrigger === 'leave' || illegalPoint(point);\n        var outputFinder = {};\n\n        var showValueMap = {};\n        var dataByCoordSys = {list: [], map: {}};\n        var highlightBatch = [];\n        var updaters = {\n            showPointer: curry(showPointer, showValueMap),\n            showTooltip: curry(showTooltip, dataByCoordSys),\n            highlight: curry(highlight, highlightBatch)\n        };\n\n        // Process for triggered axes.\n        each(coordSysAxesInfo.coordSysMap, function (coordSys, coordSysKey) {\n            var coordSysContainsPoint = coordSys.containPoint(point);\n\n            each(coordSysAxesInfo.coordSysAxesInfo[coordSysKey], function (axisInfo, key) {\n                var axis = axisInfo.axis;\n                if (!shouldHide && coordSysContainsPoint && !notTargetAxis(finder, axis)) {\n                    processOnAxis(axisInfo, axis.pointToData(point), updaters, false, outputFinder);\n                }\n            });\n        });\n\n        // Process for linked axes.\n        var linkTriggers = {};\n        each(axesInfo, function (tarAxisInfo, tarKey) {\n            var linkGroup = tarAxisInfo.linkGroup;\n\n            // If axis has been triggered in the previous stage, it should not be triggered by link.\n            if (linkGroup && !showValueMap[tarKey]) {\n                each(linkGroup.axesInfo, function (srcAxisInfo, srcKey) {\n                    var srcValItem = showValueMap[srcKey];\n                    // If srcValItem exist, source axis is triggered, so link to target axis.\n                    if (srcAxisInfo !== tarAxisInfo && srcValItem) {\n                        var val = srcValItem.value;\n                        linkGroup.mapper && (val = tarAxisInfo.axis.scale.parse(linkGroup.mapper(\n                            val, makeMapperParam(srcAxisInfo), makeMapperParam(tarAxisInfo)\n                        )));\n                        linkTriggers[tarAxisInfo.key] = val;\n                    }\n                });\n            }\n        });\n        each(linkTriggers, function (val, tarKey) {\n            processOnAxis(axesInfo[tarKey], val, updaters, true, outputFinder);\n        });\n\n        updateModelActually(showValueMap, axesInfo);\n        dispatchTooltipActually(dataByCoordSys, point, tooltipOption, dispatchAction);\n        dispatchHighDownActually(highlightBatch, dispatchAction, api, highDownKey);\n\n        return outputFinder;\n    }\n\n    function processOnAxis(axisInfo, newValue, updaters, dontSnap, outputFinder) {\n        var axis = axisInfo.axis;\n\n        if (axis.scale.isBlank() || !axis.containData(newValue)) {\n            return;\n        }\n\n        if (!axisInfo.involveSeries) {\n            updaters.showPointer(axisInfo, newValue);\n            return;\n        }\n\n        // Heavy calculation. So put it after axis.containData checking.\n        var payloadInfo = buildPayloadsBySeries(newValue, axisInfo);\n        var payloadBatch = payloadInfo.payloadBatch;\n        var snapToValue = payloadInfo.snapToValue;\n\n        // Fill content of event obj for echarts.connect.\n        // By defualt use the first involved series data as a sample to connect.\n        if (payloadBatch[0] && outputFinder.seriesIndex == null) {\n            zrUtil.extend(outputFinder, payloadBatch[0]);\n        }\n\n        // If no linkSource input, this process is for collecting link\n        // target, where snap should not be accepted.\n        if (!dontSnap && axisInfo.snap) {\n            if (axis.containData(snapToValue) && snapToValue != null) {\n                newValue = snapToValue;\n            }\n        }\n\n        updaters.highlight('highlight', payloadBatch);\n        updaters.showPointer(axisInfo, newValue, payloadBatch);\n        // Tooltip should always be snapToValue, otherwise there will be\n        // incorrect \"axis value ~ series value\" mapping displayed in tooltip.\n        updaters.showTooltip(axisInfo, payloadInfo, snapToValue);\n    }\n\n    function buildPayloadsBySeries(value, axisInfo) {\n        var axis = axisInfo.axis;\n        var dim = axis.dim;\n        var snapToValue = value;\n        var payloadBatch = [];\n        var minDist = Number.MAX_VALUE;\n        var minDiff = -1;\n\n        each(axisInfo.seriesModels, function (series, idx) {\n            var dataDim = series.coordDimToDataDim(dim);\n            var seriesNestestValue;\n            var dataIndices;\n\n            if (series.getAxisTooltipData) {\n                var result = series.getAxisTooltipData(dataDim, value, axis);\n                dataIndices = result.dataIndices;\n                seriesNestestValue = result.nestestValue;\n            }\n            else {\n                dataIndices = series.getData().indicesOfNearest(\n                    dataDim[0],\n                    value,\n                    // Add a threshold to avoid find the wrong dataIndex\n                    // when data length is not same.\n                    false, axis.type === 'category' ? 0.5 : null\n                );\n                if (!dataIndices.length) {\n                    return;\n                }\n                seriesNestestValue = series.getData().get(dataDim[0], dataIndices[0]);\n            }\n\n            if (seriesNestestValue == null || !isFinite(seriesNestestValue)) {\n                return;\n            }\n\n            var diff = value - seriesNestestValue;\n            var dist = Math.abs(diff);\n            // Consider category case\n            if (dist <= minDist) {\n                if (dist < minDist || (diff >= 0 && minDiff < 0)) {\n                    minDist = dist;\n                    minDiff = diff;\n                    snapToValue = seriesNestestValue;\n                    payloadBatch.length = 0;\n                }\n                each(dataIndices, function (dataIndex) {\n                    payloadBatch.push({\n                        seriesIndex: series.seriesIndex,\n                        dataIndexInside: dataIndex,\n                        dataIndex: series.getData().getRawIndex(dataIndex)\n                    });\n                });\n            }\n        });\n\n        return {\n            payloadBatch: payloadBatch,\n            snapToValue: snapToValue\n        };\n    }\n\n    function showPointer(showValueMap, axisInfo, value, payloadBatch) {\n        showValueMap[axisInfo.key] = {value: value, payloadBatch: payloadBatch};\n    }\n\n    function showTooltip(dataByCoordSys, axisInfo, payloadInfo, value) {\n        var payloadBatch = payloadInfo.payloadBatch;\n        var axis = axisInfo.axis;\n        var axisModel = axis.model;\n        var axisPointerModel = axisInfo.axisPointerModel;\n\n        // If no data, do not create anything in dataByCoordSys,\n        // whose length will be used to judge whether dispatch action.\n        if (!axisInfo.triggerTooltip || !payloadBatch.length) {\n            return;\n        }\n\n        var coordSysModel = axisInfo.coordSys.model;\n        var coordSysKey = modelHelper.makeKey(coordSysModel);\n        var coordSysItem = dataByCoordSys.map[coordSysKey];\n        if (!coordSysItem) {\n            coordSysItem = dataByCoordSys.map[coordSysKey] = {\n                coordSysId: coordSysModel.id,\n                coordSysIndex: coordSysModel.componentIndex,\n                coordSysType: coordSysModel.type,\n                coordSysMainType: coordSysModel.mainType,\n                dataByAxis: []\n            };\n            dataByCoordSys.list.push(coordSysItem);\n        }\n\n        coordSysItem.dataByAxis.push({\n            axisDim: axis.dim,\n            axisIndex: axisModel.componentIndex,\n            axisType: axisModel.type,\n            axisId: axisModel.id,\n            value: value,\n            // Caustion: viewHelper.getValueLabel is actually on \"view stage\", which\n            // depends that all models have been updated. So it should not be performed\n            // here. Considering axisPointerModel used here is volatile, which is hard\n            // to be retrieve in TooltipView, we prepare parameters here.\n            valueLabelOpt: {\n                precision: axisPointerModel.get('label.precision'),\n                formatter: axisPointerModel.get('label.formatter')\n            },\n            seriesDataIndices: payloadBatch.slice()\n        });\n    }\n\n    function highlight(highlightBatch, actionType, batch) {\n        highlightBatch.push.apply(highlightBatch, batch);\n    }\n\n    function updateModelActually(showValueMap, axesInfo) {\n        // Basic logic: If no 'show' required, 'hide' this axisPointer.\n        each(axesInfo, function (axisInfo, key) {\n            var option = axisInfo.axisPointerModel.option;\n            var valItem = showValueMap[key];\n\n            if (valItem) {\n                !axisInfo.useHandle && (option.status = 'show');\n                option.value = valItem.value;\n                // For label formatter param.\n                option.seriesDataIndices = (valItem.payloadBatch || []).slice();\n            }\n            // When always show (e.g., handle used), remain\n            // original value and status.\n            else {\n                // If hide, value still need to be set, consider\n                // click legend to toggle axis blank.\n                !axisInfo.useHandle && (option.status = 'hide');\n            }\n        });\n    }\n\n    function dispatchTooltipActually(dataByCoordSys, point, tooltipOption, dispatchAction) {\n        // Basic logic: If no showTip required, hideTip will be dispatched.\n        if (illegalPoint(point) || !dataByCoordSys.list.length) {\n            dispatchAction({type: 'hideTip'});\n            return;\n        }\n\n        // In most case only one axis (or event one series is used). It is\n        // convinient to fetch payload.seriesIndex and payload.dataIndex\n        // dirtectly. So put the first seriesIndex and dataIndex of the first\n        // axis on the payload.\n        var sampleItem = ((dataByCoordSys.list[0].dataByAxis[0] || {}).seriesDataIndices || [])[0] || {};\n\n        dispatchAction({\n            type: 'showTip',\n            escapeConnect: true,\n            x: point[0],\n            y: point[1],\n            tooltipOption: tooltipOption,\n            dataIndexInside: sampleItem.dataIndexInside,\n            dataIndex: sampleItem.dataIndex,\n            seriesIndex: sampleItem.seriesIndex,\n            dataByCoordSys: dataByCoordSys.list\n        });\n    }\n\n    function dispatchHighDownActually(highlightBatch, dispatchAction, api, highDownKey) {\n        // Basic logic: If nothing highlighted, should downplay all highlighted items.\n        // This case will occur when mouse leave coordSys.\n\n        // FIXME\n        // (1) highlight status shoule be managemented in series.getData()?\n        // (2) If axisPointer A triggerOn 'handle' and axisPointer B triggerOn\n        // 'mousemove', items highlighted by A will be downplayed by B.\n        // It will not be fixed until someone requires this scenario.\n\n        // Consider items area hightlighted by 'handle', and globalListener may\n        // downplay all items (including just highlighted ones) when mousemove.\n        // So we use a highDownKey to separate them as a temporary solution.\n        var zr = api.getZr();\n        highDownKey = 'lastHighlights' + (highDownKey || '');\n        var lastHighlights = get(zr)[highDownKey] || {};\n        var newHighlights = get(zr)[highDownKey] = {};\n\n        // Build hash map and remove duplicate incidentally.\n        zrUtil.each(highlightBatch, function (batchItem) {\n            var key = batchItem.seriesIndex + ' | ' + batchItem.dataIndex;\n            newHighlights[key] = batchItem;\n        });\n\n        // Diff.\n        var toHighlight = [];\n        var toDownplay = [];\n        zrUtil.each(lastHighlights, function (batchItem, key) {\n            !newHighlights[key] && toDownplay.push(batchItem);\n        });\n        zrUtil.each(newHighlights, function (batchItem, key) {\n            !lastHighlights[key] && toHighlight.push(batchItem);\n        });\n\n        toDownplay.length && api.dispatchAction({\n            type: 'downplay', escapeConnect: true, batch: toDownplay\n        });\n        toHighlight.length && api.dispatchAction({\n            type: 'highlight', escapeConnect: true, batch: toHighlight\n        });\n    }\n\n    function notTargetAxis(finder, axis) {\n        var isTarget = 1;\n        // If none of xxxAxisId and xxxAxisName and xxxAxisIndex exists in finder,\n        // no axis is not target axis.\n        each(finder, function (value, propName) {\n            isTarget &= !(/^.+(AxisId|AxisName|AxisIndex)$/.test(propName));\n        });\n        !isTarget && each(\n            [['AxisId', 'id'], ['AxisIndex', 'componentIndex'], ['AxisName', 'name']],\n            function (prop) {\n                var vals = modelUtil.normalizeToArray(finder[axis.dim + prop[0]]);\n                isTarget |= zrUtil.indexOf(vals, axis.model[prop[1]]) >= 0;\n            }\n        );\n        return !isTarget;\n    }\n\n    function makeMapperParam(axisInfo) {\n        var axisModel = axisInfo.axis.model;\n        var item = {};\n        var dim = item.axisDim = axisInfo.axis.dim;\n        item.axisIndex = item[dim + 'AxisIndex'] = axisModel.componentIndex;\n        item.axisName = item[dim + 'AxisName'] = axisModel.name;\n        item.axisId = item[dim + 'AxisId'] = axisModel.id;\n        return item;\n    }\n\n    function illegalPoint(point) {\n        return point[0] == null || isNaN(point[0]) || point[1] == null || isNaN(point[1]);\n    }\n\n    module.exports = axisTrigger;\n\n\n/***/ }),\n/* 313 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(158);\n    var graphic = __webpack_require__(160);\n    var AxisBuilder = __webpack_require__(207);\n    var AxisView = __webpack_require__(208);\n    var cartesianAxisHelper = __webpack_require__(209);\n    var ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick;\n    var getInterval = AxisBuilder.getInterval;\n\n    var axisBuilderAttrs = [\n        'axisLine', 'axisLabel', 'axisTick', 'axisName'\n    ];\n    var selfBuilderAttrs = [\n        'splitArea', 'splitLine'\n    ];\n\n    // function getAlignWithLabel(model, axisModel) {\n    //     var alignWithLabel = model.get('alignWithLabel');\n    //     if (alignWithLabel === 'auto') {\n    //         alignWithLabel = axisModel.get('axisTick.alignWithLabel');\n    //     }\n    //     return alignWithLabel;\n    // }\n\n    var CartesianAxisView = AxisView.extend({\n\n        type: 'cartesianAxis',\n\n        axisPointerClass: 'CartesianAxisPointer',\n\n        /**\n         * @override\n         */\n        render: function (axisModel, ecModel, api, payload) {\n\n            this.group.removeAll();\n\n            var oldAxisGroup = this._axisGroup;\n            this._axisGroup = new graphic.Group();\n\n            this.group.add(this._axisGroup);\n\n            if (!axisModel.get('show')) {\n                return;\n            }\n\n            var gridModel = axisModel.getCoordSysModel();\n\n            var layout = cartesianAxisHelper.layout(gridModel, axisModel);\n\n            var axisBuilder = new AxisBuilder(axisModel, layout);\n\n            zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n\n            this._axisGroup.add(axisBuilder.getGroup());\n\n            zrUtil.each(selfBuilderAttrs, function (name) {\n                if (axisModel.get(name + '.show')) {\n                    this['_' + name](axisModel, gridModel, layout.labelInterval);\n                }\n            }, this);\n\n            graphic.groupTransition(oldAxisGroup, this._axisGroup, axisModel);\n\n            CartesianAxisView.superCall(this, 'render', axisModel, ecModel, api, payload);\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @param {number|Function} labelInterval\n         * @private\n         */\n        _splitLine: function (axisModel, gridModel, labelInterval) {\n            var axis = axisModel.axis;\n\n            if (axis.scale.isBlank()) {\n                return;\n            }\n\n            var splitLineModel = axisModel.getModel('splitLine');\n            var lineStyleModel = splitLineModel.getModel('lineStyle');\n            var lineColors = lineStyleModel.get('color');\n\n            var lineInterval = getInterval(splitLineModel, labelInterval);\n\n            lineColors = zrUtil.isArray(lineColors) ? lineColors : [lineColors];\n\n            var gridRect = gridModel.coordinateSystem.getRect();\n            var isHorizontal = axis.isHorizontal();\n\n            var lineCount = 0;\n\n            var ticksCoords = axis.getTicksCoords(\n                // splitLineModel.get('alignWithLabel')\n            );\n            var ticks = axis.scale.getTicks();\n\n            var p1 = [];\n            var p2 = [];\n            // Simple optimization\n            // Batching the lines if color are the same\n            var lineStyle = lineStyleModel.getLineStyle();\n            for (var i = 0; i < ticksCoords.length; i++) {\n                if (ifIgnoreOnTick(axis, i, lineInterval)) {\n                    continue;\n                }\n\n                var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n                if (isHorizontal) {\n                    p1[0] = tickCoord;\n                    p1[1] = gridRect.y;\n                    p2[0] = tickCoord;\n                    p2[1] = gridRect.y + gridRect.height;\n                }\n                else {\n                    p1[0] = gridRect.x;\n                    p1[1] = tickCoord;\n                    p2[0] = gridRect.x + gridRect.width;\n                    p2[1] = tickCoord;\n                }\n\n                var colorIndex = (lineCount++) % lineColors.length;\n                this._axisGroup.add(new graphic.Line(graphic.subPixelOptimizeLine({\n                    anid: 'line_' + ticks[i],\n\n                    shape: {\n                        x1: p1[0],\n                        y1: p1[1],\n                        x2: p2[0],\n                        y2: p2[1]\n                    },\n                    style: zrUtil.defaults({\n                        stroke: lineColors[colorIndex]\n                    }, lineStyle),\n                    silent: true\n                })));\n            }\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @param {number|Function} labelInterval\n         * @private\n         */\n        _splitArea: function (axisModel, gridModel, labelInterval) {\n            var axis = axisModel.axis;\n\n            if (axis.scale.isBlank()) {\n                return;\n            }\n\n            var splitAreaModel = axisModel.getModel('splitArea');\n            var areaStyleModel = splitAreaModel.getModel('areaStyle');\n            var areaColors = areaStyleModel.get('color');\n\n            var gridRect = gridModel.coordinateSystem.getRect();\n\n            var ticksCoords = axis.getTicksCoords(\n                // splitAreaModel.get('alignWithLabel')\n            );\n            var ticks = axis.scale.getTicks();\n\n            var prevX = axis.toGlobalCoord(ticksCoords[0]);\n            var prevY = axis.toGlobalCoord(ticksCoords[0]);\n\n            var count = 0;\n\n            var areaInterval = getInterval(splitAreaModel, labelInterval);\n\n            var areaStyle = areaStyleModel.getAreaStyle();\n            areaColors = zrUtil.isArray(areaColors) ? areaColors : [areaColors];\n\n            for (var i = 1; i < ticksCoords.length; i++) {\n                if (ifIgnoreOnTick(axis, i, areaInterval)) {\n                    continue;\n                }\n\n                var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n                var x;\n                var y;\n                var width;\n                var height;\n                if (axis.isHorizontal()) {\n                    x = prevX;\n                    y = gridRect.y;\n                    width = tickCoord - x;\n                    height = gridRect.height;\n                }\n                else {\n                    x = gridRect.x;\n                    y = prevY;\n                    width = gridRect.width;\n                    height = tickCoord - y;\n                }\n\n                var colorIndex = (count++) % areaColors.length;\n                this._axisGroup.add(new graphic.Rect({\n                    anid: 'area_' + ticks[i],\n\n                    shape: {\n                        x: x,\n                        y: y,\n                        width: width,\n                        height: height\n                    },\n                    style: zrUtil.defaults({\n                        fill: areaColors[colorIndex]\n                    }, areaStyle),\n                    silent: true\n                }));\n\n                prevX = x + width;\n                prevY = y + height;\n            }\n        }\n    });\n\n    CartesianAxisView.extend({\n        type: 'xAxis'\n    });\n    CartesianAxisView.extend({\n        type: 'yAxis'\n    });\n\n\n\n/***/ }),\n/* 314 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var graphic = __webpack_require__(160);\n    var zrUtil = __webpack_require__(158);\n    var echarts = __webpack_require__(159);\n\n    __webpack_require__(214);\n\n    __webpack_require__(306);\n\n    // Grid view\n    echarts.extendComponentView({\n\n        type: 'grid',\n\n        render: function (gridModel, ecModel) {\n            this.group.removeAll();\n            if (gridModel.get('show')) {\n                this.group.add(new graphic.Rect({\n                    shape: gridModel.coordinateSystem.getRect(),\n                    style: zrUtil.defaults({\n                        fill: gridModel.get('backgroundColor')\n                    }, gridModel.getItemStyle()),\n                    silent: true,\n                    z2: -1\n                }));\n            }\n        }\n\n    });\n\n    echarts.registerPreprocessor(function (option) {\n        // Only create grid when need\n        if (option.xAxis && option.yAxis && !option.grid) {\n            option.grid = {};\n        }\n    });\n\n\n/***/ }),\n/* 315 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    // List layout\n    var layout = __webpack_require__(171);\n    var formatUtil = __webpack_require__(166);\n    var graphic = __webpack_require__(160);\n\n    function positionGroup(group, model, api) {\n        layout.positionElement(\n            group, model.getBoxLayoutParams(),\n            {\n                width: api.getWidth(),\n                height: api.getHeight()\n            },\n            model.get('padding')\n        );\n    }\n\n    module.exports = {\n        /**\n         * Layout list like component.\n         * It will box layout each items in group of component and then position the whole group in the viewport\n         * @param {module:zrender/group/Group} group\n         * @param {module:echarts/model/Component} componentModel\n         * @param {module:echarts/ExtensionAPI}\n         */\n        layout: function (group, componentModel, api) {\n            var rect = layout.getLayoutRect(componentModel.getBoxLayoutParams(), {\n                width: api.getWidth(),\n                height: api.getHeight()\n            }, componentModel.get('padding'));\n            layout.box(\n                componentModel.get('orient'),\n                group,\n                componentModel.get('itemGap'),\n                rect.width,\n                rect.height\n            );\n\n            positionGroup(group, componentModel, api);\n        },\n\n        addBackground: function (group, componentModel) {\n            var padding = formatUtil.normalizeCssArray(\n                componentModel.get('padding')\n            );\n            var boundingRect = group.getBoundingRect();\n            var style = componentModel.getItemStyle(['color', 'opacity']);\n            style.fill = componentModel.get('backgroundColor');\n            var rect = new graphic.Rect({\n                shape: {\n                    x: boundingRect.x - padding[3],\n                    y: boundingRect.y - padding[0],\n                    width: boundingRect.width + padding[1] + padding[3],\n                    height: boundingRect.height + padding[0] + padding[2]\n                },\n                style: style,\n                silent: true,\n                z2: -1\n            });\n            graphic.subPixelOptimizeRect(rect);\n\n            group.add(rect);\n        }\n    };\n\n\n/***/ }),\n/* 316 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Data selectable mixin for chart series.\n * To eanble data select, option of series must have `selectedMode`.\n * And each data item will use `selected` to toggle itself selected status\n *\n * @module echarts/chart/helper/DataSelectable\n */\n\n\n    var zrUtil = __webpack_require__(158);\n\n    module.exports = {\n\n        updateSelectedMap: function (targetList) {\n            this._selectTargetMap = zrUtil.reduce(targetList || [], function (targetMap, target) {\n                targetMap[target.name] = target;\n                return targetMap;\n            }, {});\n        },\n        /**\n         * @param {string} name\n         */\n        // PENGING If selectedMode is null ?\n        select: function (name) {\n            var targetMap = this._selectTargetMap;\n            var target = targetMap[name];\n            var selectedMode = this.get('selectedMode');\n            if (selectedMode === 'single') {\n                zrUtil.each(targetMap, function (target) {\n                    target.selected = false;\n                });\n            }\n            target && (target.selected = true);\n        },\n\n        /**\n         * @param {string} name\n         */\n        unSelect: function (name) {\n            var target = this._selectTargetMap[name];\n            // var selectedMode = this.get('selectedMode');\n            // selectedMode !== 'single' && target && (target.selected = false);\n            target && (target.selected = false);\n        },\n\n        /**\n         * @param {string} name\n         */\n        toggleSelected: function (name) {\n            var target = this._selectTargetMap[name];\n            if (target != null) {\n                this[target.selected ? 'unSelect' : 'select'](name);\n                return target.selected;\n            }\n        },\n\n        /**\n         * @param {string} name\n         */\n        isSelected: function (name) {\n            var target = this._selectTargetMap[name];\n            return target && target.selected;\n        }\n    };\n\n\n/***/ }),\n/* 317 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(158);\n    var Model = __webpack_require__(165);\n\n    var LegendModel = __webpack_require__(159).extendComponentModel({\n\n        type: 'legend',\n\n        dependencies: ['series'],\n\n        layoutMode: {\n            type: 'box',\n            ignoreSize: true\n        },\n\n        init: function (option, parentModel, ecModel) {\n            this.mergeDefaultAndTheme(option, ecModel);\n\n            option.selected = option.selected || {};\n        },\n\n        mergeOption: function (option) {\n            LegendModel.superCall(this, 'mergeOption', option);\n        },\n\n        optionUpdated: function () {\n            this._updateData(this.ecModel);\n\n            var legendData = this._data;\n\n            // If selectedMode is single, try to select one\n            if (legendData[0] && this.get('selectedMode') === 'single') {\n                var hasSelected = false;\n                // If has any selected in option.selected\n                for (var i = 0; i < legendData.length; i++) {\n                    var name = legendData[i].get('name');\n                    if (this.isSelected(name)) {\n                        // Force to unselect others\n                        this.select(name);\n                        hasSelected = true;\n                        break;\n                    }\n                }\n                // Try select the first if selectedMode is single\n                !hasSelected && this.select(legendData[0].get('name'));\n            }\n        },\n\n        _updateData: function (ecModel) {\n            var legendData = zrUtil.map(this.get('data') || [], function (dataItem) {\n                // Can be string or number\n                if (typeof dataItem === 'string' || typeof dataItem === 'number') {\n                    dataItem = {\n                        name: dataItem\n                    };\n                }\n                return new Model(dataItem, this, this.ecModel);\n            }, this);\n            this._data = legendData;\n\n            var availableNames = zrUtil.map(ecModel.getSeries(), function (series) {\n                return series.name;\n            });\n            ecModel.eachSeries(function (seriesModel) {\n                if (seriesModel.legendDataProvider) {\n                    var data = seriesModel.legendDataProvider();\n                    availableNames = availableNames.concat(data.mapArray(data.getName));\n                }\n            });\n            /**\n             * @type {Array.<string>}\n             * @private\n             */\n            this._availableNames = availableNames;\n        },\n\n        /**\n         * @return {Array.<module:echarts/model/Model>}\n         */\n        getData: function () {\n            return this._data;\n        },\n\n        /**\n         * @param {string} name\n         */\n        select: function (name) {\n            var selected = this.option.selected;\n            var selectedMode = this.get('selectedMode');\n            if (selectedMode === 'single') {\n                var data = this._data;\n                zrUtil.each(data, function (dataItem) {\n                    selected[dataItem.get('name')] = false;\n                });\n            }\n            selected[name] = true;\n        },\n\n        /**\n         * @param {string} name\n         */\n        unSelect: function (name) {\n            if (this.get('selectedMode') !== 'single') {\n                this.option.selected[name] = false;\n            }\n        },\n\n        /**\n         * @param {string} name\n         */\n        toggleSelected: function (name) {\n            var selected = this.option.selected;\n            // Default is true\n            if (!selected.hasOwnProperty(name)) {\n                selected[name] = true;\n            }\n            this[selected[name] ? 'unSelect' : 'select'](name);\n        },\n\n        /**\n         * @param {string} name\n         */\n        isSelected: function (name) {\n            var selected = this.option.selected;\n            return !(selected.hasOwnProperty(name) && !selected[name])\n                && zrUtil.indexOf(this._availableNames, name) >= 0;\n        },\n\n        defaultOption: {\n            // 一级层叠\n            zlevel: 0,\n            // 二级层叠\n            z: 4,\n            show: true,\n\n            // 布局方式，默认为水平布局，可选为：\n            // 'horizontal' | 'vertical'\n            orient: 'horizontal',\n\n            left: 'center',\n            // right: 'center',\n\n            top: 'top',\n            // bottom: 'top',\n\n            // 水平对齐\n            // 'auto' | 'left' | 'right'\n            // 默认为 'auto', 根据 x 的位置判断是左对齐还是右对齐\n            align: 'auto',\n\n            backgroundColor: 'rgba(0,0,0,0)',\n            // 图例边框颜色\n            borderColor: '#ccc',\n            // 图例边框线宽，单位px，默认为0（无边框）\n            borderWidth: 0,\n            // 图例内边距，单位px，默认各方向内边距为5，\n            // 接受数组分别设定上右下左边距，同css\n            padding: 5,\n            // 各个item之间的间隔，单位px，默认为10，\n            // 横向布局时为水平间隔，纵向布局时为纵向间隔\n            itemGap: 10,\n            // 图例图形宽度\n            itemWidth: 25,\n            // 图例图形高度\n            itemHeight: 14,\n\n            // 图例关闭时候的颜色\n            inactiveColor: '#ccc',\n\n            textStyle: {\n                // 图例文字颜色\n                color: '#333'\n            },\n            // formatter: '',\n            // 选择模式，默认开启图例开关\n            selectedMode: true,\n            // 配置默认选中状态，可配合LEGEND.SELECTED事件做动态数据载入\n            // selected: null,\n            // 图例内容（详见legend.data，数组中每一项代表一个item\n            // data: [],\n\n            // Tooltip 相关配置\n            tooltip: {\n                show: false\n            }\n        }\n    });\n\n    module.exports = LegendModel;\n\n\n/***/ }),\n/* 318 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(158);\n    var symbolCreator = __webpack_require__(218);\n    var graphic = __webpack_require__(160);\n    var listComponentHelper = __webpack_require__(315);\n\n    var curry = zrUtil.curry;\n\n    function dispatchSelectAction(name, api) {\n        api.dispatchAction({\n            type: 'legendToggleSelect',\n            name: name\n        });\n    }\n\n    function dispatchHighlightAction(seriesModel, dataName, api) {\n        // If element hover will move to a hoverLayer.\n        var el = api.getZr().storage.getDisplayList()[0];\n        if (!(el && el.useHoverLayer)) {\n            seriesModel.get('legendHoverLink') && api.dispatchAction({\n                type: 'highlight',\n                seriesName: seriesModel.name,\n                name: dataName\n            });\n        }\n    }\n\n    function dispatchDownplayAction(seriesModel, dataName, api) {\n        // If element hover will move to a hoverLayer.\n        var el = api.getZr().storage.getDisplayList()[0];\n        if (!(el && el.useHoverLayer)) {\n            seriesModel.get('legendHoverLink') && api.dispatchAction({\n                type: 'downplay',\n                seriesName: seriesModel.name,\n                name: dataName\n            });\n        }\n    }\n\n    module.exports = __webpack_require__(159).extendComponentView({\n\n        type: 'legend',\n\n        init: function () {\n            this._symbolTypeStore = {};\n        },\n\n        render: function (legendModel, ecModel, api) {\n            var group = this.group;\n            group.removeAll();\n\n            if (!legendModel.get('show')) {\n                return;\n            }\n\n            var selectMode = legendModel.get('selectedMode');\n            var itemAlign = legendModel.get('align');\n\n            if (itemAlign === 'auto') {\n                itemAlign = (legendModel.get('left') === 'right'\n                    && legendModel.get('orient') === 'vertical')\n                    ? 'right' : 'left';\n            }\n\n            var legendDrawedMap = {};\n\n            zrUtil.each(legendModel.getData(), function (itemModel) {\n                var name = itemModel.get('name');\n\n                // Use empty string or \\n as a newline string\n                if (name === '' || name === '\\n') {\n                    group.add(new graphic.Group({\n                        newline: true\n                    }));\n                    return;\n                }\n\n                var seriesModel = ecModel.getSeriesByName(name)[0];\n\n                if (legendDrawedMap[name]) {\n                    // Have been drawed\n                    return;\n                }\n\n                // Series legend\n                if (seriesModel) {\n                    var data = seriesModel.getData();\n                    var color = data.getVisual('color');\n\n                    // If color is a callback function\n                    if (typeof color === 'function') {\n                        // Use the first data\n                        color = color(seriesModel.getDataParams(0));\n                    }\n\n                    // Using rect symbol defaultly\n                    var legendSymbolType = data.getVisual('legendSymbol') || 'roundRect';\n                    var symbolType = data.getVisual('symbol');\n\n                    var itemGroup = this._createItem(\n                        name, itemModel, legendModel,\n                        legendSymbolType, symbolType,\n                        itemAlign, color,\n                        selectMode\n                    );\n\n                    itemGroup.on('click', curry(dispatchSelectAction, name, api))\n                        .on('mouseover', curry(dispatchHighlightAction, seriesModel, null, api))\n                        .on('mouseout', curry(dispatchDownplayAction, seriesModel, null, api));\n\n                    legendDrawedMap[name] = true;\n                }\n                else {\n                    // Data legend of pie, funnel\n                    ecModel.eachRawSeries(function (seriesModel) {\n                        // In case multiple series has same data name\n                        if (legendDrawedMap[name]) {\n                            return;\n                        }\n                        if (seriesModel.legendDataProvider) {\n                            var data = seriesModel.legendDataProvider();\n                            var idx = data.indexOfName(name);\n                            if (idx < 0) {\n                                return;\n                            }\n\n                            var color = data.getItemVisual(idx, 'color');\n\n                            var legendSymbolType = 'roundRect';\n\n                            var itemGroup = this._createItem(\n                                name, itemModel, legendModel,\n                                legendSymbolType, null,\n                                itemAlign, color,\n                                selectMode\n                            );\n\n                            itemGroup.on('click', curry(dispatchSelectAction, name, api))\n                                // FIXME Should not specify the series name\n                                .on('mouseover', curry(dispatchHighlightAction, seriesModel, name, api))\n                                .on('mouseout', curry(dispatchDownplayAction, seriesModel, name, api));\n\n                            legendDrawedMap[name] = true;\n                        }\n                    }, this);\n                }\n\n                if (__DEV__) {\n                    if (!legendDrawedMap[name]) {\n                        console.warn(name + ' series not exists. Legend data should be same with series name or data name.');\n                    }\n                }\n            }, this);\n\n            listComponentHelper.layout(group, legendModel, api);\n            // Render background after group is layout\n            // FIXME\n            listComponentHelper.addBackground(group, legendModel);\n        },\n\n        _createItem: function (\n            name, itemModel, legendModel,\n            legendSymbolType, symbolType,\n            itemAlign, color, selectMode\n        ) {\n            var itemWidth = legendModel.get('itemWidth');\n            var itemHeight = legendModel.get('itemHeight');\n            var inactiveColor = legendModel.get('inactiveColor');\n\n            var isSelected = legendModel.isSelected(name);\n            var itemGroup = new graphic.Group();\n\n            var textStyleModel = itemModel.getModel('textStyle');\n\n            var itemIcon = itemModel.get('icon');\n\n            var tooltipModel = itemModel.getModel('tooltip');\n            var legendGlobalTooltipModel = tooltipModel.parentModel;\n\n            // Use user given icon first\n            legendSymbolType = itemIcon || legendSymbolType;\n            itemGroup.add(symbolCreator.createSymbol(\n                legendSymbolType, 0, 0, itemWidth, itemHeight, isSelected ? color : inactiveColor\n            ));\n\n            // Compose symbols\n            // PENDING\n            if (!itemIcon && symbolType\n                // At least show one symbol, can't be all none\n                && ((symbolType !== legendSymbolType) || symbolType == 'none')\n            ) {\n                var size = itemHeight * 0.8;\n                if (symbolType === 'none') {\n                    symbolType = 'circle';\n                }\n                // Put symbol in the center\n                itemGroup.add(symbolCreator.createSymbol(\n                    symbolType, (itemWidth - size) / 2, (itemHeight - size) / 2, size, size,\n                    isSelected ? color : inactiveColor\n                ));\n            }\n\n            // Text\n            var textX = itemAlign === 'left' ? itemWidth + 5 : -5;\n            var textAlign = itemAlign;\n\n            var formatter = legendModel.get('formatter');\n            var content = name;\n            if (typeof formatter === 'string' && formatter) {\n                content = formatter.replace('{name}', name != null ? name : '');\n            }\n            else if (typeof formatter === 'function') {\n                content = formatter(name);\n            }\n\n            var text = new graphic.Text({\n                style: {\n                    text: content,\n                    x: textX,\n                    y: itemHeight / 2,\n                    fill: isSelected ? textStyleModel.getTextColor() : inactiveColor,\n                    textFont: textStyleModel.getFont(),\n                    textAlign: textAlign,\n                    textVerticalAlign: 'middle'\n                }\n            });\n            itemGroup.add(text);\n\n            // Add a invisible rect to increase the area of mouse hover\n            var hitRect = new graphic.Rect({\n                shape: itemGroup.getBoundingRect(),\n                invisible: true,\n                tooltip: tooltipModel.get('show') ? zrUtil.extend({\n                    content: name,\n                    // Defaul formatter\n                    formatter: legendGlobalTooltipModel.get('formatter', true) || function () {\n                        return name;\n                    },\n                    formatterParams: {\n                        componentType: 'legend',\n                        legendIndex: legendModel.componentIndex,\n                        name: name,\n                        $vars: ['name']\n                    }\n                }, tooltipModel.option) : null\n            });\n            itemGroup.add(hitRect);\n\n            itemGroup.eachChild(function (child) {\n                child.silent = true;\n            });\n\n            hitRect.silent = !selectMode;\n\n\n\n            this.group.add(itemGroup);\n\n            graphic.setHoverStyle(itemGroup);\n\n            return itemGroup;\n        }\n    });\n\n\n/***/ }),\n/* 319 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @file Legend action\n */\n\n\n    var echarts = __webpack_require__(159);\n    var zrUtil = __webpack_require__(158);\n\n    function legendSelectActionHandler(methodName, payload, ecModel) {\n        var selectedMap = {};\n        var isToggleSelect = methodName === 'toggleSelected';\n        var isSelected;\n        // Update all legend components\n        ecModel.eachComponent('legend', function (legendModel) {\n            if (isToggleSelect && isSelected != null) {\n                // Force other legend has same selected status\n                // Or the first is toggled to true and other are toggled to false\n                // In the case one legend has some item unSelected in option. And if other legend\n                // doesn't has the item, they will assume it is selected.\n                legendModel[isSelected ? 'select' : 'unSelect'](payload.name);\n            }\n            else {\n                legendModel[methodName](payload.name);\n                isSelected = legendModel.isSelected(payload.name);\n            }\n            var legendData = legendModel.getData();\n            zrUtil.each(legendData, function (model) {\n                var name = model.get('name');\n                // Wrap element\n                if (name === '\\n' || name === '') {\n                    return;\n                }\n                var isItemSelected = legendModel.isSelected(name);\n                if (name in selectedMap) {\n                    // Unselected if any legend is unselected\n                    selectedMap[name] = selectedMap[name] && isItemSelected;\n                }\n                else {\n                    selectedMap[name] = isItemSelected;\n                }\n            });\n        });\n        // Return the event explicitly\n        return {\n            name: payload.name,\n            selected: selectedMap\n        };\n    }\n    /**\n     * @event legendToggleSelect\n     * @type {Object}\n     * @property {string} type 'legendToggleSelect'\n     * @property {string} [from]\n     * @property {string} name Series name or data item name\n     */\n    echarts.registerAction(\n        'legendToggleSelect', 'legendselectchanged',\n        zrUtil.curry(legendSelectActionHandler, 'toggleSelected')\n    );\n\n    /**\n     * @event legendSelect\n     * @type {Object}\n     * @property {string} type 'legendSelect'\n     * @property {string} name Series name or data item name\n     */\n    echarts.registerAction(\n        'legendSelect', 'legendselected',\n        zrUtil.curry(legendSelectActionHandler, 'select')\n    );\n\n    /**\n     * @event legendUnSelect\n     * @type {Object}\n     * @property {string} type 'legendUnSelect'\n     * @property {string} name Series name or data item name\n     */\n    echarts.registerAction(\n        'legendUnSelect', 'legendunselected',\n        zrUtil.curry(legendSelectActionHandler, 'unSelect')\n    );\n\n\n/***/ }),\n/* 320 */\n/***/ (function(module, exports) {\n\n\n   module.exports = function (ecModel) {\n        var legendModels = ecModel.findComponents({\n            mainType: 'legend'\n        });\n        if (legendModels && legendModels.length) {\n            ecModel.filterSeries(function (series) {\n                // If in any legend component the status is not selected.\n                // Because in legend series is assumed selected when it is not in the legend data.\n                for (var i = 0; i < legendModels.length; i++) {\n                    if (!legendModels[i].isSelected(series.name)) {\n                        return false;\n                    }\n                }\n                return true;\n            });\n        }\n    };\n\n\n/***/ }),\n/* 321 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/component/tooltip/TooltipContent\n */\n\n\n    var zrUtil = __webpack_require__(158);\n    var zrColor = __webpack_require__(178);\n    var eventUtil = __webpack_require__(176);\n    var formatUtil = __webpack_require__(166);\n    var each = zrUtil.each;\n    var toCamelCase = formatUtil.toCamelCase;\n    var env = __webpack_require__(167);\n\n    var vendors = ['', '-webkit-', '-moz-', '-o-'];\n\n    var gCssText = 'position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;';\n\n    /**\n     * @param {number} duration\n     * @return {string}\n     * @inner\n     */\n    function assembleTransition(duration) {\n        var transitionCurve = 'cubic-bezier(0.23, 1, 0.32, 1)';\n        var transitionText = 'left ' + duration + 's ' + transitionCurve + ','\n                            + 'top ' + duration + 's ' + transitionCurve;\n        return zrUtil.map(vendors, function (vendorPrefix) {\n            return vendorPrefix + 'transition:' + transitionText;\n        }).join(';');\n    }\n\n    /**\n     * @param {Object} textStyle\n     * @return {string}\n     * @inner\n     */\n    function assembleFont(textStyleModel) {\n        var cssText = [];\n\n        var fontSize = textStyleModel.get('fontSize');\n        var color = textStyleModel.getTextColor();\n\n        color && cssText.push('color:' + color);\n\n        cssText.push('font:' + textStyleModel.getFont());\n\n        fontSize &&\n            cssText.push('line-height:' + Math.round(fontSize * 3 / 2) + 'px');\n\n        each(['decoration', 'align'], function (name) {\n            var val = textStyleModel.get(name);\n            val && cssText.push('text-' + name + ':' + val);\n        });\n\n        return cssText.join(';');\n    }\n\n    /**\n     * @param {Object} tooltipModel\n     * @return {string}\n     * @inner\n     */\n    function assembleCssText(tooltipModel) {\n\n        var cssText = [];\n\n        var transitionDuration = tooltipModel.get('transitionDuration');\n        var backgroundColor = tooltipModel.get('backgroundColor');\n        var textStyleModel = tooltipModel.getModel('textStyle');\n        var padding = tooltipModel.get('padding');\n\n        // Animation transition. Do not animate when transitionDuration is 0.\n        transitionDuration &&\n            cssText.push(assembleTransition(transitionDuration));\n\n        if (backgroundColor) {\n            if (env.canvasSupported) {\n                cssText.push('background-Color:' + backgroundColor);\n            }\n            else {\n                // for ie\n                cssText.push(\n                    'background-Color:#' + zrColor.toHex(backgroundColor)\n                );\n                cssText.push('filter:alpha(opacity=70)');\n            }\n        }\n\n        // Border style\n        each(['width', 'color', 'radius'], function (name) {\n            var borderName = 'border-' + name;\n            var camelCase = toCamelCase(borderName);\n            var val = tooltipModel.get(camelCase);\n            val != null &&\n                cssText.push(borderName + ':' + val + (name === 'color' ? '' : 'px'));\n        });\n\n        // Text style\n        cssText.push(assembleFont(textStyleModel));\n\n        // Padding\n        if (padding != null) {\n            cssText.push('padding:' + formatUtil.normalizeCssArray(padding).join('px ') + 'px');\n        }\n\n        return cssText.join(';') + ';';\n    }\n\n    /**\n     * @alias module:echarts/component/tooltip/TooltipContent\n     * @constructor\n     */\n    function TooltipContent(container, api) {\n        var el = document.createElement('div');\n        var zr = this._zr = api.getZr();\n\n        this.el = el;\n\n        this._x = api.getWidth() / 2;\n        this._y = api.getHeight() / 2;\n\n        container.appendChild(el);\n\n        this._container = container;\n\n        this._show = false;\n\n        /**\n         * @private\n         */\n        this._hideTimeout;\n\n        var self = this;\n        el.onmouseenter = function () {\n            // clear the timeout in hideLater and keep showing tooltip\n            if (self._enterable) {\n                clearTimeout(self._hideTimeout);\n                self._show = true;\n            }\n            self._inContent = true;\n        };\n        el.onmousemove = function (e) {\n            e = e || window.event;\n            if (!self._enterable) {\n                // Try trigger zrender event to avoid mouse\n                // in and out shape too frequently\n                var handler = zr.handler;\n                eventUtil.normalizeEvent(container, e, true);\n                handler.dispatch('mousemove', e);\n            }\n        };\n        el.onmouseleave = function () {\n            if (self._enterable) {\n                if (self._show) {\n                    self.hideLater(self._hideDelay);\n                }\n            }\n            self._inContent = false;\n        };\n    }\n\n    TooltipContent.prototype = {\n\n        constructor: TooltipContent,\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _enterable: true,\n\n        /**\n         * Update when tooltip is rendered\n         */\n        update: function () {\n            // FIXME\n            // Move this logic to ec main?\n            var container = this._container;\n            var stl = container.currentStyle\n                || document.defaultView.getComputedStyle(container);\n            var domStyle = container.style;\n            if (domStyle.position !== 'absolute' && stl.position !== 'absolute') {\n                domStyle.position = 'relative';\n            }\n            // Hide the tooltip\n            // PENDING\n            // this.hide();\n        },\n\n        show: function (tooltipModel) {\n            clearTimeout(this._hideTimeout);\n            var el = this.el;\n\n            el.style.cssText = gCssText + assembleCssText(tooltipModel)\n                // http://stackoverflow.com/questions/21125587/css3-transition-not-working-in-chrome-anymore\n                + ';left:' + this._x + 'px;top:' + this._y + 'px;'\n                + (tooltipModel.get('extraCssText') || '');\n\n            el.style.display = el.innerHTML ?  'block' : 'none';\n\n            this._show = true;\n        },\n\n        setContent: function (content) {\n            this.el.innerHTML = content == null ? '' : content;\n        },\n\n        setEnterable: function (enterable) {\n            this._enterable = enterable;\n        },\n\n        getSize: function () {\n            var el = this.el;\n            return [el.clientWidth, el.clientHeight];\n        },\n\n        moveTo: function (x, y) {\n            // xy should be based on canvas root. But tooltipContent is\n            // the sibling of canvas root. So padding of ec container\n            // should be considered here.\n            var zr = this._zr;\n            var viewportRoot;\n            if (zr && zr.painter && (viewportRoot = zr.painter.getViewportRoot())) {\n                x += viewportRoot.offsetLeft || 0;\n                y += viewportRoot.offsetTop || 0;\n            }\n\n            var style = this.el.style;\n            style.left = x + 'px';\n            style.top = y + 'px';\n\n            this._x = x;\n            this._y = y;\n        },\n\n        hide: function () {\n            this.el.style.display = 'none';\n            this._show = false;\n        },\n\n        hideLater: function (time) {\n            if (this._show && !(this._inContent && this._enterable)) {\n                if (time) {\n                    this._hideDelay = time;\n                    // Set show false to avoid invoke hideLater mutiple times\n                    this._show = false;\n                    this._hideTimeout = setTimeout(zrUtil.bind(this.hide, this), time);\n                }\n                else {\n                    this.hide();\n                }\n            }\n        },\n\n        isShow: function () {\n            return this._show;\n        }\n    };\n\n    module.exports = TooltipContent;\n\n\n/***/ }),\n/* 322 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    __webpack_require__(159).extendComponentModel({\n\n        type: 'tooltip',\n\n        dependencies: ['axisPointer'],\n\n        defaultOption: {\n            zlevel: 0,\n\n            z: 8,\n\n            show: true,\n\n            // tooltip主体内容\n            showContent: true,\n\n            // 'trigger' only works on coordinate system.\n            // 'item' | 'axis' | 'none'\n            trigger: 'item',\n\n            // 'click' | 'mousemove' | 'none'\n            triggerOn: 'mousemove|click',\n\n            alwaysShowContent: false,\n\n            displayMode: 'single', // 'single' | 'multipleByCoordSys'\n\n            // 位置 {Array} | {Function}\n            // position: null\n            // Consider triggered from axisPointer handle, verticalAlign should be 'middle'\n            // align: null,\n            // verticalAlign: null,\n\n            // 是否约束 content 在 viewRect 中。默认 false 是为了兼容以前版本。\n            confine: false,\n\n            // 内容格式器：{string}（Template） ¦ {Function}\n            // formatter: null\n\n            showDelay: 0,\n\n            // 隐藏延迟，单位ms\n            hideDelay: 100,\n\n            // 动画变换时间，单位s\n            transitionDuration: 0.4,\n\n            enterable: false,\n\n            // 提示背景颜色，默认为透明度为0.7的黑色\n            backgroundColor: 'rgba(50,50,50,0.7)',\n\n            // 提示边框颜色\n            borderColor: '#333',\n\n            // 提示边框圆角，单位px，默认为4\n            borderRadius: 4,\n\n            // 提示边框线宽，单位px，默认为0（无边框）\n            borderWidth: 0,\n\n            // 提示内边距，单位px，默认各方向内边距为5，\n            // 接受数组分别设定上右下左边距，同css\n            padding: 5,\n\n            // Extra css text\n            extraCssText: '',\n\n            // 坐标轴指示器，坐标轴触发有效\n            axisPointer: {\n                // 默认为直线\n                // 可选为：'line' | 'shadow' | 'cross'\n                type: 'line',\n\n                // type 为 line 的时候有效，指定 tooltip line 所在的轴，可选\n                // 可选 'x' | 'y' | 'angle' | 'radius' | 'auto'\n                // 默认 'auto'，会选择类型为 cateogry 的轴，对于双数值轴，笛卡尔坐标系会默认选择 x 轴\n                // 极坐标系会默认选择 angle 轴\n                axis: 'auto',\n\n                animation: 'auto',\n                animationDurationUpdate: 200,\n                animationEasingUpdate: 'exponentialOut',\n\n                crossStyle: {\n                    color: '#999',\n                    width: 1,\n                    type: 'dashed',\n\n                    // TODO formatter\n                    textStyle: {}\n                }\n\n                // lineStyle and shadowStyle should not be specified here,\n                // otherwise it will always override those styles on option.axisPointer.\n            },\n            textStyle: {\n                color: '#fff',\n                fontSize: 14\n            }\n        }\n    });\n\n\n/***/ }),\n/* 323 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var TooltipContent = __webpack_require__(321);\n    var zrUtil = __webpack_require__(158);\n    var formatUtil = __webpack_require__(166);\n    var numberUtil = __webpack_require__(161);\n    var graphic = __webpack_require__(160);\n    var findPointFromSeries = __webpack_require__(204);\n    var layoutUtil = __webpack_require__(171);\n    var env = __webpack_require__(167);\n    var Model = __webpack_require__(165);\n    var globalListener = __webpack_require__(205);\n    var axisHelper = __webpack_require__(173);\n    var axisPointerViewHelper = __webpack_require__(206);\n\n    var bind = zrUtil.bind;\n    var each = zrUtil.each;\n    var parsePercent = numberUtil.parsePercent;\n\n\n    var proxyRect = new graphic.Rect({\n        shape: {x: -1, y: -1, width: 2, height: 2}\n    });\n\n    __webpack_require__(159).extendComponentView({\n\n        type: 'tooltip',\n\n        init: function (ecModel, api) {\n            if (env.node) {\n                return;\n            }\n            var tooltipContent = new TooltipContent(api.getDom(), api);\n            this._tooltipContent = tooltipContent;\n        },\n\n        render: function (tooltipModel, ecModel, api) {\n            if (env.node) {\n                return;\n            }\n\n            // Reset\n            this.group.removeAll();\n\n            /**\n             * @private\n             * @type {module:echarts/component/tooltip/TooltipModel}\n             */\n            this._tooltipModel = tooltipModel;\n\n            /**\n             * @private\n             * @type {module:echarts/model/Global}\n             */\n            this._ecModel = ecModel;\n\n            /**\n             * @private\n             * @type {module:echarts/ExtensionAPI}\n             */\n            this._api = api;\n\n            /**\n             * Should be cleaned when render.\n             * @private\n             * @type {Array.<Array.<Object>>}\n             */\n            this._lastDataByCoordSys = null;\n\n            /**\n             * @private\n             * @type {boolean}\n             */\n            this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n\n            var tooltipContent = this._tooltipContent;\n            tooltipContent.update();\n            tooltipContent.setEnterable(tooltipModel.get('enterable'));\n\n            this._initGlobalListener();\n\n            this._keepShow();\n        },\n\n        _initGlobalListener: function () {\n            var tooltipModel = this._tooltipModel;\n            var triggerOn = tooltipModel.get('triggerOn');\n\n            globalListener.register(\n                'itemTooltip',\n                this._api,\n                bind(function (currTrigger, e, dispatchAction) {\n                    // If 'none', it is not controlled by mouse totally.\n                    if (triggerOn !== 'none') {\n                        if (triggerOn.indexOf(currTrigger) >= 0) {\n                            this._tryShow(e, dispatchAction);\n                        }\n                        else if (currTrigger === 'leave') {\n                            this._hide(dispatchAction);\n                        }\n                    }\n                }, this)\n            );\n        },\n\n        _keepShow: function () {\n            var tooltipModel = this._tooltipModel;\n            var ecModel = this._ecModel;\n            var api = this._api;\n\n            // Try to keep the tooltip show when refreshing\n            if (this._lastX != null\n                && this._lastY != null\n                // When user is willing to control tooltip totally using API,\n                // self.manuallyShowTip({x, y}) might cause tooltip hide,\n                // which is not expected.\n                && tooltipModel.get('triggerOn') !== 'none'\n            ) {\n                var self = this;\n                clearTimeout(this._refreshUpdateTimeout);\n                this._refreshUpdateTimeout = setTimeout(function () {\n                    // Show tip next tick after other charts are rendered\n                    // In case highlight action has wrong result\n                    // FIXME\n                    self.manuallyShowTip(tooltipModel, ecModel, api, {\n                        x: self._lastX,\n                        y: self._lastY\n                    });\n                });\n            }\n        },\n\n        /**\n         * Show tip manually by\n         * dispatchAction({\n         *     type: 'showTip',\n         *     x: 10,\n         *     y: 10\n         * });\n         * Or\n         * dispatchAction({\n         *      type: 'showTip',\n         *      seriesIndex: 0,\n         *      dataIndex or dataIndexInside or name\n         * });\n         *\n         *  TODO Batch\n         */\n        manuallyShowTip: function (tooltipModel, ecModel, api, payload) {\n            if (payload.from === this.uid || env.node) {\n                return;\n            }\n\n            var dispatchAction = makeDispatchAction(payload, api);\n\n            // Reset ticket\n            this._ticket = '';\n\n            // When triggered from axisPointer.\n            var dataByCoordSys = payload.dataByCoordSys;\n\n            if (payload.tooltip && payload.x != null && payload.y != null) {\n                var el = proxyRect;\n                el.position = [payload.x, payload.y];\n                el.update();\n                el.tooltip = payload.tooltip;\n                // Manually show tooltip while view is not using zrender elements.\n                this._tryShow({\n                    offsetX: payload.x,\n                    offsetY: payload.y,\n                    target: el\n                }, dispatchAction);\n            }\n            else if (dataByCoordSys) {\n                this._tryShow({\n                    offsetX: payload.x,\n                    offsetY: payload.y,\n                    position: payload.position,\n                    event: {},\n                    dataByCoordSys: payload.dataByCoordSys,\n                    tooltipOption: payload.tooltipOption\n                }, dispatchAction);\n            }\n            else if (payload.seriesIndex != null) {\n\n                if (this._manuallyAxisShowTip(tooltipModel, ecModel, api, payload)) {\n                    return;\n                }\n\n                var pointInfo = findPointFromSeries(payload, ecModel);\n                var cx = pointInfo.point[0];\n                var cy = pointInfo.point[1];\n                if (cx != null && cy != null) {\n                    this._tryShow({\n                        offsetX: cx,\n                        offsetY: cy,\n                        position: payload.position,\n                        target: pointInfo.el,\n                        event: {}\n                    }, dispatchAction);\n                }\n            }\n            else if (payload.x != null && payload.y != null) {\n                // FIXME\n                // should wrap dispatchAction like `axisPointer/globalListener` ?\n                api.dispatchAction({\n                    type: 'updateAxisPointer',\n                    x: payload.x,\n                    y: payload.y\n                });\n\n                this._tryShow({\n                    offsetX: payload.x,\n                    offsetY: payload.y,\n                    position: payload.position,\n                    target: api.getZr().findHover(payload.x, payload.y).target,\n                    event: {}\n                }, dispatchAction);\n            }\n        },\n\n        manuallyHideTip: function (tooltipModel, ecModel, api, payload) {\n            var tooltipContent = this._tooltipContent;\n\n            if (!this._alwaysShowContent) {\n                tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n            }\n\n            this._lastX = this._lastY = null;\n\n            if (payload.from !== this.uid) {\n                this._hide(makeDispatchAction(payload, api));\n            }\n        },\n\n        // Be compatible with previous design, that is, when tooltip.type is 'axis' and\n        // dispatchAction 'showTip' with seriesIndex and dataIndex will trigger axis pointer\n        // and tooltip.\n        _manuallyAxisShowTip: function (tooltipModel, ecModel, api, payload) {\n            var seriesIndex = payload.seriesIndex;\n            var dataIndex = payload.dataIndex;\n            var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n            if (seriesIndex == null || dataIndex == null || coordSysAxesInfo == null) {\n                return;\n            }\n\n            var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n            if (!seriesModel) {\n                return;\n            }\n\n            var data = seriesModel.getData();\n            var tooltipModel = buildTooltipModel([\n                data.getItemModel(dataIndex),\n                seriesModel,\n                (seriesModel.coordinateSystem || {}).model,\n                tooltipModel\n            ]);\n\n            if (tooltipModel.get('trigger') !== 'axis') {\n                return;\n            }\n\n            api.dispatchAction({\n                type: 'updateAxisPointer',\n                seriesIndex: seriesIndex,\n                dataIndex: dataIndex\n            });\n\n            return true;\n        },\n\n        _tryShow: function (e, dispatchAction) {\n            var el = e.target;\n            var tooltipModel = this._tooltipModel;\n\n            if (!tooltipModel) {\n                return;\n            }\n\n            // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n            this._lastX = e.offsetX;\n            this._lastY = e.offsetY;\n\n            var dataByCoordSys = e.dataByCoordSys;\n            if (dataByCoordSys && dataByCoordSys.length) {\n                this._showAxisTooltip(dataByCoordSys, e);\n            }\n            // Always show item tooltip if mouse is on the element with dataIndex\n            else if (el && el.dataIndex != null) {\n                this._lastDataByCoordSys = null;\n                this._showSeriesItemTooltip(e, el, dispatchAction);\n            }\n            // Tooltip provided directly. Like legend.\n            else if (el && el.tooltip) {\n                this._lastDataByCoordSys = null;\n                this._showComponentItemTooltip(e, el, dispatchAction);\n            }\n            else {\n                this._lastDataByCoordSys = null;\n                this._hide(dispatchAction);\n            }\n        },\n\n        _showOrMove: function (tooltipModel, cb) {\n            // showDelay is used in this case: tooltip.enterable is set\n            // as true. User intent to move mouse into tooltip and click\n            // something. `showDelay` makes it easyer to enter the content\n            // but tooltip do not move immediately.\n            var delay = tooltipModel.get('showDelay');\n            cb = zrUtil.bind(cb, this);\n            clearTimeout(this._showTimout);\n            delay > 0\n                ? (this._showTimout = setTimeout(cb, delay))\n                : cb();\n        },\n\n        _showAxisTooltip: function (dataByCoordSys, e) {\n            var ecModel = this._ecModel;\n            var globalTooltipModel = this._tooltipModel;\n            var point = [e.offsetX, e.offsetY];\n            var singleDefaultHTML = [];\n            var singleParamsList = [];\n            var singleTooltipModel = buildTooltipModel([\n                e.tooltipOption,\n                globalTooltipModel\n            ]);\n\n            each(dataByCoordSys, function (itemCoordSys) {\n                // var coordParamList = [];\n                // var coordDefaultHTML = [];\n                // var coordTooltipModel = buildTooltipModel([\n                //     e.tooltipOption,\n                //     itemCoordSys.tooltipOption,\n                //     ecModel.getComponent(itemCoordSys.coordSysMainType, itemCoordSys.coordSysIndex),\n                //     globalTooltipModel\n                // ]);\n                // var displayMode = coordTooltipModel.get('displayMode');\n                // var paramsList = displayMode === 'single' ? singleParamsList : [];\n\n                each(itemCoordSys.dataByAxis, function (item) {\n                    var axisModel = ecModel.getComponent(item.axisDim + 'Axis', item.axisIndex);\n                    var axisValue = item.value;\n                    var seriesDefaultHTML = [];\n\n                    if (!axisModel || axisValue == null) {\n                        return;\n                    }\n\n                    var valueLabel = axisPointerViewHelper.getValueLabel(\n                        axisValue, axisModel.axis, ecModel,\n                        item.seriesDataIndices,\n                        item.valueLabelOpt\n                    );\n\n                    zrUtil.each(item.seriesDataIndices, function (idxItem) {\n                        var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n                        var dataIndex = idxItem.dataIndexInside;\n                        var dataParams = series && series.getDataParams(dataIndex);\n                        dataParams.axisDim = item.axisDim;\n                        dataParams.axisIndex = item.axisIndex;\n                        dataParams.axisType = item.axisType;\n                        dataParams.axisId = item.axisId;\n                        dataParams.axisValue = axisHelper.getAxisRawValue(axisModel.axis, axisValue);\n                        dataParams.axisValueLabel = valueLabel;\n\n                        if (dataParams) {\n                            singleParamsList.push(dataParams);\n                            seriesDefaultHTML.push(series.formatTooltip(dataIndex, true));\n                        }\n                    });\n\n                    // Default tooltip content\n                    // FIXME\n                    // (1) shold be the first data which has name?\n                    // (2) themeRiver, firstDataIndex is array, and first line is unnecessary.\n                    var firstLine = valueLabel;\n                    singleDefaultHTML.push(\n                        (firstLine ? formatUtil.encodeHTML(firstLine) + '<br />' : '')\n                        + seriesDefaultHTML.join('<br />')\n                    );\n                });\n            }, this);\n\n            // In most case, the second axis is shown upper than the first one.\n            singleDefaultHTML.reverse();\n            singleDefaultHTML = singleDefaultHTML.join('<br /><br />');\n\n            var positionExpr = e.position;\n            this._showOrMove(singleTooltipModel, function () {\n                if (this._updateContentNotChangedOnAxis(dataByCoordSys)) {\n                    this._updatePosition(\n                        singleTooltipModel,\n                        positionExpr,\n                        point[0], point[1],\n                        this._tooltipContent,\n                        singleParamsList\n                    );\n                }\n                else {\n                    this._showTooltipContent(\n                        singleTooltipModel, singleDefaultHTML, singleParamsList, Math.random(),\n                        point[0], point[1], positionExpr\n                    );\n                }\n            });\n\n            // Do not trigger events here, because this branch only be entered\n            // from dispatchAction.\n        },\n\n        _showSeriesItemTooltip: function (e, el, dispatchAction) {\n            var ecModel = this._ecModel;\n            // Use dataModel in element if possible\n            // Used when mouseover on a element like markPoint or edge\n            // In which case, the data is not main data in series.\n            var seriesIndex = el.seriesIndex;\n            var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n\n            // For example, graph link.\n            var dataModel = el.dataModel || seriesModel;\n            var dataIndex = el.dataIndex;\n            var dataType = el.dataType;\n            var data = dataModel.getData();\n\n            var tooltipModel = buildTooltipModel([\n                data.getItemModel(dataIndex),\n                dataModel,\n                seriesModel && (seriesModel.coordinateSystem || {}).model,\n                this._tooltipModel\n            ]);\n\n            var tooltipTrigger = tooltipModel.get('trigger');\n            if (tooltipTrigger != null && tooltipTrigger !== 'item') {\n                return;\n            }\n\n            var params = dataModel.getDataParams(dataIndex, dataType);\n            var defaultHtml = dataModel.formatTooltip(dataIndex, false, dataType);\n            var asyncTicket = 'item_' + dataModel.name + '_' + dataIndex;\n\n            this._showOrMove(tooltipModel, function () {\n                this._showTooltipContent(\n                    tooltipModel, defaultHtml, params, asyncTicket,\n                    e.offsetX, e.offsetY, e.position, e.target\n                );\n            });\n\n            // FIXME\n            // duplicated showtip if manuallyShowTip is called from dispatchAction.\n            dispatchAction({\n                type: 'showTip',\n                dataIndexInside: dataIndex,\n                dataIndex: data.getRawIndex(dataIndex),\n                seriesIndex: seriesIndex,\n                from: this.uid\n            });\n        },\n\n        _showComponentItemTooltip: function (e, el, dispatchAction) {\n            var tooltipOpt = el.tooltip;\n            if (typeof tooltipOpt === 'string') {\n                var content = tooltipOpt;\n                tooltipOpt = {\n                    content: content,\n                    // Fixed formatter\n                    formatter: content\n                };\n            }\n            var subTooltipModel = new Model(tooltipOpt, this._tooltipModel, this._ecModel);\n            var defaultHtml = subTooltipModel.get('content');\n            var asyncTicket = Math.random();\n\n            // Do not check whether `trigger` is 'none' here, because `trigger`\n            // only works on cooridinate system. In fact, we have not found case\n            // that requires setting `trigger` nothing on component yet.\n\n            this._showOrMove(subTooltipModel, function () {\n                this._showTooltipContent(\n                    subTooltipModel, defaultHtml, subTooltipModel.get('formatterParams') || {},\n                    asyncTicket, e.offsetX, e.offsetY, e.position, el\n                );\n            });\n\n            // If not dispatch showTip, tip may be hide triggered by axis.\n            dispatchAction({\n                type: 'showTip',\n                from: this.uid\n            });\n        },\n\n        _showTooltipContent: function (\n            tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, el\n        ) {\n            // Reset ticket\n            this._ticket = '';\n\n            if (!tooltipModel.get('showContent') || !tooltipModel.get('show')) {\n                return;\n            }\n\n            var tooltipContent = this._tooltipContent;\n\n            var formatter = tooltipModel.get('formatter');\n            positionExpr = positionExpr || tooltipModel.get('position');\n            var html = defaultHtml;\n\n            if (formatter && typeof formatter === 'string') {\n                html = formatUtil.formatTpl(formatter, params, true);\n            }\n            else if (typeof formatter === 'function') {\n                var callback = bind(function (cbTicket, html) {\n                    if (cbTicket === this._ticket) {\n                        tooltipContent.setContent(html);\n                        this._updatePosition(\n                            tooltipModel, positionExpr, x, y, tooltipContent, params, el\n                        );\n                    }\n                }, this);\n                this._ticket = asyncTicket;\n                html = formatter(params, asyncTicket, callback);\n            }\n\n            tooltipContent.setContent(html);\n            tooltipContent.show(tooltipModel);\n\n            this._updatePosition(\n                tooltipModel, positionExpr, x, y, tooltipContent, params, el\n            );\n        },\n\n        /**\n         * @param  {string|Function|Array.<number>} positionExpr\n         * @param  {number} x Mouse x\n         * @param  {number} y Mouse y\n         * @param  {boolean} confine Whether confine tooltip content in view rect.\n         * @param  {Object|<Array.<Object>} params\n         * @param  {module:zrender/Element} el target element\n         * @param  {module:echarts/ExtensionAPI} api\n         * @return {Array.<number>}\n         */\n        _updatePosition: function (tooltipModel, positionExpr, x, y, content, params, el) {\n            var viewWidth = this._api.getWidth();\n            var viewHeight = this._api.getHeight();\n            positionExpr = positionExpr || tooltipModel.get('position');\n\n            var contentSize = content.getSize();\n            var align = tooltipModel.get('align');\n            var vAlign = tooltipModel.get('verticalAlign');\n            var rect = el && el.getBoundingRect().clone();\n            el && rect.applyTransform(el.transform);\n\n            if (typeof positionExpr === 'function') {\n                // Callback of position can be an array or a string specify the position\n                positionExpr = positionExpr([x, y], params, content.el, rect, {\n                    viewSize: [viewWidth, viewHeight],\n                    contentSize: contentSize.slice()\n                });\n            }\n\n            if (zrUtil.isArray(positionExpr)) {\n                x = parsePercent(positionExpr[0], viewWidth);\n                y = parsePercent(positionExpr[1], viewHeight);\n            }\n            else if (zrUtil.isObject(positionExpr)) {\n                positionExpr.width = contentSize[0];\n                positionExpr.height = contentSize[1];\n                var layoutRect = layoutUtil.getLayoutRect(\n                    positionExpr, {width: viewWidth, height: viewHeight}\n                );\n                x = layoutRect.x;\n                y = layoutRect.y;\n                align = null;\n                // When positionExpr is left/top/right/bottom,\n                // align and verticalAlign will not work.\n                vAlign = null;\n            }\n            // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n            else if (typeof positionExpr === 'string' && el) {\n                var pos = calcTooltipPosition(\n                    positionExpr, rect, contentSize\n                );\n                x = pos[0];\n                y = pos[1];\n            }\n            else {\n                var pos = refixTooltipPosition(\n                    x, y, content.el, viewWidth, viewHeight, align ? null : 20, vAlign ? null : 20\n                );\n                x = pos[0];\n                y = pos[1];\n            }\n\n            align && (x -= isCenterAlign(align) ? contentSize[0] / 2 : align === 'right' ? contentSize[0] : 0);\n            vAlign && (y -= isCenterAlign(vAlign) ? contentSize[1] / 2 : vAlign === 'bottom' ? contentSize[1] : 0);\n\n            if (tooltipModel.get('confine')) {\n                var pos = confineTooltipPosition(\n                    x, y, content.el, viewWidth, viewHeight\n                );\n                x = pos[0];\n                y = pos[1];\n            }\n\n            content.moveTo(x, y);\n        },\n\n        // FIXME\n        // Should we remove this but leave this to user?\n        _updateContentNotChangedOnAxis: function (dataByCoordSys) {\n            var lastCoordSys = this._lastDataByCoordSys;\n            var contentNotChanged = !!lastCoordSys\n                && lastCoordSys.length === dataByCoordSys.length;\n\n            each(lastCoordSys, function (lastItemCoordSys, indexCoordSys) {\n                var lastDataByAxis = lastItemCoordSys.dataByAxis || {};\n                var thisItemCoordSys = dataByCoordSys[indexCoordSys] || {};\n                var thisDataByAxis = thisItemCoordSys.dataByAxis || [];\n                contentNotChanged &= lastDataByAxis.length === thisDataByAxis.length;\n\n                each(lastDataByAxis, function (lastItem, indexAxis) {\n                    var thisItem = thisDataByAxis[indexAxis] || {};\n                    var lastIndices = lastItem.seriesDataIndices || [];\n                    var newIndices = thisItem.seriesDataIndices || [];\n\n                    contentNotChanged &=\n                        lastItem.value === thisItem.value\n                        && lastItem.axisType === thisItem.axisType\n                        && lastItem.axisId === thisItem.axisId\n                        && lastIndices.length === newIndices.length;\n\n                    each(lastIndices, function (lastIdxItem, j) {\n                        var newIdxItem = newIndices[j];\n                        contentNotChanged &=\n                            lastIdxItem.seriesIndex === newIdxItem.seriesIndex\n                            && lastIdxItem.dataIndex === newIdxItem.dataIndex;\n                    });\n                });\n            });\n\n            this._lastDataByCoordSys = dataByCoordSys;\n\n            return !!contentNotChanged;\n        },\n\n        _hide: function (dispatchAction) {\n            // Do not directly hideLater here, because this behavior may be prevented\n            // in dispatchAction when showTip is dispatched.\n\n            // FIXME\n            // duplicated hideTip if manuallyHideTip is called from dispatchAction.\n            this._lastDataByCoordSys = null;\n            dispatchAction({\n                type: 'hideTip',\n                from: this.uid\n            });\n        },\n\n        dispose: function (ecModel, api) {\n            if (env.node) {\n                return;\n            }\n            this._tooltipContent.hide();\n            globalListener.unregister('itemTooltip', api);\n        }\n    });\n\n\n    /**\n     * @param {Array.<Object|module:echarts/model/Model>} modelCascade\n     * From top to bottom. (the last one should be globalTooltipModel);\n     */\n    function buildTooltipModel(modelCascade) {\n        var resultModel = modelCascade.pop();\n        while (modelCascade.length) {\n            var tooltipOpt = modelCascade.pop();\n            if (tooltipOpt) {\n                if (tooltipOpt instanceof Model) {\n                    tooltipOpt = tooltipOpt.get('tooltip', true);\n                }\n                // In each data item tooltip can be simply write:\n                // {\n                //  value: 10,\n                //  tooltip: 'Something you need to know'\n                // }\n                if (typeof tooltipOpt === 'string') {\n                    tooltipOpt = {formatter: tooltipOpt};\n                }\n                resultModel = new Model(tooltipOpt, resultModel, resultModel.ecModel);\n            }\n        }\n        return resultModel;\n    }\n\n    function makeDispatchAction(payload, api) {\n        return payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n    }\n\n    function refixTooltipPosition(x, y, el, viewWidth, viewHeight, gapH, gapV) {\n        var width = el.clientWidth;\n        var height = el.clientHeight;\n\n        if (gapH != null) {\n            if (x + width + gapH > viewWidth) {\n                x -= width + gapH;\n            }\n            else {\n                x += gapH;\n            }\n        }\n        if (gapV != null) {\n            if (y + height + gapV > viewHeight) {\n                y -= height + gapV;\n            }\n            else {\n                y += gapV;\n            }\n        }\n        return [x, y];\n    }\n\n    function confineTooltipPosition(x, y, el, viewWidth, viewHeight) {\n        var width = el.clientWidth;\n        var height = el.clientHeight;\n\n        x = Math.min(x + width, viewWidth) - width;\n        y = Math.min(y + height, viewHeight) - height;\n        x = Math.max(x, 0);\n        y = Math.max(y, 0);\n\n        return [x, y];\n    }\n\n    function calcTooltipPosition(position, rect, contentSize) {\n        var domWidth = contentSize[0];\n        var domHeight = contentSize[1];\n        var gap = 5;\n        var x = 0;\n        var y = 0;\n        var rectWidth = rect.width;\n        var rectHeight = rect.height;\n        switch (position) {\n            case 'inside':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n                break;\n            case 'top':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y - domHeight - gap;\n                break;\n            case 'bottom':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y + rectHeight + gap;\n                break;\n            case 'left':\n                x = rect.x - domWidth - gap;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n                break;\n            case 'right':\n                x = rect.x + rectWidth + gap;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n        }\n        return [x, y];\n    }\n\n    function isCenterAlign(align) {\n        return align === 'center' || align === 'middle';\n    }\n\n\n\n/***/ }),\n/* 324 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(158);\n\n    var defaultOption = {\n        show: true,\n        zlevel: 0,                  // 一级层叠\n        z: 0,                       // 二级层叠\n        // 反向坐标轴\n        inverse: false,\n\n        // 坐标轴名字，默认为空\n        name: '',\n        // 坐标轴名字位置，支持'start' | 'middle' | 'end'\n        nameLocation: 'end',\n        // 坐标轴名字旋转，degree。\n        nameRotate: null, // Adapt to axis rotate, when nameLocation is 'middle'.\n        nameTruncate: {\n            maxWidth: null,\n            ellipsis: '...',\n            placeholder: '.'\n        },\n        // 坐标轴文字样式，默认取全局样式\n        nameTextStyle: {},\n        // 文字与轴线距离\n        nameGap: 15,\n\n        silent: false, // Default false to support tooltip.\n        triggerEvent: false, // Default false to avoid legacy user event listener fail.\n\n        tooltip: {\n            show: false\n        },\n\n        axisPointer: {},\n\n        // 坐标轴线\n        axisLine: {\n            // 默认显示，属性show控制显示与否\n            show: true,\n            onZero: true,\n            // 属性lineStyle控制线条样式\n            lineStyle: {\n                color: '#333',\n                width: 1,\n                type: 'solid'\n            }\n        },\n        // 坐标轴小标记\n        axisTick: {\n            // 属性show控制显示与否，默认显示\n            show: true,\n            // 控制小标记是否在grid里\n            inside: false,\n            // 属性length控制线长\n            length: 5,\n            // 属性lineStyle控制线条样式\n            lineStyle: {\n                width: 1\n            }\n        },\n        // 坐标轴文本标签，详见axis.axisLabel\n        axisLabel: {\n            show: true,\n            // 控制文本标签是否在grid里\n            inside: false,\n            rotate: 0,\n            showMinLabel: null, // true | false | null (auto)\n            showMaxLabel: null, // true | false | null (auto)\n            margin: 8,\n            // formatter: null,\n            // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n            textStyle: {\n                fontSize: 12\n            }\n        },\n        // 分隔线\n        splitLine: {\n            // 默认显示，属性show控制显示与否\n            show: true,\n            // 属性lineStyle（详见lineStyle）控制线条样式\n            lineStyle: {\n                color: ['#ccc'],\n                width: 1,\n                type: 'solid'\n            }\n        },\n        // 分隔区域\n        splitArea: {\n            // 默认不显示，属性show控制显示与否\n            show: false,\n            // 属性areaStyle（详见areaStyle）控制区域样式\n            areaStyle: {\n                color: ['rgba(250,250,250,0.3)','rgba(200,200,200,0.3)']\n            }\n        }\n    };\n\n    var categoryAxis = zrUtil.merge({\n        // 类目起始和结束两端空白策略\n        boundaryGap: true,\n        // splitArea: {\n            // show: false\n        // },\n        splitLine: {\n            show: false\n        },\n        // 坐标轴小标记\n        axisTick: {\n            // If tick is align with label when boundaryGap is true\n            alignWithLabel: false,\n            interval: 'auto'\n        },\n        // 坐标轴文本标签，详见axis.axisLabel\n        axisLabel: {\n            interval: 'auto'\n        }\n    }, defaultOption);\n\n    var valueAxis = zrUtil.merge({\n        // 数值起始和结束两端空白策略\n        boundaryGap: [0, 0],\n        // 最小值, 设置成 'dataMin' 则从数据中计算最小值\n        // min: null,\n        // 最大值，设置成 'dataMax' 则从数据中计算最大值\n        // max: null,\n        // Readonly prop, specifies start value of the range when using data zoom.\n        // rangeStart: null\n        // Readonly prop, specifies end value of the range when using data zoom.\n        // rangeEnd: null\n        // 脱离0值比例，放大聚焦到最终_min，_max区间\n        // scale: false,\n        // 分割段数，默认为5\n        splitNumber: 5\n        // Minimum interval\n        // minInterval: null\n    }, defaultOption);\n\n    // FIXME\n    var timeAxis = zrUtil.defaults({\n        scale: true,\n        min: 'dataMin',\n        max: 'dataMax'\n    }, valueAxis);\n    var logAxis = zrUtil.defaults({\n        logBase: 10\n    }, valueAxis);\n    logAxis.scale = true;\n\n    module.exports = {\n        categoryAxis: categoryAxis,\n        valueAxis: valueAxis,\n        timeAxis: timeAxis,\n        logAxis: logAxis\n    };\n\n\n/***/ }),\n/* 325 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var axisDefault = __webpack_require__(324);\n    var zrUtil = __webpack_require__(158);\n    var ComponentModel = __webpack_require__(170);\n    var layout = __webpack_require__(171);\n\n    // FIXME axisType is fixed ?\n    var AXIS_TYPES = ['value', 'category', 'time', 'log'];\n\n    /**\n     * Generate sub axis model class\n     * @param {string} axisName 'x' 'y' 'radius' 'angle' 'parallel'\n     * @param {module:echarts/model/Component} BaseAxisModelClass\n     * @param {Function} axisTypeDefaulter\n     * @param {Object} [extraDefaultOption]\n     */\n    module.exports = function (axisName, BaseAxisModelClass, axisTypeDefaulter, extraDefaultOption) {\n\n        zrUtil.each(AXIS_TYPES, function (axisType) {\n\n            BaseAxisModelClass.extend({\n\n                type: axisName + 'Axis.' + axisType,\n\n                mergeDefaultAndTheme: function (option, ecModel) {\n                    var layoutMode = this.layoutMode;\n                    var inputPositionParams = layoutMode\n                        ? layout.getLayoutParams(option) : {};\n\n                    var themeModel = ecModel.getTheme();\n                    zrUtil.merge(option, themeModel.get(axisType + 'Axis'));\n                    zrUtil.merge(option, this.getDefaultOption());\n\n                    option.type = axisTypeDefaulter(axisName, option);\n\n                    if (layoutMode) {\n                        layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n                    }\n                },\n\n                defaultOption: zrUtil.mergeAll(\n                    [\n                        {},\n                        axisDefault[axisType + 'Axis'],\n                        extraDefaultOption\n                    ],\n                    true\n                )\n            });\n        });\n\n        ComponentModel.registerSubTypeDefaulter(\n            axisName + 'Axis',\n            zrUtil.curry(axisTypeDefaulter, axisName)\n        );\n    };\n\n\n/***/ }),\n/* 326 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(158);\n    var Axis = __webpack_require__(211);\n    var axisLabelInterval = __webpack_require__(330);\n\n    /**\n     * Extend axis 2d\n     * @constructor module:echarts/coord/cartesian/Axis2D\n     * @extends {module:echarts/coord/cartesian/Axis}\n     * @param {string} dim\n     * @param {*} scale\n     * @param {Array.<number>} coordExtent\n     * @param {string} axisType\n     * @param {string} position\n     */\n    var Axis2D = function (dim, scale, coordExtent, axisType, position) {\n        Axis.call(this, dim, scale, coordExtent);\n        /**\n         * Axis type\n         *  - 'category'\n         *  - 'value'\n         *  - 'time'\n         *  - 'log'\n         * @type {string}\n         */\n        this.type = axisType || 'value';\n\n        /**\n         * Axis position\n         *  - 'top'\n         *  - 'bottom'\n         *  - 'left'\n         *  - 'right'\n         */\n        this.position = position || 'bottom';\n    };\n\n    Axis2D.prototype = {\n\n        constructor: Axis2D,\n\n        /**\n         * Index of axis, can be used as key\n         */\n        index: 0,\n        /**\n         * If axis is on the zero position of the other axis\n         * @type {boolean}\n         */\n        onZero: false,\n\n        /**\n         * Axis model\n         * @param {module:echarts/coord/cartesian/AxisModel}\n         */\n        model: null,\n\n        isHorizontal: function () {\n            var position = this.position;\n            return position === 'top' || position === 'bottom';\n        },\n\n        /**\n         * Each item cooresponds to this.getExtent(), which\n         * means globalExtent[0] may greater than globalExtent[1],\n         * unless `asc` is input.\n         *\n         * @param {boolean} [asc]\n         * @return {Array.<number>}\n         */\n        getGlobalExtent: function (asc) {\n            var ret = this.getExtent();\n            ret[0] = this.toGlobalCoord(ret[0]);\n            ret[1] = this.toGlobalCoord(ret[1]);\n            asc && ret[0] > ret[1] && ret.reverse();\n            return ret;\n        },\n\n        getOtherAxis: function () {\n            this.grid.getOtherAxis();\n        },\n\n        /**\n         * @return {number}\n         */\n        getLabelInterval: function () {\n            var labelInterval = this._labelInterval;\n            if (!labelInterval) {\n                labelInterval = this._labelInterval = axisLabelInterval(this);\n            }\n            return labelInterval;\n        },\n\n        /**\n         * If label is ignored.\n         * Automatically used when axis is category and label can not be all shown\n         * @param  {number}  idx\n         * @return {boolean}\n         */\n        isLabelIgnored: function (idx) {\n            if (this.type === 'category') {\n                var labelInterval = this.getLabelInterval();\n                return ((typeof labelInterval === 'function')\n                    && !labelInterval(idx, this.scale.getLabel(idx)))\n                    || idx % (labelInterval + 1);\n            }\n        },\n\n        /**\n         * @override\n         */\n        pointToData: function (point, clamp) {\n            return this.coordToData(this.toLocalCoord(point[this.dim === 'x' ? 0 : 1]), clamp);\n        },\n\n        /**\n         * Transform global coord to local coord,\n         * i.e. var localCoord = axis.toLocalCoord(80);\n         * designate by module:echarts/coord/cartesian/Grid.\n         * @type {Function}\n         */\n        toLocalCoord: null,\n\n        /**\n         * Transform global coord to local coord,\n         * i.e. var globalCoord = axis.toLocalCoord(40);\n         * designate by module:echarts/coord/cartesian/Grid.\n         * @type {Function}\n         */\n        toGlobalCoord: null\n\n    };\n    zrUtil.inherits(Axis2D, Axis);\n\n    module.exports = Axis2D;\n\n\n/***/ }),\n/* 327 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Cartesian coordinate system\n * @module  echarts/coord/Cartesian\n *\n */\n\n\n    var zrUtil = __webpack_require__(158);\n\n    function dimAxisMapper(dim) {\n        return this._axes[dim];\n    }\n\n    /**\n     * @alias module:echarts/coord/Cartesian\n     * @constructor\n     */\n    var Cartesian = function (name) {\n        this._axes = {};\n\n        this._dimList = [];\n\n        /**\n         * @type {string}\n         */\n        this.name = name || '';\n    };\n\n    Cartesian.prototype = {\n\n        constructor: Cartesian,\n\n        type: 'cartesian',\n\n        /**\n         * Get axis\n         * @param  {number|string} dim\n         * @return {module:echarts/coord/Cartesian~Axis}\n         */\n        getAxis: function (dim) {\n            return this._axes[dim];\n        },\n\n        /**\n         * Get axes list\n         * @return {Array.<module:echarts/coord/Cartesian~Axis>}\n         */\n        getAxes: function () {\n            return zrUtil.map(this._dimList, dimAxisMapper, this);\n        },\n\n        /**\n         * Get axes list by given scale type\n         */\n        getAxesByScale: function (scaleType) {\n            scaleType = scaleType.toLowerCase();\n            return zrUtil.filter(\n                this.getAxes(),\n                function (axis) {\n                    return axis.scale.type === scaleType;\n                }\n            );\n        },\n\n        /**\n         * Add axis\n         * @param {module:echarts/coord/Cartesian.Axis}\n         */\n        addAxis: function (axis) {\n            var dim = axis.dim;\n\n            this._axes[dim] = axis;\n\n            this._dimList.push(dim);\n        },\n\n        /**\n         * Convert data to coord in nd space\n         * @param {Array.<number>|Object.<string, number>} val\n         * @return {Array.<number>|Object.<string, number>}\n         */\n        dataToCoord: function (val) {\n            return this._dataCoordConvert(val, 'dataToCoord');\n        },\n\n        /**\n         * Convert coord in nd space to data\n         * @param  {Array.<number>|Object.<string, number>} val\n         * @return {Array.<number>|Object.<string, number>}\n         */\n        coordToData: function (val) {\n            return this._dataCoordConvert(val, 'coordToData');\n        },\n\n        _dataCoordConvert: function (input, method) {\n            var dimList = this._dimList;\n\n            var output = input instanceof Array ? [] : {};\n\n            for (var i = 0; i < dimList.length; i++) {\n                var dim = dimList[i];\n                var axis = this._axes[dim];\n\n                output[dim] = axis[method](input[dim]);\n            }\n\n            return output;\n        }\n    };\n\n    module.exports = Cartesian;\n\n\n/***/ }),\n/* 328 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(158);\n    var Cartesian = __webpack_require__(327);\n\n    function Cartesian2D(name) {\n\n        Cartesian.call(this, name);\n    }\n\n    Cartesian2D.prototype = {\n\n        constructor: Cartesian2D,\n\n        type: 'cartesian2d',\n\n        /**\n         * @type {Array.<string>}\n         * @readOnly\n         */\n        dimensions: ['x', 'y'],\n\n        /**\n         * Base axis will be used on stacking.\n         *\n         * @return {module:echarts/coord/cartesian/Axis2D}\n         */\n        getBaseAxis: function () {\n            return this.getAxesByScale('ordinal')[0]\n                || this.getAxesByScale('time')[0]\n                || this.getAxis('x');\n        },\n\n        /**\n         * If contain point\n         * @param {Array.<number>} point\n         * @return {boolean}\n         */\n        containPoint: function (point) {\n            var axisX = this.getAxis('x');\n            var axisY = this.getAxis('y');\n            return axisX.contain(axisX.toLocalCoord(point[0]))\n                && axisY.contain(axisY.toLocalCoord(point[1]));\n        },\n\n        /**\n         * If contain data\n         * @param {Array.<number>} data\n         * @return {boolean}\n         */\n        containData: function (data) {\n            return this.getAxis('x').containData(data[0])\n                && this.getAxis('y').containData(data[1]);\n        },\n\n        /**\n         * Convert series data to an array of points\n         * @param {module:echarts/data/List} data\n         * @param {boolean} stack\n         * @return {Array}\n         *  Return array of points. For example:\n         *  `[[10, 10], [20, 20], [30, 30]]`\n         */\n        dataToPoints: function (data, stack) {\n            return data.mapArray(['x', 'y'], function (x, y) {\n                return this.dataToPoint([x, y]);\n            }, stack, this);\n        },\n\n        /**\n         * @param {Array.<number>} data\n         * @param {boolean} [clamp=false]\n         * @return {Array.<number>}\n         */\n        dataToPoint: function (data, clamp) {\n            var xAxis = this.getAxis('x');\n            var yAxis = this.getAxis('y');\n            return [\n                xAxis.toGlobalCoord(xAxis.dataToCoord(data[0], clamp)),\n                yAxis.toGlobalCoord(yAxis.dataToCoord(data[1], clamp))\n            ];\n        },\n\n        /**\n         * @param {Array.<number>} point\n         * @param {boolean} [clamp=false]\n         * @return {Array.<number>}\n         */\n        pointToData: function (point, clamp) {\n            var xAxis = this.getAxis('x');\n            var yAxis = this.getAxis('y');\n            return [\n                xAxis.coordToData(xAxis.toLocalCoord(point[0]), clamp),\n                yAxis.coordToData(yAxis.toLocalCoord(point[1]), clamp)\n            ];\n        },\n\n        /**\n         * Get other axis\n         * @param {module:echarts/coord/cartesian/Axis2D} axis\n         */\n        getOtherAxis: function (axis) {\n            return this.getAxis(axis.dim === 'x' ? 'y' : 'x');\n        }\n    };\n\n    zrUtil.inherits(Cartesian2D, Cartesian);\n\n    module.exports = Cartesian2D;\n\n\n/***/ }),\n/* 329 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// Grid 是在有直角坐标系的时候必须要存在的\n// 所以这里也要被 Cartesian2D 依赖\n\n\n    __webpack_require__(213);\n\n    var ComponentModel = __webpack_require__(170);\n\n    module.exports = ComponentModel.extend({\n\n        type: 'grid',\n\n        dependencies: ['xAxis', 'yAxis'],\n\n        layoutMode: 'box',\n\n        /**\n         * @type {module:echarts/coord/cartesian/Grid}\n         */\n        coordinateSystem: null,\n\n        defaultOption: {\n            show: false,\n            zlevel: 0,\n            z: 0,\n            left: '10%',\n            top: 60,\n            right: '10%',\n            bottom: 60,\n            // If grid size contain label\n            containLabel: false,\n            // width: {totalWidth} - left - right,\n            // height: {totalHeight} - top - bottom,\n            backgroundColor: 'rgba(0,0,0,0)',\n            borderWidth: 1,\n            borderColor: '#ccc'\n        }\n    });\n\n\n/***/ }),\n/* 330 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Helper function for axisLabelInterval calculation\n */\n\n\n\n    var zrUtil = __webpack_require__(158);\n    var axisHelper = __webpack_require__(173);\n\n    module.exports = function (axis) {\n        var axisModel = axis.model;\n        var labelModel = axisModel.getModel('axisLabel');\n        var labelInterval = labelModel.get('interval');\n        if (!(axis.type === 'category' && labelInterval === 'auto')) {\n            return labelInterval === 'auto' ? 0 : labelInterval;\n        }\n\n        return axisHelper.getAxisLabelInterval(\n            zrUtil.map(axis.scale.getTicks(), axis.dataToCoord, axis),\n            axisModel.getFormattedLabels(),\n            labelModel.getModel('textStyle').getFont(),\n            axis.isHorizontal()\n        );\n    };\n\n\n/***/ }),\n/* 331 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    function defaultKeyGetter(item) {\n        return item;\n    }\n\n    function DataDiffer(oldArr, newArr, oldKeyGetter, newKeyGetter) {\n        this._old = oldArr;\n        this._new = newArr;\n\n        this._oldKeyGetter = oldKeyGetter || defaultKeyGetter;\n        this._newKeyGetter = newKeyGetter || defaultKeyGetter;\n    }\n\n    DataDiffer.prototype = {\n\n        constructor: DataDiffer,\n\n        /**\n         * Callback function when add a data\n         */\n        add: function (func) {\n            this._add = func;\n            return this;\n        },\n\n        /**\n         * Callback function when update a data\n         */\n        update: function (func) {\n            this._update = func;\n            return this;\n        },\n\n        /**\n         * Callback function when remove a data\n         */\n        remove: function (func) {\n            this._remove = func;\n            return this;\n        },\n\n        execute: function () {\n            var oldArr = this._old;\n            var newArr = this._new;\n            var oldKeyGetter = this._oldKeyGetter;\n            var newKeyGetter = this._newKeyGetter;\n\n            var oldDataIndexMap = {};\n            var newDataIndexMap = {};\n            var oldDataKeyArr = [];\n            var newDataKeyArr = [];\n            var i;\n\n            initIndexMap(oldArr, oldDataIndexMap, oldDataKeyArr, oldKeyGetter);\n            initIndexMap(newArr, newDataIndexMap, newDataKeyArr, newKeyGetter);\n\n            // Travel by inverted order to make sure order consistency\n            // when duplicate keys exists (consider newDataIndex.pop() below).\n            // For performance consideration, these code below do not look neat.\n            for (i = 0; i < oldArr.length; i++) {\n                var key = oldDataKeyArr[i];\n                var idx = newDataIndexMap[key];\n\n                // idx can never be empty array here. see 'set null' logic below.\n                if (idx != null) {\n                    // Consider there is duplicate key (for example, use dataItem.name as key).\n                    // We should make sure every item in newArr and oldArr can be visited.\n                    var len = idx.length;\n                    if (len) {\n                        len === 1 && (newDataIndexMap[key] = null);\n                        idx = idx.unshift();\n                    }\n                    else {\n                        newDataIndexMap[key] = null;\n                    }\n                    this._update && this._update(idx, i);\n                }\n                else {\n                    this._remove && this._remove(i);\n                }\n            }\n\n            for (var i = 0; i < newDataKeyArr.length; i++) {\n                var key = newDataKeyArr[i];\n                if (newDataIndexMap.hasOwnProperty(key)) {\n                    var idx = newDataIndexMap[key];\n                    if (idx == null) {\n                        continue;\n                    }\n                    // idx can never be empty array here. see 'set null' logic above.\n                    if (!idx.length) {\n                        this._add && this._add(idx);\n                    }\n                    else {\n                        for (var j = 0, len = idx.length; j < len; j++) {\n                            this._add && this._add(idx[j]);\n                        }\n                    }\n                }\n            }\n        }\n    };\n\n    function initIndexMap(arr, map, keyArr, keyGetter) {\n        for (var i = 0; i < arr.length; i++) {\n            var key = keyGetter(arr[i], i);\n            var existence = map[key];\n            if (existence == null) {\n                keyArr.push(key);\n                map[key] = i;\n            }\n            else {\n                if (!existence.length) {\n                    map[key] = existence = [existence];\n                }\n                existence.push(i);\n            }\n        }\n    }\n\n    module.exports = DataDiffer;\n\n\n/***/ }),\n/* 332 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var createListFromArray = __webpack_require__(203);\n    var symbolUtil = __webpack_require__(218);\n    var axisHelper = __webpack_require__(173);\n    var axisModelCommonMixin = __webpack_require__(212);\n    var Model = __webpack_require__(165);\n    var util = __webpack_require__(158);\n\n    module.exports = {\n        /**\n         * Create a muti dimension List structure from seriesModel.\n         * @param  {module:echarts/model/Model} seriesModel\n         * @return {module:echarts/data/List} list\n         */\n        createList: function (seriesModel) {\n            var data = seriesModel.get('data');\n            return createListFromArray(data, seriesModel, seriesModel.ecModel);\n        },\n\n        /**\n         * Complete the dimensions array guessed from the data structure.\n         * @param  {Array.<string>} dimensions Necessary dimensions, like ['x', 'y']\n         * @param  {Array} data Data list. [[1, 2, 3], [2, 3, 4]]\n         * @param  {Object} [opt]\n         * @param  {Array.<string>} [opt.defaultNames] Default names to fill not necessary dimensions, like ['value']\n         * @param  {string} [opt.extraPrefix] Prefix of name when filling the left dimensions.\n         * @param  {number} [opt.dimCount] If not specified, guess by the first data item.\n         * @return {Array.<string>}\n         */\n        completeDimensions: __webpack_require__(192),\n\n        /**\n         * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n         * @see http://echarts.baidu.com/option.html#series-scatter.symbol\n         * @param {string} symbolDesc\n         * @param {number} x\n         * @param {number} y\n         * @param {number} w\n         * @param {number} h\n         * @param {string} color\n         */\n        createSymbol: symbolUtil.createSymbol,\n\n        /**\n         * Create scale\n         * @param {Array.<number>} dataExtent\n         * @param {Object|module:echarts/Model} option\n         */\n        createScale: function (dataExtent, option) {\n            var axisModel = option;\n            if (!(option instanceof Model)) {\n                axisModel = new Model(option);\n                util.mixin(axisModel, axisModelCommonMixin);\n            }\n\n            var scale = axisHelper.createScaleByModel(axisModel);\n            scale.setExtent(dataExtent[0], dataExtent[1]);\n\n            axisHelper.niceScaleExtent(scale, axisModel);\n            return scale;\n        },\n\n        /**\n         * Mixin common methods to axis model,\n         *\n         * Inlcude methods\n         * `getFormattedLabels() => Array.<string>`\n         * `getCategories() => Array.<string>`\n         * `getMin(origin: boolean) => number`\n         * `getMax(origin: boolean) => number`\n         * `getNeedCrossZero() => boolean`\n         * `setRange(start: number, end: number)`\n         * `resetRange()`\n         */\n        mixinAxisModelCommonMethods: function (Model) {\n            util.mixin(Model, axisModelCommonMixin);\n        }\n    };\n\n\n/***/ }),\n/* 333 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(158);\n    var numberUtil = __webpack_require__(161);\n    var parsePercent = numberUtil.parsePercent;\n\n    function getSeriesStackId(seriesModel) {\n        return seriesModel.get('stack') || '__ec_stack_' + seriesModel.seriesIndex;\n    }\n\n    function getAxisKey(axis) {\n        return axis.dim + axis.index;\n    }\n\n    function calBarWidthAndOffset(barSeries, api) {\n        // Columns info on each category axis. Key is cartesian name\n        var columnsMap = {};\n\n        zrUtil.each(barSeries, function (seriesModel, idx) {\n            var data = seriesModel.getData();\n            var cartesian = seriesModel.coordinateSystem;\n\n            var baseAxis = cartesian.getBaseAxis();\n            var axisExtent = baseAxis.getExtent();\n            var bandWidth = baseAxis.type === 'category'\n                ? baseAxis.getBandWidth()\n                : (Math.abs(axisExtent[1] - axisExtent[0]) / data.count());\n\n            var columnsOnAxis = columnsMap[getAxisKey(baseAxis)] || {\n                bandWidth: bandWidth,\n                remainedWidth: bandWidth,\n                autoWidthCount: 0,\n                categoryGap: '20%',\n                gap: '30%',\n                stacks: {}\n            };\n            var stacks = columnsOnAxis.stacks;\n            columnsMap[getAxisKey(baseAxis)] = columnsOnAxis;\n\n            var stackId = getSeriesStackId(seriesModel);\n\n            if (!stacks[stackId]) {\n                columnsOnAxis.autoWidthCount++;\n            }\n            stacks[stackId] = stacks[stackId] || {\n                width: 0,\n                maxWidth: 0\n            };\n\n            var barWidth = parsePercent(\n                seriesModel.get('barWidth'), bandWidth\n            );\n            var barMaxWidth = parsePercent(\n                seriesModel.get('barMaxWidth'), bandWidth\n            );\n            var barGap = seriesModel.get('barGap');\n            var barCategoryGap = seriesModel.get('barCategoryGap');\n\n            // Caution: In a single coordinate system, these barGrid attributes\n            // will be shared by series. Consider that they have default values,\n            // only the attributes set on the last series will work.\n            // Do not change this fact unless there will be a break change.\n\n            // TODO\n            if (barWidth && !stacks[stackId].width) {\n                barWidth = Math.min(columnsOnAxis.remainedWidth, barWidth);\n                stacks[stackId].width = barWidth;\n                columnsOnAxis.remainedWidth -= barWidth;\n            }\n\n            barMaxWidth && (stacks[stackId].maxWidth = barMaxWidth);\n            (barGap != null) && (columnsOnAxis.gap = barGap);\n            (barCategoryGap != null) && (columnsOnAxis.categoryGap = barCategoryGap);\n        });\n\n        var result = {};\n\n        zrUtil.each(columnsMap, function (columnsOnAxis, coordSysName) {\n\n            result[coordSysName] = {};\n\n            var stacks = columnsOnAxis.stacks;\n            var bandWidth = columnsOnAxis.bandWidth;\n            var categoryGap = parsePercent(columnsOnAxis.categoryGap, bandWidth);\n            var barGapPercent = parsePercent(columnsOnAxis.gap, 1);\n\n            var remainedWidth = columnsOnAxis.remainedWidth;\n            var autoWidthCount = columnsOnAxis.autoWidthCount;\n            var autoWidth = (remainedWidth - categoryGap)\n                / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n            autoWidth = Math.max(autoWidth, 0);\n\n            // Find if any auto calculated bar exceeded maxBarWidth\n            zrUtil.each(stacks, function (column, stack) {\n                var maxWidth = column.maxWidth;\n                if (maxWidth && maxWidth < autoWidth) {\n                    maxWidth = Math.min(maxWidth, remainedWidth);\n                    if (column.width) {\n                        maxWidth = Math.min(maxWidth, column.width);\n                    }\n                    remainedWidth -= maxWidth;\n                    column.width = maxWidth;\n                    autoWidthCount--;\n                }\n            });\n\n            // Recalculate width again\n            autoWidth = (remainedWidth - categoryGap)\n                / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n            autoWidth = Math.max(autoWidth, 0);\n\n            var widthSum = 0;\n            var lastColumn;\n            zrUtil.each(stacks, function (column, idx) {\n                if (!column.width) {\n                    column.width = autoWidth;\n                }\n                lastColumn = column;\n                widthSum += column.width * (1 + barGapPercent);\n            });\n            if (lastColumn) {\n                widthSum -= lastColumn.width * barGapPercent;\n            }\n\n            var offset = -widthSum / 2;\n            zrUtil.each(stacks, function (column, stackId) {\n                result[coordSysName][stackId] = result[coordSysName][stackId] || {\n                    offset: offset,\n                    width: column.width\n                };\n\n                offset += column.width * (1 + barGapPercent);\n            });\n        });\n\n        return result;\n    }\n\n    /**\n     * @param {string} seriesType\n     * @param {module:echarts/model/Global} ecModel\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    function barLayoutGrid(seriesType, ecModel, api) {\n\n        var barWidthAndOffset = calBarWidthAndOffset(\n            zrUtil.filter(\n                ecModel.getSeriesByType(seriesType),\n                function (seriesModel) {\n                    return !ecModel.isSeriesFiltered(seriesModel)\n                        && seriesModel.coordinateSystem\n                        && seriesModel.coordinateSystem.type === 'cartesian2d';\n                }\n            )\n        );\n\n        var lastStackCoords = {};\n        var lastStackCoordsOrigin = {};\n\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n\n            var data = seriesModel.getData();\n            var cartesian = seriesModel.coordinateSystem;\n            var baseAxis = cartesian.getBaseAxis();\n\n            var stackId = getSeriesStackId(seriesModel);\n            var columnLayoutInfo = barWidthAndOffset[getAxisKey(baseAxis)][stackId];\n            var columnOffset = columnLayoutInfo.offset;\n            var columnWidth = columnLayoutInfo.width;\n            var valueAxis = cartesian.getOtherAxis(baseAxis);\n\n            var barMinHeight = seriesModel.get('barMinHeight') || 0;\n\n            var valueAxisStart = baseAxis.onZero\n                ? valueAxis.toGlobalCoord(valueAxis.dataToCoord(0))\n                : valueAxis.getGlobalExtent()[0];\n\n            var coords = cartesian.dataToPoints(data, true);\n            lastStackCoords[stackId] = lastStackCoords[stackId] || [];\n            lastStackCoordsOrigin[stackId] = lastStackCoordsOrigin[stackId] || []; // Fix #4243\n\n            data.setLayout({\n                offset: columnOffset,\n                size: columnWidth\n            });\n\n            data.each(valueAxis.dim, function (value, idx) {\n                if (isNaN(value)) {\n                    return;\n                }\n\n                if (!lastStackCoords[stackId][idx]) {\n                    lastStackCoords[stackId][idx] = {\n                        p: valueAxisStart, // Positive stack\n                        n: valueAxisStart  // Negative stack\n                    };\n                    lastStackCoordsOrigin[stackId][idx] = {\n                        p: valueAxisStart, // Positive stack\n                        n: valueAxisStart  // Negative stack\n                    };\n                }\n                var sign = value >= 0 ? 'p' : 'n';\n                var coord = coords[idx];\n                var lastCoord = lastStackCoords[stackId][idx][sign];\n                var lastCoordOrigin = lastStackCoordsOrigin[stackId][idx][sign];\n                var x;\n                var y;\n                var width;\n                var height;\n\n                if (valueAxis.isHorizontal()) {\n                    x = lastCoord;\n                    y = coord[1] + columnOffset;\n                    width = coord[0] - lastCoordOrigin;\n                    height = columnWidth;\n\n                    lastStackCoordsOrigin[stackId][idx][sign] += width;\n                    if (Math.abs(width) < barMinHeight) {\n                        width = (width < 0 ? -1 : 1) * barMinHeight;\n                    }\n                    lastStackCoords[stackId][idx][sign] += width;\n                }\n                else {\n                    x = coord[0] + columnOffset;\n                    y = lastCoord;\n                    width = columnWidth;\n                    height = coord[1] - lastCoordOrigin;\n\n                    lastStackCoordsOrigin[stackId][idx][sign] += height;\n                    if (Math.abs(height) < barMinHeight) {\n                        // Include zero to has a positive bar\n                        height = (height <= 0 ? -1 : 1) * barMinHeight;\n                    }\n                    lastStackCoords[stackId][idx][sign] += height;\n                }\n\n                data.setItemLayout(idx, {\n                    x: x,\n                    y: y,\n                    width: width,\n                    height: height\n                });\n            }, true);\n\n        }, this);\n    }\n\n    module.exports = barLayoutGrid;\n\n\n/***/ }),\n/* 334 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var graphic = __webpack_require__(160);\n    var zrUtil = __webpack_require__(158);\n    var PI = Math.PI;\n    /**\n     * @param {module:echarts/ExtensionAPI} api\n     * @param {Object} [opts]\n     * @param {string} [opts.text]\n     * @param {string} [opts.color]\n     * @param {string} [opts.textColor]\n     * @return {module:zrender/Element}\n     */\n    module.exports = function (api, opts) {\n        opts = opts || {};\n        zrUtil.defaults(opts, {\n            text: 'loading',\n            color: '#c23531',\n            textColor: '#000',\n            maskColor: 'rgba(255, 255, 255, 0.8)',\n            zlevel: 0\n        });\n        var mask = new graphic.Rect({\n            style: {\n                fill: opts.maskColor\n            },\n            zlevel: opts.zlevel,\n            z: 10000\n        });\n        var arc = new graphic.Arc({\n            shape: {\n                startAngle: -PI / 2,\n                endAngle: -PI / 2 + 0.1,\n                r: 10\n            },\n            style: {\n                stroke: opts.color,\n                lineCap: 'round',\n                lineWidth: 5\n            },\n            zlevel: opts.zlevel,\n            z: 10001\n        });\n        var labelRect = new graphic.Rect({\n            style: {\n                fill: 'none',\n                text: opts.text,\n                textPosition: 'right',\n                textDistance: 10,\n                textFill: opts.textColor\n            },\n            zlevel: opts.zlevel,\n            z: 10001\n        });\n\n        arc.animateShape(true)\n            .when(1000, {\n                endAngle: PI * 3 / 2\n            })\n            .start('circularInOut');\n        arc.animateShape(true)\n            .when(1000, {\n                startAngle: PI * 3 / 2\n            })\n            .delay(300)\n            .start('circularInOut');\n\n        var group = new graphic.Group();\n        group.add(arc);\n        group.add(labelRect);\n        group.add(mask);\n        // Inject resize\n        group.resize = function () {\n            var cx = api.getWidth() / 2;\n            var cy = api.getHeight() / 2;\n            arc.setShape({\n                cx: cx,\n                cy: cy\n            });\n            var r = arc.shape.r;\n            labelRect.setShape({\n                x: cx - r,\n                y: cy - r,\n                width: r * 2,\n                height: r * 2\n            });\n\n            mask.setShape({\n                x: 0,\n                y: 0,\n                width: api.getWidth(),\n                height: api.getHeight()\n            });\n        };\n        group.resize();\n        return group;\n    };\n\n\n/***/ }),\n/* 335 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * ECharts global model\n *\n * @module {echarts/model/Global}\n */\n\n\n\n    /**\n     * Caution: If the mechanism should be changed some day, these cases\n     * should be considered:\n     *\n     * (1) In `merge option` mode, if using the same option to call `setOption`\n     * many times, the result should be the same (try our best to ensure that).\n     * (2) In `merge option` mode, if a component has no id/name specified, it\n     * will be merged by index, and the result sequence of the components is\n     * consistent to the original sequence.\n     * (3) `reset` feature (in toolbox). Find detailed info in comments about\n     * `mergeOption` in module:echarts/model/OptionManager.\n     */\n\n    var zrUtil = __webpack_require__(158);\n    var modelUtil = __webpack_require__(162);\n    var Model = __webpack_require__(165);\n    var each = zrUtil.each;\n    var filter = zrUtil.filter;\n    var map = zrUtil.map;\n    var isArray = zrUtil.isArray;\n    var indexOf = zrUtil.indexOf;\n    var isObject = zrUtil.isObject;\n\n    var ComponentModel = __webpack_require__(170);\n\n    var globalDefault = __webpack_require__(337);\n\n    var OPTION_INNER_KEY = '\\0_ec_inner';\n\n    /**\n     * @alias module:echarts/model/Global\n     *\n     * @param {Object} option\n     * @param {module:echarts/model/Model} parentModel\n     * @param {Object} theme\n     */\n    var GlobalModel = Model.extend({\n\n        constructor: GlobalModel,\n\n        init: function (option, parentModel, theme, optionManager) {\n            theme = theme || {};\n\n            this.option = null; // Mark as not initialized.\n\n            /**\n             * @type {module:echarts/model/Model}\n             * @private\n             */\n            this._theme = new Model(theme);\n\n            /**\n             * @type {module:echarts/model/OptionManager}\n             */\n            this._optionManager = optionManager;\n        },\n\n        setOption: function (option, optionPreprocessorFuncs, onlyGraphic) {\n            zrUtil.assert(\n                !(OPTION_INNER_KEY in option),\n                'please use chart.getOption()'\n            );\n\n            this._optionManager.setOption(option, optionPreprocessorFuncs);\n\n            this.resetOption(null, onlyGraphic);\n        },\n\n        /**\n         * @param {string} type null/undefined: reset all.\n         *                      'recreate': force recreate all.\n         *                      'timeline': only reset timeline option\n         *                      'media': only reset media query option\n         * @return {boolean} Whether option changed.\n         */\n        resetOption: function (type, onlyGraphic) {\n            var optionChanged = false;\n            var optionManager = this._optionManager;\n\n            if (!type || type === 'recreate') {\n                var baseOption = optionManager.mountOption(type === 'recreate');\n\n                if (!this.option || type === 'recreate') {\n                    initBase.call(this, baseOption);\n                }\n                else {\n                    // If only graphic, other series and component will not\n                    // go through update process, data should not be restored.\n                    // Otherwise grphic els mounted on data will be eliminated\n                    // and downplay will not work.\n                    !onlyGraphic && this.restoreData();\n                    this.mergeOption(baseOption);\n                }\n                optionChanged = true;\n            }\n\n            if (type === 'timeline' || type === 'media') {\n                this.restoreData();\n            }\n\n            if (!type || type === 'recreate' || type === 'timeline') {\n                var timelineOption = optionManager.getTimelineOption(this);\n                timelineOption && (this.mergeOption(timelineOption), optionChanged = true);\n            }\n\n            if (!type || type === 'recreate' || type === 'media') {\n                var mediaOptions = optionManager.getMediaOption(this, this._api);\n                if (mediaOptions.length) {\n                    each(mediaOptions, function (mediaOption) {\n                        this.mergeOption(mediaOption, optionChanged = true);\n                    }, this);\n                }\n            }\n\n            return optionChanged;\n        },\n\n        /**\n         * @protected\n         */\n        mergeOption: function (newOption) {\n            var option = this.option;\n            var componentsMap = this._componentsMap;\n            var newCptTypes = [];\n\n            // 如果不存在对应的 component model 则直接 merge\n            each(newOption, function (componentOption, mainType) {\n                if (componentOption == null) {\n                    return;\n                }\n\n                if (!ComponentModel.hasClass(mainType)) {\n                    option[mainType] = option[mainType] == null\n                        ? zrUtil.clone(componentOption)\n                        : zrUtil.merge(option[mainType], componentOption, true);\n                }\n                else {\n                    newCptTypes.push(mainType);\n                }\n            });\n\n            // FIXME OPTION 同步是否要改回原来的\n            ComponentModel.topologicalTravel(\n                newCptTypes, ComponentModel.getAllClassMainTypes(), visitComponent, this\n            );\n\n            this._seriesIndices = this._seriesIndices || [];\n\n            function visitComponent(mainType, dependencies) {\n                var newCptOptionList = modelUtil.normalizeToArray(newOption[mainType]);\n\n                var mapResult = modelUtil.mappingToExists(\n                    componentsMap[mainType], newCptOptionList\n                );\n\n                modelUtil.makeIdAndName(mapResult);\n\n                // Set mainType and complete subType.\n                each(mapResult, function (item, index) {\n                    var opt = item.option;\n                    if (isObject(opt)) {\n                        item.keyInfo.mainType = mainType;\n                        item.keyInfo.subType = determineSubType(mainType, opt, item.exist);\n                    }\n                });\n\n                var dependentModels = getComponentsByTypes(\n                    componentsMap, dependencies\n                );\n\n                option[mainType] = [];\n                componentsMap[mainType] = [];\n\n                each(mapResult, function (resultItem, index) {\n                    var componentModel = resultItem.exist;\n                    var newCptOption = resultItem.option;\n\n                    zrUtil.assert(\n                        isObject(newCptOption) || componentModel,\n                        'Empty component definition'\n                    );\n\n                    // Consider where is no new option and should be merged using {},\n                    // see removeEdgeAndAdd in topologicalTravel and\n                    // ComponentModel.getAllClassMainTypes.\n                    if (!newCptOption) {\n                        componentModel.mergeOption({}, this);\n                        componentModel.optionUpdated({}, false);\n                    }\n                    else {\n                        var ComponentModelClass = ComponentModel.getClass(\n                            mainType, resultItem.keyInfo.subType, true\n                        );\n\n                        if (componentModel && componentModel instanceof ComponentModelClass) {\n                            componentModel.name = resultItem.keyInfo.name;\n                            componentModel.mergeOption(newCptOption, this);\n                            componentModel.optionUpdated(newCptOption, false);\n                        }\n                        else {\n                            // PENDING Global as parent ?\n                            var extraOpt = zrUtil.extend(\n                                {\n                                    dependentModels: dependentModels,\n                                    componentIndex: index\n                                },\n                                resultItem.keyInfo\n                            );\n                            componentModel = new ComponentModelClass(\n                                newCptOption, this, this, extraOpt\n                            );\n                            zrUtil.extend(componentModel, extraOpt);\n                            componentModel.init(newCptOption, this, this, extraOpt);\n                            // Call optionUpdated after init.\n                            // newCptOption has been used as componentModel.option\n                            // and may be merged with theme and default, so pass null\n                            // to avoid confusion.\n                            componentModel.optionUpdated(null, true);\n                        }\n                    }\n\n                    componentsMap[mainType][index] = componentModel;\n                    option[mainType][index] = componentModel.option;\n                }, this);\n\n                // Backup series for filtering.\n                if (mainType === 'series') {\n                    this._seriesIndices = createSeriesIndices(componentsMap.series);\n                }\n            }\n        },\n\n        /**\n         * Get option for output (cloned option and inner info removed)\n         * @public\n         * @return {Object}\n         */\n        getOption: function () {\n            var option = zrUtil.clone(this.option);\n\n            each(option, function (opts, mainType) {\n                if (ComponentModel.hasClass(mainType)) {\n                    var opts = modelUtil.normalizeToArray(opts);\n                    for (var i = opts.length - 1; i >= 0; i--) {\n                        // Remove options with inner id.\n                        if (modelUtil.isIdInner(opts[i])) {\n                            opts.splice(i, 1);\n                        }\n                    }\n                    option[mainType] = opts;\n                }\n            });\n\n            delete option[OPTION_INNER_KEY];\n\n            return option;\n        },\n\n        /**\n         * @return {module:echarts/model/Model}\n         */\n        getTheme: function () {\n            return this._theme;\n        },\n\n        /**\n         * @param {string} mainType\n         * @param {number} [idx=0]\n         * @return {module:echarts/model/Component}\n         */\n        getComponent: function (mainType, idx) {\n            var list = this._componentsMap[mainType];\n            if (list) {\n                return list[idx || 0];\n            }\n        },\n\n        /**\n         * If none of index and id and name used, return all components with mainType.\n         * @param {Object} condition\n         * @param {string} condition.mainType\n         * @param {string} [condition.subType] If ignore, only query by mainType\n         * @param {number|Array.<number>} [condition.index] Either input index or id or name.\n         * @param {string|Array.<string>} [condition.id] Either input index or id or name.\n         * @param {string|Array.<string>} [condition.name] Either input index or id or name.\n         * @return {Array.<module:echarts/model/Component>}\n         */\n        queryComponents: function (condition) {\n            var mainType = condition.mainType;\n            if (!mainType) {\n                return [];\n            }\n\n            var index = condition.index;\n            var id = condition.id;\n            var name = condition.name;\n\n            var cpts = this._componentsMap[mainType];\n\n            if (!cpts || !cpts.length) {\n                return [];\n            }\n\n            var result;\n\n            if (index != null) {\n                if (!isArray(index)) {\n                    index = [index];\n                }\n                result = filter(map(index, function (idx) {\n                    return cpts[idx];\n                }), function (val) {\n                    return !!val;\n                });\n            }\n            else if (id != null) {\n                var isIdArray = isArray(id);\n                result = filter(cpts, function (cpt) {\n                    return (isIdArray && indexOf(id, cpt.id) >= 0)\n                        || (!isIdArray && cpt.id === id);\n                });\n            }\n            else if (name != null) {\n                var isNameArray = isArray(name);\n                result = filter(cpts, function (cpt) {\n                    return (isNameArray && indexOf(name, cpt.name) >= 0)\n                        || (!isNameArray && cpt.name === name);\n                });\n            }\n            else {\n                // Return all components with mainType\n                result = cpts.slice();\n            }\n\n            return filterBySubType(result, condition);\n        },\n\n        /**\n         * The interface is different from queryComponents,\n         * which is convenient for inner usage.\n         *\n         * @usage\n         * var result = findComponents(\n         *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}}\n         * );\n         * var result = findComponents(\n         *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}}\n         * );\n         * var result = findComponents(\n         *     {mainType: 'series'},\n         *     function (model, index) {...}\n         * );\n         * // result like [component0, componnet1, ...]\n         *\n         * @param {Object} condition\n         * @param {string} condition.mainType Mandatory.\n         * @param {string} [condition.subType] Optional.\n         * @param {Object} [condition.query] like {xxxIndex, xxxId, xxxName},\n         *        where xxx is mainType.\n         *        If query attribute is null/undefined or has no index/id/name,\n         *        do not filtering by query conditions, which is convenient for\n         *        no-payload situations or when target of action is global.\n         * @param {Function} [condition.filter] parameter: component, return boolean.\n         * @return {Array.<module:echarts/model/Component>}\n         */\n        findComponents: function (condition) {\n            var query = condition.query;\n            var mainType = condition.mainType;\n\n            var queryCond = getQueryCond(query);\n            var result = queryCond\n                ? this.queryComponents(queryCond)\n                : this._componentsMap[mainType];\n\n            return doFilter(filterBySubType(result, condition));\n\n            function getQueryCond(q) {\n                var indexAttr = mainType + 'Index';\n                var idAttr = mainType + 'Id';\n                var nameAttr = mainType + 'Name';\n                return q && (\n                        q[indexAttr] != null\n                        || q[idAttr] != null\n                        || q[nameAttr] != null\n                    )\n                    ? {\n                        mainType: mainType,\n                        // subType will be filtered finally.\n                        index: q[indexAttr],\n                        id: q[idAttr],\n                        name: q[nameAttr]\n                    }\n                    : null;\n            }\n\n            function doFilter(res) {\n                return condition.filter\n                     ? filter(res, condition.filter)\n                     : res;\n            }\n        },\n\n        /**\n         * @usage\n         * eachComponent('legend', function (legendModel, index) {\n         *     ...\n         * });\n         * eachComponent(function (componentType, model, index) {\n         *     // componentType does not include subType\n         *     // (componentType is 'xxx' but not 'xxx.aa')\n         * });\n         * eachComponent(\n         *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}},\n         *     function (model, index) {...}\n         * );\n         * eachComponent(\n         *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}},\n         *     function (model, index) {...}\n         * );\n         *\n         * @param {string|Object=} mainType When mainType is object, the definition\n         *                                  is the same as the method 'findComponents'.\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachComponent: function (mainType, cb, context) {\n            var componentsMap = this._componentsMap;\n\n            if (typeof mainType === 'function') {\n                context = cb;\n                cb = mainType;\n                each(componentsMap, function (components, componentType) {\n                    each(components, function (component, index) {\n                        cb.call(context, componentType, component, index);\n                    });\n                });\n            }\n            else if (zrUtil.isString(mainType)) {\n                each(componentsMap[mainType], cb, context);\n            }\n            else if (isObject(mainType)) {\n                var queryResult = this.findComponents(mainType);\n                each(queryResult, cb, context);\n            }\n        },\n\n        /**\n         * @param {string} name\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeriesByName: function (name) {\n            var series = this._componentsMap.series;\n            return filter(series, function (oneSeries) {\n                return oneSeries.name === name;\n            });\n        },\n\n        /**\n         * @param {number} seriesIndex\n         * @return {module:echarts/model/Series}\n         */\n        getSeriesByIndex: function (seriesIndex) {\n            return this._componentsMap.series[seriesIndex];\n        },\n\n        /**\n         * @param {string} subType\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeriesByType: function (subType) {\n            var series = this._componentsMap.series;\n            return filter(series, function (oneSeries) {\n                return oneSeries.subType === subType;\n            });\n        },\n\n        /**\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeries: function () {\n            return this._componentsMap.series.slice();\n        },\n\n        /**\n         * After filtering, series may be different\n         * frome raw series.\n         *\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachSeries: function (cb, context) {\n            assertSeriesInitialized(this);\n            each(this._seriesIndices, function (rawSeriesIndex) {\n                var series = this._componentsMap.series[rawSeriesIndex];\n                cb.call(context, series, rawSeriesIndex);\n            }, this);\n        },\n\n        /**\n         * Iterate raw series before filtered.\n         *\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachRawSeries: function (cb, context) {\n            each(this._componentsMap.series, cb, context);\n        },\n\n        /**\n         * After filtering, series may be different.\n         * frome raw series.\n         *\n         * @parma {string} subType\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachSeriesByType: function (subType, cb, context) {\n            assertSeriesInitialized(this);\n            each(this._seriesIndices, function (rawSeriesIndex) {\n                var series = this._componentsMap.series[rawSeriesIndex];\n                if (series.subType === subType) {\n                    cb.call(context, series, rawSeriesIndex);\n                }\n            }, this);\n        },\n\n        /**\n         * Iterate raw series before filtered of given type.\n         *\n         * @parma {string} subType\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachRawSeriesByType: function (subType, cb, context) {\n            return each(this.getSeriesByType(subType), cb, context);\n        },\n\n        /**\n         * @param {module:echarts/model/Series} seriesModel\n         */\n        isSeriesFiltered: function (seriesModel) {\n            assertSeriesInitialized(this);\n            return zrUtil.indexOf(this._seriesIndices, seriesModel.componentIndex) < 0;\n        },\n\n        /**\n         * @param {Function} cb\n         * @param {*} context\n         */\n        filterSeries: function (cb, context) {\n            assertSeriesInitialized(this);\n            var filteredSeries = filter(\n                this._componentsMap.series, cb, context\n            );\n            this._seriesIndices = createSeriesIndices(filteredSeries);\n        },\n\n        restoreData: function () {\n            var componentsMap = this._componentsMap;\n\n            this._seriesIndices = createSeriesIndices(componentsMap.series);\n\n            var componentTypes = [];\n            each(componentsMap, function (components, componentType) {\n                componentTypes.push(componentType);\n            });\n\n            ComponentModel.topologicalTravel(\n                componentTypes,\n                ComponentModel.getAllClassMainTypes(),\n                function (componentType, dependencies) {\n                    each(componentsMap[componentType], function (component) {\n                        component.restoreData();\n                    });\n                }\n            );\n        }\n\n    });\n\n    /**\n     * @inner\n     */\n    function mergeTheme(option, theme) {\n        zrUtil.each(theme, function (themeItem, name) {\n            // 如果有 component model 则把具体的 merge 逻辑交给该 model 处理\n            if (!ComponentModel.hasClass(name)) {\n                if (typeof themeItem === 'object') {\n                    option[name] = !option[name]\n                        ? zrUtil.clone(themeItem)\n                        : zrUtil.merge(option[name], themeItem, false);\n                }\n                else {\n                    if (option[name] == null) {\n                        option[name] = themeItem;\n                    }\n                }\n            }\n        });\n    }\n\n    function initBase(baseOption) {\n        baseOption = baseOption;\n\n        // Using OPTION_INNER_KEY to mark that this option can not be used outside,\n        // i.e. `chart.setOption(chart.getModel().option);` is forbiden.\n        this.option = {};\n        this.option[OPTION_INNER_KEY] = 1;\n\n        /**\n         * Init with series: [], in case of calling findSeries method\n         * before series initialized.\n         * @type {Object.<string, Array.<module:echarts/model/Model>>}\n         * @private\n         */\n        this._componentsMap = {series: []};\n\n        /**\n         * Mapping between filtered series list and raw series list.\n         * key: filtered series indices, value: raw series indices.\n         * @type {Array.<nubmer>}\n         * @private\n         */\n        this._seriesIndices = null;\n\n        mergeTheme(baseOption, this._theme.option);\n\n        // TODO Needs clone when merging to the unexisted property\n        zrUtil.merge(baseOption, globalDefault, false);\n\n        this.mergeOption(baseOption);\n    }\n\n    /**\n     * @inner\n     * @param {Array.<string>|string} types model types\n     * @return {Object} key: {string} type, value: {Array.<Object>} models\n     */\n    function getComponentsByTypes(componentsMap, types) {\n        if (!zrUtil.isArray(types)) {\n            types = types ? [types] : [];\n        }\n\n        var ret = {};\n        each(types, function (type) {\n            ret[type] = (componentsMap[type] || []).slice();\n        });\n\n        return ret;\n    }\n\n    /**\n     * @inner\n     */\n    function determineSubType(mainType, newCptOption, existComponent) {\n        var subType = newCptOption.type\n            ? newCptOption.type\n            : existComponent\n            ? existComponent.subType\n            // Use determineSubType only when there is no existComponent.\n            : ComponentModel.determineSubType(mainType, newCptOption);\n\n        // tooltip, markline, markpoint may always has no subType\n        return subType;\n    }\n\n    /**\n     * @inner\n     */\n    function createSeriesIndices(seriesModels) {\n        return map(seriesModels, function (series) {\n            return series.componentIndex;\n        }) || [];\n    }\n\n    /**\n     * @inner\n     */\n    function filterBySubType(components, condition) {\n        // Using hasOwnProperty for restrict. Consider\n        // subType is undefined in user payload.\n        return condition.hasOwnProperty('subType')\n            ? filter(components, function (cpt) {\n                return cpt.subType === condition.subType;\n            })\n            : components;\n    }\n\n    /**\n     * @inner\n     */\n    function assertSeriesInitialized(ecModel) {\n        // Components that use _seriesIndices should depends on series component,\n        // which make sure that their initialization is after series.\n        if (__DEV__) {\n            if (!ecModel._seriesIndices) {\n                throw new Error('Series has not been initialized yet.');\n            }\n        }\n    }\n\n    zrUtil.mixin(GlobalModel, __webpack_require__(216));\n\n    module.exports = GlobalModel;\n\n\n/***/ }),\n/* 336 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * ECharts option manager\n *\n * @module {echarts/model/OptionManager}\n */\n\n\n\n    var zrUtil = __webpack_require__(158);\n    var modelUtil = __webpack_require__(162);\n    var ComponentModel = __webpack_require__(170);\n    var each = zrUtil.each;\n    var clone = zrUtil.clone;\n    var map = zrUtil.map;\n    var merge = zrUtil.merge;\n\n    var QUERY_REG = /^(min|max)?(.+)$/;\n\n    /**\n     * TERM EXPLANATIONS:\n     *\n     * [option]:\n     *\n     *     An object that contains definitions of components. For example:\n     *     var option = {\n     *         title: {...},\n     *         legend: {...},\n     *         visualMap: {...},\n     *         series: [\n     *             {data: [...]},\n     *             {data: [...]},\n     *             ...\n     *         ]\n     *     };\n     *\n     * [rawOption]:\n     *\n     *     An object input to echarts.setOption. 'rawOption' may be an\n     *     'option', or may be an object contains multi-options. For example:\n     *     var option = {\n     *         baseOption: {\n     *             title: {...},\n     *             legend: {...},\n     *             series: [\n     *                 {data: [...]},\n     *                 {data: [...]},\n     *                 ...\n     *             ]\n     *         },\n     *         timeline: {...},\n     *         options: [\n     *             {title: {...}, series: {data: [...]}},\n     *             {title: {...}, series: {data: [...]}},\n     *             ...\n     *         ],\n     *         media: [\n     *             {\n     *                 query: {maxWidth: 320},\n     *                 option: {series: {x: 20}, visualMap: {show: false}}\n     *             },\n     *             {\n     *                 query: {minWidth: 320, maxWidth: 720},\n     *                 option: {series: {x: 500}, visualMap: {show: true}}\n     *             },\n     *             {\n     *                 option: {series: {x: 1200}, visualMap: {show: true}}\n     *             }\n     *         ]\n     *     };\n     *\n     * @alias module:echarts/model/OptionManager\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    function OptionManager(api) {\n\n        /**\n         * @private\n         * @type {module:echarts/ExtensionAPI}\n         */\n        this._api = api;\n\n        /**\n         * @private\n         * @type {Array.<number>}\n         */\n        this._timelineOptions = [];\n\n        /**\n         * @private\n         * @type {Array.<Object>}\n         */\n        this._mediaList = [];\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._mediaDefault;\n\n        /**\n         * -1, means default.\n         * empty means no media.\n         * @private\n         * @type {Array.<number>}\n         */\n        this._currentMediaIndices = [];\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._optionBackup;\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._newBaseOption;\n    }\n\n    // timeline.notMerge is not supported in ec3. Firstly there is rearly\n    // case that notMerge is needed. Secondly supporting 'notMerge' requires\n    // rawOption cloned and backuped when timeline changed, which does no\n    // good to performance. What's more, that both timeline and setOption\n    // method supply 'notMerge' brings complex and some problems.\n    // Consider this case:\n    // (step1) chart.setOption({timeline: {notMerge: false}, ...}, false);\n    // (step2) chart.setOption({timeline: {notMerge: true}, ...}, false);\n\n    OptionManager.prototype = {\n\n        constructor: OptionManager,\n\n        /**\n         * @public\n         * @param {Object} rawOption Raw option.\n         * @param {module:echarts/model/Global} ecModel\n         * @param {Array.<Function>} optionPreprocessorFuncs\n         * @return {Object} Init option\n         */\n        setOption: function (rawOption, optionPreprocessorFuncs) {\n            rawOption = clone(rawOption, true);\n\n            // FIXME\n            // 如果 timeline options 或者 media 中设置了某个属性，而baseOption中没有设置，则进行警告。\n\n            var oldOptionBackup = this._optionBackup;\n            var newParsedOption = parseRawOption.call(\n                this, rawOption, optionPreprocessorFuncs, !oldOptionBackup\n            );\n            this._newBaseOption = newParsedOption.baseOption;\n\n            // For setOption at second time (using merge mode);\n            if (oldOptionBackup) {\n                // Only baseOption can be merged.\n                mergeOption(oldOptionBackup.baseOption, newParsedOption.baseOption);\n\n                // For simplicity, timeline options and media options do not support merge,\n                // that is, if you `setOption` twice and both has timeline options, the latter\n                // timeline opitons will not be merged to the formers, but just substitude them.\n                if (newParsedOption.timelineOptions.length) {\n                    oldOptionBackup.timelineOptions = newParsedOption.timelineOptions;\n                }\n                if (newParsedOption.mediaList.length) {\n                    oldOptionBackup.mediaList = newParsedOption.mediaList;\n                }\n                if (newParsedOption.mediaDefault) {\n                    oldOptionBackup.mediaDefault = newParsedOption.mediaDefault;\n                }\n            }\n            else {\n                this._optionBackup = newParsedOption;\n            }\n        },\n\n        /**\n         * @param {boolean} isRecreate\n         * @return {Object}\n         */\n        mountOption: function (isRecreate) {\n            var optionBackup = this._optionBackup;\n\n            // TODO\n            // 如果没有reset功能则不clone。\n\n            this._timelineOptions = map(optionBackup.timelineOptions, clone);\n            this._mediaList = map(optionBackup.mediaList, clone);\n            this._mediaDefault = clone(optionBackup.mediaDefault);\n            this._currentMediaIndices = [];\n\n            return clone(isRecreate\n                // this._optionBackup.baseOption, which is created at the first `setOption`\n                // called, and is merged into every new option by inner method `mergeOption`\n                // each time `setOption` called, can be only used in `isRecreate`, because\n                // its reliability is under suspicion. In other cases option merge is\n                // performed by `model.mergeOption`.\n                ? optionBackup.baseOption : this._newBaseOption\n            );\n        },\n\n        /**\n         * @param {module:echarts/model/Global} ecModel\n         * @return {Object}\n         */\n        getTimelineOption: function (ecModel) {\n            var option;\n            var timelineOptions = this._timelineOptions;\n\n            if (timelineOptions.length) {\n                // getTimelineOption can only be called after ecModel inited,\n                // so we can get currentIndex from timelineModel.\n                var timelineModel = ecModel.getComponent('timeline');\n                if (timelineModel) {\n                    option = clone(\n                        timelineOptions[timelineModel.getCurrentIndex()],\n                        true\n                    );\n                }\n            }\n\n            return option;\n        },\n\n        /**\n         * @param {module:echarts/model/Global} ecModel\n         * @return {Array.<Object>}\n         */\n        getMediaOption: function (ecModel) {\n            var ecWidth = this._api.getWidth();\n            var ecHeight = this._api.getHeight();\n            var mediaList = this._mediaList;\n            var mediaDefault = this._mediaDefault;\n            var indices = [];\n            var result = [];\n\n            // No media defined.\n            if (!mediaList.length && !mediaDefault) {\n                return result;\n            }\n\n            // Multi media may be applied, the latter defined media has higher priority.\n            for (var i = 0, len = mediaList.length; i < len; i++) {\n                if (applyMediaQuery(mediaList[i].query, ecWidth, ecHeight)) {\n                    indices.push(i);\n                }\n            }\n\n            // FIXME\n            // 是否mediaDefault应该强制用户设置，否则可能修改不能回归。\n            if (!indices.length && mediaDefault) {\n                indices = [-1];\n            }\n\n            if (indices.length && !indicesEquals(indices, this._currentMediaIndices)) {\n                result = map(indices, function (index) {\n                    return clone(\n                        index === -1 ? mediaDefault.option : mediaList[index].option\n                    );\n                });\n            }\n            // Otherwise return nothing.\n\n            this._currentMediaIndices = indices;\n\n            return result;\n        }\n    };\n\n    function parseRawOption(rawOption, optionPreprocessorFuncs, isNew) {\n        var timelineOptions = [];\n        var mediaList = [];\n        var mediaDefault;\n        var baseOption;\n\n        // Compatible with ec2.\n        var timelineOpt = rawOption.timeline;\n\n        if (rawOption.baseOption) {\n            baseOption = rawOption.baseOption;\n        }\n\n        // For timeline\n        if (timelineOpt || rawOption.options) {\n            baseOption = baseOption || {};\n            timelineOptions = (rawOption.options || []).slice();\n        }\n\n        // For media query\n        if (rawOption.media) {\n            baseOption = baseOption || {};\n            var media = rawOption.media;\n            each(media, function (singleMedia) {\n                if (singleMedia && singleMedia.option) {\n                    if (singleMedia.query) {\n                        mediaList.push(singleMedia);\n                    }\n                    else if (!mediaDefault) {\n                        // Use the first media default.\n                        mediaDefault = singleMedia;\n                    }\n                }\n            });\n        }\n\n        // For normal option\n        if (!baseOption) {\n            baseOption = rawOption;\n        }\n\n        // Set timelineOpt to baseOption in ec3,\n        // which is convenient for merge option.\n        if (!baseOption.timeline) {\n            baseOption.timeline = timelineOpt;\n        }\n\n        // Preprocess.\n        each([baseOption].concat(timelineOptions)\n            .concat(zrUtil.map(mediaList, function (media) {\n                return media.option;\n            })),\n            function (option) {\n                each(optionPreprocessorFuncs, function (preProcess) {\n                    preProcess(option, isNew);\n                });\n            }\n        );\n\n        return {\n            baseOption: baseOption,\n            timelineOptions: timelineOptions,\n            mediaDefault: mediaDefault,\n            mediaList: mediaList\n        };\n    }\n\n    /**\n     * @see <http://www.w3.org/TR/css3-mediaqueries/#media1>\n     * Support: width, height, aspectRatio\n     * Can use max or min as prefix.\n     */\n    function applyMediaQuery(query, ecWidth, ecHeight) {\n        var realMap = {\n            width: ecWidth,\n            height: ecHeight,\n            aspectratio: ecWidth / ecHeight // lowser case for convenientce.\n        };\n\n        var applicatable = true;\n\n        zrUtil.each(query, function (value, attr) {\n            var matched = attr.match(QUERY_REG);\n\n            if (!matched || !matched[1] || !matched[2]) {\n                return;\n            }\n\n            var operator = matched[1];\n            var realAttr = matched[2].toLowerCase();\n\n            if (!compare(realMap[realAttr], value, operator)) {\n                applicatable = false;\n            }\n        });\n\n        return applicatable;\n    }\n\n    function compare(real, expect, operator) {\n        if (operator === 'min') {\n            return real >= expect;\n        }\n        else if (operator === 'max') {\n            return real <= expect;\n        }\n        else { // Equals\n            return real === expect;\n        }\n    }\n\n    function indicesEquals(indices1, indices2) {\n        // indices is always order by asc and has only finite number.\n        return indices1.join(',') === indices2.join(',');\n    }\n\n    /**\n     * Consider case:\n     * `chart.setOption(opt1);`\n     * Then user do some interaction like dataZoom, dataView changing.\n     * `chart.setOption(opt2);`\n     * Then user press 'reset button' in toolbox.\n     *\n     * After doing that all of the interaction effects should be reset, the\n     * chart should be the same as the result of invoke\n     * `chart.setOption(opt1); chart.setOption(opt2);`.\n     *\n     * Although it is not able ensure that\n     * `chart.setOption(opt1); chart.setOption(opt2);` is equivalents to\n     * `chart.setOption(merge(opt1, opt2));` exactly,\n     * this might be the only simple way to implement that feature.\n     *\n     * MEMO: We've considered some other approaches:\n     * 1. Each model handle its self restoration but not uniform treatment.\n     *     (Too complex in logic and error-prone)\n     * 2. Use a shadow ecModel. (Performace expensive)\n     */\n    function mergeOption(oldOption, newOption) {\n        newOption = newOption || {};\n\n        each(newOption, function (newCptOpt, mainType) {\n            if (newCptOpt == null) {\n                return;\n            }\n\n            var oldCptOpt = oldOption[mainType];\n\n            if (!ComponentModel.hasClass(mainType)) {\n                oldOption[mainType] = merge(oldCptOpt, newCptOpt, true);\n            }\n            else {\n                newCptOpt = modelUtil.normalizeToArray(newCptOpt);\n                oldCptOpt = modelUtil.normalizeToArray(oldCptOpt);\n\n                var mapResult = modelUtil.mappingToExists(oldCptOpt, newCptOpt);\n\n                oldOption[mainType] = map(mapResult, function (item) {\n                    return (item.option && item.exist)\n                        ? merge(item.exist, item.option, true)\n                        : (item.exist || item.option);\n                });\n            }\n        });\n    }\n\n    module.exports = OptionManager;\n\n\n/***/ }),\n/* 337 */\n/***/ (function(module, exports) {\n\n\n    var platform = '';\n    // Navigator not exists in node\n    if (typeof navigator !== 'undefined') {\n        platform = navigator.platform || '';\n    }\n    module.exports = {\n        // 全图默认背景\n        // backgroundColor: 'rgba(0,0,0,0)',\n\n        // https://dribbble.com/shots/1065960-Infographic-Pie-chart-visualization\n        // color: ['#5793f3', '#d14a61', '#fd9c35', '#675bba', '#fec42c', '#dd4444', '#d4df5a', '#cd4870'],\n        // 浅色\n        // color: ['#bcd3bb', '#e88f70', '#edc1a5', '#9dc5c8', '#e1e8c8', '#7b7c68', '#e5b5b5', '#f0b489', '#928ea8', '#bda29a'],\n        // color: ['#cc5664', '#9bd6ec', '#ea946e', '#8acaaa', '#f1ec64', '#ee8686', '#a48dc1', '#5da6bc', '#b9dcae'],\n        // 深色\n        color: ['#c23531','#2f4554', '#61a0a8', '#d48265', '#91c7ae','#749f83',  '#ca8622', '#bda29a','#6e7074', '#546570', '#c4ccd3'],\n\n        // 默认需要 Grid 配置项\n        // grid: {},\n        // 主题，主题\n        textStyle: {\n            // color: '#000',\n            // decoration: 'none',\n            // PENDING\n            fontFamily: platform.match(/^Win/) ? 'Microsoft YaHei' : 'sans-serif',\n            // fontFamily: 'Arial, Verdana, sans-serif',\n            fontSize: 12,\n            fontStyle: 'normal',\n            fontWeight: 'normal'\n        },\n\n        // http://blogs.adobe.com/webplatform/2014/02/24/using-blend-modes-in-html-canvas/\n        // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n        // Default is source-over\n        blendMode: null,\n\n        animation: 'auto',\n        animationDuration: 1000,\n        animationDurationUpdate: 300,\n        animationEasing: 'exponentialOut',\n        animationEasingUpdate: 'cubicOut',\n\n        animationThreshold: 2000,\n        // Configuration for progressive/incremental rendering\n        progressiveThreshold: 3000,\n        progressive: 400,\n\n        // Threshold of if use single hover layer to optimize.\n        // It is recommended that `hoverLayerThreshold` is equivalent to or less than\n        // `progressiveThreshold`, otherwise hover will cause restart of progressive,\n        // which is unexpected.\n        // see example <echarts/test/heatmap-large.html>.\n        hoverLayerThreshold: 3000,\n\n        // See: module:echarts/scale/Time\n        useUTC: false\n    };\n\n\n/***/ }),\n/* 338 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    module.exports = {\n        getAreaStyle: __webpack_require__(180)(\n            [\n                ['fill', 'color'],\n                ['shadowBlur'],\n                ['shadowOffsetX'],\n                ['shadowOffsetY'],\n                ['opacity'],\n                ['shadowColor']\n            ]\n        )\n    };\n\n\n/***/ }),\n/* 339 */\n/***/ (function(module, exports) {\n\n\n\n    module.exports = {\n        getBoxLayoutParams: function () {\n            return {\n                left: this.get('left'),\n                top: this.get('top'),\n                right: this.get('right'),\n                bottom: this.get('bottom'),\n                width: this.get('width'),\n                height: this.get('height')\n            };\n        }\n    };\n\n\n/***/ }),\n/* 340 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    var getItemStyle = __webpack_require__(180)(\n        [\n            ['fill', 'color'],\n            ['stroke', 'borderColor'],\n            ['lineWidth', 'borderWidth'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor'],\n            ['textPosition'],\n            ['textAlign']\n        ]\n    );\n    module.exports = {\n        getItemStyle: function (excludes, includes) {\n            var style = getItemStyle.call(this, excludes, includes);\n            var lineDash = this.getBorderLineDash();\n            lineDash && (style.lineDash = lineDash);\n            return style;\n        },\n\n        getBorderLineDash: function () {\n            var lineType = this.get('borderType');\n            return (lineType === 'solid' || lineType == null) ? null\n                : (lineType === 'dashed' ? [5, 5] : [1, 1]);\n        }\n    };\n\n\n/***/ }),\n/* 341 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    var getLineStyle = __webpack_require__(180)(\n        [\n            ['lineWidth', 'width'],\n            ['stroke', 'color'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor']\n        ]\n    );\n    module.exports = {\n        getLineStyle: function (excludes) {\n            var style = getLineStyle.call(this, excludes);\n            var lineDash = this.getLineDash(style.lineWidth);\n            lineDash && (style.lineDash = lineDash);\n            return style;\n        },\n\n        getLineDash: function (lineWidth) {\n            if (lineWidth == null) {\n                lineWidth = 1;\n            }\n            var lineType = this.get('type');\n            var dotSize = Math.max(lineWidth, 2);\n            var dashSize = lineWidth * 4;\n            return (lineType === 'solid' || lineType == null) ? null\n                : (lineType === 'dashed' ? [dashSize, dashSize] : [dotSize, dotSize]);\n        }\n    };\n\n\n/***/ }),\n/* 342 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var textContain = __webpack_require__(172);\n\n    function getShallow(model, path) {\n        return model && model.getShallow(path);\n    }\n\n    module.exports = {\n        /**\n         * Get color property or get color from option.textStyle.color\n         * @return {string}\n         */\n        getTextColor: function () {\n            var ecModel = this.ecModel;\n            return this.getShallow('color')\n                || (ecModel && ecModel.get('textStyle.color'));\n        },\n\n        /**\n         * Create font string from fontStyle, fontWeight, fontSize, fontFamily\n         * @return {string}\n         */\n        getFont: function () {\n            var ecModel = this.ecModel;\n            var gTextStyleModel = ecModel && ecModel.getModel('textStyle');\n            return [\n                // FIXME in node-canvas fontWeight is before fontStyle\n                this.getShallow('fontStyle') || getShallow(gTextStyleModel, 'fontStyle'),\n                this.getShallow('fontWeight') || getShallow(gTextStyleModel, 'fontWeight'),\n                (this.getShallow('fontSize') || getShallow(gTextStyleModel, 'fontSize') || 12) + 'px',\n                this.getShallow('fontFamily') || getShallow(gTextStyleModel, 'fontFamily') || 'sans-serif'\n            ].join(' ');\n        },\n\n        getTextRect: function (text) {\n            return textContain.getBoundingRect(\n                text,\n                this.getFont(),\n                this.getShallow('align'),\n                this.getShallow('baseline')\n            );\n        },\n\n        truncateText: function (text, containerWidth, ellipsis, options) {\n            return textContain.truncateText(\n                text, containerWidth, this.getFont(), ellipsis, options\n            );\n        }\n    };\n\n\n/***/ }),\n/* 343 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// Compatitable with 2.0\n\n\n    var zrUtil = __webpack_require__(158);\n    var compatStyle = __webpack_require__(344);\n\n    function get(opt, path) {\n        path = path.split(',');\n        var obj = opt;\n        for (var i = 0; i < path.length; i++) {\n            obj = obj && obj[path[i]];\n            if (obj == null) {\n                break;\n            }\n        }\n        return obj;\n    }\n\n    function set(opt, path, val, overwrite) {\n        path = path.split(',');\n        var obj = opt;\n        var key;\n        for (var i = 0; i < path.length - 1; i++) {\n            key = path[i];\n            if (obj[key] == null) {\n                obj[key] = {};\n            }\n            obj = obj[key];\n        }\n        if (overwrite || obj[path[i]] == null) {\n            obj[path[i]] = val;\n        }\n    }\n\n    function compatLayoutProperties(option) {\n        each(LAYOUT_PROPERTIES, function (prop) {\n            if (prop[0] in option && !(prop[1] in option)) {\n                option[prop[1]] = option[prop[0]];\n            }\n        });\n    }\n\n    var LAYOUT_PROPERTIES = [\n        ['x', 'left'], ['y', 'top'], ['x2', 'right'], ['y2', 'bottom']\n    ];\n\n    var COMPATITABLE_COMPONENTS = [\n        'grid', 'geo', 'parallel', 'legend', 'toolbox', 'title', 'visualMap', 'dataZoom', 'timeline'\n    ];\n\n    var COMPATITABLE_SERIES = [\n        'bar', 'boxplot', 'candlestick', 'chord', 'effectScatter',\n        'funnel', 'gauge', 'lines', 'graph', 'heatmap', 'line', 'map', 'parallel',\n        'pie', 'radar', 'sankey', 'scatter', 'treemap'\n    ];\n\n    var each = zrUtil.each;\n\n    module.exports = function (option) {\n        each(option.series, function (seriesOpt) {\n            if (!zrUtil.isObject(seriesOpt)) {\n                return;\n            }\n\n            var seriesType = seriesOpt.type;\n\n            compatStyle(seriesOpt);\n\n            if (seriesType === 'pie' || seriesType === 'gauge') {\n                if (seriesOpt.clockWise != null) {\n                    seriesOpt.clockwise = seriesOpt.clockWise;\n                }\n            }\n            if (seriesType === 'gauge') {\n                var pointerColor = get(seriesOpt, 'pointer.color');\n                pointerColor != null\n                    && set(seriesOpt, 'itemStyle.normal.color', pointerColor);\n            }\n\n            for (var i = 0; i < COMPATITABLE_SERIES.length; i++) {\n                if (COMPATITABLE_SERIES[i] === seriesOpt.type) {\n                    compatLayoutProperties(seriesOpt);\n                    break;\n                }\n            }\n        });\n\n        // dataRange has changed to visualMap\n        if (option.dataRange) {\n            option.visualMap = option.dataRange;\n        }\n\n        each(COMPATITABLE_COMPONENTS, function (componentName) {\n            var options = option[componentName];\n            if (options) {\n                if (!zrUtil.isArray(options)) {\n                    options = [options];\n                }\n                each(options, function (option) {\n                    compatLayoutProperties(option);\n                });\n            }\n        });\n    };\n\n\n/***/ }),\n/* 344 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(158);\n\n    var POSSIBLE_STYLES = [\n        'areaStyle', 'lineStyle', 'nodeStyle', 'linkStyle',\n        'chordStyle', 'label', 'labelLine'\n    ];\n\n    function compatItemStyle(opt) {\n        var itemStyleOpt = opt && opt.itemStyle;\n        if (itemStyleOpt) {\n            zrUtil.each(POSSIBLE_STYLES, function (styleName) {\n                var normalItemStyleOpt = itemStyleOpt.normal;\n                var emphasisItemStyleOpt = itemStyleOpt.emphasis;\n                if (normalItemStyleOpt && normalItemStyleOpt[styleName]) {\n                    opt[styleName] = opt[styleName] || {};\n                    if (!opt[styleName].normal) {\n                        opt[styleName].normal = normalItemStyleOpt[styleName];\n                    }\n                    else {\n                        zrUtil.merge(opt[styleName].normal, normalItemStyleOpt[styleName]);\n                    }\n                    normalItemStyleOpt[styleName] = null;\n                }\n                if (emphasisItemStyleOpt && emphasisItemStyleOpt[styleName]) {\n                    opt[styleName] = opt[styleName] || {};\n                    if (!opt[styleName].emphasis) {\n                        opt[styleName].emphasis = emphasisItemStyleOpt[styleName];\n                    }\n                    else {\n                        zrUtil.merge(opt[styleName].emphasis, emphasisItemStyleOpt[styleName]);\n                    }\n                    emphasisItemStyleOpt[styleName] = null;\n                }\n            });\n        }\n    }\n\n    module.exports = function (seriesOpt) {\n        if (!seriesOpt) {\n            return;\n        }\n        compatItemStyle(seriesOpt);\n        compatItemStyle(seriesOpt.markPoint);\n        compatItemStyle(seriesOpt.markLine);\n        var data = seriesOpt.data;\n        if (data) {\n            for (var i = 0; i < data.length; i++) {\n                compatItemStyle(data[i]);\n            }\n            // mark point data\n            var markPoint = seriesOpt.markPoint;\n            if (markPoint && markPoint.data) {\n                var mpData = markPoint.data;\n                for (var i = 0; i < mpData.length; i++) {\n                    compatItemStyle(mpData[i]);\n                }\n            }\n            // mark line data\n            var markLine = seriesOpt.markLine;\n            if (markLine && markLine.data) {\n                var mlData = markLine.data;\n                for (var i = 0; i < mlData.length; i++) {\n                    if (zrUtil.isArray(mlData[i])) {\n                        compatItemStyle(mlData[i][0]);\n                        compatItemStyle(mlData[i][1]);\n                    }\n                    else {\n                        compatItemStyle(mlData[i]);\n                    }\n                }\n            }\n        }\n    };\n\n\n/***/ }),\n/* 345 */\n/***/ (function(module, exports) {\n\n\n    module.exports = function (seriesType, ecModel) {\n        var legendModels = ecModel.findComponents({\n            mainType: 'legend'\n        });\n        if (!legendModels || !legendModels.length) {\n            return;\n        }\n        ecModel.eachSeriesByType(seriesType, function (series) {\n            var data = series.getData();\n            data.filterSelf(function (idx) {\n                var name = data.getName(idx);\n                // If in any legend component the status is not selected.\n                for (var i = 0; i < legendModels.length; i++) {\n                    if (!legendModels[i].isSelected(name)) {\n                        return false;\n                    }\n                }\n                return true;\n            }, this);\n        }, this);\n    };\n\n\n/***/ }),\n/* 346 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Log scale\n * @module echarts/scale/Log\n */\n\n\n    var zrUtil = __webpack_require__(158);\n    var Scale = __webpack_require__(181);\n    var numberUtil = __webpack_require__(161);\n\n    // Use some method of IntervalScale\n    var IntervalScale = __webpack_require__(193);\n\n    var scaleProto = Scale.prototype;\n    var intervalScaleProto = IntervalScale.prototype;\n\n    var getPrecisionSafe = numberUtil.getPrecisionSafe;\n    var roundingErrorFix = numberUtil.round;\n\n    var mathFloor = Math.floor;\n    var mathCeil = Math.ceil;\n    var mathPow = Math.pow;\n\n    var mathLog = Math.log;\n\n    var LogScale = Scale.extend({\n\n        type: 'log',\n\n        base: 10,\n\n        $constructor: function () {\n            Scale.apply(this, arguments);\n            this._originalScale = new IntervalScale();\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicks: function () {\n            var originalScale = this._originalScale;\n            var extent = this._extent;\n            var originalExtent = originalScale.getExtent();\n\n            return zrUtil.map(intervalScaleProto.getTicks.call(this), function (val) {\n                var powVal = numberUtil.round(mathPow(this.base, val));\n\n                // Fix #4158\n                powVal = (val === extent[0] && originalScale.__fixMin)\n                    ? fixRoundingError(powVal, originalExtent[0])\n                    : powVal;\n                powVal = (val === extent[1] && originalScale.__fixMax)\n                    ? fixRoundingError(powVal, originalExtent[1])\n                    : powVal;\n\n                return powVal;\n            }, this);\n        },\n\n        /**\n         * @param {number} val\n         * @return {string}\n         */\n        getLabel: intervalScaleProto.getLabel,\n\n        /**\n         * @param  {number} val\n         * @return {number}\n         */\n        scale: function (val) {\n            val = scaleProto.scale.call(this, val);\n            return mathPow(this.base, val);\n        },\n\n        /**\n         * @param {number} start\n         * @param {number} end\n         */\n        setExtent: function (start, end) {\n            var base = this.base;\n            start = mathLog(start) / mathLog(base);\n            end = mathLog(end) / mathLog(base);\n            intervalScaleProto.setExtent.call(this, start, end);\n        },\n\n        /**\n         * @return {number} end\n         */\n        getExtent: function () {\n            var base = this.base;\n            var extent = scaleProto.getExtent.call(this);\n            extent[0] = mathPow(base, extent[0]);\n            extent[1] = mathPow(base, extent[1]);\n\n            // Fix #4158\n            var originalScale = this._originalScale;\n            var originalExtent = originalScale.getExtent();\n            originalScale.__fixMin && (extent[0] = fixRoundingError(extent[0], originalExtent[0]));\n            originalScale.__fixMax && (extent[1] = fixRoundingError(extent[1], originalExtent[1]));\n\n            return extent;\n        },\n\n        /**\n         * @param  {Array.<number>} extent\n         */\n        unionExtent: function (extent) {\n            this._originalScale.unionExtent(extent);\n\n            var base = this.base;\n            extent[0] = mathLog(extent[0]) / mathLog(base);\n            extent[1] = mathLog(extent[1]) / mathLog(base);\n            scaleProto.unionExtent.call(this, extent);\n        },\n\n        /**\n         * @override\n         */\n        unionExtentFromData: function (data, dim) {\n            this.unionExtent(data.getDataExtent(dim, true, function (val) {\n                return val > 0;\n            }));\n        },\n\n        /**\n         * Update interval and extent of intervals for nice ticks\n         * @param  {number} [approxTickNum = 10] Given approx tick number\n         */\n        niceTicks: function (approxTickNum) {\n            approxTickNum = approxTickNum || 10;\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            if (span === Infinity || span <= 0) {\n                return;\n            }\n\n            var interval = numberUtil.quantity(span);\n            var err = approxTickNum / span * interval;\n\n            // Filter ticks to get closer to the desired count.\n            if (err <= 0.5) {\n                interval *= 10;\n            }\n\n            // Interval should be integer\n            while (!isNaN(interval) && Math.abs(interval) < 1 && Math.abs(interval) > 0) {\n                interval *= 10;\n            }\n\n            var niceExtent = [\n                numberUtil.round(mathCeil(extent[0] / interval) * interval),\n                numberUtil.round(mathFloor(extent[1] / interval) * interval)\n            ];\n\n            this._interval = interval;\n            this._niceExtent = niceExtent;\n        },\n\n        /**\n         * Nice extent.\n         * @param {number} [approxTickNum = 10] Given approx tick number\n         * @param {boolean} [fixMin=false]\n         * @param {boolean} [fixMax=false]\n         */\n        niceExtent: function (splitNumber, fixMin, fixMax) {\n            intervalScaleProto.niceExtent.call(this, splitNumber, fixMin, fixMax);\n\n            var originalScale = this._originalScale;\n            originalScale.__fixMin = fixMin;\n            originalScale.__fixMax = fixMax;\n        }\n\n    });\n\n    zrUtil.each(['contain', 'normalize'], function (methodName) {\n        LogScale.prototype[methodName] = function (val) {\n            val = mathLog(val) / mathLog(this.base);\n            return scaleProto[methodName].call(this, val);\n        };\n    });\n\n    LogScale.create = function () {\n        return new LogScale();\n    };\n\n    function fixRoundingError(val, originalVal) {\n        return roundingErrorFix(val, getPrecisionSafe(originalVal));\n    }\n\n    module.exports = LogScale;\n\n\n/***/ }),\n/* 347 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Linear continuous scale\n * @module echarts/coord/scale/Ordinal\n *\n * http://en.wikipedia.org/wiki/Level_of_measurement\n */\n\n// FIXME only one data\n\n\n    var zrUtil = __webpack_require__(158);\n    var Scale = __webpack_require__(181);\n\n    var scaleProto = Scale.prototype;\n\n    var OrdinalScale = Scale.extend({\n\n        type: 'ordinal',\n\n        init: function (data, extent) {\n            this._data = data;\n            this._extent = extent || [0, data.length - 1];\n        },\n\n        parse: function (val) {\n            return typeof val === 'string'\n                ? zrUtil.indexOf(this._data, val)\n                // val might be float.\n                : Math.round(val);\n        },\n\n        contain: function (rank) {\n            rank = this.parse(rank);\n            return scaleProto.contain.call(this, rank)\n                && this._data[rank] != null;\n        },\n\n        /**\n         * Normalize given rank or name to linear [0, 1]\n         * @param {number|string} [val]\n         * @return {number}\n         */\n        normalize: function (val) {\n            return scaleProto.normalize.call(this, this.parse(val));\n        },\n\n        scale: function (val) {\n            return Math.round(scaleProto.scale.call(this, val));\n        },\n\n        /**\n         * @return {Array}\n         */\n        getTicks: function () {\n            var ticks = [];\n            var extent = this._extent;\n            var rank = extent[0];\n\n            while (rank <= extent[1]) {\n                ticks.push(rank);\n                rank++;\n            }\n\n            return ticks;\n        },\n\n        /**\n         * Get item on rank n\n         * @param {number} n\n         * @return {string}\n         */\n        getLabel: function (n) {\n            return this._data[n];\n        },\n\n        /**\n         * @return {number}\n         */\n        count: function () {\n            return this._extent[1] - this._extent[0] + 1;\n        },\n\n        /**\n         * @override\n         */\n        unionExtentFromData: function (data, dim) {\n            this.unionExtent(data.getDataExtent(dim, false));\n        },\n\n        niceTicks: zrUtil.noop,\n        niceExtent: zrUtil.noop\n    });\n\n    /**\n     * @return {module:echarts/scale/Time}\n     */\n    OrdinalScale.create = function () {\n        return new OrdinalScale();\n    };\n\n    module.exports = OrdinalScale;\n\n\n/***/ }),\n/* 348 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Interval scale\n * @module echarts/coord/scale/Time\n */\n\n\n\n    // [About UTC and local time zone]:\n    // In most cases, `number.parseDate` will treat input data string as local time\n    // (except time zone is specified in time string). And `format.formateTime` returns\n    // local time by default. option.useUTC is false by default. This design have\n    // concidered these common case:\n    // (1) Time that is persistent in server is in UTC, but it is needed to be diplayed\n    // in local time by default.\n    // (2) By default, the input data string (e.g., '2011-01-02') should be displayed\n    // as its original time, without any time difference.\n\n    var zrUtil = __webpack_require__(158);\n    var numberUtil = __webpack_require__(161);\n    var formatUtil = __webpack_require__(166);\n    var scaleHelper = __webpack_require__(217);\n\n    var IntervalScale = __webpack_require__(193);\n\n    var intervalScaleProto = IntervalScale.prototype;\n\n    var mathCeil = Math.ceil;\n    var mathFloor = Math.floor;\n    var ONE_SECOND = 1000;\n    var ONE_MINUTE = ONE_SECOND * 60;\n    var ONE_HOUR = ONE_MINUTE * 60;\n    var ONE_DAY = ONE_HOUR * 24;\n\n    // FIXME 公用？\n    var bisect = function (a, x, lo, hi) {\n        while (lo < hi) {\n            var mid = lo + hi >>> 1;\n            if (a[mid][2] < x) {\n                lo = mid + 1;\n            }\n            else {\n                hi  = mid;\n            }\n        }\n        return lo;\n    };\n\n    /**\n     * @alias module:echarts/coord/scale/Time\n     * @constructor\n     */\n    var TimeScale = IntervalScale.extend({\n        type: 'time',\n\n        // Overwrite\n        getLabel: function (val) {\n            var stepLvl = this._stepLvl;\n\n            var date = new Date(val);\n\n            return formatUtil.formatTime(stepLvl[0], date, this.getSetting('useUTC'));\n        },\n\n        // Overwrite\n        niceExtent: function (approxTickNum, fixMin, fixMax) {\n            var extent = this._extent;\n            // If extent start and end are same, expand them\n            if (extent[0] === extent[1]) {\n                // Expand extent\n                extent[0] -= ONE_DAY;\n                extent[1] += ONE_DAY;\n            }\n            // If there are no data and extent are [Infinity, -Infinity]\n            if (extent[1] === -Infinity && extent[0] === Infinity) {\n                var d = new Date();\n                extent[1] = new Date(d.getFullYear(), d.getMonth(), d.getDate());\n                extent[0] = extent[1] - ONE_DAY;\n            }\n\n            this.niceTicks(approxTickNum);\n\n            // var extent = this._extent;\n            var interval = this._interval;\n\n            if (!fixMin) {\n                extent[0] = numberUtil.round(mathFloor(extent[0] / interval) * interval);\n            }\n            if (!fixMax) {\n                extent[1] = numberUtil.round(mathCeil(extent[1] / interval) * interval);\n            }\n        },\n\n        // Overwrite\n        niceTicks: function (approxTickNum) {\n            var timezoneOffset = this.getSetting('useUTC')\n                ? 0 : numberUtil.getTimezoneOffset() * 60 * 1000;\n            approxTickNum = approxTickNum || 10;\n\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            var approxInterval = span / approxTickNum;\n            var scaleLevelsLen = scaleLevels.length;\n            var idx = bisect(scaleLevels, approxInterval, 0, scaleLevelsLen);\n\n            var level = scaleLevels[Math.min(idx, scaleLevelsLen - 1)];\n            var interval = level[2];\n            // Same with interval scale if span is much larger than 1 year\n            if (level[0] === 'year') {\n                var yearSpan = span / interval;\n\n                // From \"Nice Numbers for Graph Labels\" of Graphic Gems\n                // var niceYearSpan = numberUtil.nice(yearSpan, false);\n                var yearStep = numberUtil.nice(yearSpan / approxTickNum, true);\n\n                interval *= yearStep;\n            }\n\n            var niceExtent = [\n                Math.round(mathCeil((extent[0] - timezoneOffset) / interval) * interval + timezoneOffset),\n                Math.round(mathFloor((extent[1] - timezoneOffset)/ interval) * interval + timezoneOffset)\n            ];\n\n            scaleHelper.fixExtent(niceExtent, extent);\n\n            this._stepLvl = level;\n            // Interval will be used in getTicks\n            this._interval = interval;\n            this._niceExtent = niceExtent;\n        },\n\n        parse: function (val) {\n            // val might be float.\n            return +numberUtil.parseDate(val);\n        }\n    });\n\n    zrUtil.each(['contain', 'normalize'], function (methodName) {\n        TimeScale.prototype[methodName] = function (val) {\n            return intervalScaleProto[methodName].call(this, this.parse(val));\n        };\n    });\n\n    // Steps from d3\n    var scaleLevels = [\n        // Format       step    interval\n        ['hh:mm:ss',    1,      ONE_SECOND],           // 1s\n        ['hh:mm:ss',    5,      ONE_SECOND * 5],       // 5s\n        ['hh:mm:ss',    10,     ONE_SECOND * 10],      // 10s\n        ['hh:mm:ss',    15,     ONE_SECOND * 15],      // 15s\n        ['hh:mm:ss',    30,     ONE_SECOND * 30],      // 30s\n        ['hh:mm\\nMM-dd',1,      ONE_MINUTE],          // 1m\n        ['hh:mm\\nMM-dd',5,      ONE_MINUTE * 5],      // 5m\n        ['hh:mm\\nMM-dd',10,     ONE_MINUTE * 10],     // 10m\n        ['hh:mm\\nMM-dd',15,     ONE_MINUTE * 15],     // 15m\n        ['hh:mm\\nMM-dd',30,     ONE_MINUTE * 30],     // 30m\n        ['hh:mm\\nMM-dd',1,      ONE_HOUR],        // 1h\n        ['hh:mm\\nMM-dd',2,      ONE_HOUR * 2],    // 2h\n        ['hh:mm\\nMM-dd',6,      ONE_HOUR * 6],    // 6h\n        ['hh:mm\\nMM-dd',12,     ONE_HOUR * 12],   // 12h\n        ['MM-dd\\nyyyy', 1,      ONE_DAY],   // 1d\n        ['week',        7,      ONE_DAY * 7],        // 7d\n        ['month',       1,      ONE_DAY * 31],       // 1M\n        ['quarter',     3,      ONE_DAY * 380 / 4],  // 3M\n        ['half-year',   6,      ONE_DAY * 380 / 2],  // 6M\n        ['year',        1,      ONE_DAY * 380]       // 1Y\n    ];\n\n    /**\n     * @param {module:echarts/model/Model}\n     * @return {module:echarts/scale/Time}\n     */\n    TimeScale.create = function (model) {\n        return new TimeScale({useUTC: model.ecModel.get('useUTC')});\n    };\n\n    module.exports = TimeScale;\n\n\n/***/ }),\n/* 349 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var Group = __webpack_require__(183);\n    var componentUtil = __webpack_require__(194);\n    var clazzUtil = __webpack_require__(168);\n\n    var Component = function () {\n        /**\n         * @type {module:zrender/container/Group}\n         * @readOnly\n         */\n        this.group = new Group();\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        this.uid = componentUtil.getUID('viewComponent');\n    };\n\n    Component.prototype = {\n\n        constructor: Component,\n\n        init: function (ecModel, api) {},\n\n        render: function (componentModel, ecModel, api, payload) {},\n\n        dispose: function () {}\n\n    };\n\n    var componentProto = Component.prototype;\n    componentProto.updateView\n        = componentProto.updateLayout\n        = componentProto.updateVisual\n        = function (seriesModel, ecModel, api, payload) {\n            // Do nothing;\n        };\n    // Enable Component.extend.\n    clazzUtil.enableClassExtend(Component);\n\n    // Enable capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(Component, {registerWhenExtend: true});\n\n    module.exports = Component;\n\n\n/***/ }),\n/* 350 */\n/***/ (function(module, exports) {\n\n// Pick color from palette for each data item.\n// Applicable for charts that require applying color palette\n// in data level (like pie, funnel, chord).\n\n\n    module.exports = function (seriesType, ecModel) {\n        // Pie and funnel may use diferrent scope\n        var paletteScope = {};\n        ecModel.eachRawSeriesByType(seriesType, function (seriesModel) {\n            var dataAll = seriesModel.getRawData();\n            var idxMap = {};\n            if (!ecModel.isSeriesFiltered(seriesModel)) {\n                var data = seriesModel.getData();\n                data.each(function (idx) {\n                    var rawIdx = data.getRawIndex(idx);\n                    idxMap[rawIdx] = idx;\n                });\n                dataAll.each(function (rawIdx) {\n                    var filteredIdx = idxMap[rawIdx];\n\n                    // If series.itemStyle.normal.color is a function. itemVisual may be encoded\n                    var singleDataColor = filteredIdx != null\n                        && data.getItemVisual(filteredIdx, 'color', true);\n\n                    if (!singleDataColor) {\n                        // FIXME Performance\n                        var itemModel = dataAll.getItemModel(rawIdx);\n                        var color = itemModel.get('itemStyle.normal.color')\n                            || seriesModel.getColorFromPalette(dataAll.getName(rawIdx), paletteScope);\n                        // Legend may use the visual info in data before processed\n                        dataAll.setItemVisual(rawIdx, 'color', color);\n\n                        // Data is not filtered\n                        if (filteredIdx != null) {\n                            data.setItemVisual(filteredIdx, 'color', color);\n                        }\n                    }\n                    else {\n                        // Set data all color for legend\n                        dataAll.setItemVisual(rawIdx, 'color', singleDataColor);\n                    }\n                });\n            }\n        });\n    };\n\n\n/***/ }),\n/* 351 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    var Gradient = __webpack_require__(198);\n    module.exports = function (ecModel) {\n        function encodeColor(seriesModel) {\n            var colorAccessPath = (seriesModel.visualColorAccessPath || 'itemStyle.normal.color').split('.');\n            var data = seriesModel.getData();\n            var color = seriesModel.get(colorAccessPath) // Set in itemStyle\n                || seriesModel.getColorFromPalette(seriesModel.get('name'));  // Default color\n\n            // FIXME Set color function or use the platte color\n            data.setVisual('color', color);\n\n            // Only visible series has each data be visual encoded\n            if (!ecModel.isSeriesFiltered(seriesModel)) {\n                if (typeof color === 'function' && !(color instanceof Gradient)) {\n                    data.each(function (idx) {\n                        data.setItemVisual(\n                            idx, 'color', color(seriesModel.getDataParams(idx))\n                        );\n                    });\n                }\n\n                // itemStyle in each data item\n                data.each(function (idx) {\n                    var itemModel = data.getItemModel(idx);\n                    var color = itemModel.get(colorAccessPath, true);\n                    if (color != null) {\n                        data.setItemVisual(idx, 'color', color);\n                    }\n                });\n            }\n        }\n        ecModel.eachRawSeries(encodeColor);\n    };\n\n\n/***/ }),\n/* 352 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\n * Resize detection strategy that injects objects to elements in order to detect resize events.\n * Heavily inspired by: http://www.backalleycoder.com/2013/03/18/cross-browser-event-based-element-resize-detection/\n */\n\n\n\nvar browserDetector = __webpack_require__(221);\n\nmodule.exports = function(options) {\n    options             = options || {};\n    var reporter        = options.reporter;\n    var batchProcessor  = options.batchProcessor;\n    var getState        = options.stateHandler.getState;\n\n    if(!reporter) {\n        throw new Error(\"Missing required dependency: reporter.\");\n    }\n\n    /**\n     * Adds a resize event listener to the element.\n     * @public\n     * @param {element} element The element that should have the listener added.\n     * @param {function} listener The listener callback to be called for each resize event of the element. The element will be given as a parameter to the listener callback.\n     */\n    function addListener(element, listener) {\n        if(!getObject(element)) {\n            throw new Error(\"Element is not detectable by this strategy.\");\n        }\n\n        function listenerProxy() {\n            listener(element);\n        }\n\n        if(browserDetector.isIE(8)) {\n            //IE 8 does not support object, but supports the resize event directly on elements.\n            getState(element).object = {\n                proxy: listenerProxy\n            };\n            element.attachEvent(\"onresize\", listenerProxy);\n        } else {\n            var object = getObject(element);\n            object.contentDocument.defaultView.addEventListener(\"resize\", listenerProxy);\n        }\n    }\n\n    /**\n     * Makes an element detectable and ready to be listened for resize events. Will call the callback when the element is ready to be listened for resize changes.\n     * @private\n     * @param {object} options Optional options object.\n     * @param {element} element The element to make detectable\n     * @param {function} callback The callback to be called when the element is ready to be listened for resize changes. Will be called with the element as first parameter.\n     */\n    function makeDetectable(options, element, callback) {\n        if (!callback) {\n            callback = element;\n            element = options;\n            options = null;\n        }\n\n        options = options || {};\n        var debug = options.debug;\n\n        function injectObject(element, callback) {\n            var OBJECT_STYLE = \"display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; border: none; padding: 0; margin: 0; opacity: 0; z-index: -1000; pointer-events: none;\";\n\n            //The target element needs to be positioned (everything except static) so the absolute positioned object will be positioned relative to the target element.\n\n            // Position altering may be performed directly or on object load, depending on if style resolution is possible directly or not.\n            var positionCheckPerformed = false;\n\n            // The element may not yet be attached to the DOM, and therefore the style object may be empty in some browsers.\n            // Since the style object is a reference, it will be updated as soon as the element is attached to the DOM.\n            var style = window.getComputedStyle(element);\n            var width = element.offsetWidth;\n            var height = element.offsetHeight;\n\n            getState(element).startSize = {\n                width: width,\n                height: height\n            };\n\n            function mutateDom() {\n                function alterPositionStyles() {\n                    if(style.position === \"static\") {\n                        element.style.position = \"relative\";\n\n                        var removeRelativeStyles = function(reporter, element, style, property) {\n                            function getNumericalValue(value) {\n                                return value.replace(/[^-\\d\\.]/g, \"\");\n                            }\n\n                            var value = style[property];\n\n                            if(value !== \"auto\" && getNumericalValue(value) !== \"0\") {\n                                reporter.warn(\"An element that is positioned static has style.\" + property + \"=\" + value + \" which is ignored due to the static positioning. The element will need to be positioned relative, so the style.\" + property + \" will be set to 0. Element: \", element);\n                                element.style[property] = 0;\n                            }\n                        };\n\n                        //Check so that there are no accidental styles that will make the element styled differently now that is is relative.\n                        //If there are any, set them to 0 (this should be okay with the user since the style properties did nothing before [since the element was positioned static] anyway).\n                        removeRelativeStyles(reporter, element, style, \"top\");\n                        removeRelativeStyles(reporter, element, style, \"right\");\n                        removeRelativeStyles(reporter, element, style, \"bottom\");\n                        removeRelativeStyles(reporter, element, style, \"left\");\n                    }\n                }\n\n                function onObjectLoad() {\n                    // The object has been loaded, which means that the element now is guaranteed to be attached to the DOM.\n                    if (!positionCheckPerformed) {\n                        alterPositionStyles();\n                    }\n\n                    /*jshint validthis: true */\n\n                    function getDocument(element, callback) {\n                        //Opera 12 seem to call the object.onload before the actual document has been created.\n                        //So if it is not present, poll it with an timeout until it is present.\n                        //TODO: Could maybe be handled better with object.onreadystatechange or similar.\n                        if(!element.contentDocument) {\n                            setTimeout(function checkForObjectDocument() {\n                                getDocument(element, callback);\n                            }, 100);\n\n                            return;\n                        }\n\n                        callback(element.contentDocument);\n                    }\n\n                    //Mutating the object element here seems to fire another load event.\n                    //Mutating the inner document of the object element is fine though.\n                    var objectElement = this;\n\n                    //Create the style element to be added to the object.\n                    getDocument(objectElement, function onObjectDocumentReady(objectDocument) {\n                        //Notify that the element is ready to be listened to.\n                        callback(element);\n                    });\n                }\n\n                // The element may be detached from the DOM, and some browsers does not support style resolving of detached elements.\n                // The alterPositionStyles needs to be delayed until we know the element has been attached to the DOM (which we are sure of when the onObjectLoad has been fired), if style resolution is not possible.\n                if (style.position !== \"\") {\n                    alterPositionStyles(style);\n                    positionCheckPerformed = true;\n                }\n\n                //Add an object element as a child to the target element that will be listened to for resize events.\n                var object = document.createElement(\"object\");\n                object.style.cssText = OBJECT_STYLE;\n                object.tabIndex = -1;\n                object.type = \"text/html\";\n                object.onload = onObjectLoad;\n\n                //Safari: This must occur before adding the object to the DOM.\n                //IE: Does not like that this happens before, even if it is also added after.\n                if(!browserDetector.isIE()) {\n                    object.data = \"about:blank\";\n                }\n\n                element.appendChild(object);\n                getState(element).object = object;\n\n                //IE: This must occur after adding the object to the DOM.\n                if(browserDetector.isIE()) {\n                    object.data = \"about:blank\";\n                }\n            }\n\n            if(batchProcessor) {\n                batchProcessor.add(mutateDom);\n            } else {\n                mutateDom();\n            }\n        }\n\n        if(browserDetector.isIE(8)) {\n            //IE 8 does not support objects properly. Luckily they do support the resize event.\n            //So do not inject the object and notify that the element is already ready to be listened to.\n            //The event handler for the resize event is attached in the utils.addListener instead.\n            callback(element);\n        } else {\n            injectObject(element, callback);\n        }\n    }\n\n    /**\n     * Returns the child object of the target element.\n     * @private\n     * @param {element} element The target element.\n     * @returns The object element of the target.\n     */\n    function getObject(element) {\n        return getState(element).object;\n    }\n\n    function uninstall(element) {\n        if(browserDetector.isIE(8)) {\n            element.detachEvent(\"onresize\", getState(element).object.proxy);\n        } else {\n            element.removeChild(getObject(element));\n        }\n        delete getState(element).object;\n    }\n\n    return {\n        makeDetectable: makeDetectable,\n        addListener: addListener,\n        uninstall: uninstall\n    };\n};\n\n\n/***/ }),\n/* 353 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\n * Resize detection strategy that injects divs to elements in order to detect resize events on scroll events.\n * Heavily inspired by: https://github.com/marcj/css-element-queries/blob/master/src/ResizeSensor.js\n */\n\n\n\nvar forEach = __webpack_require__(222).forEach;\n\nmodule.exports = function(options) {\n    options             = options || {};\n    var reporter        = options.reporter;\n    var batchProcessor  = options.batchProcessor;\n    var getState        = options.stateHandler.getState;\n    var hasState        = options.stateHandler.hasState;\n    var idHandler       = options.idHandler;\n\n    if (!batchProcessor) {\n        throw new Error(\"Missing required dependency: batchProcessor\");\n    }\n\n    if (!reporter) {\n        throw new Error(\"Missing required dependency: reporter.\");\n    }\n\n    //TODO: Could this perhaps be done at installation time?\n    var scrollbarSizes = getScrollbarSizes();\n\n    // Inject the scrollbar styling that prevents them from appearing sometimes in Chrome.\n    // The injected container needs to have a class, so that it may be styled with CSS (pseudo elements).\n    var styleId = \"erd_scroll_detection_scrollbar_style\";\n    var detectionContainerClass = \"erd_scroll_detection_container\";\n    injectScrollStyle(styleId, detectionContainerClass);\n\n    function getScrollbarSizes() {\n        var width = 500;\n        var height = 500;\n\n        var child = document.createElement(\"div\");\n        child.style.cssText = \"position: absolute; width: \" + width*2 + \"px; height: \" + height*2 + \"px; visibility: hidden; margin: 0; padding: 0;\";\n\n        var container = document.createElement(\"div\");\n        container.style.cssText = \"position: absolute; width: \" + width + \"px; height: \" + height + \"px; overflow: scroll; visibility: none; top: \" + -width*3 + \"px; left: \" + -height*3 + \"px; visibility: hidden; margin: 0; padding: 0;\";\n\n        container.appendChild(child);\n\n        document.body.insertBefore(container, document.body.firstChild);\n\n        var widthSize = width - container.clientWidth;\n        var heightSize = height - container.clientHeight;\n\n        document.body.removeChild(container);\n\n        return {\n            width: widthSize,\n            height: heightSize\n        };\n    }\n\n    function injectScrollStyle(styleId, containerClass) {\n        function injectStyle(style, method) {\n            method = method || function (element) {\n                document.head.appendChild(element);\n            };\n\n            var styleElement = document.createElement(\"style\");\n            styleElement.innerHTML = style;\n            styleElement.id = styleId;\n            method(styleElement);\n            return styleElement;\n        }\n\n        if (!document.getElementById(styleId)) {\n            var containerAnimationClass = containerClass + \"_animation\";\n            var containerAnimationActiveClass = containerClass + \"_animation_active\";\n            var style = \"/* Created by the element-resize-detector library. */\\n\";\n            style += \".\" + containerClass + \" > div::-webkit-scrollbar { display: none; }\\n\\n\";\n            style += \".\" + containerAnimationActiveClass + \" { -webkit-animation-duration: 0.1s; animation-duration: 0.1s; -webkit-animation-name: \" + containerAnimationClass + \"; animation-name: \" + containerAnimationClass + \"; }\\n\";\n            style += \"@-webkit-keyframes \" + containerAnimationClass +  \" { 0% { opacity: 1; } 50% { opacity: 0; } 100% { opacity: 1; } }\\n\";\n            style += \"@keyframes \" + containerAnimationClass +          \" { 0% { opacity: 1; } 50% { opacity: 0; } 100% { opacity: 1; } }\";\n            injectStyle(style);\n        }\n    }\n\n    function addAnimationClass(element) {\n        element.className += \" \" + detectionContainerClass + \"_animation_active\";\n    }\n\n    function addEvent(el, name, cb) {\n        if (el.addEventListener) {\n            el.addEventListener(name, cb);\n        } else if(el.attachEvent) {\n            el.attachEvent(\"on\" + name, cb);\n        } else {\n            return reporter.error(\"[scroll] Don't know how to add event listeners.\");\n        }\n    }\n\n    function removeEvent(el, name, cb) {\n        if (el.removeEventListener) {\n            el.removeEventListener(name, cb);\n        } else if(el.detachEvent) {\n            el.detachEvent(\"on\" + name, cb);\n        } else {\n            return reporter.error(\"[scroll] Don't know how to remove event listeners.\");\n        }\n    }\n\n    function getExpandElement(element) {\n        return getState(element).container.childNodes[0].childNodes[0].childNodes[0];\n    }\n\n    function getShrinkElement(element) {\n        return getState(element).container.childNodes[0].childNodes[0].childNodes[1];\n    }\n\n    /**\n     * Adds a resize event listener to the element.\n     * @public\n     * @param {element} element The element that should have the listener added.\n     * @param {function} listener The listener callback to be called for each resize event of the element. The element will be given as a parameter to the listener callback.\n     */\n    function addListener(element, listener) {\n        var listeners = getState(element).listeners;\n\n        if (!listeners.push) {\n            throw new Error(\"Cannot add listener to an element that is not detectable.\");\n        }\n\n        getState(element).listeners.push(listener);\n    }\n\n    /**\n     * Makes an element detectable and ready to be listened for resize events. Will call the callback when the element is ready to be listened for resize changes.\n     * @private\n     * @param {object} options Optional options object.\n     * @param {element} element The element to make detectable\n     * @param {function} callback The callback to be called when the element is ready to be listened for resize changes. Will be called with the element as first parameter.\n     */\n    function makeDetectable(options, element, callback) {\n        if (!callback) {\n            callback = element;\n            element = options;\n            options = null;\n        }\n\n        options = options || {};\n\n        function debug() {\n            if (options.debug) {\n                var args = Array.prototype.slice.call(arguments);\n                args.unshift(idHandler.get(element), \"Scroll: \");\n                if (reporter.log.apply) {\n                    reporter.log.apply(null, args);\n                } else {\n                    for (var i = 0; i < args.length; i++) {\n                        reporter.log(args[i]);\n                    }\n                }\n            }\n        }\n\n        function isDetached(element) {\n            function isInDocument(element) {\n                return element === element.ownerDocument.body || element.ownerDocument.body.contains(element);\n            }\n\n            if (!isInDocument(element)) {\n                return true;\n            }\n\n            // FireFox returns null style in hidden iframes. See https://github.com/wnr/element-resize-detector/issues/68 and https://bugzilla.mozilla.org/show_bug.cgi?id=795520\n            if (getComputedStyle(element) === null) {\n                return true;\n            }\n\n            return false;\n        }\n\n        function isUnrendered(element) {\n            // Check the absolute positioned container since the top level container is display: inline.\n            var container = getState(element).container.childNodes[0];\n            var style = getComputedStyle(container);\n            return !style.width || style.width.indexOf(\"px\") === -1; //Can only compute pixel value when rendered.\n        }\n\n        function getStyle() {\n            // Some browsers only force layouts when actually reading the style properties of the style object, so make sure that they are all read here,\n            // so that the user of the function can be sure that it will perform the layout here, instead of later (important for batching).\n            var elementStyle            = getComputedStyle(element);\n            var style                   = {};\n            style.position              = elementStyle.position;\n            style.width                 = element.offsetWidth;\n            style.height                = element.offsetHeight;\n            style.top                   = elementStyle.top;\n            style.right                 = elementStyle.right;\n            style.bottom                = elementStyle.bottom;\n            style.left                  = elementStyle.left;\n            style.widthCSS              = elementStyle.width;\n            style.heightCSS             = elementStyle.height;\n            return style;\n        }\n\n        function storeStartSize() {\n            var style = getStyle();\n            getState(element).startSize = {\n                width: style.width,\n                height: style.height\n            };\n            debug(\"Element start size\", getState(element).startSize);\n        }\n\n        function initListeners() {\n            getState(element).listeners = [];\n        }\n\n        function storeStyle() {\n            debug(\"storeStyle invoked.\");\n            if (!getState(element)) {\n                debug(\"Aborting because element has been uninstalled\");\n                return;\n            }\n\n            var style = getStyle();\n            getState(element).style = style;\n        }\n\n        function storeCurrentSize(element, width, height) {\n            getState(element).lastWidth = width;\n            getState(element).lastHeight  = height;\n        }\n\n        function getExpandChildElement(element) {\n            return getExpandElement(element).childNodes[0];\n        }\n\n        function getWidthOffset() {\n            return 2 * scrollbarSizes.width + 1;\n        }\n\n        function getHeightOffset() {\n            return 2 * scrollbarSizes.height + 1;\n        }\n\n        function getExpandWidth(width) {\n            return width + 10 + getWidthOffset();\n        }\n\n        function getExpandHeight(height) {\n            return height + 10 + getHeightOffset();\n        }\n\n        function getShrinkWidth(width) {\n            return width * 2 + getWidthOffset();\n        }\n\n        function getShrinkHeight(height) {\n            return height * 2 + getHeightOffset();\n        }\n\n        function positionScrollbars(element, width, height) {\n            var expand          = getExpandElement(element);\n            var shrink          = getShrinkElement(element);\n            var expandWidth     = getExpandWidth(width);\n            var expandHeight    = getExpandHeight(height);\n            var shrinkWidth     = getShrinkWidth(width);\n            var shrinkHeight    = getShrinkHeight(height);\n            expand.scrollLeft   = expandWidth;\n            expand.scrollTop    = expandHeight;\n            shrink.scrollLeft   = shrinkWidth;\n            shrink.scrollTop    = shrinkHeight;\n        }\n\n        function injectContainerElement() {\n            var container = getState(element).container;\n\n            if (!container) {\n                container                   = document.createElement(\"div\");\n                container.className         = detectionContainerClass;\n                container.style.cssText     = \"visibility: hidden; display: inline; width: 0px; height: 0px; z-index: -1; overflow: hidden; margin: 0; padding: 0;\";\n                getState(element).container = container;\n                addAnimationClass(container);\n                element.appendChild(container);\n\n                var onAnimationStart = function () {\n                    getState(element).onRendered && getState(element).onRendered();\n                };\n\n                addEvent(container, \"animationstart\", onAnimationStart);\n\n                // Store the event handler here so that they may be removed when uninstall is called.\n                // See uninstall function for an explanation why it is needed.\n                getState(element).onAnimationStart = onAnimationStart;\n            }\n\n            return container;\n        }\n\n        function injectScrollElements() {\n            function alterPositionStyles() {\n                var style = getState(element).style;\n\n                if(style.position === \"static\") {\n                    element.style.position = \"relative\";\n\n                    var removeRelativeStyles = function(reporter, element, style, property) {\n                        function getNumericalValue(value) {\n                            return value.replace(/[^-\\d\\.]/g, \"\");\n                        }\n\n                        var value = style[property];\n\n                        if(value !== \"auto\" && getNumericalValue(value) !== \"0\") {\n                            reporter.warn(\"An element that is positioned static has style.\" + property + \"=\" + value + \" which is ignored due to the static positioning. The element will need to be positioned relative, so the style.\" + property + \" will be set to 0. Element: \", element);\n                            element.style[property] = 0;\n                        }\n                    };\n\n                    //Check so that there are no accidental styles that will make the element styled differently now that is is relative.\n                    //If there are any, set them to 0 (this should be okay with the user since the style properties did nothing before [since the element was positioned static] anyway).\n                    removeRelativeStyles(reporter, element, style, \"top\");\n                    removeRelativeStyles(reporter, element, style, \"right\");\n                    removeRelativeStyles(reporter, element, style, \"bottom\");\n                    removeRelativeStyles(reporter, element, style, \"left\");\n                }\n            }\n\n            function getLeftTopBottomRightCssText(left, top, bottom, right) {\n                left = (!left ? \"0\" : (left + \"px\"));\n                top = (!top ? \"0\" : (top + \"px\"));\n                bottom = (!bottom ? \"0\" : (bottom + \"px\"));\n                right = (!right ? \"0\" : (right + \"px\"));\n\n                return \"left: \" + left + \"; top: \" + top + \"; right: \" + right + \"; bottom: \" + bottom + \";\";\n            }\n\n            debug(\"Injecting elements\");\n\n            if (!getState(element)) {\n                debug(\"Aborting because element has been uninstalled\");\n                return;\n            }\n\n            alterPositionStyles();\n\n            var rootContainer = getState(element).container;\n\n            if (!rootContainer) {\n                rootContainer = injectContainerElement();\n            }\n\n            // Due to this WebKit bug https://bugs.webkit.org/show_bug.cgi?id=80808 (currently fixed in Blink, but still present in WebKit browsers such as Safari),\n            // we need to inject two containers, one that is width/height 100% and another that is left/top -1px so that the final container always is 1x1 pixels bigger than\n            // the targeted element.\n            // When the bug is resolved, \"containerContainer\" may be removed.\n\n            // The outer container can occasionally be less wide than the targeted when inside inline elements element in WebKit (see https://bugs.webkit.org/show_bug.cgi?id=152980).\n            // This should be no problem since the inner container either way makes sure the injected scroll elements are at least 1x1 px.\n\n            var scrollbarWidth          = scrollbarSizes.width;\n            var scrollbarHeight         = scrollbarSizes.height;\n            var containerContainerStyle = \"position: absolute; flex: none; overflow: hidden; z-index: -1; visibility: hidden; width: 100%; height: 100%; left: 0px; top: 0px;\";\n            var containerStyle          = \"position: absolute; flex: none; overflow: hidden; z-index: -1; visibility: hidden; \" + getLeftTopBottomRightCssText(-(1 + scrollbarWidth), -(1 + scrollbarHeight), -scrollbarHeight, -scrollbarWidth);\n            var expandStyle             = \"position: absolute; flex: none; overflow: scroll; z-index: -1; visibility: hidden; width: 100%; height: 100%;\";\n            var shrinkStyle             = \"position: absolute; flex: none; overflow: scroll; z-index: -1; visibility: hidden; width: 100%; height: 100%;\";\n            var expandChildStyle        = \"position: absolute; left: 0; top: 0;\";\n            var shrinkChildStyle        = \"position: absolute; width: 200%; height: 200%;\";\n\n            var containerContainer      = document.createElement(\"div\");\n            var container               = document.createElement(\"div\");\n            var expand                  = document.createElement(\"div\");\n            var expandChild             = document.createElement(\"div\");\n            var shrink                  = document.createElement(\"div\");\n            var shrinkChild             = document.createElement(\"div\");\n\n            // Some browsers choke on the resize system being rtl, so force it to ltr. https://github.com/wnr/element-resize-detector/issues/56\n            // However, dir should not be set on the top level container as it alters the dimensions of the target element in some browsers.\n            containerContainer.dir              = \"ltr\";\n\n            containerContainer.style.cssText    = containerContainerStyle;\n            containerContainer.className        = detectionContainerClass;\n            container.className                 = detectionContainerClass;\n            container.style.cssText             = containerStyle;\n            expand.style.cssText                = expandStyle;\n            expandChild.style.cssText           = expandChildStyle;\n            shrink.style.cssText                = shrinkStyle;\n            shrinkChild.style.cssText           = shrinkChildStyle;\n\n            expand.appendChild(expandChild);\n            shrink.appendChild(shrinkChild);\n            container.appendChild(expand);\n            container.appendChild(shrink);\n            containerContainer.appendChild(container);\n            rootContainer.appendChild(containerContainer);\n\n            function onExpandScroll() {\n                getState(element).onExpand && getState(element).onExpand();\n            }\n\n            function onShrinkScroll() {\n                getState(element).onShrink && getState(element).onShrink();\n            }\n\n            addEvent(expand, \"scroll\", onExpandScroll);\n            addEvent(shrink, \"scroll\", onShrinkScroll);\n\n            // Store the event handlers here so that they may be removed when uninstall is called.\n            // See uninstall function for an explanation why it is needed.\n            getState(element).onExpandScroll = onExpandScroll;\n            getState(element).onShrinkScroll = onShrinkScroll;\n        }\n\n        function registerListenersAndPositionElements() {\n            function updateChildSizes(element, width, height) {\n                var expandChild             = getExpandChildElement(element);\n                var expandWidth             = getExpandWidth(width);\n                var expandHeight            = getExpandHeight(height);\n                expandChild.style.width     = expandWidth + \"px\";\n                expandChild.style.height    = expandHeight + \"px\";\n            }\n\n            function updateDetectorElements(done) {\n                var width           = element.offsetWidth;\n                var height          = element.offsetHeight;\n\n                debug(\"Storing current size\", width, height);\n\n                // Store the size of the element sync here, so that multiple scroll events may be ignored in the event listeners.\n                // Otherwise the if-check in handleScroll is useless.\n                storeCurrentSize(element, width, height);\n\n                // Since we delay the processing of the batch, there is a risk that uninstall has been called before the batch gets to execute.\n                // Since there is no way to cancel the fn executions, we need to add an uninstall guard to all fns of the batch.\n\n                batchProcessor.add(0, function performUpdateChildSizes() {\n                    if (!getState(element)) {\n                        debug(\"Aborting because element has been uninstalled\");\n                        return;\n                    }\n\n                    if (!areElementsInjected()) {\n                        debug(\"Aborting because element container has not been initialized\");\n                        return;\n                    }\n\n                    if (options.debug) {\n                        var w = element.offsetWidth;\n                        var h = element.offsetHeight;\n\n                        if (w !== width || h !== height) {\n                            reporter.warn(idHandler.get(element), \"Scroll: Size changed before updating detector elements.\");\n                        }\n                    }\n\n                    updateChildSizes(element, width, height);\n                });\n\n                batchProcessor.add(1, function updateScrollbars() {\n                    if (!getState(element)) {\n                        debug(\"Aborting because element has been uninstalled\");\n                        return;\n                    }\n\n                    if (!areElementsInjected()) {\n                        debug(\"Aborting because element container has not been initialized\");\n                        return;\n                    }\n\n                    positionScrollbars(element, width, height);\n                });\n\n                if (done) {\n                    batchProcessor.add(2, function () {\n                        if (!getState(element)) {\n                            debug(\"Aborting because element has been uninstalled\");\n                            return;\n                        }\n\n                        if (!areElementsInjected()) {\n                          debug(\"Aborting because element container has not been initialized\");\n                          return;\n                        }\n\n                        done();\n                    });\n                }\n            }\n\n            function areElementsInjected() {\n                return !!getState(element).container;\n            }\n\n            function notifyListenersIfNeeded() {\n                function isFirstNotify() {\n                    return getState(element).lastNotifiedWidth === undefined;\n                }\n\n                debug(\"notifyListenersIfNeeded invoked\");\n\n                var state = getState(element);\n\n                // Don't notify the if the current size is the start size, and this is the first notification.\n                if (isFirstNotify() && state.lastWidth === state.startSize.width && state.lastHeight === state.startSize.height) {\n                    return debug(\"Not notifying: Size is the same as the start size, and there has been no notification yet.\");\n                }\n\n                // Don't notify if the size already has been notified.\n                if (state.lastWidth === state.lastNotifiedWidth && state.lastHeight === state.lastNotifiedHeight) {\n                    return debug(\"Not notifying: Size already notified\");\n                }\n\n\n                debug(\"Current size not notified, notifying...\");\n                state.lastNotifiedWidth = state.lastWidth;\n                state.lastNotifiedHeight = state.lastHeight;\n                forEach(getState(element).listeners, function (listener) {\n                    listener(element);\n                });\n            }\n\n            function handleRender() {\n                debug(\"startanimation triggered.\");\n\n                if (isUnrendered(element)) {\n                    debug(\"Ignoring since element is still unrendered...\");\n                    return;\n                }\n\n                debug(\"Element rendered.\");\n                var expand = getExpandElement(element);\n                var shrink = getShrinkElement(element);\n                if (expand.scrollLeft === 0 || expand.scrollTop === 0 || shrink.scrollLeft === 0 || shrink.scrollTop === 0) {\n                    debug(\"Scrollbars out of sync. Updating detector elements...\");\n                    updateDetectorElements(notifyListenersIfNeeded);\n                }\n            }\n\n            function handleScroll() {\n                debug(\"Scroll detected.\");\n\n                if (isUnrendered(element)) {\n                    // Element is still unrendered. Skip this scroll event.\n                    debug(\"Scroll event fired while unrendered. Ignoring...\");\n                    return;\n                }\n\n                var width = element.offsetWidth;\n                var height = element.offsetHeight;\n\n                if (width !== element.lastWidth || height !== element.lastHeight) {\n                    debug(\"Element size changed.\");\n                    updateDetectorElements(notifyListenersIfNeeded);\n                } else {\n                    debug(\"Element size has not changed (\" + width + \"x\" + height + \").\");\n                }\n            }\n\n            debug(\"registerListenersAndPositionElements invoked.\");\n\n            if (!getState(element)) {\n                debug(\"Aborting because element has been uninstalled\");\n                return;\n            }\n\n            getState(element).onRendered = handleRender;\n            getState(element).onExpand = handleScroll;\n            getState(element).onShrink = handleScroll;\n\n            var style = getState(element).style;\n            updateChildSizes(element, style.width, style.height);\n        }\n\n        function finalizeDomMutation() {\n            debug(\"finalizeDomMutation invoked.\");\n\n            if (!getState(element)) {\n                debug(\"Aborting because element has been uninstalled\");\n                return;\n            }\n\n            var style = getState(element).style;\n            storeCurrentSize(element, style.width, style.height);\n            positionScrollbars(element, style.width, style.height);\n        }\n\n        function ready() {\n            callback(element);\n        }\n\n        function install() {\n            debug(\"Installing...\");\n            initListeners();\n            storeStartSize();\n\n            batchProcessor.add(0, storeStyle);\n            batchProcessor.add(1, injectScrollElements);\n            batchProcessor.add(2, registerListenersAndPositionElements);\n            batchProcessor.add(3, finalizeDomMutation);\n            batchProcessor.add(4, ready);\n        }\n\n        debug(\"Making detectable...\");\n\n        if (isDetached(element)) {\n            debug(\"Element is detached\");\n\n            injectContainerElement();\n\n            debug(\"Waiting until element is attached...\");\n\n            getState(element).onRendered = function () {\n                debug(\"Element is now attached\");\n                install();\n            };\n        } else {\n            install();\n        }\n    }\n\n    function uninstall(element) {\n        var state = getState(element);\n\n        if (!state) {\n            // Uninstall has been called on a non-erd element.\n            return;\n        }\n\n        // Uninstall may have been called in the following scenarios:\n        // (1) Right between the sync code and async batch (here state.busy = true, but nothing have been registered or injected).\n        // (2) In the ready callback of the last level of the batch by another element (here, state.busy = true, but all the stuff has been injected).\n        // (3) After the installation process (here, state.busy = false and all the stuff has been injected).\n        // So to be on the safe side, let's check for each thing before removing.\n\n        // We need to remove the event listeners, because otherwise the event might fire on an uninstall element which results in an error when trying to get the state of the element.\n        state.onExpandScroll && removeEvent(getExpandElement(element), \"scroll\", state.onExpandScroll);\n        state.onShrinkScroll && removeEvent(getShrinkElement(element), \"scroll\", state.onShrinkScroll);\n        state.onAnimationStart && removeEvent(state.container, \"animationstart\", state.onAnimationStart);\n\n        state.container && element.removeChild(state.container);\n    }\n\n    return {\n        makeDetectable: makeDetectable,\n        addListener: addListener,\n        uninstall: uninstall\n    };\n};\n\n\n/***/ }),\n/* 354 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar forEach                 = __webpack_require__(222).forEach;\nvar elementUtilsMaker       = __webpack_require__(355);\nvar listenerHandlerMaker    = __webpack_require__(358);\nvar idGeneratorMaker        = __webpack_require__(356);\nvar idHandlerMaker          = __webpack_require__(357);\nvar reporterMaker           = __webpack_require__(359);\nvar browserDetector         = __webpack_require__(221);\nvar batchProcessorMaker     = __webpack_require__(259);\nvar stateHandler            = __webpack_require__(360);\n\n//Detection strategies.\nvar objectStrategyMaker     = __webpack_require__(352);\nvar scrollStrategyMaker     = __webpack_require__(353);\n\nfunction isCollection(obj) {\n    return Array.isArray(obj) || obj.length !== undefined;\n}\n\nfunction toArray(collection) {\n    if (!Array.isArray(collection)) {\n        var array = [];\n        forEach(collection, function (obj) {\n            array.push(obj);\n        });\n        return array;\n    } else {\n        return collection;\n    }\n}\n\nfunction isElement(obj) {\n    return obj && obj.nodeType === 1;\n}\n\n/**\n * @typedef idHandler\n * @type {object}\n * @property {function} get Gets the resize detector id of the element.\n * @property {function} set Generate and sets the resize detector id of the element.\n */\n\n/**\n * @typedef Options\n * @type {object}\n * @property {boolean} callOnAdd    Determines if listeners should be called when they are getting added.\n                                    Default is true. If true, the listener is guaranteed to be called when it has been added.\n                                    If false, the listener will not be guarenteed to be called when it has been added (does not prevent it from being called).\n * @property {idHandler} idHandler  A custom id handler that is responsible for generating, setting and retrieving id's for elements.\n                                    If not provided, a default id handler will be used.\n * @property {reporter} reporter    A custom reporter that handles reporting logs, warnings and errors.\n                                    If not provided, a default id handler will be used.\n                                    If set to false, then nothing will be reported.\n * @property {boolean} debug        If set to true, the the system will report debug messages as default for the listenTo method.\n */\n\n/**\n * Creates an element resize detector instance.\n * @public\n * @param {Options?} options Optional global options object that will decide how this instance will work.\n */\nmodule.exports = function(options) {\n    options = options || {};\n\n    //idHandler is currently not an option to the listenTo function, so it should not be added to globalOptions.\n    var idHandler;\n\n    if (options.idHandler) {\n        // To maintain compatability with idHandler.get(element, readonly), make sure to wrap the given idHandler\n        // so that readonly flag always is true when it's used here. This may be removed next major version bump.\n        idHandler = {\n            get: function (element) { return options.idHandler.get(element, true); },\n            set: options.idHandler.set\n        };\n    } else {\n        var idGenerator = idGeneratorMaker();\n        var defaultIdHandler = idHandlerMaker({\n            idGenerator: idGenerator,\n            stateHandler: stateHandler\n        });\n        idHandler = defaultIdHandler;\n    }\n\n    //reporter is currently not an option to the listenTo function, so it should not be added to globalOptions.\n    var reporter = options.reporter;\n\n    if(!reporter) {\n        //If options.reporter is false, then the reporter should be quiet.\n        var quiet = reporter === false;\n        reporter = reporterMaker(quiet);\n    }\n\n    //batchProcessor is currently not an option to the listenTo function, so it should not be added to globalOptions.\n    var batchProcessor = getOption(options, \"batchProcessor\", batchProcessorMaker({ reporter: reporter }));\n\n    //Options to be used as default for the listenTo function.\n    var globalOptions = {};\n    globalOptions.callOnAdd     = !!getOption(options, \"callOnAdd\", true);\n    globalOptions.debug         = !!getOption(options, \"debug\", false);\n\n    var eventListenerHandler    = listenerHandlerMaker(idHandler);\n    var elementUtils            = elementUtilsMaker({\n        stateHandler: stateHandler\n    });\n\n    //The detection strategy to be used.\n    var detectionStrategy;\n    var desiredStrategy = getOption(options, \"strategy\", \"object\");\n    var strategyOptions = {\n        reporter: reporter,\n        batchProcessor: batchProcessor,\n        stateHandler: stateHandler,\n        idHandler: idHandler\n    };\n\n    if(desiredStrategy === \"scroll\") {\n        if (browserDetector.isLegacyOpera()) {\n            reporter.warn(\"Scroll strategy is not supported on legacy Opera. Changing to object strategy.\");\n            desiredStrategy = \"object\";\n        } else if (browserDetector.isIE(9)) {\n            reporter.warn(\"Scroll strategy is not supported on IE9. Changing to object strategy.\");\n            desiredStrategy = \"object\";\n        }\n    }\n\n    if(desiredStrategy === \"scroll\") {\n        detectionStrategy = scrollStrategyMaker(strategyOptions);\n    } else if(desiredStrategy === \"object\") {\n        detectionStrategy = objectStrategyMaker(strategyOptions);\n    } else {\n        throw new Error(\"Invalid strategy name: \" + desiredStrategy);\n    }\n\n    //Calls can be made to listenTo with elements that are still being installed.\n    //Also, same elements can occur in the elements list in the listenTo function.\n    //With this map, the ready callbacks can be synchronized between the calls\n    //so that the ready callback can always be called when an element is ready - even if\n    //it wasn't installed from the function itself.\n    var onReadyCallbacks = {};\n\n    /**\n     * Makes the given elements resize-detectable and starts listening to resize events on the elements. Calls the event callback for each event for each element.\n     * @public\n     * @param {Options?} options Optional options object. These options will override the global options. Some options may not be overriden, such as idHandler.\n     * @param {element[]|element} elements The given array of elements to detect resize events of. Single element is also valid.\n     * @param {function} listener The callback to be executed for each resize event for each element.\n     */\n    function listenTo(options, elements, listener) {\n        function onResizeCallback(element) {\n            var listeners = eventListenerHandler.get(element);\n            forEach(listeners, function callListenerProxy(listener) {\n                listener(element);\n            });\n        }\n\n        function addListener(callOnAdd, element, listener) {\n            eventListenerHandler.add(element, listener);\n\n            if(callOnAdd) {\n                listener(element);\n            }\n        }\n\n        //Options object may be omitted.\n        if(!listener) {\n            listener = elements;\n            elements = options;\n            options = {};\n        }\n\n        if(!elements) {\n            throw new Error(\"At least one element required.\");\n        }\n\n        if(!listener) {\n            throw new Error(\"Listener required.\");\n        }\n\n        if (isElement(elements)) {\n            // A single element has been passed in.\n            elements = [elements];\n        } else if (isCollection(elements)) {\n            // Convert collection to array for plugins.\n            // TODO: May want to check so that all the elements in the collection are valid elements.\n            elements = toArray(elements);\n        } else {\n            return reporter.error(\"Invalid arguments. Must be a DOM element or a collection of DOM elements.\");\n        }\n\n        var elementsReady = 0;\n\n        var callOnAdd = getOption(options, \"callOnAdd\", globalOptions.callOnAdd);\n        var onReadyCallback = getOption(options, \"onReady\", function noop() {});\n        var debug = getOption(options, \"debug\", globalOptions.debug);\n\n        forEach(elements, function attachListenerToElement(element) {\n            if (!stateHandler.getState(element)) {\n                stateHandler.initState(element);\n                idHandler.set(element);\n            }\n\n            var id = idHandler.get(element);\n\n            debug && reporter.log(\"Attaching listener to element\", id, element);\n\n            if(!elementUtils.isDetectable(element)) {\n                debug && reporter.log(id, \"Not detectable.\");\n                if(elementUtils.isBusy(element)) {\n                    debug && reporter.log(id, \"System busy making it detectable\");\n\n                    //The element is being prepared to be detectable. Do not make it detectable.\n                    //Just add the listener, because the element will soon be detectable.\n                    addListener(callOnAdd, element, listener);\n                    onReadyCallbacks[id] = onReadyCallbacks[id] || [];\n                    onReadyCallbacks[id].push(function onReady() {\n                        elementsReady++;\n\n                        if(elementsReady === elements.length) {\n                            onReadyCallback();\n                        }\n                    });\n                    return;\n                }\n\n                debug && reporter.log(id, \"Making detectable...\");\n                //The element is not prepared to be detectable, so do prepare it and add a listener to it.\n                elementUtils.markBusy(element, true);\n                return detectionStrategy.makeDetectable({ debug: debug }, element, function onElementDetectable(element) {\n                    debug && reporter.log(id, \"onElementDetectable\");\n\n                    if (stateHandler.getState(element)) {\n                        elementUtils.markAsDetectable(element);\n                        elementUtils.markBusy(element, false);\n                        detectionStrategy.addListener(element, onResizeCallback);\n                        addListener(callOnAdd, element, listener);\n\n                        // Since the element size might have changed since the call to \"listenTo\", we need to check for this change,\n                        // so that a resize event may be emitted.\n                        // Having the startSize object is optional (since it does not make sense in some cases such as unrendered elements), so check for its existance before.\n                        // Also, check the state existance before since the element may have been uninstalled in the installation process.\n                        var state = stateHandler.getState(element);\n                        if (state && state.startSize) {\n                            var width = element.offsetWidth;\n                            var height = element.offsetHeight;\n                            if (state.startSize.width !== width || state.startSize.height !== height) {\n                                onResizeCallback(element);\n                            }\n                        }\n\n                        if(onReadyCallbacks[id]) {\n                            forEach(onReadyCallbacks[id], function(callback) {\n                                callback();\n                            });\n                        }\n                    } else {\n                        // The element has been unisntalled before being detectable.\n                        debug && reporter.log(id, \"Element uninstalled before being detectable.\");\n                    }\n\n                    delete onReadyCallbacks[id];\n\n                    elementsReady++;\n                    if(elementsReady === elements.length) {\n                        onReadyCallback();\n                    }\n                });\n            }\n\n            debug && reporter.log(id, \"Already detecable, adding listener.\");\n\n            //The element has been prepared to be detectable and is ready to be listened to.\n            addListener(callOnAdd, element, listener);\n            elementsReady++;\n        });\n\n        if(elementsReady === elements.length) {\n            onReadyCallback();\n        }\n    }\n\n    function uninstall(elements) {\n        if(!elements) {\n            return reporter.error(\"At least one element is required.\");\n        }\n\n        if (isElement(elements)) {\n            // A single element has been passed in.\n            elements = [elements];\n        } else if (isCollection(elements)) {\n            // Convert collection to array for plugins.\n            // TODO: May want to check so that all the elements in the collection are valid elements.\n            elements = toArray(elements);\n        } else {\n            return reporter.error(\"Invalid arguments. Must be a DOM element or a collection of DOM elements.\");\n        }\n\n        forEach(elements, function (element) {\n            eventListenerHandler.removeAllListeners(element);\n            detectionStrategy.uninstall(element);\n            stateHandler.cleanState(element);\n        });\n    }\n\n    return {\n        listenTo: listenTo,\n        removeListener: eventListenerHandler.removeListener,\n        removeAllListeners: eventListenerHandler.removeAllListeners,\n        uninstall: uninstall\n    };\n};\n\nfunction getOption(options, name, defaultValue) {\n    var value = options[name];\n\n    if((value === undefined || value === null) && defaultValue !== undefined) {\n        return defaultValue;\n    }\n\n    return value;\n}\n\n\n/***/ }),\n/* 355 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function(options) {\n    var getState = options.stateHandler.getState;\n\n    /**\n     * Tells if the element has been made detectable and ready to be listened for resize events.\n     * @public\n     * @param {element} The element to check.\n     * @returns {boolean} True or false depending on if the element is detectable or not.\n     */\n    function isDetectable(element) {\n        var state = getState(element);\n        return state && !!state.isDetectable;\n    }\n\n    /**\n     * Marks the element that it has been made detectable and ready to be listened for resize events.\n     * @public\n     * @param {element} The element to mark.\n     */\n    function markAsDetectable(element) {\n        getState(element).isDetectable = true;\n    }\n\n    /**\n     * Tells if the element is busy or not.\n     * @public\n     * @param {element} The element to check.\n     * @returns {boolean} True or false depending on if the element is busy or not.\n     */\n    function isBusy(element) {\n        return !!getState(element).busy;\n    }\n\n    /**\n     * Marks the object is busy and should not be made detectable.\n     * @public\n     * @param {element} element The element to mark.\n     * @param {boolean} busy If the element is busy or not.\n     */\n    function markBusy(element, busy) {\n        getState(element).busy = !!busy;\n    }\n\n    return {\n        isDetectable: isDetectable,\n        markAsDetectable: markAsDetectable,\n        isBusy: isBusy,\n        markBusy: markBusy\n    };\n};\n\n\n/***/ }),\n/* 356 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function() {\n    var idCount = 1;\n\n    /**\n     * Generates a new unique id in the context.\n     * @public\n     * @returns {number} A unique id in the context.\n     */\n    function generate() {\n        return idCount++;\n    }\n\n    return {\n        generate: generate\n    };\n};\n\n\n/***/ }),\n/* 357 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function(options) {\n    var idGenerator     = options.idGenerator;\n    var getState        = options.stateHandler.getState;\n\n    /**\n     * Gets the resize detector id of the element.\n     * @public\n     * @param {element} element The target element to get the id of.\n     * @returns {string|number|null} The id of the element. Null if it has no id.\n     */\n    function getId(element) {\n        var state = getState(element);\n\n        if (state && state.id !== undefined) {\n            return state.id;\n        }\n\n        return null;\n    }\n\n    /**\n     * Sets the resize detector id of the element. Requires the element to have a resize detector state initialized.\n     * @public\n     * @param {element} element The target element to set the id of.\n     * @returns {string|number|null} The id of the element.\n     */\n    function setId(element) {\n        var state = getState(element);\n\n        if (!state) {\n            throw new Error(\"setId required the element to have a resize detection state.\");\n        }\n\n        var id = idGenerator.generate();\n\n        state.id = id;\n\n        return id;\n    }\n\n    return {\n        get: getId,\n        set: setId\n    };\n};\n\n\n/***/ }),\n/* 358 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function(idHandler) {\n    var eventListeners = {};\n\n    /**\n     * Gets all listeners for the given element.\n     * @public\n     * @param {element} element The element to get all listeners for.\n     * @returns All listeners for the given element.\n     */\n    function getListeners(element) {\n        var id = idHandler.get(element);\n\n        if (id === undefined) {\n            return [];\n        }\n\n        return eventListeners[id] || [];\n    }\n\n    /**\n     * Stores the given listener for the given element. Will not actually add the listener to the element.\n     * @public\n     * @param {element} element The element that should have the listener added.\n     * @param {function} listener The callback that the element has added.\n     */\n    function addListener(element, listener) {\n        var id = idHandler.get(element);\n\n        if(!eventListeners[id]) {\n            eventListeners[id] = [];\n        }\n\n        eventListeners[id].push(listener);\n    }\n\n    function removeListener(element, listener) {\n        var listeners = getListeners(element);\n        for (var i = 0, len = listeners.length; i < len; ++i) {\n            if (listeners[i] === listener) {\n              listeners.splice(i, 1);\n              break;\n            }\n        }\n    }\n\n    function removeAllListeners(element) {\n      var listeners = getListeners(element);\n      if (!listeners) { return; }\n      listeners.length = 0;\n    }\n\n    return {\n        get: getListeners,\n        add: addListener,\n        removeListener: removeListener,\n        removeAllListeners: removeAllListeners\n    };\n};\n\n\n/***/ }),\n/* 359 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/* global console: false */\n\n/**\n * Reporter that handles the reporting of logs, warnings and errors.\n * @public\n * @param {boolean} quiet Tells if the reporter should be quiet or not.\n */\nmodule.exports = function(quiet) {\n    function noop() {\n        //Does nothing.\n    }\n\n    var reporter = {\n        log: noop,\n        warn: noop,\n        error: noop\n    };\n\n    if(!quiet && window.console) {\n        var attachFunction = function(reporter, name) {\n            //The proxy is needed to be able to call the method with the console context,\n            //since we cannot use bind.\n            reporter[name] = function reporterProxy() {\n                var f = console[name];\n                if (f.apply) { //IE9 does not support console.log.apply :)\n                    f.apply(console, arguments);\n                } else {\n                    for (var i = 0; i < arguments.length; i++) {\n                        f(arguments[i]);\n                    }\n                }\n            };\n        };\n\n        attachFunction(reporter, \"log\");\n        attachFunction(reporter, \"warn\");\n        attachFunction(reporter, \"error\");\n    }\n\n    return reporter;\n};\n\n/***/ }),\n/* 360 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar prop = \"_erd\";\n\nfunction initState(element) {\n    element[prop] = {};\n    return getState(element);\n}\n\nfunction getState(element) {\n    return element[prop];\n}\n\nfunction cleanState(element) {\n    delete element[prop];\n}\n\nmodule.exports = {\n    initState: initState,\n    getState: getState,\n    cleanState: cleanState\n};\n\n\n/***/ }),\n/* 361 */,\n/* 362 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(279);\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(151)(\"24f3ff41\", content, true);\n\n/***/ }),\n/* 363 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(280);\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(151)(\"4afb3c5a\", content, true);\n\n/***/ }),\n/* 364 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(281);\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(151)(\"54c74433\", content, true);\n\n/***/ }),\n/* 365 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(282);\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(151)(\"5670c3b4\", content, true);\n\n/***/ }),\n/* 366 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(283);\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(151)(\"372c4849\", content, true);\n\n/***/ }),\n/* 367 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(284);\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(151)(\"5d6a339b\", content, true);\n\n/***/ }),\n/* 368 */,\n/* 369 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(286);\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(151)(\"85dca9ca\", content, true);\n\n/***/ }),\n/* 370 */,\n/* 371 */,\n/* 372 */,\n/* 373 */,\n/* 374 */,\n/* 375 */,\n/* 376 */,\n/* 377 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        result = wait - timeSinceLastCall;\n\n    return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = debounce;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(32)))\n\n/***/ }),\n/* 378 */\n/***/ (function(module, exports, __webpack_require__) {\n\n!function(t,e){ true?module.exports=e():\"function\"==typeof define&&define.amd?define(\"CountTo\",[],e):\"object\"==typeof exports?exports.CountTo=e():t.CountTo=e()}(this,function(){return function(t){function e(n){if(i[n])return i[n].exports;var a=i[n]={i:n,l:!1,exports:{}};return t[n].call(a.exports,a,a.exports,e),a.l=!0,a.exports}var i={};return e.m=t,e.c=i,e.i=function(t){return t},e.d=function(t,i,n){e.o(t,i)||Object.defineProperty(t,i,{configurable:!1,enumerable:!0,get:n})},e.n=function(t){var i=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(i,\"a\",i),i},e.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},e.p=\"/dist/\",e(e.s=5)}([function(t,e,i){var n=i(3)(i(1),i(4),null,null);t.exports=n.exports},function(t,e,i){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0});var n=i(2);e.default={props:{startVal:{type:Number,required:!1,default:0},endVal:{type:Number,required:!1,default:2017},duration:{type:Number,required:!1,default:3e3},autoplay:{type:Boolean,required:!1,default:!0},decimals:{type:Number,required:!1,default:0,validator:function(t){return t>=0}},decimal:{type:String,required:!1,default:\".\"},separator:{type:String,required:!1,default:\",\"},prefix:{type:String,required:!1,default:\"\"},suffix:{type:String,required:!1,default:\"\"},useEasing:{type:Boolean,required:!1,default:!0},easingFn:{type:Function,default:function(t,e,i,n){return i*(1-Math.pow(2,-10*t/n))*1024/1023+e}}},data:function(){return{localStartVal:this.startVal,displayValue:this.formatNumber(this.startVal),printVal:null,paused:!1,localDuration:this.duration,startTime:null,timestamp:null,remaining:null,rAF:null}},computed:{countDown:function(){return this.startVal>this.endVal}},mounted:function(){this.autoplay&&this.start(),this.$emit(\"mountedCallback\")},methods:{start:function(){this.localStartVal=this.startVal,this.startTime=null,this.localDuration=this.duration,this.paused=!1,this.rAF=(0,n.requestAnimationFrame)(this.count)},pauseResume:function(){this.paused?(this.resume(),this.paused=!1):(this.pause(),this.paused=!0)},pause:function(){(0,n.cancelAnimationFrame)(this.rAF)},resume:function(){this.startTime=null,this.localDuration=+this.remaining,this.localStartVal=+this.printVal,(0,n.requestAnimationFrame)(this.count)},reset:function(){this.startTime=null,(0,n.cancelAnimationFrame)(this.rAF),this.displayValue=this.formatNumber(this.startVal)},count:function(t){this.startTime||(this.startTime=t),this.timestamp=t;var e=t-this.startTime;this.remaining=this.localDuration-e,this.useEasing?this.countDown?this.printVal=this.localStartVal-this.easingFn(e,0,this.localStartVal-this.endVal,this.localDuration):this.printVal=this.easingFn(e,this.localStartVal,this.endVal-this.localStartVal,this.localDuration):this.countDown?this.printVal=this.localStartVal-(this.localStartVal-this.endVal)*(e/this.localDuration):this.printVal=this.localStartVal+(this.localStartVal-this.startVal)*(e/this.localDuration),this.countDown?this.printVal=this.printVal<this.endVal?this.endVal:this.printVal:this.printVal=this.printVal>this.endVal?this.endVal:this.printVal,this.displayValue=this.formatNumber(this.printVal),e<this.localDuration?this.rAF=(0,n.requestAnimationFrame)(this.count):this.$emit(\"callback\")},isNumber:function(t){return!isNaN(parseFloat(t))},formatNumber:function(t){t=t.toFixed(this.decimals),t+=\"\";var e=t.split(\".\"),i=e[0],n=e.length>1?this.decimal+e[1]:\"\",a=/(\\d+)(\\d{3})/;if(this.separator&&!this.isNumber(this.separator))for(;a.test(i);)i=i.replace(a,\"$1\"+this.separator+\"$2\");return this.prefix+i+n+this.suffix}},destroyed:function(){(0,n.cancelAnimationFrame)(this.rAF)}}},function(t,e,i){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0});for(var n=0,a=\"webkit moz ms o\".split(\" \"),r=window.requestAnimationFrame,s=window.cancelAnimationFrame,o=void 0,u=0;u<a.length&&(!r||!s);u++)o=a[u],e.requestAnimationFrame=r=r||window[o+\"RequestAnimationFrame\"],e.cancelAnimationFrame=s=s||window[o+\"CancelAnimationFrame\"]||window[o+\"CancelRequestAnimationFrame\"];r&&s||(e.requestAnimationFrame=r=function(t){var e=(new Date).getTime(),i=Math.max(0,16-(e-n)),a=window.setTimeout(function(){t(e+i)},i);return n=e+i,a},e.cancelAnimationFrame=s=function(t){window.clearTimeout(t)}),e.requestAnimationFrame=r,e.cancelAnimationFrame=s},function(t,e){t.exports=function(t,e,i,n){var a,r=t=t||{},s=typeof t.default;\"object\"!==s&&\"function\"!==s||(a=t,r=t.default);var o=\"function\"==typeof r?r.options:r;if(e&&(o.render=e.render,o.staticRenderFns=e.staticRenderFns),i&&(o._scopeId=i),n){var u=Object.create(o.computed||null);Object.keys(n).forEach(function(t){var e=n[t];u[t]=function(){return e}}),o.computed=u}return{esModule:a,exports:r,options:o}}},function(t,e){t.exports={render:function(){var t=this,e=t.$createElement;return(t._self._c||e)(\"span\",[t._v(\"\\n  \"+t._s(t.displayValue)+\"\\n\")])},staticRenderFns:[]}},function(t,e,i){\"use strict\";function n(t){return t&&t.__esModule?t:{default:t}}Object.defineProperty(e,\"__esModule\",{value:!0});var a=i(0),r=n(a);e.default=r.default,\"undefined\"!=typeof window&&window.Vue&&window.Vue.component(\"count-to\",r.default)}])});\n//# sourceMappingURL=vue-count-to.min.js.map\n\n/***/ }),\n/* 379 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar ECHARTS_EVENTS = [\n  'click',\n  'dblclick',\n  'mouseover',\n  'mouseout',\n  'mousedown',\n  'mouseup',\n  'globalout',\n  'legendselectchanged',\n  'legendselected',\n  'legendunselected',\n  'datazoom',\n  'datarangeselected',\n  'timelinechanged',\n  'timelineplaychanged',\n  'restore',\n  'dataviewchanged',\n  'magictypechanged',\n  'geoselectchanged',\n  'geoselected',\n  'geounselected',\n  'pieselectchanged',\n  'pieselected',\n  'pieunselected',\n  'mapselectchanged',\n  'mapselected',\n  'mapunselected',\n  'axisareaselected',\n  'brush',\n  'brushselected'\n];\n\nexports = module.exports = function wrapECharts(ECharts, Resize, Debounce) {\n  return {\n    name: 'IEcharts',\n    props: {\n      className: {\n        type: String,\n        required: false,\n        default: 'vue-echarts'\n      },\n      theme: {\n        type: String,\n        required: false\n      },\n      group: {\n        type: String,\n        required: false\n      },\n      option: {\n        type: Object,\n        required: true\n      },\n      initOpts: {\n        type: Object,\n        required: false\n      },\n      notMerge: {\n        type: Boolean,\n        required: false,\n        default: false\n      },\n      lazyUpdate: {\n        type: Boolean,\n        required: false,\n        default: false\n      },\n      loading: {\n        type: Boolean,\n        required: false,\n        default: false\n      },\n      loadingOpts: {\n        type: Object,\n        required: false\n      },\n      resizable: {\n        type: Boolean,\n        required: false,\n        default: false\n      }\n    },\n    data: function data() {\n      return {\n        fnResize: null,\n        insResize: null,\n        instance: null,\n        watches: {\n          loading: null,\n          option: null,\n          group: null\n        }\n      };\n    },\n    computed: {\n      width: {\n        cache: false,\n        get: function get() {\n          return this.instance.getWidth();\n        }\n      },\n      height: {\n        cache: false,\n        get: function get() {\n          return this.instance.getHeight();\n        }\n      },\n      isDisposed: {\n        cache: false,\n        get: function get() {\n          return this.instance.isDisposed();\n        }\n      }\n    },\n    watch: {\n      loading: {\n        handler: function handler(loading) {\n          var that = this;\n          that.ifLoading(loading);\n        },\n        deep: false\n      },\n      option: {\n        handler: function handler(option) {\n          var that = this;\n          that.instance.setOption(option, that.notMerge, that.lazyUpdate);\n        },\n        deep: true\n      },\n      group: {\n        handler: function handler(group) {\n          var that = this;\n          that.instance.group = group;\n        },\n        deep: false\n      }\n    },\n    methods: {\n      initResize: function initResize(dom) {\n        var that = this;\n        if (that.resizable && typeof Resize === 'function') {\n          // Resize(dom, that.resize);\n          that.insResize = that.insResize || Resize({\n            strategy: 'scroll' // <- For ultra performance.\n          });\n          that.fnResize = that.fnResize || Debounce(that.resize, 250, {\n            'leading': true,\n            'trailing': true\n          });\n          that.insResize.listenTo(dom, function(element) {\n            // that.resize();\n            that.fnResize();\n          });\n        }\n      },\n      init: function init() {\n        var that = this;\n        if (!that.instance) {\n          var dom = that.$el;\n          var instance = ECharts.getInstanceByDom(dom);\n          if (!instance) {\n            instance = ECharts.init(dom, that.theme, that.initOpts);\n          }\n          instance.group = that.group;\n          that.instance = instance;\n          that.$emit('ready', instance, ECharts);\n          that.$nextTick(function() {\n            that.ifLoading(that.loading);\n            that.update();\n            // that.watch();\n            that.bind();\n            that.initResize(dom);\n          });\n        }\n      },\n      bind: function bind() {\n        var that = this;\n        var _on = function _on(name) {\n          that.instance.on(name, function(event) {\n            that.$emit(name, event, that.instance, ECharts);\n          });\n        };\n\n        if (that._events) {\n          for (var e in that._events) {\n            if (Object.prototype.hasOwnProperty.call(that._events, e)) {\n              var name = e.toLowerCase();\n              if (ECHARTS_EVENTS.indexOf(name) > -1) {\n                _on(name);\n              }\n            }\n          }\n        } else {\n          for (var i = 0, len = ECHARTS_EVENTS.length; i < len; i++) {\n            _on(ECHARTS_EVENTS[i]);\n          }\n        }\n      },\n      unbind: function unbind() {\n        var that = this;\n        if (that._events) {\n          for (var e in that._events) {\n            if (Object.prototype.hasOwnProperty.call(that._events, e)) {\n              var name = e.toLowerCase();\n              if (ECHARTS_EVENTS.indexOf(name) > -1) {\n                that.instance.off(name);\n              }\n            }\n          }\n        } else {\n          for (var i = 0, len = ECHARTS_EVENTS.length; i < len; i++) {\n            that.instance.off(ECHARTS_EVENTS[i]);\n          }\n        }\n      },\n      ifLoading: function ifLoading(loading) {\n        var that = this;\n        if (loading) {\n          that.showLoading();\n        } else {\n          that.hideLoading();\n        }\n      },\n      watch: function watch() {\n        var that = this;\n        that.watches.loading = that.$watch('loading', function(loading) {\n          that.ifLoading(loading);\n        });\n        that.watches.option = that.$watch('option', function(option) {\n          that.instance.setOption(option, that.notMerge, that.lazyUpdate);\n        }, {\n          deep: true\n        });\n        that.watches.group = that.$watch('group', function(group) {\n          that.instance.group = group;\n        });\n      },\n      unwatch: function unwatch() {\n        var that = this;\n        if (that.watches.loading) {\n          that.watches.loading();\n          that.watches.loading = null;\n        }\n        if (that.watches.option) {\n          that.watches.option();\n          that.watches.option = null;\n        }\n        if (that.watches.group) {\n          that.watches.group();\n          that.watches.group = null;\n        }\n      },\n      resize: function resize(opts) {\n        var that = this;\n        if (that.instance) {\n          that.instance.resize(opts);\n        }\n      },\n      update: function update() {\n        var that = this;\n        if (that.instance) {\n          that.instance.setOption(that.option, that.notMerge, that.lazyUpdate);\n          that.resize();\n        }\n      },\n      mergeOption: function mergeOption(opts) {\n        var that = this;\n        if (that.instance) {\n          that.instance.setOption(opts, false, that.lazyUpdate);\n          that.resize();\n        }\n      },\n      dispatchAction: function dispatchAction(payload) {\n        var that = this;\n        if (that.instance) {\n          that.instance.dispatchAction(payload);\n        }\n      },\n      convertToPixel: function convertToPixel(finder, value) {\n        var that = this;\n        return that.instance.convertToPixel(finder, value);\n      },\n      convertFromPixel: function convertFromPixel(finder, value) {\n        var that = this;\n        return that.instance.convertFromPixel(finder, value);\n      },\n      containPixel: function containPixel(finder, value) {\n        var that = this;\n        return that.instance.containPixel(finder, value);\n      },\n      showLoading: function showLoading() {\n        var that = this;\n        if (that.instance) {\n          that.instance.showLoading('default', that.loadingOpts);\n        }\n      },\n      hideLoading: function hideLoading() {\n        var that = this;\n        if (that.instance) {\n          that.instance.hideLoading();\n        }\n      },\n      getDataURL: function getDataURL(opts) {\n        var that = this;\n        return that.instance.getDataURL(opts);\n      },\n      getConnectedDataURL: function getConnectedDataURL(opts) {\n        var that = this;\n        return that.instance.getConnectedDataURL(opts);\n      },\n      clear: function clear() {\n        var that = this;\n        if (that.instance) {\n          that.instance.clear();\n        }\n      },\n      uninitResize: function uninitResize() {\n        var that = this;\n        if (that.insResize && that.insResize.uninstall) {\n          that.insResize.uninstall(that.$el);\n          that.insResize = null;\n        }\n        if (that.fnResize && that.fnResize.cancel) {\n          that.fnResize.cancel();\n          that.fnResize = null;\n        }\n      },\n      uninit: function uninit() {\n        var that = this;\n        if (that.instance) {\n          that.unbind();\n          // that.unwatch();\n          that.uninitResize();\n          that.instance.dispose();\n          that.instance = null;\n        }\n      }\n    },\n    // beforeCreate: function beforeCreate() {\n      // var that = this;\n      // console.log('beforeCreate');\n    // },\n    // created: function created() {\n      // var that = this;\n      // console.log('created');\n    // },\n    // beforeMount: function beforeMount() {\n      // var that = this;\n      // console.log('beforeMount');\n    // },\n    mounted: function mounted() {\n      var that = this;\n      // console.log('mounted');\n      that.init();\n    },\n    // beforeUpdate: function beforeUpdate() {\n      // var that = this;\n      // console.log('beforeUpdate');\n    // },\n    // updated: function updated() {\n      // var that = this;\n      // console.log('updated');\n    // },\n    // activated: function activated() {\n      // var that = this;\n      // console.log('activated');\n    // },\n    // deactivated: function deactivated() {\n      // var that = this;\n      // console.log('deactivated');\n    // },\n    beforeDestroy: function beforeDestroy() {\n      var that = this;\n      // console.log('beforeDestroy');\n      that.uninit();\n    },\n    // destroyed: function destroyed() {\n      // var that = this;\n      // console.log('destroyed');\n    // },\n    connect: function connect(group) {\n      return ECharts.connect(group);\n    },\n    disConnect: function disConnect(group) {\n      return ECharts.disConnect(group);\n    },\n    dispose: function dispose(target) {\n      return ECharts.dispose(target);\n    },\n    getInstanceByDom: function getInstanceByDom(target) {\n      return ECharts.getInstanceByDom(target);\n    },\n    registerMap: function registerMap(mapName, geoJson, specialAreas) {\n      return ECharts.registerMap(mapName, geoJson, specialAreas);\n    },\n    getMap: function getMap(mapName) {\n      return ECharts.getMap(mapName);\n    },\n    registerTheme: function registerTheme(themeName, theme) {\n      return ECharts.registerTheme(themeName, theme);\n    }\n  };\n};\n\n\n/***/ }),\n/* 380 */,\n/* 381 */,\n/* 382 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n/* styles */\n__webpack_require__(363)\n\nvar Component = __webpack_require__(18)(\n  /* script */\n  __webpack_require__(239),\n  /* template */\n  __webpack_require__(389),\n  /* scopeId */\n  \"data-v-17dfc345\",\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n/* 383 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n/* styles */\n__webpack_require__(365)\n\nvar Component = __webpack_require__(18)(\n  /* script */\n  __webpack_require__(240),\n  /* template */\n  __webpack_require__(391),\n  /* scopeId */\n  \"data-v-443ef9a7\",\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n/* 384 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n/* styles */\n__webpack_require__(367)\n\nvar Component = __webpack_require__(18)(\n  /* script */\n  __webpack_require__(241),\n  /* template */\n  __webpack_require__(393),\n  /* scopeId */\n  \"data-v-6840e881\",\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n/* 385 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n/* styles */\n__webpack_require__(364)\n\nvar Component = __webpack_require__(18)(\n  /* script */\n  __webpack_require__(242),\n  /* template */\n  __webpack_require__(390),\n  /* scopeId */\n  \"data-v-2f29b3a2\",\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n/* 386 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n/* styles */\n__webpack_require__(362)\n\nvar Component = __webpack_require__(18)(\n  /* script */\n  __webpack_require__(243),\n  /* template */\n  __webpack_require__(388),\n  /* scopeId */\n  \"data-v-1108af1c\",\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n/* 387 */,\n/* 388 */\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"chart-box\"\n  }, [_c('chart', {\n    attrs: {\n      \"option\": _vm.bar,\n      \"resizable\": \"\"\n    }\n  })], 1)\n},staticRenderFns: []}\n\n/***/ }),\n/* 389 */\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('Row', {\n    staticClass: \"dashboard-grid\",\n    attrs: {\n      \"gutter\": 16\n    }\n  }, [_vm._l(([1, 2, 3, 4]), function(num, index) {\n    return _c('Col', {\n      key: index,\n      attrs: {\n        \"md\": 6,\n        \"sm\": 12\n      }\n    }, [_c('Card', {\n      staticStyle: {\n        \"height\": \"88px\"\n      }\n    })], 1)\n  }), _vm._v(\" \"), _c('Col', {\n    attrs: {\n      \"md\": 14,\n      \"sm\": 24\n    }\n  }, [_c('Card', {\n    staticStyle: {\n      \"height\": \"284px\"\n    }\n  })], 1), _vm._v(\" \"), _c('Col', {\n    attrs: {\n      \"md\": 10,\n      \"sm\": 24\n    }\n  }, [_c('Card', {\n    staticStyle: {\n      \"height\": \"284px\"\n    }\n  })], 1), _vm._v(\" \"), _c('Col', {\n    attrs: {\n      \"md\": 10,\n      \"sm\": 24\n    }\n  }, [_c('Card', {\n    staticStyle: {\n      \"height\": \"284px\"\n    }\n  })], 1), _vm._v(\" \"), _c('Col', {\n    attrs: {\n      \"md\": 14,\n      \"sm\": 24\n    }\n  }, [_c('Card', {\n    staticStyle: {\n      \"height\": \"284px\"\n    }\n  })], 1)], 2)\n},staticRenderFns: []}\n\n/***/ }),\n/* 390 */\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"chart-box\"\n  }, [_c('chart', {\n    attrs: {\n      \"option\": _vm.chartOpts,\n      \"resizable\": \"\"\n    }\n  })], 1)\n},staticRenderFns: []}\n\n/***/ }),\n/* 391 */\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"chart-box\"\n  }, [_c('chart', {\n    attrs: {\n      \"option\": _vm.bar,\n      \"resizable\": \"\"\n    }\n  })], 1)\n},staticRenderFns: []}\n\n/***/ }),\n/* 392 */\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', [_c('transition', {\n    attrs: {\n      \"name\": \"fade\"\n    }\n  }, [(!_vm.loading) ? _c('Row', {\n    staticClass: \"dashboard-grid\",\n    attrs: {\n      \"gutter\": 16\n    }\n  }, [_vm._l((_vm.numbers), function(num) {\n    return _c('Col', {\n      key: num.key,\n      attrs: {\n        \"md\": 6,\n        \"sm\": 12\n      }\n    }, [_c('NumberCard', {\n      attrs: {\n        \"title\": num.title,\n        \"color\": num.color,\n        \"number\": num.number,\n        \"icon\": num.icon\n      }\n    })], 1)\n  }), _vm._v(\" \"), _c('Col', {\n    attrs: {\n      \"md\": 14,\n      \"sm\": 24\n    }\n  }, [_c('Card', [_c('RegionChart', {\n    attrs: {\n      \"title\": _vm.region.title,\n      \"data\": _vm.region.data\n    }\n  })], 1)], 1), _vm._v(\" \"), _c('Col', {\n    attrs: {\n      \"md\": 10,\n      \"sm\": 24\n    }\n  }, [_c('Card', [_c('OSChart', {\n    attrs: {\n      \"title\": _vm.os.title,\n      \"data\": _vm.os.data\n    }\n  })], 1)], 1), _vm._v(\" \"), _c('Col', {\n    attrs: {\n      \"md\": 10,\n      \"sm\": 24\n    }\n  }, [_c('Card', [_c('OSChart', {\n    attrs: {\n      \"title\": _vm.terminal.title,\n      \"data\": _vm.terminal.data\n    }\n  })], 1)], 1), _vm._v(\" \"), _c('Col', {\n    attrs: {\n      \"md\": 14,\n      \"sm\": 24\n    }\n  }, [_c('Card', [_c('AgeChart', {\n    attrs: {\n      \"title\": _vm.age.title,\n      \"data\": _vm.age.data\n    }\n  })], 1)], 1)], 2) : _vm._e()], 1), _vm._v(\" \"), (_vm.loading) ? _c('LoadingMarker') : _vm._e()], 1)\n},staticRenderFns: []}\n\n/***/ }),\n/* 393 */\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('Card', {\n    staticClass: \"number-card\"\n  }, [_c('Icon', {\n    staticClass: \"icon\",\n    attrs: {\n      \"type\": _vm.icon,\n      \"color\": _vm.color\n    }\n  }), _vm._v(\" \"), _c('div', {\n    staticClass: \"content\"\n  }, [_c('h3', {\n    staticClass: \"title\"\n  }, [_vm._v(_vm._s(_vm.title))]), _vm._v(\" \"), _c('p', {\n    staticClass: \"number\"\n  }, [_c('countTo', {\n    attrs: {\n      \"endVal\": _vm.number,\n      \"duration\": 1000\n    }\n  })], 1)])], 1)\n},staticRenderFns: []}\n\n/***/ }),\n/* 394 */,\n/* 395 */\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    class: _vm.className\n  })\n},staticRenderFns: []}\n\n/***/ }),\n/* 396 */,\n/* 397 */,\n/* 398 */,\n/* 399 */,\n/* 400 */,\n/* 401 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Handler\n * @module zrender/Handler\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (shenyi.914@gmail.com)\n */\n\n\n    var util = __webpack_require__(158);\n    var Draggable = __webpack_require__(435);\n\n    var Eventful = __webpack_require__(177);\n\n    var SILENT = 'silent';\n\n    function makeEventPacket(eveType, targetInfo, event) {\n        return {\n            type: eveType,\n            event: event,\n            // target can only be an element that is not silent.\n            target: targetInfo.target,\n            // topTarget can be a silent element.\n            topTarget: targetInfo.topTarget,\n            cancelBubble: false,\n            offsetX: event.zrX,\n            offsetY: event.zrY,\n            gestureEvent: event.gestureEvent,\n            pinchX: event.pinchX,\n            pinchY: event.pinchY,\n            pinchScale: event.pinchScale,\n            wheelDelta: event.zrDelta,\n            zrByTouch: event.zrByTouch\n        };\n    }\n\n    function EmptyProxy () {}\n    EmptyProxy.prototype.dispose = function () {};\n\n    var handlerNames = [\n        'click', 'dblclick', 'mousewheel', 'mouseout',\n        'mouseup', 'mousedown', 'mousemove', 'contextmenu'\n    ];\n    /**\n     * @alias module:zrender/Handler\n     * @constructor\n     * @extends module:zrender/mixin/Eventful\n     * @param {module:zrender/Storage} storage Storage instance.\n     * @param {module:zrender/Painter} painter Painter instance.\n     * @param {module:zrender/dom/HandlerProxy} proxy HandlerProxy instance.\n     * @param {HTMLElement} painterRoot painter.root (not painter.getViewportRoot()).\n     */\n    var Handler = function(storage, painter, proxy, painterRoot) {\n        Eventful.call(this);\n\n        this.storage = storage;\n\n        this.painter = painter;\n\n        this.painterRoot = painterRoot;\n\n        proxy = proxy || new EmptyProxy();\n\n        /**\n         * Proxy of event. can be Dom, WebGLSurface, etc.\n         */\n        this.proxy = proxy;\n\n        // Attach handler\n        proxy.handler = this;\n\n        /**\n         * {target, topTarget}\n         * @private\n         * @type {Object}\n         */\n        this._hovered = {};\n\n        /**\n         * @private\n         * @type {Date}\n         */\n        this._lastTouchMoment;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._lastX;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._lastY;\n\n\n        Draggable.call(this);\n\n        util.each(handlerNames, function (name) {\n            proxy.on && proxy.on(name, this[name], this);\n        }, this);\n    };\n\n    Handler.prototype = {\n\n        constructor: Handler,\n\n        mousemove: function (event) {\n            var x = event.zrX;\n            var y = event.zrY;\n\n            var lastHovered = this._hovered;\n            var hovered = this._hovered = this.findHover(x, y);\n            var hoveredTarget = hovered.target;\n            var lastHoveredTarget = lastHovered.target;\n\n            var proxy = this.proxy;\n            proxy.setCursor && proxy.setCursor(hoveredTarget ? hoveredTarget.cursor : 'default');\n\n            // Mouse out on previous hovered element\n            if (lastHoveredTarget && hoveredTarget !== lastHoveredTarget && lastHoveredTarget.__zr) {\n                this.dispatchToElement(lastHovered, 'mouseout', event);\n            }\n\n            // Mouse moving on one element\n            this.dispatchToElement(hovered, 'mousemove', event);\n\n            // Mouse over on a new element\n            if (hoveredTarget && hoveredTarget !== lastHoveredTarget) {\n                this.dispatchToElement(hovered, 'mouseover', event);\n            }\n        },\n\n        mouseout: function (event) {\n            this.dispatchToElement(this._hovered, 'mouseout', event);\n\n            // There might be some doms created by upper layer application\n            // at the same level of painter.getViewportRoot() (e.g., tooltip\n            // dom created by echarts), where 'globalout' event should not\n            // be triggered when mouse enters these doms. (But 'mouseout'\n            // should be triggered at the original hovered element as usual).\n            var element = event.toElement || event.relatedTarget;\n            var innerDom;\n            do {\n                element = element && element.parentNode;\n            }\n            while (element && element.nodeType != 9 && !(\n                innerDom = element === this.painterRoot\n            ));\n\n            !innerDom && this.trigger('globalout', {event: event});\n        },\n\n        /**\n         * Resize\n         */\n        resize: function (event) {\n            this._hovered = {};\n        },\n\n        /**\n         * Dispatch event\n         * @param {string} eventName\n         * @param {event=} eventArgs\n         */\n        dispatch: function (eventName, eventArgs) {\n            var handler = this[eventName];\n            handler && handler.call(this, eventArgs);\n        },\n\n        /**\n         * Dispose\n         */\n        dispose: function () {\n\n            this.proxy.dispose();\n\n            this.storage =\n            this.proxy =\n            this.painter = null;\n        },\n\n        /**\n         * 设置默认的cursor style\n         * @param {string} [cursorStyle='default'] 例如 crosshair\n         */\n        setCursorStyle: function (cursorStyle) {\n            var proxy = this.proxy;\n            proxy.setCursor && proxy.setCursor(cursorStyle);\n        },\n\n        /**\n         * 事件分发代理\n         *\n         * @private\n         * @param {Object} targetInfo {target, topTarget} 目标图形元素\n         * @param {string} eventName 事件名称\n         * @param {Object} event 事件对象\n         */\n        dispatchToElement: function (targetInfo, eventName, event) {\n            targetInfo = targetInfo || {};\n            var eventHandler = 'on' + eventName;\n            var eventPacket = makeEventPacket(eventName, targetInfo, event);\n\n            var el = targetInfo.target;\n            while (el) {\n                el[eventHandler]\n                    && (eventPacket.cancelBubble = el[eventHandler].call(el, eventPacket));\n\n                el.trigger(eventName, eventPacket);\n\n                el = el.parent;\n\n                if (eventPacket.cancelBubble) {\n                    break;\n                }\n            }\n\n            if (!eventPacket.cancelBubble) {\n                // 冒泡到顶级 zrender 对象\n                this.trigger(eventName, eventPacket);\n                // 分发事件到用户自定义层\n                // 用户有可能在全局 click 事件中 dispose，所以需要判断下 painter 是否存在\n                this.painter && this.painter.eachOtherLayer(function (layer) {\n                    if (typeof(layer[eventHandler]) == 'function') {\n                        layer[eventHandler].call(layer, eventPacket);\n                    }\n                    if (layer.trigger) {\n                        layer.trigger(eventName, eventPacket);\n                    }\n                });\n            }\n        },\n\n        /**\n         * @private\n         * @param {number} x\n         * @param {number} y\n         * @param {module:zrender/graphic/Displayable} exclude\n         * @return {model:zrender/Element}\n         * @method\n         */\n        findHover: function(x, y, exclude) {\n            var list = this.storage.getDisplayList();\n            var out = {};\n\n            for (var i = list.length - 1; i >= 0 ; i--) {\n                var hoverCheckResult;\n                if (list[i] !== exclude\n                    // getDisplayList may include ignored item in VML mode\n                    && !list[i].ignore\n                    && (hoverCheckResult = isHover(list[i], x, y))\n                ) {\n                    !out.topTarget && (out.topTarget = list[i]);\n                    if (hoverCheckResult !== SILENT) {\n                        out.target = list[i];\n                        break;\n                    }\n                }\n            }\n\n            return out;\n        }\n    };\n\n    // Common handlers\n    util.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n        Handler.prototype[name] = function (event) {\n            // Find hover again to avoid click event is dispatched manually. Or click is triggered without mouseover\n            var hovered = this.findHover(event.zrX, event.zrY);\n            var hoveredTarget = hovered.target;\n\n            if (name === 'mousedown') {\n                this._downel = hoveredTarget;\n                // In case click triggered before mouseup\n                this._upel = hoveredTarget;\n            }\n            else if (name === 'mosueup') {\n                this._upel = hoveredTarget;\n            }\n            else if (name === 'click') {\n                if (this._downel !== this._upel) {\n                    return;\n                }\n            }\n\n            this.dispatchToElement(hovered, name, event);\n        };\n    });\n\n    function isHover(displayable, x, y) {\n        if (displayable[displayable.rectHover ? 'rectContain' : 'contain'](x, y)) {\n            var el = displayable;\n            var isSilent;\n            while (el) {\n                // If clipped by ancestor.\n                if (el.clipPath && !el.clipPath.contain(x, y))  {\n                    return false;\n                }\n                if (el.silent) {\n                    isSilent = true;\n                }\n                el = el.parent;\n            }\n            return isSilent ? SILENT : true;\n        }\n\n        return false;\n    }\n\n    util.mixin(Handler, Eventful);\n    util.mixin(Handler, Draggable);\n\n    module.exports = Handler;\n\n\n/***/ }),\n/* 402 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module zrender/Layer\n * @author pissang(https://www.github.com/pissang)\n */\n\n\n    var util = __webpack_require__(158);\n    var config = __webpack_require__(182);\n    var Style = __webpack_require__(232);\n    var Pattern = __webpack_require__(231);\n\n    function returnFalse() {\n        return false;\n    }\n\n    /**\n     * 创建dom\n     *\n     * @inner\n     * @param {string} id dom id 待用\n     * @param {string} type dom type，such as canvas, div etc.\n     * @param {Painter} painter painter instance\n     * @param {number} number\n     */\n    function createDom(id, type, painter, dpr) {\n        var newDom = document.createElement(type);\n        var width = painter.getWidth();\n        var height = painter.getHeight();\n\n        var newDomStyle = newDom.style;\n        // 没append呢，请原谅我这样写，清晰~\n        newDomStyle.position = 'absolute';\n        newDomStyle.left = 0;\n        newDomStyle.top = 0;\n        newDomStyle.width = width + 'px';\n        newDomStyle.height = height + 'px';\n        newDom.width = width * dpr;\n        newDom.height = height * dpr;\n\n        // id不作为索引用，避免可能造成的重名，定义为私有属性\n        newDom.setAttribute('data-zr-dom-id', id);\n        return newDom;\n    }\n\n    /**\n     * @alias module:zrender/Layer\n     * @constructor\n     * @extends module:zrender/mixin/Transformable\n     * @param {string} id\n     * @param {module:zrender/Painter} painter\n     * @param {number} [dpr]\n     */\n    var Layer = function(id, painter, dpr) {\n        var dom;\n        dpr = dpr || config.devicePixelRatio;\n        if (typeof id === 'string') {\n            dom = createDom(id, 'canvas', painter, dpr);\n        }\n        // Not using isDom because in node it will return false\n        else if (util.isObject(id)) {\n            dom = id;\n            id = dom.id;\n        }\n        this.id = id;\n        this.dom = dom;\n\n        var domStyle = dom.style;\n        if (domStyle) { // Not in node\n            dom.onselectstart = returnFalse; // 避免页面选中的尴尬\n            domStyle['-webkit-user-select'] = 'none';\n            domStyle['user-select'] = 'none';\n            domStyle['-webkit-touch-callout'] = 'none';\n            domStyle['-webkit-tap-highlight-color'] = 'rgba(0,0,0,0)';\n            domStyle['padding'] = 0;\n            domStyle['margin'] = 0;\n            domStyle['border-width'] = 0;\n        }\n\n        this.domBack = null;\n        this.ctxBack = null;\n\n        this.painter = painter;\n\n        this.config = null;\n\n        // Configs\n        /**\n         * 每次清空画布的颜色\n         * @type {string}\n         * @default 0\n         */\n        this.clearColor = 0;\n        /**\n         * 是否开启动态模糊\n         * @type {boolean}\n         * @default false\n         */\n        this.motionBlur = false;\n        /**\n         * 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n         * @type {number}\n         * @default 0.7\n         */\n        this.lastFrameAlpha = 0.7;\n\n        /**\n         * Layer dpr\n         * @type {number}\n         */\n        this.dpr = dpr;\n    };\n\n    Layer.prototype = {\n\n        constructor: Layer,\n\n        elCount: 0,\n\n        __dirty: true,\n\n        initContext: function () {\n            this.ctx = this.dom.getContext('2d');\n\n            this.ctx.dpr = this.dpr;\n        },\n\n        createBackBuffer: function () {\n            var dpr = this.dpr;\n\n            this.domBack = createDom('back-' + this.id, 'canvas', this.painter, dpr);\n            this.ctxBack = this.domBack.getContext('2d');\n\n            if (dpr != 1) {\n                this.ctxBack.scale(dpr, dpr);\n            }\n        },\n\n        /**\n         * @param  {number} width\n         * @param  {number} height\n         */\n        resize: function (width, height) {\n            var dpr = this.dpr;\n\n            var dom = this.dom;\n            var domStyle = dom.style;\n            var domBack = this.domBack;\n\n            domStyle.width = width + 'px';\n            domStyle.height = height + 'px';\n\n            dom.width = width * dpr;\n            dom.height = height * dpr;\n\n            if (domBack) {\n                domBack.width = width * dpr;\n                domBack.height = height * dpr;\n\n                if (dpr != 1) {\n                    this.ctxBack.scale(dpr, dpr);\n                }\n            }\n        },\n\n        /**\n         * 清空该层画布\n         * @param {boolean} clearAll Clear all with out motion blur\n         */\n        clear: function (clearAll) {\n            var dom = this.dom;\n            var ctx = this.ctx;\n            var width = dom.width;\n            var height = dom.height;\n\n            var clearColor = this.clearColor;\n            var haveMotionBLur = this.motionBlur && !clearAll;\n            var lastFrameAlpha = this.lastFrameAlpha;\n\n            var dpr = this.dpr;\n\n            if (haveMotionBLur) {\n                if (!this.domBack) {\n                    this.createBackBuffer();\n                }\n\n                this.ctxBack.globalCompositeOperation = 'copy';\n                this.ctxBack.drawImage(\n                    dom, 0, 0,\n                    width / dpr,\n                    height / dpr\n                );\n            }\n\n            ctx.clearRect(0, 0, width, height);\n            if (clearColor) {\n                var clearColorGradientOrPattern;\n                // Gradient\n                if (clearColor.colorStops) {\n                    // Cache canvas gradient\n                    clearColorGradientOrPattern = clearColor.__canvasGradient || Style.getGradient(ctx, clearColor, {\n                        x: 0,\n                        y: 0,\n                        width: width,\n                        height: height\n                    });\n\n                    clearColor.__canvasGradient = clearColorGradientOrPattern;\n                }\n                // Pattern\n                else if (clearColor.image) {\n                    clearColorGradientOrPattern = Pattern.prototype.getCanvasPattern.call(clearColor, ctx);\n                }\n                ctx.save();\n                ctx.fillStyle = clearColorGradientOrPattern || clearColor;\n                ctx.fillRect(0, 0, width, height);\n                ctx.restore();\n            }\n\n            if (haveMotionBLur) {\n                var domBack = this.domBack;\n                ctx.save();\n                ctx.globalAlpha = lastFrameAlpha;\n                ctx.drawImage(domBack, 0, 0, width, height);\n                ctx.restore();\n            }\n        }\n    };\n\n    module.exports = Layer;\n\n\n/***/ }),\n/* 403 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Default canvas painter\n * @module zrender/Painter\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\n \n\n    var config = __webpack_require__(182);\n    var util = __webpack_require__(158);\n    var log = __webpack_require__(229);\n    var BoundingRect = __webpack_require__(169);\n    var timsort = __webpack_require__(196);\n\n    var Layer = __webpack_require__(402);\n\n    var requestAnimationFrame = __webpack_require__(225);\n\n    // PENDIGN\n    // Layer exceeds MAX_PROGRESSIVE_LAYER_NUMBER may have some problem when flush directly second time.\n    //\n    // Maximum progressive layer. When exceeding this number. All elements will be drawed in the last layer.\n    var MAX_PROGRESSIVE_LAYER_NUMBER = 5;\n\n    function parseInt10(val) {\n        return parseInt(val, 10);\n    }\n\n    function isLayerValid(layer) {\n        if (!layer) {\n            return false;\n        }\n\n        if (layer.__builtin__) {\n            return true;\n        }\n\n        if (typeof(layer.resize) !== 'function'\n            || typeof(layer.refresh) !== 'function'\n        ) {\n            return false;\n        }\n\n        return true;\n    }\n\n    function preProcessLayer(layer) {\n        layer.__unusedCount++;\n    }\n\n    function postProcessLayer(layer) {\n        if (layer.__unusedCount == 1) {\n            layer.clear();\n        }\n    }\n\n    var tmpRect = new BoundingRect(0, 0, 0, 0);\n    var viewRect = new BoundingRect(0, 0, 0, 0);\n    function isDisplayableCulled(el, width, height) {\n        tmpRect.copy(el.getBoundingRect());\n        if (el.transform) {\n            tmpRect.applyTransform(el.transform);\n        }\n        viewRect.width = width;\n        viewRect.height = height;\n        return !tmpRect.intersect(viewRect);\n    }\n\n    function isClipPathChanged(clipPaths, prevClipPaths) {\n        if (clipPaths == prevClipPaths) { // Can both be null or undefined\n            return false;\n        }\n\n        if (!clipPaths || !prevClipPaths || (clipPaths.length !== prevClipPaths.length)) {\n            return true;\n        }\n        for (var i = 0; i < clipPaths.length; i++) {\n            if (clipPaths[i] !== prevClipPaths[i]) {\n                return true;\n            }\n        }\n    }\n\n    function doClip(clipPaths, ctx) {\n        for (var i = 0; i < clipPaths.length; i++) {\n            var clipPath = clipPaths[i];\n\n            clipPath.setTransform(ctx);\n            ctx.beginPath();\n            clipPath.buildPath(ctx, clipPath.shape);\n            ctx.clip();\n            // Transform back\n            clipPath.restoreTransform(ctx);\n        }\n    }\n\n    function createRoot(width, height) {\n        var domRoot = document.createElement('div');\n\n        // domRoot.onselectstart = returnFalse; // 避免页面选中的尴尬\n        domRoot.style.cssText = [\n            'position:relative',\n            'overflow:hidden',\n            'width:' + width + 'px',\n            'height:' + height + 'px',\n            'padding:0',\n            'margin:0',\n            'border-width:0'\n        ].join(';') + ';';\n\n        return domRoot;\n    }\n\n    /**\n     * @alias module:zrender/Painter\n     * @constructor\n     * @param {HTMLElement} root 绘图容器\n     * @param {module:zrender/Storage} storage\n     * @param {Ojbect} opts\n     */\n    var Painter = function (root, storage, opts) {\n        // In node environment using node-canvas\n        var singleCanvas = !root.nodeName // In node ?\n            || root.nodeName.toUpperCase() === 'CANVAS';\n\n        this._opts = opts = util.extend({}, opts || {});\n\n        /**\n         * @type {number}\n         */\n        this.dpr = opts.devicePixelRatio || config.devicePixelRatio;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this._singleCanvas = singleCanvas;\n        /**\n         * 绘图容器\n         * @type {HTMLElement}\n         */\n        this.root = root;\n\n        var rootStyle = root.style;\n\n        if (rootStyle) {\n            rootStyle['-webkit-tap-highlight-color'] = 'transparent';\n            rootStyle['-webkit-user-select'] =\n            rootStyle['user-select'] =\n            rootStyle['-webkit-touch-callout'] = 'none';\n\n            root.innerHTML = '';\n        }\n\n        /**\n         * @type {module:zrender/Storage}\n         */\n        this.storage = storage;\n\n        /**\n         * @type {Array.<number>}\n         * @private\n         */\n        var zlevelList = this._zlevelList = [];\n\n        /**\n         * @type {Object.<string, module:zrender/Layer>}\n         * @private\n         */\n        var layers = this._layers = {};\n\n        /**\n         * @type {Object.<string, Object>}\n         * @type {private}\n         */\n        this._layerConfig = {};\n\n        if (!singleCanvas) {\n            this._width = this._getSize(0);\n            this._height = this._getSize(1);\n\n            var domRoot = this._domRoot = createRoot(\n                this._width, this._height\n            );\n            root.appendChild(domRoot);\n        }\n        else {\n            if (opts.width != null) {\n                root.width = opts.width;\n            }\n            if (opts.height != null) {\n                root.height = opts.height;\n            }\n            // Use canvas width and height directly\n            var width = root.width;\n            var height = root.height;\n            this._width = width;\n            this._height = height;\n\n            // Create layer if only one given canvas\n            // Device pixel ratio is fixed to 1 because given canvas has its specified width and height\n            var mainLayer = new Layer(root, this, 1);\n            mainLayer.initContext();\n            // FIXME Use canvas width and height\n            // mainLayer.resize(width, height);\n            layers[0] = mainLayer;\n            zlevelList.push(0);\n\n            this._domRoot = root;\n        }\n\n        // Layers for progressive rendering\n        this._progressiveLayers = [];\n\n        /**\n         * @type {module:zrender/Layer}\n         * @private\n         */\n        this._hoverlayer;\n\n        this._hoverElements = [];\n    };\n\n    Painter.prototype = {\n\n        constructor: Painter,\n\n        /**\n         * If painter use a single canvas\n         * @return {boolean}\n         */\n        isSingleCanvas: function () {\n            return this._singleCanvas;\n        },\n        /**\n         * @return {HTMLDivElement}\n         */\n        getViewportRoot: function () {\n            return this._domRoot;\n        },\n\n        /**\n         * 刷新\n         * @param {boolean} [paintAll=false] 强制绘制所有displayable\n         */\n        refresh: function (paintAll) {\n\n            var list = this.storage.getDisplayList(true);\n\n            var zlevelList = this._zlevelList;\n\n            this._paintList(list, paintAll);\n\n            // Paint custum layers\n            for (var i = 0; i < zlevelList.length; i++) {\n                var z = zlevelList[i];\n                var layer = this._layers[z];\n                if (!layer.__builtin__ && layer.refresh) {\n                    layer.refresh();\n                }\n            }\n\n            this.refreshHover();\n\n            if (this._progressiveLayers.length) {\n                this._startProgessive();\n            }\n\n            return this;\n        },\n\n        addHover: function (el, hoverStyle) {\n            if (el.__hoverMir) {\n                return;\n            }\n            var elMirror = new el.constructor({\n                style: el.style,\n                shape: el.shape\n            });\n            elMirror.__from = el;\n            el.__hoverMir = elMirror;\n            elMirror.setStyle(hoverStyle);\n            this._hoverElements.push(elMirror);\n        },\n\n        removeHover: function (el) {\n            var elMirror = el.__hoverMir;\n            var hoverElements = this._hoverElements;\n            var idx = util.indexOf(hoverElements, elMirror);\n            if (idx >= 0) {\n                hoverElements.splice(idx, 1);\n            }\n            el.__hoverMir = null;\n        },\n\n        clearHover: function (el) {\n            var hoverElements = this._hoverElements;\n            for (var i = 0; i < hoverElements.length; i++) {\n                var from = hoverElements[i].__from;\n                if (from) {\n                    from.__hoverMir = null;\n                }\n            }\n            hoverElements.length = 0;\n        },\n\n        refreshHover: function () {\n            var hoverElements = this._hoverElements;\n            var len = hoverElements.length;\n            var hoverLayer = this._hoverlayer;\n            hoverLayer && hoverLayer.clear();\n\n            if (!len) {\n                return;\n            }\n            timsort(hoverElements, this.storage.displayableSortFunc);\n\n            // Use a extream large zlevel\n            // FIXME?\n            if (!hoverLayer) {\n                hoverLayer = this._hoverlayer = this.getLayer(1e5);\n            }\n\n            var scope = {};\n            hoverLayer.ctx.save();\n            for (var i = 0; i < len;) {\n                var el = hoverElements[i];\n                var originalEl = el.__from;\n                // Original el is removed\n                // PENDING\n                if (!(originalEl && originalEl.__zr)) {\n                    hoverElements.splice(i, 1);\n                    originalEl.__hoverMir = null;\n                    len--;\n                    continue;\n                }\n                i++;\n\n                // Use transform\n                // FIXME style and shape ?\n                if (!originalEl.invisible) {\n                    el.transform = originalEl.transform;\n                    el.invTransform = originalEl.invTransform;\n                    el.__clipPaths = originalEl.__clipPaths;\n                    // el.\n                    this._doPaintEl(el, hoverLayer, true, scope);\n                }\n            }\n            hoverLayer.ctx.restore();\n        },\n\n        _startProgessive: function () {\n            var self = this;\n\n            if (!self._furtherProgressive) {\n                return;\n            }\n\n            // Use a token to stop progress steps triggered by\n            // previous zr.refresh calling.\n            var token = self._progressiveToken = +new Date();\n\n            self._progress++;\n            requestAnimationFrame(step);\n\n            function step() {\n                // In case refreshed or disposed\n                if (token === self._progressiveToken && self.storage) {\n\n                    self._doPaintList(self.storage.getDisplayList());\n\n                    if (self._furtherProgressive) {\n                        self._progress++;\n                        requestAnimationFrame(step);\n                    }\n                    else {\n                        self._progressiveToken = -1;\n                    }\n                }\n            }\n        },\n\n        _clearProgressive: function () {\n            this._progressiveToken = -1;\n            this._progress = 0;\n            util.each(this._progressiveLayers, function (layer) {\n                layer.__dirty && layer.clear();\n            });\n        },\n\n        _paintList: function (list, paintAll) {\n\n            if (paintAll == null) {\n                paintAll = false;\n            }\n\n            this._updateLayerStatus(list);\n\n            this._clearProgressive();\n\n            this.eachBuiltinLayer(preProcessLayer);\n\n            this._doPaintList(list, paintAll);\n\n            this.eachBuiltinLayer(postProcessLayer);\n        },\n\n        _doPaintList: function (list, paintAll) {\n            var currentLayer;\n            var currentZLevel;\n            var ctx;\n\n            // var invTransform = [];\n            var scope;\n\n            var progressiveLayerIdx = 0;\n            var currentProgressiveLayer;\n\n            var width = this._width;\n            var height = this._height;\n            var layerProgress;\n            var frame = this._progress;\n            function flushProgressiveLayer(layer) {\n                var dpr = ctx.dpr || 1;\n                ctx.save();\n                ctx.globalAlpha = 1;\n                ctx.shadowBlur = 0;\n                // Avoid layer don't clear in next progressive frame\n                currentLayer.__dirty = true;\n                ctx.setTransform(1, 0, 0, 1, 0, 0);\n                ctx.drawImage(layer.dom, 0, 0, width * dpr, height * dpr);\n                ctx.restore();\n            }\n\n            for (var i = 0, l = list.length; i < l; i++) {\n                var el = list[i];\n                var elZLevel = this._singleCanvas ? 0 : el.zlevel;\n\n                var elFrame = el.__frame;\n\n                // Flush at current context\n                // PENDING\n                if (elFrame < 0 && currentProgressiveLayer) {\n                    flushProgressiveLayer(currentProgressiveLayer);\n                    currentProgressiveLayer = null;\n                }\n\n                // Change draw layer\n                if (currentZLevel !== elZLevel) {\n                    if (ctx) {\n                        ctx.restore();\n                    }\n\n                    // Reset scope\n                    scope = {};\n\n                    // Only 0 zlevel if only has one canvas\n                    currentZLevel = elZLevel;\n                    currentLayer = this.getLayer(currentZLevel);\n\n                    if (!currentLayer.__builtin__) {\n                        log(\n                            'ZLevel ' + currentZLevel\n                            + ' has been used by unkown layer ' + currentLayer.id\n                        );\n                    }\n\n                    ctx = currentLayer.ctx;\n                    ctx.save();\n\n                    // Reset the count\n                    currentLayer.__unusedCount = 0;\n\n                    if (currentLayer.__dirty || paintAll) {\n                        currentLayer.clear();\n                    }\n                }\n\n                if (!(currentLayer.__dirty || paintAll)) {\n                    continue;\n                }\n\n                if (elFrame >= 0) {\n                    // Progressive layer changed\n                    if (!currentProgressiveLayer) {\n                        currentProgressiveLayer = this._progressiveLayers[\n                            Math.min(progressiveLayerIdx++, MAX_PROGRESSIVE_LAYER_NUMBER - 1)\n                        ];\n\n                        currentProgressiveLayer.ctx.save();\n                        currentProgressiveLayer.renderScope = {};\n\n                        if (currentProgressiveLayer\n                            && (currentProgressiveLayer.__progress > currentProgressiveLayer.__maxProgress)\n                        ) {\n                            // flushProgressiveLayer(currentProgressiveLayer);\n                            // Quick jump all progressive elements\n                            // All progressive element are not dirty, jump over and flush directly\n                            i = currentProgressiveLayer.__nextIdxNotProg - 1;\n                            // currentProgressiveLayer = null;\n                            continue;\n                        }\n\n                        layerProgress = currentProgressiveLayer.__progress;\n\n                        if (!currentProgressiveLayer.__dirty) {\n                            // Keep rendering\n                            frame = layerProgress;\n                        }\n\n                        currentProgressiveLayer.__progress = frame + 1;\n                    }\n\n                    if (elFrame === frame) {\n                        this._doPaintEl(el, currentProgressiveLayer, true, currentProgressiveLayer.renderScope);\n                    }\n                }\n                else {\n                    this._doPaintEl(el, currentLayer, paintAll, scope);\n                }\n\n                el.__dirty = false;\n            }\n\n            if (currentProgressiveLayer) {\n                flushProgressiveLayer(currentProgressiveLayer);\n            }\n\n            // Restore the lastLayer ctx\n            ctx && ctx.restore();\n            // If still has clipping state\n            // if (scope.prevElClipPaths) {\n            //     ctx.restore();\n            // }\n\n            this._furtherProgressive = false;\n            util.each(this._progressiveLayers, function (layer) {\n                if (layer.__maxProgress >= layer.__progress) {\n                    this._furtherProgressive = true;\n                }\n            }, this);\n        },\n\n        _doPaintEl: function (el, currentLayer, forcePaint, scope) {\n            var ctx = currentLayer.ctx;\n            var m = el.transform;\n            if (\n                (currentLayer.__dirty || forcePaint)\n                // Ignore invisible element\n                && !el.invisible\n                // Ignore transparent element\n                && el.style.opacity !== 0\n                // Ignore scale 0 element, in some environment like node-canvas\n                // Draw a scale 0 element can cause all following draw wrong\n                // And setTransform with scale 0 will cause set back transform failed.\n                && !(m && !m[0] && !m[3])\n                // Ignore culled element\n                && !(el.culling && isDisplayableCulled(el, this._width, this._height))\n            ) {\n\n                var clipPaths = el.__clipPaths;\n\n                // Optimize when clipping on group with several elements\n                if (scope.prevClipLayer !== currentLayer\n                    || isClipPathChanged(clipPaths, scope.prevElClipPaths)\n                ) {\n                    // If has previous clipping state, restore from it\n                    if (scope.prevElClipPaths) {\n                        scope.prevClipLayer.ctx.restore();\n                        scope.prevClipLayer = scope.prevElClipPaths = null;\n\n                        // Reset prevEl since context has been restored\n                        scope.prevEl = null;\n                    }\n                    // New clipping state\n                    if (clipPaths) {\n                        ctx.save();\n                        doClip(clipPaths, ctx);\n                        scope.prevClipLayer = currentLayer;\n                        scope.prevElClipPaths = clipPaths;\n                    }\n                }\n                el.beforeBrush && el.beforeBrush(ctx);\n\n                el.brush(ctx, scope.prevEl || null);\n                scope.prevEl = el;\n\n                el.afterBrush && el.afterBrush(ctx);\n            }\n        },\n\n        /**\n         * 获取 zlevel 所在层，如果不存在则会创建一个新的层\n         * @param {number} zlevel\n         * @return {module:zrender/Layer}\n         */\n        getLayer: function (zlevel) {\n            if (this._singleCanvas) {\n                return this._layers[0];\n            }\n\n            var layer = this._layers[zlevel];\n            if (!layer) {\n                // Create a new layer\n                layer = new Layer('zr_' + zlevel, this, this.dpr);\n                layer.__builtin__ = true;\n\n                if (this._layerConfig[zlevel]) {\n                    util.merge(layer, this._layerConfig[zlevel], true);\n                }\n\n                this.insertLayer(zlevel, layer);\n\n                // Context is created after dom inserted to document\n                // Or excanvas will get 0px clientWidth and clientHeight\n                layer.initContext();\n            }\n\n            return layer;\n        },\n\n        insertLayer: function (zlevel, layer) {\n\n            var layersMap = this._layers;\n            var zlevelList = this._zlevelList;\n            var len = zlevelList.length;\n            var prevLayer = null;\n            var i = -1;\n            var domRoot = this._domRoot;\n\n            if (layersMap[zlevel]) {\n                log('ZLevel ' + zlevel + ' has been used already');\n                return;\n            }\n            // Check if is a valid layer\n            if (!isLayerValid(layer)) {\n                log('Layer of zlevel ' + zlevel + ' is not valid');\n                return;\n            }\n\n            if (len > 0 && zlevel > zlevelList[0]) {\n                for (i = 0; i < len - 1; i++) {\n                    if (\n                        zlevelList[i] < zlevel\n                        && zlevelList[i + 1] > zlevel\n                    ) {\n                        break;\n                    }\n                }\n                prevLayer = layersMap[zlevelList[i]];\n            }\n            zlevelList.splice(i + 1, 0, zlevel);\n\n            layersMap[zlevel] = layer;\n\n            // Vitual layer will not directly show on the screen.\n            // (It can be a WebGL layer and assigned to a ZImage element)\n            // But it still under management of zrender.\n            if (!layer.virtual) {\n                if (prevLayer) {\n                    var prevDom = prevLayer.dom;\n                    if (prevDom.nextSibling) {\n                        domRoot.insertBefore(\n                            layer.dom,\n                            prevDom.nextSibling\n                        );\n                    }\n                    else {\n                        domRoot.appendChild(layer.dom);\n                    }\n                }\n                else {\n                    if (domRoot.firstChild) {\n                        domRoot.insertBefore(layer.dom, domRoot.firstChild);\n                    }\n                    else {\n                        domRoot.appendChild(layer.dom);\n                    }\n                }\n            }\n        },\n\n        // Iterate each layer\n        eachLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                cb.call(context, this._layers[z], z);\n            }\n        },\n\n        // Iterate each buildin layer\n        eachBuiltinLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var layer;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                layer = this._layers[z];\n                if (layer.__builtin__) {\n                    cb.call(context, layer, z);\n                }\n            }\n        },\n\n        // Iterate each other layer except buildin layer\n        eachOtherLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var layer;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                layer = this._layers[z];\n                if (!layer.__builtin__) {\n                    cb.call(context, layer, z);\n                }\n            }\n        },\n\n        /**\n         * 获取所有已创建的层\n         * @param {Array.<module:zrender/Layer>} [prevLayer]\n         */\n        getLayers: function () {\n            return this._layers;\n        },\n\n        _updateLayerStatus: function (list) {\n\n            var layers = this._layers;\n            var progressiveLayers = this._progressiveLayers;\n\n            var elCountsLastFrame = {};\n            var progressiveElCountsLastFrame = {};\n\n            this.eachBuiltinLayer(function (layer, z) {\n                elCountsLastFrame[z] = layer.elCount;\n                layer.elCount = 0;\n                layer.__dirty = false;\n            });\n\n            util.each(progressiveLayers, function (layer, idx) {\n                progressiveElCountsLastFrame[idx] = layer.elCount;\n                layer.elCount = 0;\n                layer.__dirty = false;\n            });\n\n            var progressiveLayerCount = 0;\n            var currentProgressiveLayer;\n            var lastProgressiveKey;\n            var frameCount = 0;\n            for (var i = 0, l = list.length; i < l; i++) {\n                var el = list[i];\n                var zlevel = this._singleCanvas ? 0 : el.zlevel;\n                var layer = layers[zlevel];\n                var elProgress = el.progressive;\n                if (layer) {\n                    layer.elCount++;\n                    layer.__dirty = layer.__dirty || el.__dirty;\n                }\n\n                /////// Update progressive\n                if (elProgress >= 0) {\n                    // Fix wrong progressive sequence problem.\n                    if (lastProgressiveKey !== elProgress) {\n                        lastProgressiveKey = elProgress;\n                        frameCount++;\n                    }\n                    var elFrame = el.__frame = frameCount - 1;\n                    if (!currentProgressiveLayer) {\n                        var idx = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER - 1);\n                        currentProgressiveLayer = progressiveLayers[idx];\n                        if (!currentProgressiveLayer) {\n                            currentProgressiveLayer = progressiveLayers[idx] = new Layer(\n                                'progressive', this, this.dpr\n                            );\n                            currentProgressiveLayer.initContext();\n                        }\n                        currentProgressiveLayer.__maxProgress = 0;\n                    }\n                    currentProgressiveLayer.__dirty = currentProgressiveLayer.__dirty || el.__dirty;\n                    currentProgressiveLayer.elCount++;\n\n                    currentProgressiveLayer.__maxProgress = Math.max(\n                        currentProgressiveLayer.__maxProgress, elFrame\n                    );\n\n                    if (currentProgressiveLayer.__maxProgress >= currentProgressiveLayer.__progress) {\n                        // Should keep rendering this  layer because progressive rendering is not finished yet\n                        layer.__dirty = true;\n                    }\n                }\n                else {\n                    el.__frame = -1;\n\n                    if (currentProgressiveLayer) {\n                        currentProgressiveLayer.__nextIdxNotProg = i;\n                        progressiveLayerCount++;\n                        currentProgressiveLayer = null;\n                    }\n                }\n            }\n\n            if (currentProgressiveLayer) {\n                progressiveLayerCount++;\n                currentProgressiveLayer.__nextIdxNotProg = i;\n            }\n\n            // 层中的元素数量有发生变化\n            this.eachBuiltinLayer(function (layer, z) {\n                if (elCountsLastFrame[z] !== layer.elCount) {\n                    layer.__dirty = true;\n                }\n            });\n\n            progressiveLayers.length = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER);\n            util.each(progressiveLayers, function (layer, idx) {\n                if (progressiveElCountsLastFrame[idx] !== layer.elCount) {\n                    el.__dirty = true;\n                }\n                if (layer.__dirty) {\n                    layer.__progress = 0;\n                }\n            });\n        },\n\n        /**\n         * 清除hover层外所有内容\n         */\n        clear: function () {\n            this.eachBuiltinLayer(this._clearLayer);\n            return this;\n        },\n\n        _clearLayer: function (layer) {\n            layer.clear();\n        },\n\n        /**\n         * 修改指定zlevel的绘制参数\n         *\n         * @param {string} zlevel\n         * @param {Object} config 配置对象\n         * @param {string} [config.clearColor=0] 每次清空画布的颜色\n         * @param {string} [config.motionBlur=false] 是否开启动态模糊\n         * @param {number} [config.lastFrameAlpha=0.7]\n         *                 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n         */\n        configLayer: function (zlevel, config) {\n            if (config) {\n                var layerConfig = this._layerConfig;\n                if (!layerConfig[zlevel]) {\n                    layerConfig[zlevel] = config;\n                }\n                else {\n                    util.merge(layerConfig[zlevel], config, true);\n                }\n\n                var layer = this._layers[zlevel];\n\n                if (layer) {\n                    util.merge(layer, layerConfig[zlevel], true);\n                }\n            }\n        },\n\n        /**\n         * 删除指定层\n         * @param {number} zlevel 层所在的zlevel\n         */\n        delLayer: function (zlevel) {\n            var layers = this._layers;\n            var zlevelList = this._zlevelList;\n            var layer = layers[zlevel];\n            if (!layer) {\n                return;\n            }\n            layer.dom.parentNode.removeChild(layer.dom);\n            delete layers[zlevel];\n\n            zlevelList.splice(util.indexOf(zlevelList, zlevel), 1);\n        },\n\n        /**\n         * 区域大小变化后重绘\n         */\n        resize: function (width, height) {\n            var domRoot = this._domRoot;\n            // FIXME Why ?\n            domRoot.style.display = 'none';\n\n            // Save input w/h\n            var opts = this._opts;\n            width != null && (opts.width = width);\n            height != null && (opts.height = height);\n\n            width = this._getSize(0);\n            height = this._getSize(1);\n\n            domRoot.style.display = '';\n\n            // 优化没有实际改变的resize\n            if (this._width != width || height != this._height) {\n                domRoot.style.width = width + 'px';\n                domRoot.style.height = height + 'px';\n\n                for (var id in this._layers) {\n                    if (this._layers.hasOwnProperty(id)) {\n                        this._layers[id].resize(width, height);\n                    }\n                }\n                util.each(this._progressiveLayers, function (layer) {\n                    layer.resize(width, height);\n                });\n\n                this.refresh(true);\n            }\n\n            this._width = width;\n            this._height = height;\n\n            return this;\n        },\n\n        /**\n         * 清除单独的一个层\n         * @param {number} zlevel\n         */\n        clearLayer: function (zlevel) {\n            var layer = this._layers[zlevel];\n            if (layer) {\n                layer.clear();\n            }\n        },\n\n        /**\n         * 释放\n         */\n        dispose: function () {\n            this.root.innerHTML = '';\n\n            this.root =\n            this.storage =\n\n            this._domRoot =\n            this._layers = null;\n        },\n\n        /**\n         * Get canvas which has all thing rendered\n         * @param {Object} opts\n         * @param {string} [opts.backgroundColor]\n         */\n        getRenderedCanvas: function (opts) {\n            opts = opts || {};\n            if (this._singleCanvas) {\n                return this._layers[0].dom;\n            }\n\n            var imageLayer = new Layer('image', this, opts.pixelRatio || this.dpr);\n            imageLayer.initContext();\n\n            imageLayer.clearColor = opts.backgroundColor;\n            imageLayer.clear();\n\n            var displayList = this.storage.getDisplayList(true);\n\n            var scope = {};\n            for (var i = 0; i < displayList.length; i++) {\n                var el = displayList[i];\n                this._doPaintEl(el, imageLayer, true, scope);\n            }\n\n            return imageLayer.dom;\n        },\n        /**\n         * 获取绘图区域宽度\n         */\n        getWidth: function () {\n            return this._width;\n        },\n\n        /**\n         * 获取绘图区域高度\n         */\n        getHeight: function () {\n            return this._height;\n        },\n\n        _getSize: function (whIdx) {\n            var opts = this._opts;\n            var wh = ['width', 'height'][whIdx];\n            var cwh = ['clientWidth', 'clientHeight'][whIdx];\n            var plt = ['paddingLeft', 'paddingTop'][whIdx];\n            var prb = ['paddingRight', 'paddingBottom'][whIdx];\n\n            if (opts[wh] != null && opts[wh] !== 'auto') {\n                return parseFloat(opts[wh]);\n            }\n\n            var root = this.root;\n            var stl = document.defaultView.getComputedStyle(root);\n\n            return (\n                (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh]))\n                - (parseInt10(stl[plt]) || 0)\n                - (parseInt10(stl[prb]) || 0)\n            ) | 0;\n        },\n\n        pathToImage: function (path, dpr) {\n            dpr = dpr || this.dpr;\n\n            var canvas = document.createElement('canvas');\n            var ctx = canvas.getContext('2d');\n            var rect = path.getBoundingRect();\n            var style = path.style;\n            var shadowBlurSize = style.shadowBlur;\n            var shadowOffsetX = style.shadowOffsetX;\n            var shadowOffsetY = style.shadowOffsetY;\n            var lineWidth = style.hasStroke() ? style.lineWidth : 0;\n\n            var leftMargin = Math.max(lineWidth / 2, -shadowOffsetX + shadowBlurSize);\n            var rightMargin = Math.max(lineWidth / 2, shadowOffsetX + shadowBlurSize);\n            var topMargin = Math.max(lineWidth / 2, -shadowOffsetY + shadowBlurSize);\n            var bottomMargin = Math.max(lineWidth / 2, shadowOffsetY + shadowBlurSize);\n            var width = rect.width + leftMargin + rightMargin;\n            var height = rect.height + topMargin + bottomMargin;\n\n            canvas.width = width * dpr;\n            canvas.height = height * dpr;\n\n            ctx.scale(dpr, dpr);\n            ctx.clearRect(0, 0, width, height);\n            ctx.dpr = dpr;\n\n            var pathTransform = {\n                position: path.position,\n                rotation: path.rotation,\n                scale: path.scale\n            };\n            path.position = [leftMargin - rect.x, topMargin - rect.y];\n            path.rotation = 0;\n            path.scale = [1, 1];\n            path.updateTransform();\n            if (path) {\n                path.brush(ctx);\n            }\n\n            var ImageShape = __webpack_require__(230);\n            var imgShape = new ImageShape({\n                style: {\n                    x: 0,\n                    y: 0,\n                    image: canvas\n                }\n            });\n\n            if (pathTransform.position != null) {\n                imgShape.position = path.position = pathTransform.position;\n            }\n\n            if (pathTransform.rotation != null) {\n                imgShape.rotation = path.rotation = pathTransform.rotation;\n            }\n\n            if (pathTransform.scale != null) {\n                imgShape.scale = path.scale = pathTransform.scale;\n            }\n\n            return imgShape;\n        }\n    };\n\n    module.exports = Painter;\n\n\n\n/***/ }),\n/* 404 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Storage内容仓库模块\n * @module zrender/Storage\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n * @author errorrik (errorrik@gmail.com)\n * @author pissang (https://github.com/pissang/)\n */\n\n\n    var util = __webpack_require__(158);\n    var env = __webpack_require__(167);\n\n    var Group = __webpack_require__(183);\n\n    // Use timsort because in most case elements are partially sorted\n    // https://jsfiddle.net/pissang/jr4x7mdm/8/\n    var timsort = __webpack_require__(196);\n\n    function shapeCompareFunc(a, b) {\n        if (a.zlevel === b.zlevel) {\n            if (a.z === b.z) {\n                // if (a.z2 === b.z2) {\n                //     // FIXME Slow has renderidx compare\n                //     // http://stackoverflow.com/questions/20883421/sorting-in-javascript-should-every-compare-function-have-a-return-0-statement\n                //     // https://github.com/v8/v8/blob/47cce544a31ed5577ffe2963f67acb4144ee0232/src/js/array.js#L1012\n                //     return a.__renderidx - b.__renderidx;\n                // }\n                return a.z2 - b.z2;\n            }\n            return a.z - b.z;\n        }\n        return a.zlevel - b.zlevel;\n    }\n    /**\n     * 内容仓库 (M)\n     * @alias module:zrender/Storage\n     * @constructor\n     */\n    var Storage = function () {\n        this._roots = [];\n\n        this._displayList = [];\n\n        this._displayListLen = 0;\n    };\n\n    Storage.prototype = {\n\n        constructor: Storage,\n\n        /**\n         * @param  {Function} cb\n         *\n         */\n        traverse: function (cb, context) {\n            for (var i = 0; i < this._roots.length; i++) {\n                this._roots[i].traverse(cb, context);\n            }\n        },\n\n        /**\n         * 返回所有图形的绘制队列\n         * @param {boolean} [update=false] 是否在返回前更新该数组\n         * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组, 在 update 为 true 的时候有效\n         *\n         * 详见{@link module:zrender/graphic/Displayable.prototype.updateDisplayList}\n         * @return {Array.<module:zrender/graphic/Displayable>}\n         */\n        getDisplayList: function (update, includeIgnore) {\n            includeIgnore = includeIgnore || false;\n            if (update) {\n                this.updateDisplayList(includeIgnore);\n            }\n            return this._displayList;\n        },\n\n        /**\n         * 更新图形的绘制队列。\n         * 每次绘制前都会调用，该方法会先深度优先遍历整个树，更新所有Group和Shape的变换并且把所有可见的Shape保存到数组中，\n         * 最后根据绘制的优先级（zlevel > z > 插入顺序）排序得到绘制队列\n         * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组\n         */\n        updateDisplayList: function (includeIgnore) {\n            this._displayListLen = 0;\n            var roots = this._roots;\n            var displayList = this._displayList;\n            for (var i = 0, len = roots.length; i < len; i++) {\n                this._updateAndAddDisplayable(roots[i], null, includeIgnore);\n            }\n            displayList.length = this._displayListLen;\n\n            // for (var i = 0, len = displayList.length; i < len; i++) {\n            //     displayList[i].__renderidx = i;\n            // }\n\n            // displayList.sort(shapeCompareFunc);\n            env.canvasSupported && timsort(displayList, shapeCompareFunc);\n        },\n\n        _updateAndAddDisplayable: function (el, clipPaths, includeIgnore) {\n\n            if (el.ignore && !includeIgnore) {\n                return;\n            }\n\n            el.beforeUpdate();\n\n            if (el.__dirty) {\n\n                el.update();\n\n            }\n\n            el.afterUpdate();\n\n            var userSetClipPath = el.clipPath;\n            if (userSetClipPath) {\n\n                // FIXME 效率影响\n                if (clipPaths) {\n                    clipPaths = clipPaths.slice();\n                }\n                else {\n                    clipPaths = [];\n                }\n\n                var currentClipPath = userSetClipPath;\n                var parentClipPath = el;\n                // Recursively add clip path\n                while (currentClipPath) {\n                    // clipPath 的变换是基于使用这个 clipPath 的元素\n                    currentClipPath.parent = parentClipPath;\n                    currentClipPath.updateTransform();\n\n                    clipPaths.push(currentClipPath);\n\n                    parentClipPath = currentClipPath;\n                    currentClipPath = currentClipPath.clipPath;\n                }\n            }\n\n            if (el.isGroup) {\n                var children = el._children;\n\n                for (var i = 0; i < children.length; i++) {\n                    var child = children[i];\n\n                    // Force to mark as dirty if group is dirty\n                    // FIXME __dirtyPath ?\n                    if (el.__dirty) {\n                        child.__dirty = true;\n                    }\n\n                    this._updateAndAddDisplayable(child, clipPaths, includeIgnore);\n                }\n\n                // Mark group clean here\n                el.__dirty = false;\n\n            }\n            else {\n                el.__clipPaths = clipPaths;\n\n                this._displayList[this._displayListLen++] = el;\n            }\n        },\n\n        /**\n         * 添加图形(Shape)或者组(Group)到根节点\n         * @param {module:zrender/Element} el\n         */\n        addRoot: function (el) {\n            if (el.__storage === this) {\n                return;\n            }\n\n            if (el instanceof Group) {\n                el.addChildrenToStorage(this);\n            }\n\n            this.addToStorage(el);\n            this._roots.push(el);\n        },\n\n        /**\n         * 删除指定的图形(Shape)或者组(Group)\n         * @param {string|Array.<string>} [el] 如果为空清空整个Storage\n         */\n        delRoot: function (el) {\n            if (el == null) {\n                // 不指定el清空\n                for (var i = 0; i < this._roots.length; i++) {\n                    var root = this._roots[i];\n                    if (root instanceof Group) {\n                        root.delChildrenFromStorage(this);\n                    }\n                }\n\n                this._roots = [];\n                this._displayList = [];\n                this._displayListLen = 0;\n\n                return;\n            }\n\n            if (el instanceof Array) {\n                for (var i = 0, l = el.length; i < l; i++) {\n                    this.delRoot(el[i]);\n                }\n                return;\n            }\n\n\n            var idx = util.indexOf(this._roots, el);\n            if (idx >= 0) {\n                this.delFromStorage(el);\n                this._roots.splice(idx, 1);\n                if (el instanceof Group) {\n                    el.delChildrenFromStorage(this);\n                }\n            }\n        },\n\n        addToStorage: function (el) {\n            el.__storage = this;\n            el.dirty(false);\n\n            return this;\n        },\n\n        delFromStorage: function (el) {\n            if (el) {\n                el.__storage = null;\n            }\n\n            return this;\n        },\n\n        /**\n         * 清空并且释放Storage\n         */\n        dispose: function () {\n            this._renderList =\n            this._roots = null;\n        },\n\n        displayableSortFunc: shapeCompareFunc\n    };\n\n    module.exports = Storage;\n\n\n\n/***/ }),\n/* 405 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 动画主类, 调度和管理所有动画控制器\n *\n * @module zrender/animation/Animation\n * @author pissang(https://github.com/pissang)\n */\n// TODO Additive animation\n// http://iosoteric.com/additive-animations-animatewithduration-in-ios-8/\n// https://developer.apple.com/videos/wwdc2014/#236\n\n\n    var util = __webpack_require__(158);\n    var Dispatcher = __webpack_require__(176).Dispatcher;\n\n    var requestAnimationFrame = __webpack_require__(225);\n\n    var Animator = __webpack_require__(224);\n    /**\n     * @typedef {Object} IZRenderStage\n     * @property {Function} update\n     */\n\n    /**\n     * @alias module:zrender/animation/Animation\n     * @constructor\n     * @param {Object} [options]\n     * @param {Function} [options.onframe]\n     * @param {IZRenderStage} [options.stage]\n     * @example\n     *     var animation = new Animation();\n     *     var obj = {\n     *         x: 100,\n     *         y: 100\n     *     };\n     *     animation.animate(node.position)\n     *         .when(1000, {\n     *             x: 500,\n     *             y: 500\n     *         })\n     *         .when(2000, {\n     *             x: 100,\n     *             y: 100\n     *         })\n     *         .start('spline');\n     */\n    var Animation = function (options) {\n\n        options = options || {};\n\n        this.stage = options.stage || {};\n\n        this.onframe = options.onframe || function() {};\n\n        // private properties\n        this._clips = [];\n\n        this._running = false;\n\n        this._time;\n\n        this._pausedTime;\n\n        this._pauseStart;\n\n        this._paused = false;\n\n        Dispatcher.call(this);\n    };\n\n    Animation.prototype = {\n\n        constructor: Animation,\n        /**\n         * 添加 clip\n         * @param {module:zrender/animation/Clip} clip\n         */\n        addClip: function (clip) {\n            this._clips.push(clip);\n        },\n        /**\n         * 添加 animator\n         * @param {module:zrender/animation/Animator} animator\n         */\n        addAnimator: function (animator) {\n            animator.animation = this;\n            var clips = animator.getClips();\n            for (var i = 0; i < clips.length; i++) {\n                this.addClip(clips[i]);\n            }\n        },\n        /**\n         * 删除动画片段\n         * @param {module:zrender/animation/Clip} clip\n         */\n        removeClip: function(clip) {\n            var idx = util.indexOf(this._clips, clip);\n            if (idx >= 0) {\n                this._clips.splice(idx, 1);\n            }\n        },\n\n        /**\n         * 删除动画片段\n         * @param {module:zrender/animation/Animator} animator\n         */\n        removeAnimator: function (animator) {\n            var clips = animator.getClips();\n            for (var i = 0; i < clips.length; i++) {\n                this.removeClip(clips[i]);\n            }\n            animator.animation = null;\n        },\n\n        _update: function() {\n\n            var time = new Date().getTime() - this._pausedTime;\n            var delta = time - this._time;\n            var clips = this._clips;\n            var len = clips.length;\n\n            var deferredEvents = [];\n            var deferredClips = [];\n            for (var i = 0; i < len; i++) {\n                var clip = clips[i];\n                var e = clip.step(time, delta);\n                // Throw out the events need to be called after\n                // stage.update, like destroy\n                if (e) {\n                    deferredEvents.push(e);\n                    deferredClips.push(clip);\n                }\n            }\n\n            // Remove the finished clip\n            for (var i = 0; i < len;) {\n                if (clips[i]._needsRemove) {\n                    clips[i] = clips[len - 1];\n                    clips.pop();\n                    len--;\n                }\n                else {\n                    i++;\n                }\n            }\n\n            len = deferredEvents.length;\n            for (var i = 0; i < len; i++) {\n                deferredClips[i].fire(deferredEvents[i]);\n            }\n\n            this._time = time;\n\n            this.onframe(delta);\n\n            this.trigger('frame', delta);\n\n            if (this.stage.update) {\n                this.stage.update();\n            }\n        },\n\n        _startLoop: function () {\n            var self = this;\n\n            this._running = true;\n\n            function step() {\n                if (self._running) {\n\n                    requestAnimationFrame(step);\n\n                    !self._paused && self._update();\n                }\n            }\n\n            requestAnimationFrame(step);\n        },\n\n        /**\n         * 开始运行动画\n         */\n        start: function () {\n\n            this._time = new Date().getTime();\n            this._pausedTime = 0;\n\n            this._startLoop();\n        },\n        /**\n         * 停止运行动画\n         */\n        stop: function () {\n            this._running = false;\n        },\n\n        /**\n         * Pause\n         */\n        pause: function () {\n            if (!this._paused) {\n                this._pauseStart = new Date().getTime();\n                this._paused = true;\n            }\n        },\n\n        /**\n         * Resume\n         */\n        resume: function () {\n            if (this._paused) {\n                this._pausedTime += (new Date().getTime()) - this._pauseStart;\n                this._paused = false;\n            }\n        },\n\n        /**\n         * 清除所有动画片段\n         */\n        clear: function () {\n            this._clips = [];\n        },\n        /**\n         * 对一个目标创建一个animator对象，可以指定目标中的属性使用动画\n         * @param  {Object} target\n         * @param  {Object} options\n         * @param  {boolean} [options.loop=false] 是否循环播放动画\n         * @param  {Function} [options.getter=null]\n         *         如果指定getter函数，会通过getter函数取属性值\n         * @param  {Function} [options.setter=null]\n         *         如果指定setter函数，会通过setter函数设置属性值\n         * @return {module:zrender/animation/Animation~Animator}\n         */\n        // TODO Gap\n        animate: function (target, options) {\n            options = options || {};\n\n            var animator = new Animator(\n                target,\n                options.loop,\n                options.getter,\n                options.setter\n            );\n\n            this.addAnimator(animator);\n\n            return animator;\n        }\n    };\n\n    util.mixin(Animation, Dispatcher);\n\n    module.exports = Animation;\n\n\n\n/***/ }),\n/* 406 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 动画主控制器\n * @config target 动画对象，可以是数组，如果是数组的话会批量分发onframe等事件\n * @config life(1000) 动画时长\n * @config delay(0) 动画延迟时间\n * @config loop(true)\n * @config gap(0) 循环的间隔时间\n * @config onframe\n * @config easing(optional)\n * @config ondestroy(optional)\n * @config onrestart(optional)\n *\n * TODO pause\n */\n\n\n    var easingFuncs = __webpack_require__(407);\n\n    function Clip(options) {\n\n        this._target = options.target;\n\n        // 生命周期\n        this._life = options.life || 1000;\n        // 延时\n        this._delay = options.delay || 0;\n        // 开始时间\n        // this._startTime = new Date().getTime() + this._delay;// 单位毫秒\n        this._initialized = false;\n\n        // 是否循环\n        this.loop = options.loop == null ? false : options.loop;\n\n        this.gap = options.gap || 0;\n\n        this.easing = options.easing || 'Linear';\n\n        this.onframe = options.onframe;\n        this.ondestroy = options.ondestroy;\n        this.onrestart = options.onrestart;\n\n        this._pausedTime = 0;\n        this._paused = false;\n    }\n\n    Clip.prototype = {\n\n        constructor: Clip,\n\n        step: function (globalTime, deltaTime) {\n            // Set startTime on first step, or _startTime may has milleseconds different between clips\n            // PENDING\n            if (!this._initialized) {\n                this._startTime = globalTime + this._delay;\n                this._initialized = true;\n            }\n\n            if (this._paused) {\n                this._pausedTime += deltaTime;\n                return;\n            }\n\n            var percent = (globalTime - this._startTime - this._pausedTime) / this._life;\n\n            // 还没开始\n            if (percent < 0) {\n                return;\n            }\n\n            percent = Math.min(percent, 1);\n\n            var easing = this.easing;\n            var easingFunc = typeof easing == 'string' ? easingFuncs[easing] : easing;\n            var schedule = typeof easingFunc === 'function'\n                ? easingFunc(percent)\n                : percent;\n\n            this.fire('frame', schedule);\n\n            // 结束\n            if (percent == 1) {\n                if (this.loop) {\n                    this.restart (globalTime);\n                    // 重新开始周期\n                    // 抛出而不是直接调用事件直到 stage.update 后再统一调用这些事件\n                    return 'restart';\n                }\n\n                // 动画完成将这个控制器标识为待删除\n                // 在Animation.update中进行批量删除\n                this._needsRemove = true;\n                return 'destroy';\n            }\n\n            return null;\n        },\n\n        restart: function (globalTime) {\n            var remainder = (globalTime - this._startTime - this._pausedTime) % this._life;\n            this._startTime = globalTime - remainder + this.gap;\n            this._pausedTime = 0;\n\n            this._needsRemove = false;\n        },\n\n        fire: function (eventType, arg) {\n            eventType = 'on' + eventType;\n            if (this[eventType]) {\n                this[eventType](this._target, arg);\n            }\n        },\n\n        pause: function () {\n            this._paused = true;\n        },\n\n        resume: function () {\n            this._paused = false;\n        }\n    };\n\n    module.exports = Clip;\n\n\n\n/***/ }),\n/* 407 */\n/***/ (function(module, exports) {\n\n/**\n * 缓动代码来自 https://github.com/sole/tween.js/blob/master/src/Tween.js\n * @see http://sole.github.io/tween.js/examples/03_graphs.html\n * @exports zrender/animation/easing\n */\n\n    var easing = {\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        linear: function (k) {\n            return k;\n        },\n\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticIn: function (k) {\n            return k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticOut: function (k) {\n            return k * (2 - k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k;\n            }\n            return -0.5 * (--k * (k - 2) - 1);\n        },\n\n        // 三次方的缓动（t^3）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicIn: function (k) {\n            return k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicOut: function (k) {\n            return --k * k * k + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k;\n            }\n            return 0.5 * ((k -= 2) * k * k + 2);\n        },\n\n        // 四次方的缓动（t^4）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticIn: function (k) {\n            return k * k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticOut: function (k) {\n            return 1 - (--k * k * k * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k * k;\n            }\n            return -0.5 * ((k -= 2) * k * k * k - 2);\n        },\n\n        // 五次方的缓动（t^5）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticIn: function (k) {\n            return k * k * k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticOut: function (k) {\n            return --k * k * k * k * k + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k * k * k;\n            }\n            return 0.5 * ((k -= 2) * k * k * k * k + 2);\n        },\n\n        // 正弦曲线的缓动（sin(t)）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalIn: function (k) {\n            return 1 - Math.cos(k * Math.PI / 2);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalOut: function (k) {\n            return Math.sin(k * Math.PI / 2);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalInOut: function (k) {\n            return 0.5 * (1 - Math.cos(Math.PI * k));\n        },\n\n        // 指数曲线的缓动（2^t）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialIn: function (k) {\n            return k === 0 ? 0 : Math.pow(1024, k - 1);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialOut: function (k) {\n            return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialInOut: function (k) {\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if ((k *= 2) < 1) {\n                return 0.5 * Math.pow(1024, k - 1);\n            }\n            return 0.5 * (-Math.pow(2, -10 * (k - 1)) + 2);\n        },\n\n        // 圆形曲线的缓动（sqrt(1-t^2)）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularIn: function (k) {\n            return 1 - Math.sqrt(1 - k * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularOut: function (k) {\n            return Math.sqrt(1 - (--k * k));\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return -0.5 * (Math.sqrt(1 - k * k) - 1);\n            }\n            return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n        },\n\n        // 创建类似于弹簧在停止前来回振荡的动画\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticIn: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            return -(a * Math.pow(2, 10 * (k -= 1)) *\n                        Math.sin((k - s) * (2 * Math.PI) / p));\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticOut: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            return (a * Math.pow(2, -10 * k) *\n                    Math.sin((k - s) * (2 * Math.PI) / p) + 1);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticInOut: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            if ((k *= 2) < 1) {\n                return -0.5 * (a * Math.pow(2, 10 * (k -= 1))\n                    * Math.sin((k - s) * (2 * Math.PI) / p));\n            }\n            return a * Math.pow(2, -10 * (k -= 1))\n                    * Math.sin((k - s) * (2 * Math.PI) / p) * 0.5 + 1;\n\n        },\n\n        // 在某一动画开始沿指示的路径进行动画处理前稍稍收回该动画的移动\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backIn: function (k) {\n            var s = 1.70158;\n            return k * k * ((s + 1) * k - s);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backOut: function (k) {\n            var s = 1.70158;\n            return --k * k * ((s + 1) * k + s) + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backInOut: function (k) {\n            var s = 1.70158 * 1.525;\n            if ((k *= 2) < 1) {\n                return 0.5 * (k * k * ((s + 1) * k - s));\n            }\n            return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n        },\n\n        // 创建弹跳效果\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceIn: function (k) {\n            return 1 - easing.bounceOut(1 - k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceOut: function (k) {\n            if (k < (1 / 2.75)) {\n                return 7.5625 * k * k;\n            }\n            else if (k < (2 / 2.75)) {\n                return 7.5625 * (k -= (1.5 / 2.75)) * k + 0.75;\n            }\n            else if (k < (2.5 / 2.75)) {\n                return 7.5625 * (k -= (2.25 / 2.75)) * k + 0.9375;\n            }\n            else {\n                return 7.5625 * (k -= (2.625 / 2.75)) * k + 0.984375;\n            }\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceInOut: function (k) {\n            if (k < 0.5) {\n                return easing.bounceIn(k * 2) * 0.5;\n            }\n            return easing.bounceOut(k * 2 - 1) * 0.5 + 0.5;\n        }\n    };\n\n    module.exports = easing;\n\n\n\n\n/***/ }),\n/* 408 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var normalizeRadian = __webpack_require__(226).normalizeRadian;\n    var PI2 = Math.PI * 2;\n\n    module.exports = {\n        /**\n         * 圆弧描边包含判断\n         * @param  {number}  cx\n         * @param  {number}  cy\n         * @param  {number}  r\n         * @param  {number}  startAngle\n         * @param  {number}  endAngle\n         * @param  {boolean}  anticlockwise\n         * @param  {number} lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {Boolean}\n         */\n        containStroke: function (\n            cx, cy, r, startAngle, endAngle, anticlockwise,\n            lineWidth, x, y\n        ) {\n\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n\n            x -= cx;\n            y -= cy;\n            var d = Math.sqrt(x * x + y * y);\n\n            if ((d - _l > r) || (d + _l < r)) {\n                return false;\n            }\n            if (Math.abs(startAngle - endAngle) % PI2 < 1e-4) {\n                // Is a circle\n                return true;\n            }\n            if (anticlockwise) {\n                var tmp = startAngle;\n                startAngle = normalizeRadian(endAngle);\n                endAngle = normalizeRadian(tmp);\n            } else {\n                startAngle = normalizeRadian(startAngle);\n                endAngle = normalizeRadian(endAngle);\n            }\n            if (startAngle > endAngle) {\n                endAngle += PI2;\n            }\n\n            var angle = Math.atan2(y, x);\n            if (angle < 0) {\n                angle += PI2;\n            }\n            return (angle >= startAngle && angle <= endAngle)\n                || (angle + PI2 >= startAngle && angle + PI2 <= endAngle);\n        }\n    };\n\n\n/***/ }),\n/* 409 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var curve = __webpack_require__(174);\n\n    module.exports = {\n        /**\n         * 三次贝塞尔曲线描边包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  x2\n         * @param  {number}  y2\n         * @param  {number}  x3\n         * @param  {number}  y3\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function(x0, y0, x1, y1, x2, y2, x3, y3, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l && y > y2 + _l && y > y3 + _l)\n                || (y < y0 - _l && y < y1 - _l && y < y2 - _l && y < y3 - _l)\n                || (x > x0 + _l && x > x1 + _l && x > x2 + _l && x > x3 + _l)\n                || (x < x0 - _l && x < x1 - _l && x < x2 - _l && x < x3 - _l)\n            ) {\n                return false;\n            }\n            var d = curve.cubicProjectPoint(\n                x0, y0, x1, y1, x2, y2, x3, y3,\n                x, y, null\n            );\n            return d <= _l / 2;\n        }\n    };\n\n\n/***/ }),\n/* 410 */\n/***/ (function(module, exports) {\n\n\n    module.exports = {\n        /**\n         * 线段包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function (x0, y0, x1, y1, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            var _a = 0;\n            var _b = x0;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l)\n                || (y < y0 - _l && y < y1 - _l)\n                || (x > x0 + _l && x > x1 + _l)\n                || (x < x0 - _l && x < x1 - _l)\n            ) {\n                return false;\n            }\n\n            if (x0 !== x1) {\n                _a = (y0 - y1) / (x0 - x1);\n                _b = (x0 * y1 - x1 * y0) / (x0 - x1) ;\n            }\n            else {\n                return Math.abs(x - x0) <= _l / 2;\n            }\n            var tmp = _a * x - y + _b;\n            var _s = tmp * tmp / (_a * _a + 1);\n            return _s <= _l / 2 * _l / 2;\n        }\n    };\n\n\n/***/ }),\n/* 411 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var CMD = __webpack_require__(184).CMD;\n    var line = __webpack_require__(410);\n    var cubic = __webpack_require__(409);\n    var quadratic = __webpack_require__(412);\n    var arc = __webpack_require__(408);\n    var normalizeRadian = __webpack_require__(226).normalizeRadian;\n    var curve = __webpack_require__(174);\n\n    var windingLine = __webpack_require__(413);\n\n    var containStroke = line.containStroke;\n\n    var PI2 = Math.PI * 2;\n\n    var EPSILON = 1e-4;\n\n    function isAroundEqual(a, b) {\n        return Math.abs(a - b) < EPSILON;\n    }\n\n    // 临时数组\n    var roots = [-1, -1, -1];\n    var extrema = [-1, -1];\n\n    function swapExtrema() {\n        var tmp = extrema[0];\n        extrema[0] = extrema[1];\n        extrema[1] = tmp;\n    }\n\n    function windingCubic(x0, y0, x1, y1, x2, y2, x3, y3, x, y) {\n        // Quick reject\n        if (\n            (y > y0 && y > y1 && y > y2 && y > y3)\n            || (y < y0 && y < y1 && y < y2 && y < y3)\n        ) {\n            return 0;\n        }\n        var nRoots = curve.cubicRootAt(y0, y1, y2, y3, y, roots);\n        if (nRoots === 0) {\n            return 0;\n        }\n        else {\n            var w = 0;\n            var nExtrema = -1;\n            var y0_, y1_;\n            for (var i = 0; i < nRoots; i++) {\n                var t = roots[i];\n\n                // Avoid winding error when intersection point is the connect point of two line of polygon\n                var unit = (t === 0 || t === 1) ? 0.5 : 1;\n\n                var x_ = curve.cubicAt(x0, x1, x2, x3, t);\n                if (x_ < x) { // Quick reject\n                    continue;\n                }\n                if (nExtrema < 0) {\n                    nExtrema = curve.cubicExtrema(y0, y1, y2, y3, extrema);\n                    if (extrema[1] < extrema[0] && nExtrema > 1) {\n                        swapExtrema();\n                    }\n                    y0_ = curve.cubicAt(y0, y1, y2, y3, extrema[0]);\n                    if (nExtrema > 1) {\n                        y1_ = curve.cubicAt(y0, y1, y2, y3, extrema[1]);\n                    }\n                }\n                if (nExtrema == 2) {\n                    // 分成三段单调函数\n                    if (t < extrema[0]) {\n                        w += y0_ < y0 ? unit : -unit;\n                    }\n                    else if (t < extrema[1]) {\n                        w += y1_ < y0_ ? unit : -unit;\n                    }\n                    else {\n                        w += y3 < y1_ ? unit : -unit;\n                    }\n                }\n                else {\n                    // 分成两段单调函数\n                    if (t < extrema[0]) {\n                        w += y0_ < y0 ? unit : -unit;\n                    }\n                    else {\n                        w += y3 < y0_ ? unit : -unit;\n                    }\n                }\n            }\n            return w;\n        }\n    }\n\n    function windingQuadratic(x0, y0, x1, y1, x2, y2, x, y) {\n        // Quick reject\n        if (\n            (y > y0 && y > y1 && y > y2)\n            || (y < y0 && y < y1 && y < y2)\n        ) {\n            return 0;\n        }\n        var nRoots = curve.quadraticRootAt(y0, y1, y2, y, roots);\n        if (nRoots === 0) {\n            return 0;\n        }\n        else {\n            var t = curve.quadraticExtremum(y0, y1, y2);\n            if (t >= 0 && t <= 1) {\n                var w = 0;\n                var y_ = curve.quadraticAt(y0, y1, y2, t);\n                for (var i = 0; i < nRoots; i++) {\n                    // Remove one endpoint.\n                    var unit = (roots[i] === 0 || roots[i] === 1) ? 0.5 : 1;\n\n                    var x_ = curve.quadraticAt(x0, x1, x2, roots[i]);\n                    if (x_ < x) {   // Quick reject\n                        continue;\n                    }\n                    if (roots[i] < t) {\n                        w += y_ < y0 ? unit : -unit;\n                    }\n                    else {\n                        w += y2 < y_ ? unit : -unit;\n                    }\n                }\n                return w;\n            }\n            else {\n                // Remove one endpoint.\n                var unit = (roots[0] === 0 || roots[0] === 1) ? 0.5 : 1;\n\n                var x_ = curve.quadraticAt(x0, x1, x2, roots[0]);\n                if (x_ < x) {   // Quick reject\n                    return 0;\n                }\n                return y2 < y0 ? unit : -unit;\n            }\n        }\n    }\n\n    // TODO\n    // Arc 旋转\n    function windingArc(\n        cx, cy, r, startAngle, endAngle, anticlockwise, x, y\n    ) {\n        y -= cy;\n        if (y > r || y < -r) {\n            return 0;\n        }\n        var tmp = Math.sqrt(r * r - y * y);\n        roots[0] = -tmp;\n        roots[1] = tmp;\n\n        var diff = Math.abs(startAngle - endAngle);\n        if (diff < 1e-4) {\n            return 0;\n        }\n        if (diff % PI2 < 1e-4) {\n            // Is a circle\n            startAngle = 0;\n            endAngle = PI2;\n            var dir = anticlockwise ? 1 : -1;\n            if (x >= roots[0] + cx && x <= roots[1] + cx) {\n                return dir;\n            } else {\n                return 0;\n            }\n        }\n\n        if (anticlockwise) {\n            var tmp = startAngle;\n            startAngle = normalizeRadian(endAngle);\n            endAngle = normalizeRadian(tmp);\n        }\n        else {\n            startAngle = normalizeRadian(startAngle);\n            endAngle = normalizeRadian(endAngle);\n        }\n        if (startAngle > endAngle) {\n            endAngle += PI2;\n        }\n\n        var w = 0;\n        for (var i = 0; i < 2; i++) {\n            var x_ = roots[i];\n            if (x_ + cx > x) {\n                var angle = Math.atan2(y, x_);\n                var dir = anticlockwise ? 1 : -1;\n                if (angle < 0) {\n                    angle = PI2 + angle;\n                }\n                if (\n                    (angle >= startAngle && angle <= endAngle)\n                    || (angle + PI2 >= startAngle && angle + PI2 <= endAngle)\n                ) {\n                    if (angle > Math.PI / 2 && angle < Math.PI * 1.5) {\n                        dir = -dir;\n                    }\n                    w += dir;\n                }\n            }\n        }\n        return w;\n    }\n\n    function containPath(data, lineWidth, isStroke, x, y) {\n        var w = 0;\n        var xi = 0;\n        var yi = 0;\n        var x0 = 0;\n        var y0 = 0;\n\n        for (var i = 0; i < data.length;) {\n            var cmd = data[i++];\n            // Begin a new subpath\n            if (cmd === CMD.M && i > 1) {\n                // Close previous subpath\n                if (!isStroke) {\n                    w += windingLine(xi, yi, x0, y0, x, y);\n                }\n                // 如果被任何一个 subpath 包含\n                // if (w !== 0) {\n                //     return true;\n                // }\n            }\n\n            if (i == 1) {\n                // 如果第一个命令是 L, C, Q\n                // 则 previous point 同绘制命令的第一个 point\n                //\n                // 第一个命令为 Arc 的情况下会在后面特殊处理\n                xi = data[i];\n                yi = data[i + 1];\n\n                x0 = xi;\n                y0 = yi;\n            }\n\n            switch (cmd) {\n                case CMD.M:\n                    // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n                    // 在 closePath 的时候使用\n                    x0 = data[i++];\n                    y0 = data[i++];\n                    xi = x0;\n                    yi = y0;\n                    break;\n                case CMD.L:\n                    if (isStroke) {\n                        if (containStroke(xi, yi, data[i], data[i + 1], lineWidth, x, y)) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // NOTE 在第一个命令为 L, C, Q 的时候会计算出 NaN\n                        w += windingLine(xi, yi, data[i], data[i + 1], x, y) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.C:\n                    if (isStroke) {\n                        if (cubic.containStroke(xi, yi,\n                            data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingCubic(\n                            xi, yi,\n                            data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            x, y\n                        ) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.Q:\n                    if (isStroke) {\n                        if (quadratic.containStroke(xi, yi,\n                            data[i++], data[i++], data[i], data[i + 1],\n                            lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingQuadratic(\n                            xi, yi,\n                            data[i++], data[i++], data[i], data[i + 1],\n                            x, y\n                        ) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.A:\n                    // TODO Arc 判断的开销比较大\n                    var cx = data[i++];\n                    var cy = data[i++];\n                    var rx = data[i++];\n                    var ry = data[i++];\n                    var theta = data[i++];\n                    var dTheta = data[i++];\n                    // TODO Arc 旋转\n                    var psi = data[i++];\n                    var anticlockwise = 1 - data[i++];\n                    var x1 = Math.cos(theta) * rx + cx;\n                    var y1 = Math.sin(theta) * ry + cy;\n                    // 不是直接使用 arc 命令\n                    if (i > 1) {\n                        w += windingLine(xi, yi, x1, y1, x, y);\n                    }\n                    else {\n                        // 第一个命令起点还未定义\n                        x0 = x1;\n                        y0 = y1;\n                    }\n                    // zr 使用scale来模拟椭圆, 这里也对x做一定的缩放\n                    var _x = (x - cx) * ry / rx + cx;\n                    if (isStroke) {\n                        if (arc.containStroke(\n                            cx, cy, ry, theta, theta + dTheta, anticlockwise,\n                            lineWidth, _x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingArc(\n                            cx, cy, ry, theta, theta + dTheta, anticlockwise,\n                            _x, y\n                        );\n                    }\n                    xi = Math.cos(theta + dTheta) * rx + cx;\n                    yi = Math.sin(theta + dTheta) * ry + cy;\n                    break;\n                case CMD.R:\n                    x0 = xi = data[i++];\n                    y0 = yi = data[i++];\n                    var width = data[i++];\n                    var height = data[i++];\n                    var x1 = x0 + width;\n                    var y1 = y0 + height;\n                    if (isStroke) {\n                        if (containStroke(x0, y0, x1, y0, lineWidth, x, y)\n                          || containStroke(x1, y0, x1, y1, lineWidth, x, y)\n                          || containStroke(x1, y1, x0, y1, lineWidth, x, y)\n                          || containStroke(x0, y1, x0, y0, lineWidth, x, y)\n                        ) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // FIXME Clockwise ?\n                        w += windingLine(x1, y0, x1, y1, x, y);\n                        w += windingLine(x0, y1, x0, y0, x, y);\n                    }\n                    break;\n                case CMD.Z:\n                    if (isStroke) {\n                        if (containStroke(\n                            xi, yi, x0, y0, lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // Close a subpath\n                        w += windingLine(xi, yi, x0, y0, x, y);\n                        // 如果被任何一个 subpath 包含\n                        // FIXME subpaths may overlap\n                        // if (w !== 0) {\n                        //     return true;\n                        // }\n                    }\n                    xi = x0;\n                    yi = y0;\n                    break;\n            }\n        }\n        if (!isStroke && !isAroundEqual(yi, y0)) {\n            w += windingLine(xi, yi, x0, y0, x, y) || 0;\n        }\n        return w !== 0;\n    }\n\n    module.exports = {\n        contain: function (pathData, x, y) {\n            return containPath(pathData, 0, false, x, y);\n        },\n\n        containStroke: function (pathData, lineWidth, x, y) {\n            return containPath(pathData, lineWidth, true, x, y);\n        }\n    };\n\n\n/***/ }),\n/* 412 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var curve = __webpack_require__(174);\n\n    module.exports = {\n        /**\n         * 二次贝塞尔曲线描边包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  x2\n         * @param  {number}  y2\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function (x0, y0, x1, y1, x2, y2, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l && y > y2 + _l)\n                || (y < y0 - _l && y < y1 - _l && y < y2 - _l)\n                || (x > x0 + _l && x > x1 + _l && x > x2 + _l)\n                || (x < x0 - _l && x < x1 - _l && x < x2 - _l)\n            ) {\n                return false;\n            }\n            var d = curve.quadraticProjectPoint(\n                x0, y0, x1, y1, x2, y2,\n                x, y, null\n            );\n            return d <= _l / 2;\n        }\n    };\n\n\n/***/ }),\n/* 413 */\n/***/ (function(module, exports) {\n\n\n    module.exports = function windingLine(x0, y0, x1, y1, x, y) {\n        if ((y > y0 && y > y1) || (y < y0 && y < y1)) {\n            return 0;\n        }\n        // Ignore horizontal line\n        if (y1 === y0) {\n            return 0;\n        }\n        var dir = y1 < y0 ? 1 : -1;\n        var t = (y - y0) / (y1 - y0);\n\n        // Avoid winding error when intersection point is the connect point of two line of polygon\n        if (t === 1 || t === 0) {\n            dir = y1 < y0 ? 0.5 : -0.5;\n        }\n\n        var x_ = t * (x1 - x0) + x0;\n\n        return x_ > x ? dir : 0;\n    };\n\n\n/***/ }),\n/* 414 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Only implements needed gestures for mobile.\n */\n\n\n    var eventUtil = __webpack_require__(176);\n\n    var GestureMgr = function () {\n\n        /**\n         * @private\n         * @type {Array.<Object>}\n         */\n        this._track = [];\n    };\n\n    GestureMgr.prototype = {\n\n        constructor: GestureMgr,\n\n        recognize: function (event, target, root) {\n            this._doTrack(event, target, root);\n            return this._recognize(event);\n        },\n\n        clear: function () {\n            this._track.length = 0;\n            return this;\n        },\n\n        _doTrack: function (event, target, root) {\n            var touches = event.touches;\n\n            if (!touches) {\n                return;\n            }\n\n            var trackItem = {\n                points: [],\n                touches: [],\n                target: target,\n                event: event\n            };\n\n            for (var i = 0, len = touches.length; i < len; i++) {\n                var touch = touches[i];\n                var pos = eventUtil.clientToLocal(root, touch, {});\n                trackItem.points.push([pos.zrX, pos.zrY]);\n                trackItem.touches.push(touch);\n            }\n\n            this._track.push(trackItem);\n        },\n\n        _recognize: function (event) {\n            for (var eventName in recognizers) {\n                if (recognizers.hasOwnProperty(eventName)) {\n                    var gestureInfo = recognizers[eventName](this._track, event);\n                    if (gestureInfo) {\n                        return gestureInfo;\n                    }\n                }\n            }\n        }\n    };\n\n    function dist(pointPair) {\n        var dx = pointPair[1][0] - pointPair[0][0];\n        var dy = pointPair[1][1] - pointPair[0][1];\n\n        return Math.sqrt(dx * dx + dy * dy);\n    }\n\n    function center(pointPair) {\n        return [\n            (pointPair[0][0] + pointPair[1][0]) / 2,\n            (pointPair[0][1] + pointPair[1][1]) / 2\n        ];\n    }\n\n    var recognizers = {\n\n        pinch: function (track, event) {\n            var trackLen = track.length;\n\n            if (!trackLen) {\n                return;\n            }\n\n            var pinchEnd = (track[trackLen - 1] || {}).points;\n            var pinchPre = (track[trackLen - 2] || {}).points || pinchEnd;\n\n            if (pinchPre\n                && pinchPre.length > 1\n                && pinchEnd\n                && pinchEnd.length > 1\n            ) {\n                var pinchScale = dist(pinchEnd) / dist(pinchPre);\n                !isFinite(pinchScale) && (pinchScale = 1);\n\n                event.pinchScale = pinchScale;\n\n                var pinchCenter = center(pinchEnd);\n                event.pinchX = pinchCenter[0];\n                event.pinchY = pinchCenter[1];\n\n                return {\n                    type: 'pinch',\n                    target: track[0].target,\n                    event: event\n                };\n            }\n        }\n\n        // Only pinch currently.\n    };\n\n    module.exports = GestureMgr;\n\n\n\n/***/ }),\n/* 415 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @author Yi Shen(https://github.com/pissang)\n */\n\n\n    var vec2 = __webpack_require__(163);\n    var curve = __webpack_require__(174);\n\n    var bbox = {};\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    var mathSin = Math.sin;\n    var mathCos = Math.cos;\n\n    var start = vec2.create();\n    var end = vec2.create();\n    var extremity = vec2.create();\n\n    var PI2 = Math.PI * 2;\n    /**\n     * 从顶点数组中计算出最小包围盒，写入`min`和`max`中\n     * @module zrender/core/bbox\n     * @param {Array<Object>} points 顶点数组\n     * @param {number} min\n     * @param {number} max\n     */\n    bbox.fromPoints = function(points, min, max) {\n        if (points.length === 0) {\n            return;\n        }\n        var p = points[0];\n        var left = p[0];\n        var right = p[0];\n        var top = p[1];\n        var bottom = p[1];\n        var i;\n\n        for (i = 1; i < points.length; i++) {\n            p = points[i];\n            left = mathMin(left, p[0]);\n            right = mathMax(right, p[0]);\n            top = mathMin(top, p[1]);\n            bottom = mathMax(bottom, p[1]);\n        }\n\n        min[0] = left;\n        min[1] = top;\n        max[0] = right;\n        max[1] = bottom;\n    };\n\n    /**\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromLine = function (x0, y0, x1, y1, min, max) {\n        min[0] = mathMin(x0, x1);\n        min[1] = mathMin(y0, y1);\n        max[0] = mathMax(x0, x1);\n        max[1] = mathMax(y0, y1);\n    };\n\n    var xDim = [];\n    var yDim = [];\n    /**\n     * 从三阶贝塞尔曲线(p0, p1, p2, p3)中计算出最小包围盒，写入`min`和`max`中\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x3\n     * @param {number} y3\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromCubic = function(\n        x0, y0, x1, y1, x2, y2, x3, y3, min, max\n    ) {\n        var cubicExtrema = curve.cubicExtrema;\n        var cubicAt = curve.cubicAt;\n        var i;\n        var n = cubicExtrema(x0, x1, x2, x3, xDim);\n        min[0] = Infinity;\n        min[1] = Infinity;\n        max[0] = -Infinity;\n        max[1] = -Infinity;\n\n        for (i = 0; i < n; i++) {\n            var x = cubicAt(x0, x1, x2, x3, xDim[i]);\n            min[0] = mathMin(x, min[0]);\n            max[0] = mathMax(x, max[0]);\n        }\n        n = cubicExtrema(y0, y1, y2, y3, yDim);\n        for (i = 0; i < n; i++) {\n            var y = cubicAt(y0, y1, y2, y3, yDim[i]);\n            min[1] = mathMin(y, min[1]);\n            max[1] = mathMax(y, max[1]);\n        }\n\n        min[0] = mathMin(x0, min[0]);\n        max[0] = mathMax(x0, max[0]);\n        min[0] = mathMin(x3, min[0]);\n        max[0] = mathMax(x3, max[0]);\n\n        min[1] = mathMin(y0, min[1]);\n        max[1] = mathMax(y0, max[1]);\n        min[1] = mathMin(y3, min[1]);\n        max[1] = mathMax(y3, max[1]);\n    };\n\n    /**\n     * 从二阶贝塞尔曲线(p0, p1, p2)中计算出最小包围盒，写入`min`和`max`中\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromQuadratic = function(x0, y0, x1, y1, x2, y2, min, max) {\n        var quadraticExtremum = curve.quadraticExtremum;\n        var quadraticAt = curve.quadraticAt;\n        // Find extremities, where derivative in x dim or y dim is zero\n        var tx =\n            mathMax(\n                mathMin(quadraticExtremum(x0, x1, x2), 1), 0\n            );\n        var ty =\n            mathMax(\n                mathMin(quadraticExtremum(y0, y1, y2), 1), 0\n            );\n\n        var x = quadraticAt(x0, x1, x2, tx);\n        var y = quadraticAt(y0, y1, y2, ty);\n\n        min[0] = mathMin(x0, x2, x);\n        min[1] = mathMin(y0, y2, y);\n        max[0] = mathMax(x0, x2, x);\n        max[1] = mathMax(y0, y2, y);\n    };\n\n    /**\n     * 从圆弧中计算出最小包围盒，写入`min`和`max`中\n     * @method\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x\n     * @param {number} y\n     * @param {number} rx\n     * @param {number} ry\n     * @param {number} startAngle\n     * @param {number} endAngle\n     * @param {number} anticlockwise\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromArc = function (\n        x, y, rx, ry, startAngle, endAngle, anticlockwise, min, max\n    ) {\n        var vec2Min = vec2.min;\n        var vec2Max = vec2.max;\n\n        var diff = Math.abs(startAngle - endAngle);\n\n\n        if (diff % PI2 < 1e-4 && diff > 1e-4) {\n            // Is a circle\n            min[0] = x - rx;\n            min[1] = y - ry;\n            max[0] = x + rx;\n            max[1] = y + ry;\n            return;\n        }\n\n        start[0] = mathCos(startAngle) * rx + x;\n        start[1] = mathSin(startAngle) * ry + y;\n\n        end[0] = mathCos(endAngle) * rx + x;\n        end[1] = mathSin(endAngle) * ry + y;\n\n        vec2Min(min, start, end);\n        vec2Max(max, start, end);\n\n        // Thresh to [0, Math.PI * 2]\n        startAngle = startAngle % (PI2);\n        if (startAngle < 0) {\n            startAngle = startAngle + PI2;\n        }\n        endAngle = endAngle % (PI2);\n        if (endAngle < 0) {\n            endAngle = endAngle + PI2;\n        }\n\n        if (startAngle > endAngle && !anticlockwise) {\n            endAngle += PI2;\n        }\n        else if (startAngle < endAngle && anticlockwise) {\n            startAngle += PI2;\n        }\n        if (anticlockwise) {\n            var tmp = endAngle;\n            endAngle = startAngle;\n            startAngle = tmp;\n        }\n\n        // var number = 0;\n        // var step = (anticlockwise ? -Math.PI : Math.PI) / 2;\n        for (var angle = 0; angle < endAngle; angle += Math.PI / 2) {\n            if (angle > startAngle) {\n                extremity[0] = mathCos(angle) * rx + x;\n                extremity[1] = mathSin(angle) * ry + y;\n\n                vec2Min(min, extremity, min);\n                vec2Max(max, extremity, max);\n            }\n        }\n    };\n\n    module.exports = bbox;\n\n\n\n/***/ }),\n/* 416 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var eventTool = __webpack_require__(176);\n    var zrUtil = __webpack_require__(158);\n    var Eventful = __webpack_require__(177);\n    var env = __webpack_require__(167);\n    var GestureMgr = __webpack_require__(414);\n\n    var addEventListener = eventTool.addEventListener;\n    var removeEventListener = eventTool.removeEventListener;\n    var normalizeEvent = eventTool.normalizeEvent;\n\n    var TOUCH_CLICK_DELAY = 300;\n\n    var mouseHandlerNames = [\n        'click', 'dblclick', 'mousewheel', 'mouseout',\n        'mouseup', 'mousedown', 'mousemove', 'contextmenu'\n    ];\n\n    var touchHandlerNames = [\n        'touchstart', 'touchend', 'touchmove'\n    ];\n\n    var pointerEventNames = {\n        pointerdown: 1, pointerup: 1, pointermove: 1, pointerout: 1\n    };\n\n    var pointerHandlerNames = zrUtil.map(mouseHandlerNames, function (name) {\n        var nm = name.replace('mouse', 'pointer');\n        return pointerEventNames[nm] ? nm : name;\n    });\n\n    function eventNameFix(name) {\n        return (name === 'mousewheel' && env.browser.firefox) ? 'DOMMouseScroll' : name;\n    }\n\n    function processGesture(proxy, event, stage) {\n        var gestureMgr = proxy._gestureMgr;\n\n        stage === 'start' && gestureMgr.clear();\n\n        var gestureInfo = gestureMgr.recognize(\n            event,\n            proxy.handler.findHover(event.zrX, event.zrY, null).target,\n            proxy.dom\n        );\n\n        stage === 'end' && gestureMgr.clear();\n\n        // Do not do any preventDefault here. Upper application do that if necessary.\n        if (gestureInfo) {\n            var type = gestureInfo.type;\n            event.gestureEvent = type;\n\n            proxy.handler.dispatchToElement({target: gestureInfo.target}, type, gestureInfo.event);\n        }\n    }\n\n    // function onMSGestureChange(proxy, event) {\n    //     if (event.translationX || event.translationY) {\n    //         // mousemove is carried by MSGesture to reduce the sensitivity.\n    //         proxy.handler.dispatchToElement(event.target, 'mousemove', event);\n    //     }\n    //     if (event.scale !== 1) {\n    //         event.pinchX = event.offsetX;\n    //         event.pinchY = event.offsetY;\n    //         event.pinchScale = event.scale;\n    //         proxy.handler.dispatchToElement(event.target, 'pinch', event);\n    //     }\n    // }\n\n    /**\n     * Prevent mouse event from being dispatched after Touch Events action\n     * @see <https://github.com/deltakosh/handjs/blob/master/src/hand.base.js>\n     * 1. Mobile browsers dispatch mouse events 300ms after touchend.\n     * 2. Chrome for Android dispatch mousedown for long-touch about 650ms\n     * Result: Blocking Mouse Events for 700ms.\n     */\n    function setTouchTimer(instance) {\n        instance._touching = true;\n        clearTimeout(instance._touchTimer);\n        instance._touchTimer = setTimeout(function () {\n            instance._touching = false;\n        }, 700);\n    }\n\n\n    var domHandlers = {\n        /**\n         * Mouse move handler\n         * @inner\n         * @param {Event} event\n         */\n        mousemove: function (event) {\n            event = normalizeEvent(this.dom, event);\n\n            this.trigger('mousemove', event);\n        },\n\n        /**\n         * Mouse out handler\n         * @inner\n         * @param {Event} event\n         */\n        mouseout: function (event) {\n            event = normalizeEvent(this.dom, event);\n\n            var element = event.toElement || event.relatedTarget;\n            if (element != this.dom) {\n                while (element && element.nodeType != 9) {\n                    // 忽略包含在root中的dom引起的mouseOut\n                    if (element === this.dom) {\n                        return;\n                    }\n\n                    element = element.parentNode;\n                }\n            }\n\n            this.trigger('mouseout', event);\n        },\n\n        /**\n         * Touch开始响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchstart: function (event) {\n            // Default mouse behaviour should not be disabled here.\n            // For example, page may needs to be slided.\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            this._lastTouchMoment = new Date();\n\n            processGesture(this, event, 'start');\n\n            // In touch device, trigger `mousemove`(`mouseover`) should\n            // be triggered, and must before `mousedown` triggered.\n            domHandlers.mousemove.call(this, event);\n\n            domHandlers.mousedown.call(this, event);\n\n            setTouchTimer(this);\n        },\n\n        /**\n         * Touch移动响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchmove: function (event) {\n\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            processGesture(this, event, 'change');\n\n            // Mouse move should always be triggered no matter whether\n            // there is gestrue event, because mouse move and pinch may\n            // be used at the same time.\n            domHandlers.mousemove.call(this, event);\n\n            setTouchTimer(this);\n        },\n\n        /**\n         * Touch结束响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchend: function (event) {\n\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            processGesture(this, event, 'end');\n\n            domHandlers.mouseup.call(this, event);\n\n            // Do not trigger `mouseout` here, in spite of `mousemove`(`mouseover`) is\n            // triggered in `touchstart`. This seems to be illogical, but by this mechanism,\n            // we can conveniently implement \"hover style\" in both PC and touch device just\n            // by listening to `mouseover` to add \"hover style\" and listening to `mouseout`\n            // to remove \"hover style\" on an element, without any additional code for\n            // compatibility. (`mouseout` will not be triggered in `touchend`, so \"hover\n            // style\" will remain for user view)\n\n            // click event should always be triggered no matter whether\n            // there is gestrue event. System click can not be prevented.\n            if (+new Date() - this._lastTouchMoment < TOUCH_CLICK_DELAY) {\n                domHandlers.click.call(this, event);\n            }\n\n            setTouchTimer(this);\n        },\n\n        pointerdown: function (event) {\n            domHandlers.mousedown.call(this, event);\n\n            // if (useMSGuesture(this, event)) {\n            //     this._msGesture.addPointer(event.pointerId);\n            // }\n        },\n\n        pointermove: function (event) {\n            // FIXME\n            // pointermove is so sensitive that it always triggered when\n            // tap(click) on touch screen, which affect some judgement in\n            // upper application. So, we dont support mousemove on MS touch\n            // device yet.\n            if (!isPointerFromTouch(event)) {\n                domHandlers.mousemove.call(this, event);\n            }\n        },\n\n        pointerup: function (event) {\n            domHandlers.mouseup.call(this, event);\n        },\n\n        pointerout: function (event) {\n            // pointerout will be triggered when tap on touch screen\n            // (IE11+/Edge on MS Surface) after click event triggered,\n            // which is inconsistent with the mousout behavior we defined\n            // in touchend. So we unify them.\n            // (check domHandlers.touchend for detailed explanation)\n            if (!isPointerFromTouch(event)) {\n                domHandlers.mouseout.call(this, event);\n            }\n        }\n    };\n\n    function isPointerFromTouch(event) {\n        var pointerType = event.pointerType;\n        return pointerType === 'pen' || pointerType === 'touch';\n    }\n\n    // function useMSGuesture(handlerProxy, event) {\n    //     return isPointerFromTouch(event) && !!handlerProxy._msGesture;\n    // }\n\n    // Common handlers\n    zrUtil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n        domHandlers[name] = function (event) {\n            event = normalizeEvent(this.dom, event);\n            this.trigger(name, event);\n        };\n    });\n\n    /**\n     * 为控制类实例初始化dom 事件处理函数\n     *\n     * @inner\n     * @param {module:zrender/Handler} instance 控制类实例\n     */\n    function initDomHandler(instance) {\n        zrUtil.each(touchHandlerNames, function (name) {\n            instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n        });\n\n        zrUtil.each(pointerHandlerNames, function (name) {\n            instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n        });\n\n        zrUtil.each(mouseHandlerNames, function (name) {\n            instance._handlers[name] = makeMouseHandler(domHandlers[name], instance);\n        });\n\n        function makeMouseHandler(fn, instance) {\n            return function () {\n                if (instance._touching) {\n                    return;\n                }\n                return fn.apply(instance, arguments);\n            };\n        }\n    }\n\n\n    function HandlerDomProxy(dom) {\n        Eventful.call(this);\n\n        this.dom = dom;\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this._touching = false;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._touchTimer;\n\n        /**\n         * @private\n         * @type {module:zrender/core/GestureMgr}\n         */\n        this._gestureMgr = new GestureMgr();\n\n        this._handlers = {};\n\n        initDomHandler(this);\n\n        if (env.pointerEventsSupported) { // Only IE11+/Edge\n            // 1. On devices that both enable touch and mouse (e.g., MS Surface and lenovo X240),\n            // IE11+/Edge do not trigger touch event, but trigger pointer event and mouse event\n            // at the same time.\n            // 2. On MS Surface, it probablely only trigger mousedown but no mouseup when tap on\n            // screen, which do not occurs in pointer event.\n            // So we use pointer event to both detect touch gesture and mouse behavior.\n            mountHandlers(pointerHandlerNames, this);\n\n            // FIXME\n            // Note: MS Gesture require CSS touch-action set. But touch-action is not reliable,\n            // which does not prevent defuault behavior occasionally (which may cause view port\n            // zoomed in but use can not zoom it back). And event.preventDefault() does not work.\n            // So we have to not to use MSGesture and not to support touchmove and pinch on MS\n            // touch screen. And we only support click behavior on MS touch screen now.\n\n            // MS Gesture Event is only supported on IE11+/Edge and on Windows 8+.\n            // We dont support touch on IE on win7.\n            // See <https://msdn.microsoft.com/en-us/library/dn433243(v=vs.85).aspx>\n            // if (typeof MSGesture === 'function') {\n            //     (this._msGesture = new MSGesture()).target = dom; // jshint ignore:line\n            //     dom.addEventListener('MSGestureChange', onMSGestureChange);\n            // }\n        }\n        else {\n            if (env.touchEventsSupported) {\n                mountHandlers(touchHandlerNames, this);\n                // Handler of 'mouseout' event is needed in touch mode, which will be mounted below.\n                // addEventListener(root, 'mouseout', this._mouseoutHandler);\n            }\n\n            // 1. Considering some devices that both enable touch and mouse event (like on MS Surface\n            // and lenovo X240, @see #2350), we make mouse event be always listened, otherwise\n            // mouse event can not be handle in those devices.\n            // 2. On MS Surface, Chrome will trigger both touch event and mouse event. How to prevent\n            // mouseevent after touch event triggered, see `setTouchTimer`.\n            mountHandlers(mouseHandlerNames, this);\n        }\n\n        function mountHandlers(handlerNames, instance) {\n            zrUtil.each(handlerNames, function (name) {\n                addEventListener(dom, eventNameFix(name), instance._handlers[name]);\n            }, instance);\n        }\n    }\n\n    var handlerDomProxyProto = HandlerDomProxy.prototype;\n    handlerDomProxyProto.dispose = function () {\n        var handlerNames = mouseHandlerNames.concat(touchHandlerNames);\n\n        for (var i = 0; i < handlerNames.length; i++) {\n            var name = handlerNames[i];\n            removeEventListener(this.dom, eventNameFix(name), this._handlers[name]);\n        }\n    };\n\n    handlerDomProxyProto.setCursor = function (cursorStyle) {\n        this.dom.style.cursor = cursorStyle || 'default';\n    };\n\n    zrUtil.mixin(HandlerDomProxy, Eventful);\n\n    module.exports = HandlerDomProxy;\n\n\n/***/ }),\n/* 417 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// CompoundPath to improve performance\n\n\n    var Path = __webpack_require__(164);\n\n    module.exports = Path.extend({\n\n        type: 'compound',\n\n        shape: {\n\n            paths: null\n        },\n\n        _updatePathDirty: function () {\n            var dirtyPath = this.__dirtyPath;\n            var paths = this.shape.paths;\n            for (var i = 0; i < paths.length; i++) {\n                // Mark as dirty if any subpath is dirty\n                dirtyPath = dirtyPath || paths[i].__dirtyPath;\n            }\n            this.__dirtyPath = dirtyPath;\n            this.__dirty = this.__dirty || dirtyPath;\n        },\n\n        beforeBrush: function () {\n            this._updatePathDirty();\n            var paths = this.shape.paths || [];\n            var scale = this.getGlobalScale();\n            // Update path scale\n            for (var i = 0; i < paths.length; i++) {\n                if (!paths[i].path) {\n                    paths[i].createPathProxy();\n                }\n                paths[i].path.setScale(scale[0], scale[1]);\n            }\n        },\n\n        buildPath: function (ctx, shape) {\n            var paths = shape.paths || [];\n            for (var i = 0; i < paths.length; i++) {\n                paths[i].buildPath(ctx, paths[i].shape, true);\n            }\n        },\n\n        afterBrush: function () {\n            var paths = this.shape.paths;\n            for (var i = 0; i < paths.length; i++) {\n                paths[i].__dirtyPath = false;\n            }\n        },\n\n        getBoundingRect: function () {\n            this._updatePathDirty();\n            return Path.prototype.getBoundingRect.call(this);\n        }\n    });\n\n\n/***/ }),\n/* 418 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(158);\n\n    var Gradient = __webpack_require__(198);\n\n    /**\n     * x, y, x2, y2 are all percent from 0 to 1\n     * @param {number} [x=0]\n     * @param {number} [y=0]\n     * @param {number} [x2=1]\n     * @param {number} [y2=0]\n     * @param {Array.<Object>} colorStops\n     * @param {boolean} [globalCoord=false]\n     */\n    var LinearGradient = function (x, y, x2, y2, colorStops, globalCoord) {\n        // Should do nothing more in this constructor. Because gradient can be\n        // declard by `color: {type: 'linear', colorStops: ...}`, where\n        // this constructor will not be called.\n\n        this.x = x == null ? 0 : x;\n\n        this.y = y == null ? 0 : y;\n\n        this.x2 = x2 == null ? 1 : x2;\n\n        this.y2 = y2 == null ? 0 : y2;\n\n        // Can be cloned\n        this.type = 'linear';\n\n        // If use global coord\n        this.global = globalCoord || false;\n\n        Gradient.call(this, colorStops);\n    };\n\n    LinearGradient.prototype = {\n\n        constructor: LinearGradient\n    };\n\n    zrUtil.inherits(LinearGradient, Gradient);\n\n    module.exports = LinearGradient;\n\n\n/***/ }),\n/* 419 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(158);\n\n    var Gradient = __webpack_require__(198);\n\n    /**\n     * x, y, r are all percent from 0 to 1\n     * @param {number} [x=0.5]\n     * @param {number} [y=0.5]\n     * @param {number} [r=0.5]\n     * @param {Array.<Object>} [colorStops]\n     * @param {boolean} [globalCoord=false]\n     */\n    var RadialGradient = function (x, y, r, colorStops, globalCoord) {\n        // Should do nothing more in this constructor. Because gradient can be\n        // declard by `color: {type: 'radial', colorStops: ...}`, where\n        // this constructor will not be called.\n\n        this.x = x == null ? 0.5 : x;\n\n        this.y = y == null ? 0.5 : y;\n\n        this.r = r == null ? 0.5 : r;\n\n        // Can be cloned\n        this.type = 'radial';\n\n        // If use global coord\n        this.global = globalCoord || false;\n\n        Gradient.call(this, colorStops);\n    };\n\n    RadialGradient.prototype = {\n\n        constructor: RadialGradient\n    };\n\n    zrUtil.inherits(RadialGradient, Gradient);\n\n    module.exports = RadialGradient;\n\n\n/***/ }),\n/* 420 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Text element\n * @module zrender/graphic/Text\n *\n * TODO Wrapping\n *\n * Text not support gradient\n */\n\n\n\n    var Displayable = __webpack_require__(197);\n    var zrUtil = __webpack_require__(158);\n    var textContain = __webpack_require__(172);\n\n    /**\n     * @alias zrender/graphic/Text\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    var Text = function (opts) {\n        Displayable.call(this, opts);\n    };\n\n    Text.prototype = {\n\n        constructor: Text,\n\n        type: 'text',\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n            var x = style.x || 0;\n            var y = style.y || 0;\n            // Convert to string\n            var text = style.text;\n\n            // Convert to string\n            text != null && (text += '');\n\n            // Always bind style\n            style.bind(ctx, this, prevEl);\n\n            if (text) {\n\n                this.setTransform(ctx);\n\n                var textBaseline;\n                var textAlign = style.textAlign;\n                var font = style.textFont || style.font;\n                if (style.textVerticalAlign) {\n                    var rect = textContain.getBoundingRect(\n                        text, font, style.textAlign, 'top'\n                    );\n                    // Ignore textBaseline\n                    textBaseline = 'middle';\n                    switch (style.textVerticalAlign) {\n                        case 'middle':\n                            y -= rect.height / 2 - rect.lineHeight / 2;\n                            break;\n                        case 'bottom':\n                            y -= rect.height - rect.lineHeight / 2;\n                            break;\n                        default:\n                            y += rect.lineHeight / 2;\n                    }\n                }\n                else {\n                    textBaseline = style.textBaseline;\n                }\n\n                // TODO Invalid font\n                ctx.font = font || '12px sans-serif';\n                ctx.textAlign = textAlign || 'left';\n                // Use canvas default left textAlign. Giving invalid value will cause state not change\n                if (ctx.textAlign !== textAlign) {\n                    ctx.textAlign = 'left';\n                }\n                // FIXME in text contain default is top\n                ctx.textBaseline = textBaseline || 'alphabetic';\n                // Use canvas default alphabetic baseline\n                if (ctx.textBaseline !== textBaseline) {\n                    ctx.textBaseline = 'alphabetic';\n                }\n\n                var lineHeight = textContain.measureText('国', ctx.font).width;\n\n                var textLines = text.split('\\n');\n                for (var i = 0; i < textLines.length; i++) {\n                    // Fill after stroke so the outline will not cover the main part.\n                    style.hasStroke() && ctx.strokeText(textLines[i], x, y);\n                    style.hasFill() && ctx.fillText(textLines[i], x, y);\n                    y += lineHeight;\n                }\n\n                this.restoreTransform(ctx);\n            }\n        },\n\n        getBoundingRect: function () {\n            var style = this.style;\n            if (!this._rect) {\n                var textVerticalAlign = style.textVerticalAlign;\n                var rect = textContain.getBoundingRect(\n                    style.text + '', style.textFont || style.font, style.textAlign,\n                    textVerticalAlign ? 'top' : style.textBaseline\n                );\n                switch (textVerticalAlign) {\n                    case 'middle':\n                        rect.y -= rect.height / 2;\n                        break;\n                    case 'bottom':\n                        rect.y -= rect.height;\n                        break;\n                }\n                rect.x += style.x || 0;\n                rect.y += style.y || 0;\n                if (style.hasStroke()) {\n                    var w = style.lineWidth;\n                    rect.x -= w / 2;\n                    rect.y -= w / 2;\n                    rect.width += w;\n                    rect.height += w;\n                }\n                this._rect = rect;\n            }\n\n            return this._rect;\n        }\n    };\n\n    zrUtil.inherits(Text, Displayable);\n\n    module.exports = Text;\n\n\n/***/ }),\n/* 421 */\n/***/ (function(module, exports) {\n\n\n\n    module.exports = {\n        buildPath: function (ctx, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var width = shape.width;\n            var height = shape.height;\n            var r = shape.r;\n            var r1;\n            var r2;\n            var r3;\n            var r4;\n\n            // Convert width and height to positive for better borderRadius\n            if (width < 0) {\n                x = x + width;\n                width = -width;\n            }\n            if (height < 0) {\n                y = y + height;\n                height = -height;\n            }\n\n            if (typeof r === 'number') {\n                r1 = r2 = r3 = r4 = r;\n            }\n            else if (r instanceof Array) {\n                if (r.length === 1) {\n                    r1 = r2 = r3 = r4 = r[0];\n                }\n                else if (r.length === 2) {\n                    r1 = r3 = r[0];\n                    r2 = r4 = r[1];\n                }\n                else if (r.length === 3) {\n                    r1 = r[0];\n                    r2 = r4 = r[1];\n                    r3 = r[2];\n                }\n                else {\n                    r1 = r[0];\n                    r2 = r[1];\n                    r3 = r[2];\n                    r4 = r[3];\n                }\n            }\n            else {\n                r1 = r2 = r3 = r4 = 0;\n            }\n\n            var total;\n            if (r1 + r2 > width) {\n                total = r1 + r2;\n                r1 *= width / total;\n                r2 *= width / total;\n            }\n            if (r3 + r4 > width) {\n                total = r3 + r4;\n                r3 *= width / total;\n                r4 *= width / total;\n            }\n            if (r2 + r3 > height) {\n                total = r2 + r3;\n                r2 *= height / total;\n                r3 *= height / total;\n            }\n            if (r1 + r4 > height) {\n                total = r1 + r4;\n                r1 *= height / total;\n                r4 *= height / total;\n            }\n            ctx.moveTo(x + r1, y);\n            ctx.lineTo(x + width - r2, y);\n            r2 !== 0 && ctx.quadraticCurveTo(\n                x + width, y, x + width, y + r2\n            );\n            ctx.lineTo(x + width, y + height - r3);\n            r3 !== 0 && ctx.quadraticCurveTo(\n                x + width, y + height, x + width - r3, y + height\n            );\n            ctx.lineTo(x + r4, y + height);\n            r4 !== 0 && ctx.quadraticCurveTo(\n                x, y + height, x, y + height - r4\n            );\n            ctx.lineTo(x, y + r1);\n            r1 !== 0 && ctx.quadraticCurveTo(x, y, x + r1, y);\n        }\n    };\n\n\n/***/ }),\n/* 422 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 贝塞尔平滑曲线\n * @module zrender/shape/util/smoothBezier\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n\n    var vec2 = __webpack_require__(163);\n    var v2Min = vec2.min;\n    var v2Max = vec2.max;\n    var v2Scale = vec2.scale;\n    var v2Distance = vec2.distance;\n    var v2Add = vec2.add;\n\n    /**\n     * 贝塞尔平滑曲线\n     * @alias module:zrender/shape/util/smoothBezier\n     * @param {Array} points 线段顶点数组\n     * @param {number} smooth 平滑等级, 0-1\n     * @param {boolean} isLoop\n     * @param {Array} constraint 将计算出来的控制点约束在一个包围盒内\n     *                           比如 [[0, 0], [100, 100]], 这个包围盒会与\n     *                           整个折线的包围盒做一个并集用来约束控制点。\n     * @param {Array} 计算出来的控制点数组\n     */\n    module.exports = function (points, smooth, isLoop, constraint) {\n        var cps = [];\n\n        var v = [];\n        var v1 = [];\n        var v2 = [];\n        var prevPoint;\n        var nextPoint;\n\n        var min, max;\n        if (constraint) {\n            min = [Infinity, Infinity];\n            max = [-Infinity, -Infinity];\n            for (var i = 0, len = points.length; i < len; i++) {\n                v2Min(min, min, points[i]);\n                v2Max(max, max, points[i]);\n            }\n            // 与指定的包围盒做并集\n            v2Min(min, min, constraint[0]);\n            v2Max(max, max, constraint[1]);\n        }\n\n        for (var i = 0, len = points.length; i < len; i++) {\n            var point = points[i];\n\n            if (isLoop) {\n                prevPoint = points[i ? i - 1 : len - 1];\n                nextPoint = points[(i + 1) % len];\n            }\n            else {\n                if (i === 0 || i === len - 1) {\n                    cps.push(vec2.clone(points[i]));\n                    continue;\n                }\n                else {\n                    prevPoint = points[i - 1];\n                    nextPoint = points[i + 1];\n                }\n            }\n\n            vec2.sub(v, nextPoint, prevPoint);\n\n            // use degree to scale the handle length\n            v2Scale(v, v, smooth);\n\n            var d0 = v2Distance(point, prevPoint);\n            var d1 = v2Distance(point, nextPoint);\n            var sum = d0 + d1;\n            if (sum !== 0) {\n                d0 /= sum;\n                d1 /= sum;\n            }\n\n            v2Scale(v1, v, -d0);\n            v2Scale(v2, v, d1);\n            var cp0 = v2Add([], point, v1);\n            var cp1 = v2Add([], point, v2);\n            if (constraint) {\n                v2Max(cp0, cp0, min);\n                v2Min(cp0, cp0, max);\n                v2Max(cp1, cp1, min);\n                v2Min(cp1, cp1, max);\n            }\n            cps.push(cp0);\n            cps.push(cp1);\n        }\n\n        if (isLoop) {\n            cps.push(cps.shift());\n        }\n\n        return cps;\n    };\n\n\n\n/***/ }),\n/* 423 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Catmull-Rom spline 插值折线\n * @module zrender/shape/util/smoothSpline\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n    var vec2 = __webpack_require__(163);\n\n    /**\n     * @inner\n     */\n    function interpolate(p0, p1, p2, p3, t, t2, t3) {\n        var v0 = (p2 - p0) * 0.5;\n        var v1 = (p3 - p1) * 0.5;\n        return (2 * (p1 - p2) + v0 + v1) * t3\n                + (-3 * (p1 - p2) - 2 * v0 - v1) * t2\n                + v0 * t + p1;\n    }\n\n    /**\n     * @alias module:zrender/shape/util/smoothSpline\n     * @param {Array} points 线段顶点数组\n     * @param {boolean} isLoop\n     * @return {Array}\n     */\n    module.exports = function (points, isLoop) {\n        var len = points.length;\n        var ret = [];\n\n        var distance = 0;\n        for (var i = 1; i < len; i++) {\n            distance += vec2.distance(points[i - 1], points[i]);\n        }\n\n        var segs = distance / 2;\n        segs = segs < len ? len : segs;\n        for (var i = 0; i < segs; i++) {\n            var pos = i / (segs - 1) * (isLoop ? len : len - 1);\n            var idx = Math.floor(pos);\n\n            var w = pos - idx;\n\n            var p0;\n            var p1 = points[idx % len];\n            var p2;\n            var p3;\n            if (!isLoop) {\n                p0 = points[idx === 0 ? idx : idx - 1];\n                p2 = points[idx > len - 2 ? len - 1 : idx + 1];\n                p3 = points[idx > len - 3 ? len - 1 : idx + 2];\n            }\n            else {\n                p0 = points[(idx - 1 + len) % len];\n                p2 = points[(idx + 1) % len];\n                p3 = points[(idx + 2) % len];\n            }\n\n            var w2 = w * w;\n            var w3 = w * w2;\n\n            ret.push([\n                interpolate(p0[0], p1[0], p2[0], p3[0], w, w2, w3),\n                interpolate(p0[1], p1[1], p2[1], p3[1], w, w2, w3)\n            ]);\n        }\n        return ret;\n    };\n\n\n\n/***/ }),\n/* 424 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Mixin for drawing text in a element bounding rect\n * @module zrender/mixin/RectText\n */\n\n\n\n    var textContain = __webpack_require__(172);\n    var BoundingRect = __webpack_require__(169);\n\n    var tmpRect = new BoundingRect();\n\n    var RectText = function () {};\n\n    function parsePercent(value, maxValue) {\n        if (typeof value === 'string') {\n            if (value.lastIndexOf('%') >= 0) {\n                return parseFloat(value) / 100 * maxValue;\n            }\n            return parseFloat(value);\n        }\n        return value;\n    }\n\n    RectText.prototype = {\n\n        constructor: RectText,\n\n        /**\n         * Draw text in a rect with specified position.\n         * @param  {CanvasRenderingContext} ctx\n         * @param  {Object} rect Displayable rect\n         * @return {Object} textRect Alternative precalculated text bounding rect\n         */\n        drawRectText: function (ctx, rect, textRect) {\n            var style = this.style;\n            var text = style.text;\n            // Convert to string\n            text != null && (text += '');\n            if (!text) {\n                return;\n            }\n\n            // FIXME\n            ctx.save();\n\n            var x;\n            var y;\n            var textPosition = style.textPosition;\n            var textOffset = style.textOffset;\n            var distance = style.textDistance;\n            var align = style.textAlign;\n            var font = style.textFont || style.font;\n            var baseline = style.textBaseline;\n            var verticalAlign = style.textVerticalAlign;\n\n            textRect = textRect || textContain.getBoundingRect(text, font, align, baseline);\n\n            // Transform rect to view space\n            var transform = this.transform;\n            if (!style.textTransform) {\n                if (transform) {\n                    tmpRect.copy(rect);\n                    tmpRect.applyTransform(transform);\n                    rect = tmpRect;\n                }\n            }\n            else {\n                this.setTransform(ctx);\n            }\n\n            // Text position represented by coord\n            if (textPosition instanceof Array) {\n                // Percent\n                x = rect.x + parsePercent(textPosition[0], rect.width);\n                y = rect.y + parsePercent(textPosition[1], rect.height);\n                align = align || 'left';\n                baseline = baseline || 'top';\n\n                if (verticalAlign) {\n                    switch (verticalAlign) {\n                        case 'middle':\n                            y -= textRect.height / 2 - textRect.lineHeight / 2;\n                            break;\n                        case 'bottom':\n                            y -= textRect.height - textRect.lineHeight / 2;\n                            break;\n                        default:\n                            y += textRect.lineHeight / 2;\n                    }\n                    // Force bseline to be middle\n                    baseline = 'middle';\n                }\n            }\n            else {\n                var res = textContain.adjustTextPositionOnRect(\n                    textPosition, rect, textRect, distance\n                );\n                x = res.x;\n                y = res.y;\n                // Default align and baseline when has textPosition\n                align = align || res.textAlign;\n                baseline = baseline || res.textBaseline;\n            }\n\n            if (textOffset) {\n                x += textOffset[0];\n                y += textOffset[1];\n            }\n\n            // Use canvas default left textAlign. Giving invalid value will cause state not change\n            ctx.textAlign = align || 'left';\n            // Use canvas default alphabetic baseline\n            ctx.textBaseline = baseline || 'alphabetic';\n\n            var textFill = style.textFill;\n            var textStroke = style.textStroke;\n            textFill && (ctx.fillStyle = textFill);\n            textStroke && (ctx.strokeStyle = textStroke);\n\n            // TODO Invalid font\n            ctx.font = font || '12px sans-serif';\n\n            // Text shadow\n            // Always set shadowBlur and shadowOffset to avoid leak from displayable\n            ctx.shadowBlur = style.textShadowBlur;\n            ctx.shadowColor = style.textShadowColor || 'transparent';\n            ctx.shadowOffsetX = style.textShadowOffsetX;\n            ctx.shadowOffsetY = style.textShadowOffsetY;\n\n            var textLines = text.split('\\n');\n\n            if (style.textRotation) {\n                transform && ctx.translate(transform[4], transform[5]);\n                ctx.rotate(style.textRotation);\n                transform && ctx.translate(-transform[4], -transform[5]);\n            }\n\n            for (var i = 0; i < textLines.length; i++) {\n                    // Fill after stroke so the outline will not cover the main part.\n                textStroke && ctx.strokeText(textLines[i], x, y);\n                textFill && ctx.fillText(textLines[i], x, y);\n                y += textRect.lineHeight;\n            }\n\n            ctx.restore();\n        }\n    };\n\n    module.exports = RectText;\n\n\n/***/ }),\n/* 425 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 圆弧\n * @module zrender/graphic/shape/Arc\n */\n \n\n    module.exports = __webpack_require__(164).extend({\n\n        type: 'arc',\n\n        shape: {\n\n            cx: 0,\n\n            cy: 0,\n\n            r: 0,\n\n            startAngle: 0,\n\n            endAngle: Math.PI * 2,\n\n            clockwise: true\n        },\n\n        style: {\n\n            stroke: '#000',\n\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n\n            var x = shape.cx;\n            var y = shape.cy;\n            var r = Math.max(shape.r, 0);\n            var startAngle = shape.startAngle;\n            var endAngle = shape.endAngle;\n            var clockwise = shape.clockwise;\n\n            var unitX = Math.cos(startAngle);\n            var unitY = Math.sin(startAngle);\n\n            ctx.moveTo(unitX * r + x, unitY * r + y);\n            ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n        }\n    });\n\n\n/***/ }),\n/* 426 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 贝塞尔曲线\n * @module zrender/shape/BezierCurve\n */\n\n\n    var curveTool = __webpack_require__(174);\n    var vec2 = __webpack_require__(163);\n    var quadraticSubdivide = curveTool.quadraticSubdivide;\n    var cubicSubdivide = curveTool.cubicSubdivide;\n    var quadraticAt = curveTool.quadraticAt;\n    var cubicAt = curveTool.cubicAt;\n    var quadraticDerivativeAt = curveTool.quadraticDerivativeAt;\n    var cubicDerivativeAt = curveTool.cubicDerivativeAt;\n\n    var out = [];\n\n    function someVectorAt(shape, t, isTangent) {\n        var cpx2 = shape.cpx2;\n        var cpy2 = shape.cpy2;\n        if (cpx2 === null || cpy2 === null) {\n            return [\n                (isTangent ? cubicDerivativeAt : cubicAt)(shape.x1, shape.cpx1, shape.cpx2, shape.x2, t),\n                (isTangent ? cubicDerivativeAt : cubicAt)(shape.y1, shape.cpy1, shape.cpy2, shape.y2, t)\n            ];\n        }\n        else {\n            return [\n                (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.x1, shape.cpx1, shape.x2, t),\n                (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.y1, shape.cpy1, shape.y2, t)\n            ];\n        }\n    }\n    module.exports = __webpack_require__(164).extend({\n\n        type: 'bezier-curve',\n\n        shape: {\n            x1: 0,\n            y1: 0,\n            x2: 0,\n            y2: 0,\n            cpx1: 0,\n            cpy1: 0,\n            // cpx2: 0,\n            // cpy2: 0\n\n            // Curve show percent, for animating\n            percent: 1\n        },\n\n        style: {\n            stroke: '#000',\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            var x1 = shape.x1;\n            var y1 = shape.y1;\n            var x2 = shape.x2;\n            var y2 = shape.y2;\n            var cpx1 = shape.cpx1;\n            var cpy1 = shape.cpy1;\n            var cpx2 = shape.cpx2;\n            var cpy2 = shape.cpy2;\n            var percent = shape.percent;\n            if (percent === 0) {\n                return;\n            }\n\n            ctx.moveTo(x1, y1);\n\n            if (cpx2 == null || cpy2 == null) {\n                if (percent < 1) {\n                    quadraticSubdivide(\n                        x1, cpx1, x2, percent, out\n                    );\n                    cpx1 = out[1];\n                    x2 = out[2];\n                    quadraticSubdivide(\n                        y1, cpy1, y2, percent, out\n                    );\n                    cpy1 = out[1];\n                    y2 = out[2];\n                }\n\n                ctx.quadraticCurveTo(\n                    cpx1, cpy1,\n                    x2, y2\n                );\n            }\n            else {\n                if (percent < 1) {\n                    cubicSubdivide(\n                        x1, cpx1, cpx2, x2, percent, out\n                    );\n                    cpx1 = out[1];\n                    cpx2 = out[2];\n                    x2 = out[3];\n                    cubicSubdivide(\n                        y1, cpy1, cpy2, y2, percent, out\n                    );\n                    cpy1 = out[1];\n                    cpy2 = out[2];\n                    y2 = out[3];\n                }\n                ctx.bezierCurveTo(\n                    cpx1, cpy1,\n                    cpx2, cpy2,\n                    x2, y2\n                );\n            }\n        },\n\n        /**\n         * Get point at percent\n         * @param  {number} t\n         * @return {Array.<number>}\n         */\n        pointAt: function (t) {\n            return someVectorAt(this.shape, t, false);\n        },\n\n        /**\n         * Get tangent at percent\n         * @param  {number} t\n         * @return {Array.<number>}\n         */\n        tangentAt: function (t) {\n            var p = someVectorAt(this.shape, t, true);\n            return vec2.normalize(p, p);\n        }\n    });\n\n\n\n/***/ }),\n/* 427 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 圆形\n * @module zrender/shape/Circle\n */\n\n\n\n    module.exports = __webpack_require__(164).extend({\n\n        type: 'circle',\n\n        shape: {\n            cx: 0,\n            cy: 0,\n            r: 0\n        },\n\n\n        buildPath : function (ctx, shape, inBundle) {\n            // Better stroking in ShapeBundle\n            // Always do it may have performence issue ( fill may be 2x more cost)\n            if (inBundle) {\n                ctx.moveTo(shape.cx + shape.r, shape.cy);\n            }\n            // else {\n            //     if (ctx.allocate && !ctx.data.length) {\n            //         ctx.allocate(ctx.CMD_MEM_SIZE.A);\n            //     }\n            // }\n            // Better stroking in ShapeBundle\n            // ctx.moveTo(shape.cx + shape.r, shape.cy);\n            ctx.arc(shape.cx, shape.cy, shape.r, 0, Math.PI * 2, true);\n        }\n    });\n\n\n\n/***/ }),\n/* 428 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 直线\n * @module zrender/graphic/shape/Line\n */\n\n    module.exports = __webpack_require__(164).extend({\n\n        type: 'line',\n\n        shape: {\n            // Start point\n            x1: 0,\n            y1: 0,\n            // End point\n            x2: 0,\n            y2: 0,\n\n            percent: 1\n        },\n\n        style: {\n            stroke: '#000',\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            var x1 = shape.x1;\n            var y1 = shape.y1;\n            var x2 = shape.x2;\n            var y2 = shape.y2;\n            var percent = shape.percent;\n\n            if (percent === 0) {\n                return;\n            }\n\n            ctx.moveTo(x1, y1);\n\n            if (percent < 1) {\n                x2 = x1 * (1 - percent) + x2 * percent;\n                y2 = y1 * (1 - percent) + y2 * percent;\n            }\n            ctx.lineTo(x2, y2);\n        },\n\n        /**\n         * Get point at percent\n         * @param  {number} percent\n         * @return {Array.<number>}\n         */\n        pointAt: function (p) {\n            var shape = this.shape;\n            return [\n                shape.x1 * (1 - p) + shape.x2 * p,\n                shape.y1 * (1 - p) + shape.y2 * p\n            ];\n        }\n    });\n\n\n\n/***/ }),\n/* 429 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 多边形\n * @module zrender/shape/Polygon\n */\n\n\n    var polyHelper = __webpack_require__(233);\n\n    module.exports = __webpack_require__(164).extend({\n        \n        type: 'polygon',\n\n        shape: {\n            points: null,\n\n            smooth: false,\n\n            smoothConstraint: null\n        },\n\n        buildPath: function (ctx, shape) {\n            polyHelper.buildPath(ctx, shape, true);\n        }\n    });\n\n\n/***/ }),\n/* 430 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module zrender/graphic/shape/Polyline\n */\n\n\n    var polyHelper = __webpack_require__(233);\n\n    module.exports = __webpack_require__(164).extend({\n        \n        type: 'polyline',\n\n        shape: {\n            points: null,\n\n            smooth: false,\n\n            smoothConstraint: null\n        },\n\n        style: {\n            stroke: '#000',\n\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            polyHelper.buildPath(ctx, shape, false);\n        }\n    });\n\n\n/***/ }),\n/* 431 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 矩形\n * @module zrender/graphic/shape/Rect\n */\n\n\n    var roundRectHelper = __webpack_require__(421);\n\n    module.exports = __webpack_require__(164).extend({\n\n        type: 'rect',\n\n        shape: {\n            // 左上、右上、右下、左下角的半径依次为r1、r2、r3、r4\n            // r缩写为1         相当于 [1, 1, 1, 1]\n            // r缩写为[1]       相当于 [1, 1, 1, 1]\n            // r缩写为[1, 2]    相当于 [1, 2, 1, 2]\n            // r缩写为[1, 2, 3] 相当于 [1, 2, 3, 2]\n            r: 0,\n\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var width = shape.width;\n            var height = shape.height;\n            if (!shape.r) {\n                ctx.rect(x, y, width, height);\n            }\n            else {\n                roundRectHelper.buildPath(ctx, shape);\n            }\n            ctx.closePath();\n            return;\n        }\n    });\n\n\n\n/***/ }),\n/* 432 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 圆环\n * @module zrender/graphic/shape/Ring\n */\n\n\n    module.exports = __webpack_require__(164).extend({\n\n        type: 'ring',\n\n        shape: {\n            cx: 0,\n            cy: 0,\n            r: 0,\n            r0: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var x = shape.cx;\n            var y = shape.cy;\n            var PI2 = Math.PI * 2;\n            ctx.moveTo(x + shape.r, y);\n            ctx.arc(x, y, shape.r, 0, PI2, false);\n            ctx.moveTo(x + shape.r0, y);\n            ctx.arc(x, y, shape.r0, 0, PI2, true);\n        }\n    });\n\n\n\n/***/ }),\n/* 433 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 扇形\n * @module zrender/graphic/shape/Sector\n */\n\n\n\n    var env = __webpack_require__(167);\n    var Path = __webpack_require__(164);\n\n    var shadowTemp = [\n        ['shadowBlur', 0],\n        ['shadowColor', '#000'],\n        ['shadowOffsetX', 0],\n        ['shadowOffsetY', 0]\n    ];\n\n    module.exports = Path.extend({\n\n        type: 'sector',\n\n        shape: {\n\n            cx: 0,\n\n            cy: 0,\n\n            r0: 0,\n\n            r: 0,\n\n            startAngle: 0,\n\n            endAngle: Math.PI * 2,\n\n            clockwise: true\n        },\n\n        brush: (env.browser.ie && env.browser.version >= 11) // version: '11.0'\n            // Fix weird bug in some version of IE11 (like 11.0.9600.17801),\n            // where exception \"unexpected call to method or property access\"\n            // might be thrown when calling ctx.fill after a path whose area size\n            // is zero is drawn and ctx.clip() is called and shadowBlur is set.\n            // (e.g.,\n            //  ctx.moveTo(10, 10);\n            //  ctx.lineTo(20, 10);\n            //  ctx.closePath();\n            //  ctx.clip();\n            //  ctx.shadowBlur = 10;\n            //  ...\n            //  ctx.fill();\n            // )\n            ? function () {\n                var clipPaths = this.__clipPaths;\n                var style = this.style;\n                var modified;\n\n                if (clipPaths) {\n                    for (var i = 0; i < clipPaths.length; i++) {\n                        var shape = clipPaths[i] && clipPaths[i].shape;\n                        if (shape && shape.startAngle === shape.endAngle) {\n                            for (var j = 0; j < shadowTemp.length; j++) {\n                                shadowTemp[j][2] = style[shadowTemp[j][0]];\n                                style[shadowTemp[j][0]] = shadowTemp[j][1];\n                            }\n                            modified = true;\n                            break;\n                        }\n                    }\n                }\n\n                Path.prototype.brush.apply(this, arguments);\n\n                if (modified) {\n                    for (var j = 0; j < shadowTemp.length; j++) {\n                        style[shadowTemp[j][0]] = shadowTemp[j][2];\n                    }\n                }\n            }\n            : Path.prototype.brush,\n\n        buildPath: function (ctx, shape) {\n\n            var x = shape.cx;\n            var y = shape.cy;\n            var r0 = Math.max(shape.r0 || 0, 0);\n            var r = Math.max(shape.r, 0);\n            var startAngle = shape.startAngle;\n            var endAngle = shape.endAngle;\n            var clockwise = shape.clockwise;\n\n            var unitX = Math.cos(startAngle);\n            var unitY = Math.sin(startAngle);\n\n            ctx.moveTo(unitX * r0 + x, unitY * r0 + y);\n\n            ctx.lineTo(unitX * r + x, unitY * r + y);\n\n            ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n\n            ctx.lineTo(\n                Math.cos(endAngle) * r0 + x,\n                Math.sin(endAngle) * r0 + y\n            );\n\n            if (r0 !== 0) {\n                ctx.arc(x, y, r0, endAngle, startAngle, clockwise);\n            }\n\n            ctx.closePath();\n        }\n    });\n\n\n\n/***/ }),\n/* 434 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * @module zrender/mixin/Animatable\n */\n\n\n    var Animator = __webpack_require__(224);\n    var util = __webpack_require__(158);\n    var isString = util.isString;\n    var isFunction = util.isFunction;\n    var isObject = util.isObject;\n    var log = __webpack_require__(229);\n\n    /**\n     * @alias modue:zrender/mixin/Animatable\n     * @constructor\n     */\n    var Animatable = function () {\n\n        /**\n         * @type {Array.<module:zrender/animation/Animator>}\n         * @readOnly\n         */\n        this.animators = [];\n    };\n\n    Animatable.prototype = {\n\n        constructor: Animatable,\n\n        /**\n         * 动画\n         *\n         * @param {string} path 需要添加动画的属性获取路径，可以通过a.b.c来获取深层的属性\n         * @param {boolean} [loop] 动画是否循环\n         * @return {module:zrender/animation/Animator}\n         * @example:\n         *     el.animate('style', false)\n         *         .when(1000, {x: 10} )\n         *         .done(function(){ // Animation done })\n         *         .start()\n         */\n        animate: function (path, loop) {\n            var target;\n            var animatingShape = false;\n            var el = this;\n            var zr = this.__zr;\n            if (path) {\n                var pathSplitted = path.split('.');\n                var prop = el;\n                // If animating shape\n                animatingShape = pathSplitted[0] === 'shape';\n                for (var i = 0, l = pathSplitted.length; i < l; i++) {\n                    if (!prop) {\n                        continue;\n                    }\n                    prop = prop[pathSplitted[i]];\n                }\n                if (prop) {\n                    target = prop;\n                }\n            }\n            else {\n                target = el;\n            }\n\n            if (!target) {\n                log(\n                    'Property \"'\n                    + path\n                    + '\" is not existed in element '\n                    + el.id\n                );\n                return;\n            }\n\n            var animators = el.animators;\n\n            var animator = new Animator(target, loop);\n\n            animator.during(function (target) {\n                el.dirty(animatingShape);\n            })\n            .done(function () {\n                // FIXME Animator will not be removed if use `Animator#stop` to stop animation\n                animators.splice(util.indexOf(animators, animator), 1);\n            });\n\n            animators.push(animator);\n\n            // If animate after added to the zrender\n            if (zr) {\n                zr.animation.addAnimator(animator);\n            }\n\n            return animator;\n        },\n\n        /**\n         * 停止动画\n         * @param {boolean} forwardToLast If move to last frame before stop\n         */\n        stopAnimation: function (forwardToLast) {\n            var animators = this.animators;\n            var len = animators.length;\n            for (var i = 0; i < len; i++) {\n                animators[i].stop(forwardToLast);\n            }\n            animators.length = 0;\n\n            return this;\n        },\n\n        /**\n         * @param {Object} target\n         * @param {number} [time=500] Time in ms\n         * @param {string} [easing='linear']\n         * @param {number} [delay=0]\n         * @param {Function} [callback]\n         *\n         * @example\n         *  // Animate position\n         *  el.animateTo({\n         *      position: [10, 10]\n         *  }, function () { // done })\n         *\n         *  // Animate shape, style and position in 100ms, delayed 100ms, with cubicOut easing\n         *  el.animateTo({\n         *      shape: {\n         *          width: 500\n         *      },\n         *      style: {\n         *          fill: 'red'\n         *      }\n         *      position: [10, 10]\n         *  }, 100, 100, 'cubicOut', function () { // done })\n         */\n         // TODO Return animation key\n        animateTo: function (target, time, delay, easing, callback) {\n            // animateTo(target, time, easing, callback);\n            if (isString(delay)) {\n                callback = easing;\n                easing = delay;\n                delay = 0;\n            }\n            // animateTo(target, time, delay, callback);\n            else if (isFunction(easing)) {\n                callback = easing;\n                easing = 'linear';\n                delay = 0;\n            }\n            // animateTo(target, time, callback);\n            else if (isFunction(delay)) {\n                callback = delay;\n                delay = 0;\n            }\n            // animateTo(target, callback)\n            else if (isFunction(time)) {\n                callback = time;\n                time = 500;\n            }\n            // animateTo(target)\n            else if (!time) {\n                time = 500;\n            }\n            // Stop all previous animations\n            this.stopAnimation();\n            this._animateToShallow('', this, target, time, delay, easing, callback);\n\n            // Animators may be removed immediately after start\n            // if there is nothing to animate\n            var animators = this.animators.slice();\n            var count = animators.length;\n            function done() {\n                count--;\n                if (!count) {\n                    callback && callback();\n                }\n            }\n\n            // No animators. This should be checked before animators[i].start(),\n            // because 'done' may be executed immediately if no need to animate.\n            if (!count) {\n                callback && callback();\n            }\n            // Start after all animators created\n            // Incase any animator is done immediately when all animation properties are not changed\n            for (var i = 0; i < animators.length; i++) {\n                animators[i]\n                    .done(done)\n                    .start(easing);\n            }\n        },\n\n        /**\n         * @private\n         * @param {string} path=''\n         * @param {Object} source=this\n         * @param {Object} target\n         * @param {number} [time=500]\n         * @param {number} [delay=0]\n         *\n         * @example\n         *  // Animate position\n         *  el._animateToShallow({\n         *      position: [10, 10]\n         *  })\n         *\n         *  // Animate shape, style and position in 100ms, delayed 100ms\n         *  el._animateToShallow({\n         *      shape: {\n         *          width: 500\n         *      },\n         *      style: {\n         *          fill: 'red'\n         *      }\n         *      position: [10, 10]\n         *  }, 100, 100)\n         */\n        _animateToShallow: function (path, source, target, time, delay) {\n            var objShallow = {};\n            var propertyCount = 0;\n            for (var name in target) {\n                if (!target.hasOwnProperty(name)) {\n                    continue;\n                }\n\n                if (source[name] != null) {\n                    if (isObject(target[name]) && !util.isArrayLike(target[name])) {\n                        this._animateToShallow(\n                            path ? path + '.' + name : name,\n                            source[name],\n                            target[name],\n                            time,\n                            delay\n                        );\n                    }\n                    else {\n                        objShallow[name] = target[name];\n                        propertyCount++;\n                    }\n                }\n                else if (target[name] != null) {\n                    // Attr directly if not has property\n                    // FIXME, if some property not needed for element ?\n                    if (!path) {\n                        this.attr(name, target[name]);\n                    }\n                    else {  // Shape or style\n                        var props = {};\n                        props[path] = {};\n                        props[path][name] = target[name];\n                        this.attr(props);\n                    }\n                }\n            }\n\n            if (propertyCount > 0) {\n                this.animate(path, false)\n                    .when(time == null ? 500 : time, objShallow)\n                    .delay(delay || 0);\n            }\n\n            return this;\n        }\n    };\n\n    module.exports = Animatable;\n\n\n/***/ }),\n/* 435 */\n/***/ (function(module, exports) {\n\n// TODO Draggable for group\n// FIXME Draggable on element which has parent rotation or scale\n\n    function Draggable() {\n\n        this.on('mousedown', this._dragStart, this);\n        this.on('mousemove', this._drag, this);\n        this.on('mouseup', this._dragEnd, this);\n        this.on('globalout', this._dragEnd, this);\n        // this._dropTarget = null;\n        // this._draggingTarget = null;\n\n        // this._x = 0;\n        // this._y = 0;\n    }\n\n    Draggable.prototype = {\n\n        constructor: Draggable,\n\n        _dragStart: function (e) {\n            var draggingTarget = e.target;\n            if (draggingTarget && draggingTarget.draggable) {\n                this._draggingTarget = draggingTarget;\n                draggingTarget.dragging = true;\n                this._x = e.offsetX;\n                this._y = e.offsetY;\n\n                this.dispatchToElement(param(draggingTarget, e), 'dragstart', e.event);\n            }\n        },\n\n        _drag: function (e) {\n            var draggingTarget = this._draggingTarget;\n            if (draggingTarget) {\n\n                var x = e.offsetX;\n                var y = e.offsetY;\n\n                var dx = x - this._x;\n                var dy = y - this._y;\n                this._x = x;\n                this._y = y;\n\n                draggingTarget.drift(dx, dy, e);\n                this.dispatchToElement(param(draggingTarget, e), 'drag', e.event);\n\n                var dropTarget = this.findHover(x, y, draggingTarget).target;\n                var lastDropTarget = this._dropTarget;\n                this._dropTarget = dropTarget;\n\n                if (draggingTarget !== dropTarget) {\n                    if (lastDropTarget && dropTarget !== lastDropTarget) {\n                        this.dispatchToElement(param(lastDropTarget, e), 'dragleave', e.event);\n                    }\n                    if (dropTarget && dropTarget !== lastDropTarget) {\n                        this.dispatchToElement(param(dropTarget, e), 'dragenter', e.event);\n                    }\n                }\n            }\n        },\n\n        _dragEnd: function (e) {\n            var draggingTarget = this._draggingTarget;\n\n            if (draggingTarget) {\n                draggingTarget.dragging = false;\n            }\n\n            this.dispatchToElement(param(draggingTarget, e), 'dragend', e.event);\n\n            if (this._dropTarget) {\n                this.dispatchToElement(param(this._dropTarget, e), 'drop', e.event);\n            }\n\n            this._draggingTarget = null;\n            this._dropTarget = null;\n        }\n\n    };\n\n    function param(target, e) {\n        return {target: target, topTarget: e && e.topTarget};\n    }\n\n    module.exports = Draggable;\n\n\n/***/ }),\n/* 436 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var Path = __webpack_require__(164);\n    var PathProxy = __webpack_require__(184);\n    var transformPath = __webpack_require__(437);\n\n    // command chars\n    var cc = [\n        'm', 'M', 'l', 'L', 'v', 'V', 'h', 'H', 'z', 'Z',\n        'c', 'C', 'q', 'Q', 't', 'T', 's', 'S', 'a', 'A'\n    ];\n\n    var mathSqrt = Math.sqrt;\n    var mathSin = Math.sin;\n    var mathCos = Math.cos;\n    var PI = Math.PI;\n\n    var vMag = function(v) {\n        return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n    };\n    var vRatio = function(u, v) {\n        return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n    };\n    var vAngle = function(u, v) {\n        return (u[0] * v[1] < u[1] * v[0] ? -1 : 1)\n                * Math.acos(vRatio(u, v));\n    };\n\n    function processArc(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg, cmd, path) {\n        var psi = psiDeg * (PI / 180.0);\n        var xp = mathCos(psi) * (x1 - x2) / 2.0\n                 + mathSin(psi) * (y1 - y2) / 2.0;\n        var yp = -1 * mathSin(psi) * (x1 - x2) / 2.0\n                 + mathCos(psi) * (y1 - y2) / 2.0;\n\n        var lambda = (xp * xp) / (rx * rx) + (yp * yp) / (ry * ry);\n\n        if (lambda > 1) {\n            rx *= mathSqrt(lambda);\n            ry *= mathSqrt(lambda);\n        }\n\n        var f = (fa === fs ? -1 : 1)\n            * mathSqrt((((rx * rx) * (ry * ry))\n                    - ((rx * rx) * (yp * yp))\n                    - ((ry * ry) * (xp * xp))) / ((rx * rx) * (yp * yp)\n                    + (ry * ry) * (xp * xp))\n                ) || 0;\n\n        var cxp = f * rx * yp / ry;\n        var cyp = f * -ry * xp / rx;\n\n        var cx = (x1 + x2) / 2.0\n                 + mathCos(psi) * cxp\n                 - mathSin(psi) * cyp;\n        var cy = (y1 + y2) / 2.0\n                + mathSin(psi) * cxp\n                + mathCos(psi) * cyp;\n\n        var theta = vAngle([ 1, 0 ], [ (xp - cxp) / rx, (yp - cyp) / ry ]);\n        var u = [ (xp - cxp) / rx, (yp - cyp) / ry ];\n        var v = [ (-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry ];\n        var dTheta = vAngle(u, v);\n\n        if (vRatio(u, v) <= -1) {\n            dTheta = PI;\n        }\n        if (vRatio(u, v) >= 1) {\n            dTheta = 0;\n        }\n        if (fs === 0 && dTheta > 0) {\n            dTheta = dTheta - 2 * PI;\n        }\n        if (fs === 1 && dTheta < 0) {\n            dTheta = dTheta + 2 * PI;\n        }\n\n        path.addData(cmd, cx, cy, rx, ry, theta, dTheta, psi, fs);\n    }\n\n    function createPathProxyFromString(data) {\n        if (!data) {\n            return [];\n        }\n\n        // command string\n        var cs = data.replace(/-/g, ' -')\n            .replace(/  /g, ' ')\n            .replace(/ /g, ',')\n            .replace(/,,/g, ',');\n\n        var n;\n        // create pipes so that we can split the data\n        for (n = 0; n < cc.length; n++) {\n            cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\n        }\n\n        // create array\n        var arr = cs.split('|');\n        // init context point\n        var cpx = 0;\n        var cpy = 0;\n\n        var path = new PathProxy();\n        var CMD = PathProxy.CMD;\n\n        var prevCmd;\n        for (n = 1; n < arr.length; n++) {\n            var str = arr[n];\n            var c = str.charAt(0);\n            var off = 0;\n            var p = str.slice(1).replace(/e,-/g, 'e-').split(',');\n            var cmd;\n\n            if (p.length > 0 && p[0] === '') {\n                p.shift();\n            }\n\n            for (var i = 0; i < p.length; i++) {\n                p[i] = parseFloat(p[i]);\n            }\n            while (off < p.length && !isNaN(p[off])) {\n                if (isNaN(p[0])) {\n                    break;\n                }\n                var ctlPtx;\n                var ctlPty;\n\n                var rx;\n                var ry;\n                var psi;\n                var fa;\n                var fs;\n\n                var x1 = cpx;\n                var y1 = cpy;\n\n                // convert l, H, h, V, and v to L\n                switch (c) {\n                    case 'l':\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'L':\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'm':\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.M;\n                        path.addData(cmd, cpx, cpy);\n                        c = 'l';\n                        break;\n                    case 'M':\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.M;\n                        path.addData(cmd, cpx, cpy);\n                        c = 'L';\n                        break;\n                    case 'h':\n                        cpx += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'H':\n                        cpx = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'v':\n                        cpy += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'V':\n                        cpy = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'C':\n                        cmd = CMD.C;\n                        path.addData(\n                            cmd, p[off++], p[off++], p[off++], p[off++], p[off++], p[off++]\n                        );\n                        cpx = p[off - 2];\n                        cpy = p[off - 1];\n                        break;\n                    case 'c':\n                        cmd = CMD.C;\n                        path.addData(\n                            cmd,\n                            p[off++] + cpx, p[off++] + cpy,\n                            p[off++] + cpx, p[off++] + cpy,\n                            p[off++] + cpx, p[off++] + cpy\n                        );\n                        cpx += p[off - 2];\n                        cpy += p[off - 1];\n                        break;\n                    case 'S':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.C) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cmd = CMD.C;\n                        x1 = p[off++];\n                        y1 = p[off++];\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n                        break;\n                    case 's':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.C) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cmd = CMD.C;\n                        x1 = cpx + p[off++];\n                        y1 = cpy + p[off++];\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n                        break;\n                    case 'Q':\n                        x1 = p[off++];\n                        y1 = p[off++];\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, x1, y1, cpx, cpy);\n                        break;\n                    case 'q':\n                        x1 = p[off++] + cpx;\n                        y1 = p[off++] + cpy;\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, x1, y1, cpx, cpy);\n                        break;\n                    case 'T':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.Q) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n                        break;\n                    case 't':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.Q) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n                        break;\n                    case 'A':\n                        rx = p[off++];\n                        ry = p[off++];\n                        psi = p[off++];\n                        fa = p[off++];\n                        fs = p[off++];\n\n                        x1 = cpx, y1 = cpy;\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.A;\n                        processArc(\n                            x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path\n                        );\n                        break;\n                    case 'a':\n                        rx = p[off++];\n                        ry = p[off++];\n                        psi = p[off++];\n                        fa = p[off++];\n                        fs = p[off++];\n\n                        x1 = cpx, y1 = cpy;\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.A;\n                        processArc(\n                            x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path\n                        );\n                        break;\n                }\n            }\n\n            if (c === 'z' || c === 'Z') {\n                cmd = CMD.Z;\n                path.addData(cmd);\n            }\n\n            prevCmd = cmd;\n        }\n\n        path.toStatic();\n\n        return path;\n    }\n\n    // TODO Optimize double memory cost problem\n    function createPathOptions(str, opts) {\n        var pathProxy = createPathProxyFromString(str);\n        opts = opts || {};\n        opts.buildPath = function (path) {\n            if (path.setData) {\n                path.setData(pathProxy.data);\n                // Svg and vml renderer don't have context\n                var ctx = path.getContext();\n                if (ctx) {\n                    path.rebuildPath(ctx);\n                }\n            }\n            else {\n                var ctx = path;\n                pathProxy.rebuildPath(ctx);\n            }\n        };\n\n        opts.applyTransform = function (m) {\n            transformPath(pathProxy, m);\n\n            this.dirty(true);\n        };\n\n        return opts;\n    }\n\n    module.exports = {\n        /**\n         * Create a Path object from path string data\n         * http://www.w3.org/TR/SVG/paths.html#PathData\n         * @param  {Object} opts Other options\n         */\n        createFromString: function (str, opts) {\n            return new Path(createPathOptions(str, opts));\n        },\n\n        /**\n         * Create a Path class from path string data\n         * @param  {string} str\n         * @param  {Object} opts Other options\n         */\n        extendFromString: function (str, opts) {\n            return Path.extend(createPathOptions(str, opts));\n        },\n\n        /**\n         * Merge multiple paths\n         */\n        // TODO Apply transform\n        // TODO stroke dash\n        // TODO Optimize double memory cost problem\n        mergePath: function (pathEls, opts) {\n            var pathList = [];\n            var len = pathEls.length;\n            for (var i = 0; i < len; i++) {\n                var pathEl = pathEls[i];\n                if (!pathEl.path) {\n                    pathEl.createPathProxy();\n                }\n                if (pathEl.__dirtyPath) {\n                    pathEl.buildPath(pathEl.path, pathEl.shape, true);\n                }\n                pathList.push(pathEl.path);\n            }\n\n            var pathBundle = new Path(opts);\n            // Need path proxy.\n            pathBundle.createPathProxy();\n            pathBundle.buildPath = function (path) {\n                path.appendPath(pathList);\n                // Svg and vml renderer don't have context\n                var ctx = path.getContext();\n                if (ctx) {\n                    path.rebuildPath(ctx);\n                }\n            };\n\n            return pathBundle;\n        }\n    };\n\n\n/***/ }),\n/* 437 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var CMD = __webpack_require__(184).CMD;\n    var vec2 = __webpack_require__(163);\n    var v2ApplyTransform = vec2.applyTransform;\n\n    var points = [[], [], []];\n    var mathSqrt = Math.sqrt;\n    var mathAtan2 = Math.atan2;\n    function transformPath(path, m) {\n        var data = path.data;\n        var cmd;\n        var nPoint;\n        var i;\n        var j;\n        var k;\n        var p;\n\n        var M = CMD.M;\n        var C = CMD.C;\n        var L = CMD.L;\n        var R = CMD.R;\n        var A = CMD.A;\n        var Q = CMD.Q;\n\n        for (i = 0, j = 0; i < data.length;) {\n            cmd = data[i++];\n            j = i;\n            nPoint = 0;\n\n            switch (cmd) {\n                case M:\n                    nPoint = 1;\n                    break;\n                case L:\n                    nPoint = 1;\n                    break;\n                case C:\n                    nPoint = 3;\n                    break;\n                case Q:\n                    nPoint = 2;\n                    break;\n                case A:\n                    var x = m[4];\n                    var y = m[5];\n                    var sx = mathSqrt(m[0] * m[0] + m[1] * m[1]);\n                    var sy = mathSqrt(m[2] * m[2] + m[3] * m[3]);\n                    var angle = mathAtan2(-m[1] / sy, m[0] / sx);\n                    // cx\n                    data[i] *= sx;\n                    data[i++] += x;\n                    // cy\n                    data[i] *= sy;\n                    data[i++] += y;\n                    // Scale rx and ry\n                    // FIXME Assume psi is 0 here\n                    data[i++] *= sx;\n                    data[i++] *= sy;\n\n                    // Start angle\n                    data[i++] += angle;\n                    // end angle\n                    data[i++] += angle;\n                    // FIXME psi\n                    i += 2;\n                    j = i;\n                    break;\n                case R:\n                    // x0, y0\n                    p[0] = data[i++];\n                    p[1] = data[i++];\n                    v2ApplyTransform(p, p, m);\n                    data[j++] = p[0];\n                    data[j++] = p[1];\n                    // x1, y1\n                    p[0] += data[i++];\n                    p[1] += data[i++];\n                    v2ApplyTransform(p, p, m);\n                    data[j++] = p[0];\n                    data[j++] = p[1];\n            }\n\n            for (k = 0; k < nPoint; k++) {\n                var p = points[k];\n                p[0] = data[i++];\n                p[1] = data[i++];\n\n                v2ApplyTransform(p, p, m);\n                // Write back\n                data[j++] = p[0];\n                data[j++] = p[1];\n            }\n        }\n    }\n\n    module.exports = transformPath;\n\n\n/***/ }),\n/* 438 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/*!\n * ZRender, a high performance 2d drawing library.\n *\n * Copyright (c) 2013, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/zrender/blob/master/LICENSE.txt\n */\n// Global defines\n\n    var guid = __webpack_require__(228);\n    var env = __webpack_require__(167);\n    var zrUtil = __webpack_require__(158);\n\n    var Handler = __webpack_require__(401);\n    var Storage = __webpack_require__(404);\n    var Animation = __webpack_require__(405);\n    var HandlerProxy = __webpack_require__(416);\n\n    var useVML = !env.canvasSupported;\n\n    var painterCtors = {\n        canvas: __webpack_require__(403)\n    };\n\n    var instances = {};    // ZRender实例map索引\n\n    var zrender = {};\n\n    /**\n     * @type {string}\n     */\n    zrender.version = '3.4.4';\n\n    /**\n     * Initializing a zrender instance\n     * @param {HTMLElement} dom\n     * @param {Object} opts\n     * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n     * @param {number} [opts.devicePixelRatio]\n     * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n     * @return {module:zrender/ZRender}\n     */\n    zrender.init = function(dom, opts) {\n        var zr = new ZRender(guid(), dom, opts);\n        instances[zr.id] = zr;\n        return zr;\n    };\n\n    /**\n     * Dispose zrender instance\n     * @param {module:zrender/ZRender} zr\n     */\n    zrender.dispose = function (zr) {\n        if (zr) {\n            zr.dispose();\n        }\n        else {\n            for (var key in instances) {\n                if (instances.hasOwnProperty(key)) {\n                    instances[key].dispose();\n                }\n            }\n            instances = {};\n        }\n\n        return zrender;\n    };\n\n    /**\n     * Get zrender instance by id\n     * @param {string} id zrender instance id\n     * @return {module:zrender/ZRender}\n     */\n    zrender.getInstance = function (id) {\n        return instances[id];\n    };\n\n    zrender.registerPainter = function (name, Ctor) {\n        painterCtors[name] = Ctor;\n    };\n\n    function delInstance(id) {\n        delete instances[id];\n    }\n\n    /**\n     * @module zrender/ZRender\n     */\n    /**\n     * @constructor\n     * @alias module:zrender/ZRender\n     * @param {string} id\n     * @param {HTMLDomElement} dom\n     * @param {Object} opts\n     * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n     * @param {number} [opts.devicePixelRatio]\n     * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n     */\n    var ZRender = function(id, dom, opts) {\n\n        opts = opts || {};\n\n        /**\n         * @type {HTMLDomElement}\n         */\n        this.dom = dom;\n\n        /**\n         * @type {string}\n         */\n        this.id = id;\n\n        var self = this;\n        var storage = new Storage();\n\n        var rendererType = opts.renderer;\n        // TODO WebGL\n        if (useVML) {\n            if (!painterCtors.vml) {\n                throw new Error('You need to require \\'zrender/vml/vml\\' to support IE8');\n            }\n            rendererType = 'vml';\n        }\n        else if (!rendererType || !painterCtors[rendererType]) {\n            rendererType = 'canvas';\n        }\n        var painter = new painterCtors[rendererType](dom, storage, opts);\n\n        this.storage = storage;\n        this.painter = painter;\n\n        var handerProxy = !env.node ? new HandlerProxy(painter.getViewportRoot()) : null;\n        this.handler = new Handler(storage, painter, handerProxy, painter.root);\n\n        /**\n         * @type {module:zrender/animation/Animation}\n         */\n        this.animation = new Animation({\n            stage: {\n                update: zrUtil.bind(this.flush, this)\n            }\n        });\n        this.animation.start();\n\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this._needsRefresh;\n\n        // 修改 storage.delFromStorage, 每次删除元素之前删除动画\n        // FIXME 有点ugly\n        var oldDelFromStorage = storage.delFromStorage;\n        var oldAddToStorage = storage.addToStorage;\n\n        storage.delFromStorage = function (el) {\n            oldDelFromStorage.call(storage, el);\n\n            el && el.removeSelfFromZr(self);\n        };\n\n        storage.addToStorage = function (el) {\n            oldAddToStorage.call(storage, el);\n\n            el.addSelfToZr(self);\n        };\n    };\n\n    ZRender.prototype = {\n\n        constructor: ZRender,\n        /**\n         * 获取实例唯一标识\n         * @return {string}\n         */\n        getId: function () {\n            return this.id;\n        },\n\n        /**\n         * 添加元素\n         * @param  {module:zrender/Element} el\n         */\n        add: function (el) {\n            this.storage.addRoot(el);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * 删除元素\n         * @param  {module:zrender/Element} el\n         */\n        remove: function (el) {\n            this.storage.delRoot(el);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Change configuration of layer\n         * @param {string} zLevel\n         * @param {Object} config\n         * @param {string} [config.clearColor=0] Clear color\n         * @param {string} [config.motionBlur=false] If enable motion blur\n         * @param {number} [config.lastFrameAlpha=0.7] Motion blur factor. Larger value cause longer trailer\n        */\n        configLayer: function (zLevel, config) {\n            this.painter.configLayer(zLevel, config);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Repaint the canvas immediately\n         */\n        refreshImmediately: function () {\n            // Clear needsRefresh ahead to avoid something wrong happens in refresh\n            // Or it will cause zrender refreshes again and again.\n            this._needsRefresh = false;\n            this.painter.refresh();\n            /**\n             * Avoid trigger zr.refresh in Element#beforeUpdate hook\n             */\n            this._needsRefresh = false;\n        },\n\n        /**\n         * Mark and repaint the canvas in the next frame of browser\n         */\n        refresh: function() {\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Perform all refresh\n         */\n        flush: function () {\n            if (this._needsRefresh) {\n                this.refreshImmediately();\n            }\n            if (this._needsRefreshHover) {\n                this.refreshHoverImmediately();\n            }\n        },\n\n        /**\n         * Add element to hover layer\n         * @param  {module:zrender/Element} el\n         * @param {Object} style\n         */\n        addHover: function (el, style) {\n            if (this.painter.addHover) {\n                this.painter.addHover(el, style);\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Add element from hover layer\n         * @param  {module:zrender/Element} el\n         */\n        removeHover: function (el) {\n            if (this.painter.removeHover) {\n                this.painter.removeHover(el);\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Clear all hover elements in hover layer\n         * @param  {module:zrender/Element} el\n         */\n        clearHover: function () {\n            if (this.painter.clearHover) {\n                this.painter.clearHover();\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Refresh hover in next frame\n         */\n        refreshHover: function () {\n            this._needsRefreshHover = true;\n        },\n\n        /**\n         * Refresh hover immediately\n         */\n        refreshHoverImmediately: function () {\n            this._needsRefreshHover = false;\n            this.painter.refreshHover && this.painter.refreshHover();\n        },\n\n        /**\n         * Resize the canvas.\n         * Should be invoked when container size is changed\n         * @param {Object} [opts]\n         * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n         * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n         */\n        resize: function(opts) {\n            opts = opts || {};\n            this.painter.resize(opts.width, opts.height);\n            this.handler.resize();\n        },\n\n        /**\n         * Stop and clear all animation immediately\n         */\n        clearAnimation: function () {\n            this.animation.clear();\n        },\n\n        /**\n         * Get container width\n         */\n        getWidth: function() {\n            return this.painter.getWidth();\n        },\n\n        /**\n         * Get container height\n         */\n        getHeight: function() {\n            return this.painter.getHeight();\n        },\n\n        /**\n         * Export the canvas as Base64 URL\n         * @param {string} type\n         * @param {string} [backgroundColor='#fff']\n         * @return {string} Base64 URL\n         */\n        // toDataURL: function(type, backgroundColor) {\n        //     return this.painter.getRenderedCanvas({\n        //         backgroundColor: backgroundColor\n        //     }).toDataURL(type);\n        // },\n\n        /**\n         * Converting a path to image.\n         * It has much better performance of drawing image rather than drawing a vector path.\n         * @param {module:zrender/graphic/Path} e\n         * @param {number} width\n         * @param {number} height\n         */\n        pathToImage: function(e, dpr) {\n            return this.painter.pathToImage(e, dpr);\n        },\n\n        /**\n         * Set default cursor\n         * @param {string} [cursorStyle='default'] 例如 crosshair\n         */\n        setCursorStyle: function (cursorStyle) {\n            this.handler.setCursorStyle(cursorStyle);\n        },\n\n        /**\n         * Find hovered element\n         * @param {number} x\n         * @param {number} y\n         * @return {Object} {target, topTarget}\n         */\n        findHover: function (x, y) {\n            return this.handler.findHover(x, y);\n        },\n\n        /**\n         * Bind event\n         *\n         * @param {string} eventName Event name\n         * @param {Function} eventHandler Handler function\n         * @param {Object} [context] Context object\n         */\n        on: function(eventName, eventHandler, context) {\n            this.handler.on(eventName, eventHandler, context);\n        },\n\n        /**\n         * Unbind event\n         * @param {string} eventName Event name\n         * @param {Function} [eventHandler] Handler function\n         */\n        off: function(eventName, eventHandler) {\n            this.handler.off(eventName, eventHandler);\n        },\n\n        /**\n         * Trigger event manually\n         *\n         * @param {string} eventName Event name\n         * @param {event=} event Event object\n         */\n        trigger: function (eventName, event) {\n            this.handler.trigger(eventName, event);\n        },\n\n\n        /**\n         * Clear all objects and the canvas.\n         */\n        clear: function () {\n            this.storage.delRoot();\n            this.painter.clear();\n        },\n\n        /**\n         * Dispose self.\n         */\n        dispose: function () {\n            this.animation.stop();\n\n            this.clear();\n            this.storage.dispose();\n            this.painter.dispose();\n            this.handler.dispose();\n\n            this.animation =\n            this.storage =\n            this.painter =\n            this.handler = null;\n\n            delInstance(this.id);\n        }\n    };\n\n    module.exports = zrender;\n\n\n\n/***/ })\n]));\n\n\n// WEBPACK FOOTER //\n// static/js/0.c1c7da059d4b450d5817.js","\n/* styles */\nrequire(\"!!../../../node_modules/.extract-text-webpack-plugin@2.1.0@extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../node_modules/.vue-loader@11.3.4@vue-loader/lib/style-compiler/index?{\\\"id\\\":\\\"data-v-61c0d0a1\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/.vue-loader@11.3.4@vue-loader/lib/selector?type=styles&index=0!./index.vue\")\n\nvar Component = require(\"!../../../node_modules/.vue-loader@11.3.4@vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../../node_modules/.vue-loader@11.3.4@vue-loader/lib/selector?type=script&index=0!./index.vue\"),\n  /* template */\n  require(\"!!../../../node_modules/.vue-loader@11.3.4@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-61c0d0a1\\\"}!../../../node_modules/.vue-loader@11.3.4@vue-loader/lib/selector?type=template&index=0!./index.vue\"),\n  /* scopeId */\n  \"data-v-61c0d0a1\",\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/pages/Dashboard/index.vue\n// module id = 153\n// module chunks = 0","/**\n * @module zrender/core/util\n */\n\n\n    // 用于处理merge时无法遍历Date等对象的问题\n    var BUILTIN_OBJECT = {\n        '[object Function]': 1,\n        '[object RegExp]': 1,\n        '[object Date]': 1,\n        '[object Error]': 1,\n        '[object CanvasGradient]': 1,\n        '[object CanvasPattern]': 1,\n        // For node-canvas\n        '[object Image]': 1,\n        '[object Canvas]': 1\n    };\n\n    var TYPED_ARRAY = {\n        '[object Int8Array]': 1,\n        '[object Uint8Array]': 1,\n        '[object Uint8ClampedArray]': 1,\n        '[object Int16Array]': 1,\n        '[object Uint16Array]': 1,\n        '[object Int32Array]': 1,\n        '[object Uint32Array]': 1,\n        '[object Float32Array]': 1,\n        '[object Float64Array]': 1\n    };\n\n    var objToString = Object.prototype.toString;\n\n    var arrayProto = Array.prototype;\n    var nativeForEach = arrayProto.forEach;\n    var nativeFilter = arrayProto.filter;\n    var nativeSlice = arrayProto.slice;\n    var nativeMap = arrayProto.map;\n    var nativeReduce = arrayProto.reduce;\n\n    /**\n     * Those data types can be cloned:\n     *     Plain object, Array, TypedArray, number, string, null, undefined.\n     * Those data types will be assgined using the orginal data:\n     *     BUILTIN_OBJECT\n     * Instance of user defined class will be cloned to a plain object, without\n     * properties in prototype.\n     * Other data types is not supported (not sure what will happen).\n     *\n     * Caution: do not support clone Date, for performance consideration.\n     * (There might be a large number of date in `series.data`).\n     * So date should not be modified in and out of echarts.\n     *\n     * @param {*} source\n     * @return {*} new\n     */\n    function clone(source) {\n        if (source == null || typeof source != 'object') {\n            return source;\n        }\n\n        var result = source;\n        var typeStr = objToString.call(source);\n\n        if (typeStr === '[object Array]') {\n            result = [];\n            for (var i = 0, len = source.length; i < len; i++) {\n                result[i] = clone(source[i]);\n            }\n        }\n        else if (TYPED_ARRAY[typeStr]) {\n            result = source.constructor.from(source);\n        }\n        else if (!BUILTIN_OBJECT[typeStr] && !isPrimitive(source) && !isDom(source)) {\n            result = {};\n            for (var key in source) {\n                if (source.hasOwnProperty(key)) {\n                    result[key] = clone(source[key]);\n                }\n            }\n        }\n\n        return result;\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} target\n     * @param {*} source\n     * @param {boolean} [overwrite=false]\n     */\n    function merge(target, source, overwrite) {\n        // We should escapse that source is string\n        // and enter for ... in ...\n        if (!isObject(source) || !isObject(target)) {\n            return overwrite ? clone(source) : target;\n        }\n\n        for (var key in source) {\n            if (source.hasOwnProperty(key)) {\n                var targetProp = target[key];\n                var sourceProp = source[key];\n\n                if (isObject(sourceProp)\n                    && isObject(targetProp)\n                    && !isArray(sourceProp)\n                    && !isArray(targetProp)\n                    && !isDom(sourceProp)\n                    && !isDom(targetProp)\n                    && !isBuiltInObject(sourceProp)\n                    && !isBuiltInObject(targetProp)\n                    && !isPrimitive(sourceProp)\n                    && !isPrimitive(targetProp)\n                ) {\n                    // 如果需要递归覆盖，就递归调用merge\n                    merge(targetProp, sourceProp, overwrite);\n                }\n                else if (overwrite || !(key in target)) {\n                    // 否则只处理overwrite为true，或者在目标对象中没有此属性的情况\n                    // NOTE，在 target[key] 不存在的时候也是直接覆盖\n                    target[key] = clone(source[key], true);\n                }\n            }\n        }\n\n        return target;\n    }\n\n    /**\n     * @param {Array} targetAndSources The first item is target, and the rests are source.\n     * @param {boolean} [overwrite=false]\n     * @return {*} target\n     */\n    function mergeAll(targetAndSources, overwrite) {\n        var result = targetAndSources[0];\n        for (var i = 1, len = targetAndSources.length; i < len; i++) {\n            result = merge(result, targetAndSources[i], overwrite);\n        }\n        return result;\n    }\n\n    /**\n     * @param {*} target\n     * @param {*} source\n     * @memberOf module:zrender/core/util\n     */\n    function extend(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n        return target;\n    }\n\n    /**\n     * @param {*} target\n     * @param {*} source\n     * @param {boolen} [overlay=false]\n     * @memberOf module:zrender/core/util\n     */\n    function defaults(target, source, overlay) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key)\n                && (overlay ? source[key] != null : target[key] == null)\n            ) {\n                target[key] = source[key];\n            }\n        }\n        return target;\n    }\n\n    function createCanvas() {\n        return document.createElement('canvas');\n    }\n    // FIXME\n    var _ctx;\n    function getContext() {\n        if (!_ctx) {\n            // Use util.createCanvas instead of createCanvas\n            // because createCanvas may be overwritten in different environment\n            _ctx = util.createCanvas().getContext('2d');\n        }\n        return _ctx;\n    }\n\n    /**\n     * 查询数组中元素的index\n     * @memberOf module:zrender/core/util\n     */\n    function indexOf(array, value) {\n        if (array) {\n            if (array.indexOf) {\n                return array.indexOf(value);\n            }\n            for (var i = 0, len = array.length; i < len; i++) {\n                if (array[i] === value) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    }\n\n    /**\n     * 构造类继承关系\n     *\n     * @memberOf module:zrender/core/util\n     * @param {Function} clazz 源类\n     * @param {Function} baseClazz 基类\n     */\n    function inherits(clazz, baseClazz) {\n        var clazzPrototype = clazz.prototype;\n        function F() {}\n        F.prototype = baseClazz.prototype;\n        clazz.prototype = new F();\n\n        for (var prop in clazzPrototype) {\n            clazz.prototype[prop] = clazzPrototype[prop];\n        }\n        clazz.prototype.constructor = clazz;\n        clazz.superClass = baseClazz;\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Object|Function} target\n     * @param {Object|Function} sorce\n     * @param {boolean} overlay\n     */\n    function mixin(target, source, overlay) {\n        target = 'prototype' in target ? target.prototype : target;\n        source = 'prototype' in source ? source.prototype : source;\n\n        defaults(target, source, overlay);\n    }\n\n    /**\n     * Consider typed array.\n     * @param {Array|TypedArray} data\n     */\n    function isArrayLike(data) {\n        if (! data) {\n            return;\n        }\n        if (typeof data == 'string') {\n            return false;\n        }\n        return typeof data.length == 'number';\n    }\n\n    /**\n     * 数组或对象遍历\n     * @memberOf module:zrender/core/util\n     * @param {Object|Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     */\n    function each(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.forEach && obj.forEach === nativeForEach) {\n            obj.forEach(cb, context);\n        }\n        else if (obj.length === +obj.length) {\n            for (var i = 0, len = obj.length; i < len; i++) {\n                cb.call(context, obj[i], i, obj);\n            }\n        }\n        else {\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    cb.call(context, obj[key], key, obj);\n                }\n            }\n        }\n    }\n\n    /**\n     * 数组映射\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function map(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.map && obj.map === nativeMap) {\n            return obj.map(cb, context);\n        }\n        else {\n            var result = [];\n            for (var i = 0, len = obj.length; i < len; i++) {\n                result.push(cb.call(context, obj[i], i, obj));\n            }\n            return result;\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {Object} [memo]\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function reduce(obj, cb, memo, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.reduce && obj.reduce === nativeReduce) {\n            return obj.reduce(cb, memo, context);\n        }\n        else {\n            for (var i = 0, len = obj.length; i < len; i++) {\n                memo = cb.call(context, memo, obj[i], i, obj);\n            }\n            return memo;\n        }\n    }\n\n    /**\n     * 数组过滤\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function filter(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.filter && obj.filter === nativeFilter) {\n            return obj.filter(cb, context);\n        }\n        else {\n            var result = [];\n            for (var i = 0, len = obj.length; i < len; i++) {\n                if (cb.call(context, obj[i], i, obj)) {\n                    result.push(obj[i]);\n                }\n            }\n            return result;\n        }\n    }\n\n    /**\n     * 数组项查找\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function find(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        for (var i = 0, len = obj.length; i < len; i++) {\n            if (cb.call(context, obj[i], i, obj)) {\n                return obj[i];\n            }\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Function} func\n     * @param {*} context\n     * @return {Function}\n     */\n    function bind(func, context) {\n        var args = nativeSlice.call(arguments, 2);\n        return function () {\n            return func.apply(context, args.concat(nativeSlice.call(arguments)));\n        };\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Function} func\n     * @return {Function}\n     */\n    function curry(func) {\n        var args = nativeSlice.call(arguments, 1);\n        return function () {\n            return func.apply(this, args.concat(nativeSlice.call(arguments)));\n        };\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isArray(value) {\n        return objToString.call(value) === '[object Array]';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isFunction(value) {\n        return typeof value === 'function';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isString(value) {\n        return objToString.call(value) === '[object String]';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isObject(value) {\n        // Avoid a V8 JIT bug in Chrome 19-20.\n        // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n        var type = typeof value;\n        return type === 'function' || (!!value && type == 'object');\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isBuiltInObject(value) {\n        return !!BUILTIN_OBJECT[objToString.call(value)];\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isDom(value) {\n        return typeof value === 'object'\n            && typeof value.nodeType === 'number'\n            && typeof value.ownerDocument === 'object';\n    }\n\n    /**\n     * Whether is exactly NaN. Notice isNaN('a') returns true.\n     * @param {*} value\n     * @return {boolean}\n     */\n    function eqNaN(value) {\n        return value !== value;\n    }\n\n    /**\n     * If value1 is not null, then return value1, otherwise judget rest of values.\n     * @memberOf module:zrender/core/util\n     * @return {*} Final value\n     */\n    function retrieve(values) {\n        for (var i = 0, len = arguments.length; i < len; i++) {\n            if (arguments[i] != null) {\n                return arguments[i];\n            }\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Array} arr\n     * @param {number} startIndex\n     * @param {number} endIndex\n     * @return {Array}\n     */\n    function slice() {\n        return Function.call.apply(nativeSlice, arguments);\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {boolean} condition\n     * @param {string} message\n     */\n    function assert(condition, message) {\n        if (!condition) {\n            throw new Error(message);\n        }\n    }\n\n    var primitiveKey = '__ec_primitive__';\n    /**\n     * Set an object as primitive to be ignored traversing children in clone or merge\n     */\n    function setAsPrimitive(obj) {\n        obj[primitiveKey] = true;\n    }\n\n    function isPrimitive(obj) {\n        return obj[primitiveKey];\n    }\n\n    /**\n     * @constructor\n     */\n    function HashMap(obj) {\n        obj && extend(this, obj);\n    }\n\n    // Add prefix to avoid conflict with Object.prototype.\n    var HASH_MAP_PREFIX = '_ec_';\n    var HASH_MAP_PREFIX_LENGTH = 4;\n\n    HashMap.prototype = {\n        constructor: HashMap,\n        // Do not provide `has` method to avoid defining what is `has`.\n        // (We usually treat `null` and `undefined` as the same, different\n        // from ES6 Map).\n        get: function (key) {\n            return this[HASH_MAP_PREFIX + key];\n        },\n        set: function (key, value) {\n            this[HASH_MAP_PREFIX + key] = value;\n            // Comparing with invocation chaining, `return value` is more commonly\n            // used in this case: `var someVal = map.set('a', genVal());`\n            return value;\n        },\n        // Although util.each can be performed on this hashMap directly, user\n        // should not use the exposed keys, who are prefixed.\n        each: function (cb, context) {\n            context !== void 0 && (cb = bind(cb, context));\n            for (var prefixedKey in this) {\n                this.hasOwnProperty(prefixedKey)\n                    && cb(this[prefixedKey], prefixedKey.slice(HASH_MAP_PREFIX_LENGTH));\n            }\n        },\n        // Do not use this method if performance sensitive.\n        removeKey: function (key) {\n            delete this[key];\n        }\n    };\n\n    function createHashMap() {\n        return new HashMap();\n    }\n\n    var util = {\n        inherits: inherits,\n        mixin: mixin,\n        clone: clone,\n        merge: merge,\n        mergeAll: mergeAll,\n        extend: extend,\n        defaults: defaults,\n        getContext: getContext,\n        createCanvas: createCanvas,\n        indexOf: indexOf,\n        slice: slice,\n        find: find,\n        isArrayLike: isArrayLike,\n        each: each,\n        map: map,\n        reduce: reduce,\n        filter: filter,\n        bind: bind,\n        curry: curry,\n        isArray: isArray,\n        isString: isString,\n        isObject: isObject,\n        isFunction: isFunction,\n        isBuiltInObject: isBuiltInObject,\n        isDom: isDom,\n        eqNaN: eqNaN,\n        retrieve: retrieve,\n        assert: assert,\n        setAsPrimitive: setAsPrimitive,\n        createHashMap: createHashMap,\n        noop: function () {}\n    };\n    module.exports = util;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.zrender@3.4.4@zrender/lib/core/util.js\n// module id = 158\n// module chunks = 0","// Enable DEV mode when using source code without build. which has no __DEV__ variable\n// In build process 'typeof __DEV__' will be replace with 'boolean'\n// So this code will be removed or disabled anyway after built.\nif (typeof __DEV__ === 'undefined') {\n    // In browser\n    if (typeof window !== 'undefined') {\n        window.__DEV__ = true;\n    }\n    // In node\n    else if (typeof global !== 'undefined') {\n        global.__DEV__ = true;\n    }\n}\n\n/*!\n * ECharts, a javascript interactive chart library.\n *\n * Copyright (c) 2015, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/echarts/blob/master/LICENSE.txt\n */\n\n/**\n * @module echarts\n */\n\n\n    var env = require('zrender/lib/core/env');\n\n    var GlobalModel = require('./model/Global');\n    var ExtensionAPI = require('./ExtensionAPI');\n    var CoordinateSystemManager = require('./CoordinateSystem');\n    var OptionManager = require('./model/OptionManager');\n\n    var ComponentModel = require('./model/Component');\n    var SeriesModel = require('./model/Series');\n\n    var ComponentView = require('./view/Component');\n    var ChartView = require('./view/Chart');\n    var graphic = require('./util/graphic');\n    var modelUtil = require('./util/model');\n    var throttle = require('./util/throttle');\n\n    var zrender = require('zrender');\n    var zrUtil = require('zrender/lib/core/util');\n    var colorTool = require('zrender/lib/tool/color');\n    var Eventful = require('zrender/lib/mixin/Eventful');\n    var timsort = require('zrender/lib/core/timsort');\n\n    var each = zrUtil.each;\n    var parseClassType = ComponentModel.parseClassType;\n\n    var PRIORITY_PROCESSOR_FILTER = 1000;\n    var PRIORITY_PROCESSOR_STATISTIC = 5000;\n\n\n    var PRIORITY_VISUAL_LAYOUT = 1000;\n    var PRIORITY_VISUAL_GLOBAL = 2000;\n    var PRIORITY_VISUAL_CHART = 3000;\n    var PRIORITY_VISUAL_COMPONENT = 4000;\n    // FIXME\n    // necessary?\n    var PRIORITY_VISUAL_BRUSH = 5000;\n\n    // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\n    // where they must not be invoked nestedly, except the only case: invoke\n    // dispatchAction with updateMethod \"none\" in main process.\n    // This flag is used to carry out this rule.\n    // All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\n    var IN_MAIN_PROCESS = '__flagInMainProcess';\n    var HAS_GRADIENT_OR_PATTERN_BG = '__hasGradientOrPatternBg';\n    var OPTION_UPDATED = '__optionUpdated';\n    var ACTION_REG = /^[a-zA-Z0-9_]+$/;\n\n    function createRegisterEventWithLowercaseName(method) {\n        return function (eventName, handler, context) {\n            // Event name is all lowercase\n            eventName = eventName && eventName.toLowerCase();\n            Eventful.prototype[method].call(this, eventName, handler, context);\n        };\n    }\n\n    /**\n     * @module echarts~MessageCenter\n     */\n    function MessageCenter() {\n        Eventful.call(this);\n    }\n    MessageCenter.prototype.on = createRegisterEventWithLowercaseName('on');\n    MessageCenter.prototype.off = createRegisterEventWithLowercaseName('off');\n    MessageCenter.prototype.one = createRegisterEventWithLowercaseName('one');\n    zrUtil.mixin(MessageCenter, Eventful);\n\n    /**\n     * @module echarts~ECharts\n     */\n    function ECharts(dom, theme, opts) {\n        opts = opts || {};\n\n        // Get theme by name\n        if (typeof theme === 'string') {\n            theme = themeStorage[theme];\n        }\n\n        /**\n         * @type {string}\n         */\n        this.id;\n        /**\n         * Group id\n         * @type {string}\n         */\n        this.group;\n        /**\n         * @type {HTMLDomElement}\n         * @private\n         */\n        this._dom = dom;\n        /**\n         * @type {module:zrender/ZRender}\n         * @private\n         */\n        var zr = this._zr = zrender.init(dom, {\n            renderer: opts.renderer || 'canvas',\n            devicePixelRatio: opts.devicePixelRatio,\n            width: opts.width,\n            height: opts.height\n        });\n\n        /**\n         * Expect 60 pfs.\n         * @type {Function}\n         * @private\n         */\n        this._throttledZrFlush = throttle.throttle(zrUtil.bind(zr.flush, zr), 17);\n\n        /**\n         * @type {Object}\n         * @private\n         */\n        this._theme = zrUtil.clone(theme);\n\n        /**\n         * @type {Array.<module:echarts/view/Chart>}\n         * @private\n         */\n        this._chartsViews = [];\n\n        /**\n         * @type {Object.<string, module:echarts/view/Chart>}\n         * @private\n         */\n        this._chartsMap = {};\n\n        /**\n         * @type {Array.<module:echarts/view/Component>}\n         * @private\n         */\n        this._componentsViews = [];\n\n        /**\n         * @type {Object.<string, module:echarts/view/Component>}\n         * @private\n         */\n        this._componentsMap = {};\n\n        /**\n         * @type {module:echarts/CoordinateSystem}\n         * @private\n         */\n        this._coordSysMgr = new CoordinateSystemManager();\n\n        /**\n         * @type {module:echarts/ExtensionAPI}\n         * @private\n         */\n        this._api = createExtensionAPI(this);\n\n        Eventful.call(this);\n\n        /**\n         * @type {module:echarts~MessageCenter}\n         * @private\n         */\n        this._messageCenter = new MessageCenter();\n\n        // Init mouse events\n        this._initEvents();\n\n        // In case some people write `window.onresize = chart.resize`\n        this.resize = zrUtil.bind(this.resize, this);\n\n        // Can't dispatch action during rendering procedure\n        this._pendingActions = [];\n        // Sort on demand\n        function prioritySortFunc(a, b) {\n            return a.prio - b.prio;\n        }\n        timsort(visualFuncs, prioritySortFunc);\n        timsort(dataProcessorFuncs, prioritySortFunc);\n\n        zr.animation.on('frame', this._onframe, this);\n\n        // ECharts instance can be used as value.\n        zrUtil.setAsPrimitive(this);\n    }\n\n    var echartsProto = ECharts.prototype;\n\n    echartsProto._onframe = function () {\n        // Lazy update\n        if (this[OPTION_UPDATED]) {\n            var silent = this[OPTION_UPDATED].silent;\n\n            this[IN_MAIN_PROCESS] = true;\n\n            updateMethods.prepareAndUpdate.call(this);\n\n            this[IN_MAIN_PROCESS] = false;\n\n            this[OPTION_UPDATED] = false;\n\n            flushPendingActions.call(this, silent);\n\n            triggerUpdatedEvent.call(this, silent);\n        }\n    };\n    /**\n     * @return {HTMLDomElement}\n     */\n    echartsProto.getDom = function () {\n        return this._dom;\n    };\n\n    /**\n     * @return {module:zrender~ZRender}\n     */\n    echartsProto.getZr = function () {\n        return this._zr;\n    };\n\n    /**\n     * Usage:\n     * chart.setOption(option, notMerge, lazyUpdate);\n     * chart.setOption(option, {\n     *     notMerge: ...,\n     *     lazyUpdate: ...,\n     *     silent: ...\n     * });\n     *\n     * @param {Object} option\n     * @param {Object|boolean} [opts] opts or notMerge.\n     * @param {boolean} [opts.notMerge=false]\n     * @param {boolean} [opts.lazyUpdate=false] Useful when setOption frequently.\n     */\n    echartsProto.setOption = function (option, notMerge, lazyUpdate) {\n        if (__DEV__) {\n            zrUtil.assert(!this[IN_MAIN_PROCESS], '`setOption` should not be called during main process.');\n        }\n\n        var silent;\n        if (zrUtil.isObject(notMerge)) {\n            lazyUpdate = notMerge.lazyUpdate;\n            silent = notMerge.silent;\n            notMerge = notMerge.notMerge;\n        }\n\n        this[IN_MAIN_PROCESS] = true;\n\n        if (!this._model || notMerge) {\n            var optionManager = new OptionManager(this._api);\n            var theme = this._theme;\n            var ecModel = this._model = new GlobalModel(null, null, theme, optionManager);\n            ecModel.init(null, null, theme, optionManager);\n        }\n\n        // FIXME\n        // ugly\n        this.__lastOnlyGraphic = !!(option && option.graphic);\n        zrUtil.each(option, function (o, mainType) {\n            mainType !== 'graphic' && (this.__lastOnlyGraphic = false);\n        }, this);\n\n        this._model.setOption(option, optionPreprocessorFuncs, this.__lastOnlyGraphic);\n\n        if (lazyUpdate) {\n            this[OPTION_UPDATED] = {silent: silent};\n            this[IN_MAIN_PROCESS] = false;\n        }\n        else {\n            updateMethods.prepareAndUpdate.call(this);\n            // Ensure zr refresh sychronously, and then pixel in canvas can be\n            // fetched after `setOption`.\n            this._zr.flush();\n\n            this[OPTION_UPDATED] = false;\n            this[IN_MAIN_PROCESS] = false;\n\n            flushPendingActions.call(this, silent);\n            triggerUpdatedEvent.call(this, silent);\n        }\n    };\n\n    /**\n     * @DEPRECATED\n     */\n    echartsProto.setTheme = function () {\n        console.log('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\n    };\n\n    /**\n     * @return {module:echarts/model/Global}\n     */\n    echartsProto.getModel = function () {\n        return this._model;\n    };\n\n    /**\n     * @return {Object}\n     */\n    echartsProto.getOption = function () {\n        return this._model && this._model.getOption();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getWidth = function () {\n        return this._zr.getWidth();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getHeight = function () {\n        return this._zr.getHeight();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getDevicePixelRatio = function () {\n        return this._zr.painter.dpr || window.devicePixelRatio || 1;\n    };\n\n    /**\n     * Get canvas which has all thing rendered\n     * @param {Object} opts\n     * @param {string} [opts.backgroundColor]\n     */\n    echartsProto.getRenderedCanvas = function (opts) {\n        if (!env.canvasSupported) {\n            return;\n        }\n        opts = opts || {};\n        opts.pixelRatio = opts.pixelRatio || 1;\n        opts.backgroundColor = opts.backgroundColor\n            || this._model.get('backgroundColor');\n        var zr = this._zr;\n        var list = zr.storage.getDisplayList();\n        // Stop animations\n        zrUtil.each(list, function (el) {\n            el.stopAnimation(true);\n        });\n        return zr.painter.getRenderedCanvas(opts);\n    };\n    /**\n     * @return {string}\n     * @param {Object} opts\n     * @param {string} [opts.type='png']\n     * @param {string} [opts.pixelRatio=1]\n     * @param {string} [opts.backgroundColor]\n     * @param {string} [opts.excludeComponents]\n     */\n    echartsProto.getDataURL = function (opts) {\n        opts = opts || {};\n        var excludeComponents = opts.excludeComponents;\n        var ecModel = this._model;\n        var excludesComponentViews = [];\n        var self = this;\n\n        each(excludeComponents, function (componentType) {\n            ecModel.eachComponent({\n                mainType: componentType\n            }, function (component) {\n                var view = self._componentsMap[component.__viewId];\n                if (!view.group.ignore) {\n                    excludesComponentViews.push(view);\n                    view.group.ignore = true;\n                }\n            });\n        });\n\n        var url = this.getRenderedCanvas(opts).toDataURL(\n            'image/' + (opts && opts.type || 'png')\n        );\n\n        each(excludesComponentViews, function (view) {\n            view.group.ignore = false;\n        });\n        return url;\n    };\n\n\n    /**\n     * @return {string}\n     * @param {Object} opts\n     * @param {string} [opts.type='png']\n     * @param {string} [opts.pixelRatio=1]\n     * @param {string} [opts.backgroundColor]\n     */\n    echartsProto.getConnectedDataURL = function (opts) {\n        if (!env.canvasSupported) {\n            return;\n        }\n        var groupId = this.group;\n        var mathMin = Math.min;\n        var mathMax = Math.max;\n        var MAX_NUMBER = Infinity;\n        if (connectedGroups[groupId]) {\n            var left = MAX_NUMBER;\n            var top = MAX_NUMBER;\n            var right = -MAX_NUMBER;\n            var bottom = -MAX_NUMBER;\n            var canvasList = [];\n            var dpr = (opts && opts.pixelRatio) || 1;\n\n            zrUtil.each(instances, function (chart, id) {\n                if (chart.group === groupId) {\n                    var canvas = chart.getRenderedCanvas(\n                        zrUtil.clone(opts)\n                    );\n                    var boundingRect = chart.getDom().getBoundingClientRect();\n                    left = mathMin(boundingRect.left, left);\n                    top = mathMin(boundingRect.top, top);\n                    right = mathMax(boundingRect.right, right);\n                    bottom = mathMax(boundingRect.bottom, bottom);\n                    canvasList.push({\n                        dom: canvas,\n                        left: boundingRect.left,\n                        top: boundingRect.top\n                    });\n                }\n            });\n\n            left *= dpr;\n            top *= dpr;\n            right *= dpr;\n            bottom *= dpr;\n            var width = right - left;\n            var height = bottom - top;\n            var targetCanvas = zrUtil.createCanvas();\n            targetCanvas.width = width;\n            targetCanvas.height = height;\n            var zr = zrender.init(targetCanvas);\n\n            each(canvasList, function (item) {\n                var img = new graphic.Image({\n                    style: {\n                        x: item.left * dpr - left,\n                        y: item.top * dpr - top,\n                        image: item.dom\n                    }\n                });\n                zr.add(img);\n            });\n            zr.refreshImmediately();\n\n            return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\n        }\n        else {\n            return this.getDataURL(opts);\n        }\n    };\n\n    /**\n     * Convert from logical coordinate system to pixel coordinate system.\n     * See CoordinateSystem#convertToPixel.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId, geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName,\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {Array|number} result\n     */\n    echartsProto.convertToPixel = zrUtil.curry(doConvertPixel, 'convertToPixel');\n\n    /**\n     * Convert from pixel coordinate system to logical coordinate system.\n     * See CoordinateSystem#convertFromPixel.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId / geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {Array|number} result\n     */\n    echartsProto.convertFromPixel = zrUtil.curry(doConvertPixel, 'convertFromPixel');\n\n    function doConvertPixel(methodName, finder, value) {\n        var ecModel = this._model;\n        var coordSysList = this._coordSysMgr.getCoordinateSystems();\n        var result;\n\n        finder = modelUtil.parseFinder(ecModel, finder);\n\n        for (var i = 0; i < coordSysList.length; i++) {\n            var coordSys = coordSysList[i];\n            if (coordSys[methodName]\n                && (result = coordSys[methodName](ecModel, finder, value)) != null\n            ) {\n                return result;\n            }\n        }\n\n        if (__DEV__) {\n            console.warn(\n                'No coordinate system that supports ' + methodName + ' found by the given finder.'\n            );\n        }\n    }\n\n    /**\n     * Is the specified coordinate systems or components contain the given pixel point.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId / geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName,\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {boolean} result\n     */\n    echartsProto.containPixel = function (finder, value) {\n        var ecModel = this._model;\n        var result;\n\n        finder = modelUtil.parseFinder(ecModel, finder);\n\n        zrUtil.each(finder, function (models, key) {\n            key.indexOf('Models') >= 0 && zrUtil.each(models, function (model) {\n                var coordSys = model.coordinateSystem;\n                if (coordSys && coordSys.containPoint) {\n                    result |= !!coordSys.containPoint(value);\n                }\n                else if (key === 'seriesModels') {\n                    var view = this._chartsMap[model.__viewId];\n                    if (view && view.containPoint) {\n                        result |= view.containPoint(value, model);\n                    }\n                    else {\n                        if (__DEV__) {\n                            console.warn(key + ': ' + (view\n                                ? 'The found component do not support containPoint.'\n                                : 'No view mapping to the found component.'\n                            ));\n                        }\n                    }\n                }\n                else {\n                    if (__DEV__) {\n                        console.warn(key + ': containPoint is not supported');\n                    }\n                }\n            }, this);\n        }, this);\n\n        return !!result;\n    };\n\n    /**\n     * Get visual from series or data.\n     * @param {string|Object} finder\n     *        If string, e.g., 'series', means {seriesIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            dataIndex / dataIndexInside\n     *        }\n     *        If dataIndex is not specified, series visual will be fetched,\n     *        but not data item visual.\n     *        If all of seriesIndex, seriesId, seriesName are not specified,\n     *        visual will be fetched from first series.\n     * @param {string} visualType 'color', 'symbol', 'symbolSize'\n     */\n    echartsProto.getVisual = function (finder, visualType) {\n        var ecModel = this._model;\n\n        finder = modelUtil.parseFinder(ecModel, finder, {defaultMainType: 'series'});\n\n        var seriesModel = finder.seriesModel;\n\n        if (__DEV__) {\n            if (!seriesModel) {\n                console.warn('There is no specified seires model');\n            }\n        }\n\n        var data = seriesModel.getData();\n\n        var dataIndexInside = finder.hasOwnProperty('dataIndexInside')\n            ? finder.dataIndexInside\n            : finder.hasOwnProperty('dataIndex')\n            ? data.indexOfRawIndex(finder.dataIndex)\n            : null;\n\n        return dataIndexInside != null\n            ? data.getItemVisual(dataIndexInside, visualType)\n            : data.getVisual(visualType);\n    };\n\n    /**\n     * Get view of corresponding component model\n     * @param  {module:echarts/model/Component} componentModel\n     * @return {module:echarts/view/Component}\n     */\n    echartsProto.getViewOfComponentModel = function (componentModel) {\n        return this._componentsMap[componentModel.__viewId];\n    };\n\n    /**\n     * Get view of corresponding series model\n     * @param  {module:echarts/model/Series} seriesModel\n     * @return {module:echarts/view/Chart}\n     */\n    echartsProto.getViewOfSeriesModel = function (seriesModel) {\n        return this._chartsMap[seriesModel.__viewId];\n    };\n\n\n    var updateMethods = {\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        update: function (payload) {\n            // console.profile && console.profile('update');\n\n            var ecModel = this._model;\n            var api = this._api;\n            var coordSysMgr = this._coordSysMgr;\n            var zr = this._zr;\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            // Fixme First time update ?\n            ecModel.restoreData();\n\n            // TODO\n            // Save total ecModel here for undo/redo (after restoring data and before processing data).\n            // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\n\n            // Create new coordinate system each update\n            // In LineView may save the old coordinate system and use it to get the orignal point\n            coordSysMgr.create(this._model, this._api);\n\n            processData.call(this, ecModel, api);\n\n            stackSeriesData.call(this, ecModel);\n\n            coordSysMgr.update(ecModel, api);\n\n            doVisualEncoding.call(this, ecModel, payload);\n\n            doRender.call(this, ecModel, payload);\n\n            // Set background\n            var backgroundColor = ecModel.get('backgroundColor') || 'transparent';\n\n            var painter = zr.painter;\n            // TODO all use clearColor ?\n            if (painter.isSingleCanvas && painter.isSingleCanvas()) {\n                zr.configLayer(0, {\n                    clearColor: backgroundColor\n                });\n            }\n            else {\n                // In IE8\n                if (!env.canvasSupported) {\n                    var colorArr = colorTool.parse(backgroundColor);\n                    backgroundColor = colorTool.stringify(colorArr, 'rgb');\n                    if (colorArr[3] === 0) {\n                        backgroundColor = 'transparent';\n                    }\n                }\n                if (backgroundColor.colorStops || backgroundColor.image) {\n                    // Gradient background\n                    // FIXME Fixed layer？\n                    zr.configLayer(0, {\n                        clearColor: backgroundColor\n                    });\n                    this[HAS_GRADIENT_OR_PATTERN_BG] = true;\n\n                    this._dom.style.background = 'transparent';\n                }\n                else {\n                    if (this[HAS_GRADIENT_OR_PATTERN_BG]) {\n                        zr.configLayer(0, {\n                            clearColor: null\n                        });\n                    }\n                    this[HAS_GRADIENT_OR_PATTERN_BG] = false;\n\n                    this._dom.style.background = backgroundColor;\n                }\n            }\n\n            each(postUpdateFuncs, function (func) {\n                func(ecModel, api);\n            });\n\n            // console.profile && console.profileEnd('update');\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateView: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            ecModel.eachSeries(function (seriesModel) {\n                seriesModel.getData().clearAllVisual();\n            });\n\n            doVisualEncoding.call(this, ecModel, payload);\n\n            invokeUpdateMethod.call(this, 'updateView', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateVisual: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            ecModel.eachSeries(function (seriesModel) {\n                seriesModel.getData().clearAllVisual();\n            });\n\n            doVisualEncoding.call(this, ecModel, payload, true);\n\n            invokeUpdateMethod.call(this, 'updateVisual', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateLayout: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            doLayout.call(this, ecModel, payload);\n\n            invokeUpdateMethod.call(this, 'updateLayout', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        prepareAndUpdate: function (payload) {\n            var ecModel = this._model;\n\n            prepareView.call(this, 'component', ecModel);\n\n            prepareView.call(this, 'chart', ecModel);\n\n            // FIXME\n            // ugly\n            if (this.__lastOnlyGraphic) {\n                each(this._componentsViews, function (componentView) {\n                    var componentModel = componentView.__model;\n                    if (componentModel && componentModel.mainType === 'graphic') {\n                        componentView.render(componentModel, ecModel, this._api, payload);\n                        updateZ(componentModel, componentView);\n                    }\n                }, this);\n                this.__lastOnlyGraphic = false;\n            }\n            else {\n                updateMethods.update.call(this, payload);\n            }\n        }\n    };\n\n    /**\n     * @private\n     */\n    function updateDirectly(ecIns, method, payload, mainType, subType) {\n        var ecModel = ecIns._model;\n\n        // broadcast\n        if (!mainType) {\n            each(ecIns._componentsViews.concat(ecIns._chartsViews), callView);\n            return;\n        }\n\n        var query = {};\n        query[mainType + 'Id'] = payload[mainType + 'Id'];\n        query[mainType + 'Index'] = payload[mainType + 'Index'];\n        query[mainType + 'Name'] = payload[mainType + 'Name'];\n\n        var condition = {mainType: mainType, query: query};\n        subType && (condition.subType = subType); // subType may be '' by parseClassType;\n\n        // If dispatchAction before setOption, do nothing.\n        ecModel && ecModel.eachComponent(condition, function (model, index) {\n            callView(ecIns[\n                mainType === 'series' ? '_chartsMap' : '_componentsMap'\n            ][model.__viewId]);\n        }, ecIns);\n\n        function callView(view) {\n            view && view.__alive && view[method] && view[method](\n                view.__model, ecModel, ecIns._api, payload\n            );\n        }\n    }\n\n    /**\n     * Resize the chart\n     * @param {Object} opts\n     * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n     * @param {boolean} [opts.silent=false]\n     */\n    echartsProto.resize = function (opts) {\n        if (__DEV__) {\n            zrUtil.assert(!this[IN_MAIN_PROCESS], '`resize` should not be called during main process.');\n        }\n\n        this[IN_MAIN_PROCESS] = true;\n\n        this._zr.resize(opts);\n\n        var optionChanged = this._model && this._model.resetOption('media');\n        var updateMethod = optionChanged ? 'prepareAndUpdate' : 'update';\n\n        updateMethods[updateMethod].call(this);\n\n        // Resize loading effect\n        this._loadingFX && this._loadingFX.resize();\n\n        this[IN_MAIN_PROCESS] = false;\n\n        var silent = opts && opts.silent;\n\n        flushPendingActions.call(this, silent);\n\n        triggerUpdatedEvent.call(this, silent);\n    };\n\n    /**\n     * Show loading effect\n     * @param  {string} [name='default']\n     * @param  {Object} [cfg]\n     */\n    echartsProto.showLoading = function (name, cfg) {\n        if (zrUtil.isObject(name)) {\n            cfg = name;\n            name = '';\n        }\n        name = name || 'default';\n\n        this.hideLoading();\n        if (!loadingEffects[name]) {\n            if (__DEV__) {\n                console.warn('Loading effects ' + name + ' not exists.');\n            }\n            return;\n        }\n        var el = loadingEffects[name](this._api, cfg);\n        var zr = this._zr;\n        this._loadingFX = el;\n\n        zr.add(el);\n    };\n\n    /**\n     * Hide loading effect\n     */\n    echartsProto.hideLoading = function () {\n        this._loadingFX && this._zr.remove(this._loadingFX);\n        this._loadingFX = null;\n    };\n\n    /**\n     * @param {Object} eventObj\n     * @return {Object}\n     */\n    echartsProto.makeActionFromEvent = function (eventObj) {\n        var payload = zrUtil.extend({}, eventObj);\n        payload.type = eventActionMap[eventObj.type];\n        return payload;\n    };\n\n    /**\n     * @pubilc\n     * @param {Object} payload\n     * @param {string} [payload.type] Action type\n     * @param {Object|boolean} [opt] If pass boolean, means opt.silent\n     * @param {boolean} [opt.silent=false] Whether trigger events.\n     * @param {boolean} [opt.flush=undefined]\n     *                  true: Flush immediately, and then pixel in canvas can be fetched\n     *                      immediately. Caution: it might affect performance.\n     *                  false: Not not flush.\n     *                  undefined: Auto decide whether perform flush.\n     */\n    echartsProto.dispatchAction = function (payload, opt) {\n        if (!zrUtil.isObject(opt)) {\n            opt = {silent: !!opt};\n        }\n\n        if (!actions[payload.type]) {\n            return;\n        }\n\n        // May dispatchAction in rendering procedure\n        if (this[IN_MAIN_PROCESS]) {\n            this._pendingActions.push(payload);\n            return;\n        }\n\n        doDispatchAction.call(this, payload, opt.silent);\n\n        if (opt.flush) {\n            this._zr.flush(true);\n        }\n        else if (opt.flush !== false && env.browser.weChat) {\n            // In WeChat embeded browser, `requestAnimationFrame` and `setInterval`\n            // hang when sliding page (on touch event), which cause that zr does not\n            // refresh util user interaction finished, which is not expected.\n            // But `dispatchAction` may be called too frequently when pan on touch\n            // screen, which impacts performance if do not throttle them.\n            this._throttledZrFlush();\n        }\n\n        flushPendingActions.call(this, opt.silent);\n\n        triggerUpdatedEvent.call(this, opt.silent);\n    };\n\n    function doDispatchAction(payload, silent) {\n        var payloadType = payload.type;\n        var escapeConnect = payload.escapeConnect;\n        var actionWrap = actions[payloadType];\n        var actionInfo = actionWrap.actionInfo;\n\n        var cptType = (actionInfo.update || 'update').split(':');\n        var updateMethod = cptType.pop();\n        cptType = cptType[0] != null && parseClassType(cptType[0]);\n\n        this[IN_MAIN_PROCESS] = true;\n\n        var payloads = [payload];\n        var batched = false;\n        // Batch action\n        if (payload.batch) {\n            batched = true;\n            payloads = zrUtil.map(payload.batch, function (item) {\n                item = zrUtil.defaults(zrUtil.extend({}, item), payload);\n                item.batch = null;\n                return item;\n            });\n        }\n\n        var eventObjBatch = [];\n        var eventObj;\n        var isHighDown = payloadType === 'highlight' || payloadType === 'downplay';\n\n        each(payloads, function (batchItem) {\n            // Action can specify the event by return it.\n            eventObj = actionWrap.action(batchItem, this._model, this._api);\n            // Emit event outside\n            eventObj = eventObj || zrUtil.extend({}, batchItem);\n            // Convert type to eventType\n            eventObj.type = actionInfo.event || eventObj.type;\n            eventObjBatch.push(eventObj);\n\n            // light update does not perform data process, layout and visual.\n            if (isHighDown) {\n                // method, payload, mainType, subType\n                updateDirectly(this, updateMethod, batchItem, 'series');\n            }\n            else if (cptType) {\n                updateDirectly(this, updateMethod, batchItem, cptType.main, cptType.sub);\n            }\n        }, this);\n\n        if (updateMethod !== 'none' && !isHighDown && !cptType) {\n            // Still dirty\n            if (this[OPTION_UPDATED]) {\n                // FIXME Pass payload ?\n                updateMethods.prepareAndUpdate.call(this, payload);\n                this[OPTION_UPDATED] = false;\n            }\n            else {\n                updateMethods[updateMethod].call(this, payload);\n            }\n        }\n\n        // Follow the rule of action batch\n        if (batched) {\n            eventObj = {\n                type: actionInfo.event || payloadType,\n                escapeConnect: escapeConnect,\n                batch: eventObjBatch\n            };\n        }\n        else {\n            eventObj = eventObjBatch[0];\n        }\n\n        this[IN_MAIN_PROCESS] = false;\n\n        !silent && this._messageCenter.trigger(eventObj.type, eventObj);\n    }\n\n    function flushPendingActions(silent) {\n        var pendingActions = this._pendingActions;\n        while (pendingActions.length) {\n            var payload = pendingActions.shift();\n            doDispatchAction.call(this, payload, silent);\n        }\n    }\n\n    function triggerUpdatedEvent(silent) {\n        !silent && this.trigger('updated');\n    }\n\n    /**\n     * Register event\n     * @method\n     */\n    echartsProto.on = createRegisterEventWithLowercaseName('on');\n    echartsProto.off = createRegisterEventWithLowercaseName('off');\n    echartsProto.one = createRegisterEventWithLowercaseName('one');\n\n    /**\n     * @param {string} methodName\n     * @private\n     */\n    function invokeUpdateMethod(methodName, ecModel, payload) {\n        var api = this._api;\n\n        // Update all components\n        each(this._componentsViews, function (component) {\n            var componentModel = component.__model;\n            component[methodName](componentModel, ecModel, api, payload);\n\n            updateZ(componentModel, component);\n        }, this);\n\n        // Upate all charts\n        ecModel.eachSeries(function (seriesModel, idx) {\n            var chart = this._chartsMap[seriesModel.__viewId];\n            chart[methodName](seriesModel, ecModel, api, payload);\n\n            updateZ(seriesModel, chart);\n\n            updateProgressiveAndBlend(seriesModel, chart);\n        }, this);\n\n        // If use hover layer\n        updateHoverLayerStatus(this._zr, ecModel);\n\n        // Post render\n        each(postUpdateFuncs, function (func) {\n            func(ecModel, api);\n        });\n    }\n\n    /**\n     * Prepare view instances of charts and components\n     * @param  {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function prepareView(type, ecModel) {\n        var isComponent = type === 'component';\n        var viewList = isComponent ? this._componentsViews : this._chartsViews;\n        var viewMap = isComponent ? this._componentsMap : this._chartsMap;\n        var zr = this._zr;\n\n        for (var i = 0; i < viewList.length; i++) {\n            viewList[i].__alive = false;\n        }\n\n        ecModel[isComponent ? 'eachComponent' : 'eachSeries'](function (componentType, model) {\n            if (isComponent) {\n                if (componentType === 'series') {\n                    return;\n                }\n            }\n            else {\n                model = componentType;\n            }\n\n            // Consider: id same and type changed.\n            var viewId = model.id + '_' + model.type;\n            var view = viewMap[viewId];\n            if (!view) {\n                var classType = parseClassType(model.type);\n                var Clazz = isComponent\n                    ? ComponentView.getClass(classType.main, classType.sub)\n                    : ChartView.getClass(classType.sub);\n                if (Clazz) {\n                    view = new Clazz();\n                    view.init(ecModel, this._api);\n                    viewMap[viewId] = view;\n                    viewList.push(view);\n                    zr.add(view.group);\n                }\n                else {\n                    // Error\n                    return;\n                }\n            }\n\n            model.__viewId = view.__id = viewId;\n            view.__alive = true;\n            view.__model = model;\n            view.group.__ecComponentInfo = {\n                mainType: model.mainType,\n                index: model.componentIndex\n            };\n        }, this);\n\n        for (var i = 0; i < viewList.length;) {\n            var view = viewList[i];\n            if (!view.__alive) {\n                zr.remove(view.group);\n                view.dispose(ecModel, this._api);\n                viewList.splice(i, 1);\n                delete viewMap[view.__id];\n                view.__id = view.group.__ecComponentInfo = null;\n            }\n            else {\n                i++;\n            }\n        }\n    }\n\n    /**\n     * Processor data in each series\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function processData(ecModel, api) {\n        each(dataProcessorFuncs, function (process) {\n            process.func(ecModel, api);\n        });\n    }\n\n    /**\n     * @private\n     */\n    function stackSeriesData(ecModel) {\n        var stackedDataMap = {};\n        ecModel.eachSeries(function (series) {\n            var stack = series.get('stack');\n            var data = series.getData();\n            if (stack && data.type === 'list') {\n                var previousStack = stackedDataMap[stack];\n                if (previousStack) {\n                    data.stackedOn = previousStack;\n                }\n                stackedDataMap[stack] = data;\n            }\n        });\n    }\n\n    /**\n     * Layout before each chart render there series, special visual encoding stage\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function doLayout(ecModel, payload) {\n        var api = this._api;\n        each(visualFuncs, function (visual) {\n            if (visual.isLayout) {\n                visual.func(ecModel, api, payload);\n            }\n        });\n    }\n\n    /**\n     * Encode visual infomation from data after data processing\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @param {object} layout\n     * @param {boolean} [excludesLayout]\n     * @private\n     */\n    function doVisualEncoding(ecModel, payload, excludesLayout) {\n        var api = this._api;\n        ecModel.clearColorPalette();\n        ecModel.eachSeries(function (seriesModel) {\n            seriesModel.clearColorPalette();\n        });\n        each(visualFuncs, function (visual) {\n            (!excludesLayout || !visual.isLayout)\n                && visual.func(ecModel, api, payload);\n        });\n    }\n\n    /**\n     * Render each chart and component\n     * @private\n     */\n    function doRender(ecModel, payload) {\n        var api = this._api;\n        // Render all components\n        each(this._componentsViews, function (componentView) {\n            var componentModel = componentView.__model;\n            componentView.render(componentModel, ecModel, api, payload);\n\n            updateZ(componentModel, componentView);\n        }, this);\n\n        each(this._chartsViews, function (chart) {\n            chart.__alive = false;\n        }, this);\n\n        // Render all charts\n        ecModel.eachSeries(function (seriesModel, idx) {\n            var chartView = this._chartsMap[seriesModel.__viewId];\n            chartView.__alive = true;\n            chartView.render(seriesModel, ecModel, api, payload);\n\n            chartView.group.silent = !!seriesModel.get('silent');\n\n            updateZ(seriesModel, chartView);\n\n            updateProgressiveAndBlend(seriesModel, chartView);\n\n        }, this);\n\n        // If use hover layer\n        updateHoverLayerStatus(this._zr, ecModel);\n\n        // Remove groups of unrendered charts\n        each(this._chartsViews, function (chart) {\n            if (!chart.__alive) {\n                chart.remove(ecModel, api);\n            }\n        }, this);\n    }\n\n    var MOUSE_EVENT_NAMES = [\n        'click', 'dblclick', 'mouseover', 'mouseout', 'mousemove',\n        'mousedown', 'mouseup', 'globalout', 'contextmenu'\n    ];\n    /**\n     * @private\n     */\n    echartsProto._initEvents = function () {\n        each(MOUSE_EVENT_NAMES, function (eveName) {\n            this._zr.on(eveName, function (e) {\n                var ecModel = this.getModel();\n                var el = e.target;\n                var params;\n\n                // no e.target when 'globalout'.\n                if (eveName === 'globalout') {\n                    params = {};\n                }\n                else if (el && el.dataIndex != null) {\n                    var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\n                    params = dataModel && dataModel.getDataParams(el.dataIndex, el.dataType) || {};\n                }\n                // If element has custom eventData of components\n                else if (el && el.eventData) {\n                    params = zrUtil.extend({}, el.eventData);\n                }\n\n                if (params) {\n                    params.event = e;\n                    params.type = eveName;\n                    this.trigger(eveName, params);\n                }\n\n            }, this);\n        }, this);\n\n        each(eventActionMap, function (actionType, eventType) {\n            this._messageCenter.on(eventType, function (event) {\n                this.trigger(eventType, event);\n            }, this);\n        }, this);\n    };\n\n    /**\n     * @return {boolean}\n     */\n    echartsProto.isDisposed = function () {\n        return this._disposed;\n    };\n\n    /**\n     * Clear\n     */\n    echartsProto.clear = function () {\n        this.setOption({ series: [] }, true);\n    };\n\n    /**\n     * Dispose instance\n     */\n    echartsProto.dispose = function () {\n        if (this._disposed) {\n            if (__DEV__) {\n                console.warn('Instance ' + this.id + ' has been disposed');\n            }\n            return;\n        }\n        this._disposed = true;\n\n        var api = this._api;\n        var ecModel = this._model;\n\n        each(this._componentsViews, function (component) {\n            component.dispose(ecModel, api);\n        });\n        each(this._chartsViews, function (chart) {\n            chart.dispose(ecModel, api);\n        });\n\n        // Dispose after all views disposed\n        this._zr.dispose();\n\n        delete instances[this.id];\n    };\n\n    zrUtil.mixin(ECharts, Eventful);\n\n    function updateHoverLayerStatus(zr, ecModel) {\n        var storage = zr.storage;\n        var elCount = 0;\n        storage.traverse(function (el) {\n            if (!el.isGroup) {\n                elCount++;\n            }\n        });\n        if (elCount > ecModel.get('hoverLayerThreshold') && !env.node) {\n            storage.traverse(function (el) {\n                if (!el.isGroup) {\n                    el.useHoverLayer = true;\n                }\n            });\n        }\n    }\n\n    /**\n     * Update chart progressive and blend.\n     * @param {module:echarts/model/Series|module:echarts/model/Component} model\n     * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n     */\n    function updateProgressiveAndBlend(seriesModel, chartView) {\n        // Progressive configuration\n        var elCount = 0;\n        chartView.group.traverse(function (el) {\n            if (el.type !== 'group' && !el.ignore) {\n                elCount++;\n            }\n        });\n        var frameDrawNum = +seriesModel.get('progressive');\n        var needProgressive = elCount > seriesModel.get('progressiveThreshold') && frameDrawNum && !env.node;\n        if (needProgressive) {\n            chartView.group.traverse(function (el) {\n                // FIXME marker and other components\n                if (!el.isGroup) {\n                    el.progressive = needProgressive ?\n                        Math.floor(elCount++ / frameDrawNum) : -1;\n                    if (needProgressive) {\n                        el.stopAnimation(true);\n                    }\n                }\n            });\n        }\n\n        // Blend configration\n        var blendMode = seriesModel.get('blendMode') || null;\n        if (__DEV__) {\n            if (!env.canvasSupported && blendMode && blendMode !== 'source-over') {\n                console.warn('Only canvas support blendMode');\n            }\n        }\n        chartView.group.traverse(function (el) {\n            // FIXME marker and other components\n            if (!el.isGroup) {\n                el.setStyle('blend', blendMode);\n            }\n        });\n    }\n\n    /**\n     * @param {module:echarts/model/Series|module:echarts/model/Component} model\n     * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n     */\n    function updateZ(model, view) {\n        var z = model.get('z');\n        var zlevel = model.get('zlevel');\n        // Set z and zlevel\n        view.group.traverse(function (el) {\n            if (el.type !== 'group') {\n                z != null && (el.z = z);\n                zlevel != null && (el.zlevel = zlevel);\n            }\n        });\n    }\n\n    function createExtensionAPI(ecInstance) {\n        var coordSysMgr = ecInstance._coordSysMgr;\n        return zrUtil.extend(new ExtensionAPI(ecInstance), {\n            // Inject methods\n            getCoordinateSystems: zrUtil.bind(\n                coordSysMgr.getCoordinateSystems, coordSysMgr\n            ),\n            getComponentByElement: function (el) {\n                while (el) {\n                    var modelInfo = el.__ecComponentInfo;\n                    if (modelInfo != null) {\n                        return ecInstance._model.getComponent(modelInfo.mainType, modelInfo.index);\n                    }\n                    el = el.parent;\n                }\n            }\n        });\n    }\n\n    /**\n     * @type {Object} key: actionType.\n     * @inner\n     */\n    var actions = {};\n\n    /**\n     * Map eventType to actionType\n     * @type {Object}\n     */\n    var eventActionMap = {};\n\n    /**\n     * Data processor functions of each stage\n     * @type {Array.<Object.<string, Function>>}\n     * @inner\n     */\n    var dataProcessorFuncs = [];\n\n    /**\n     * @type {Array.<Function>}\n     * @inner\n     */\n    var optionPreprocessorFuncs = [];\n\n    /**\n     * @type {Array.<Function>}\n     * @inner\n     */\n    var postUpdateFuncs = [];\n\n    /**\n     * Visual encoding functions of each stage\n     * @type {Array.<Object.<string, Function>>}\n     * @inner\n     */\n    var visualFuncs = [];\n    /**\n     * Theme storage\n     * @type {Object.<key, Object>}\n     */\n    var themeStorage = {};\n    /**\n     * Loading effects\n     */\n    var loadingEffects = {};\n\n\n    var instances = {};\n    var connectedGroups = {};\n\n    var idBase = new Date() - 0;\n    var groupIdBase = new Date() - 0;\n    var DOM_ATTRIBUTE_KEY = '_echarts_instance_';\n    /**\n     * @alias module:echarts\n     */\n    var echarts = {\n        /**\n         * @type {number}\n         */\n        version: '3.5.4',\n        dependencies: {\n            zrender: '3.4.4'\n        }\n    };\n\n    function enableConnect(chart) {\n        var STATUS_PENDING = 0;\n        var STATUS_UPDATING = 1;\n        var STATUS_UPDATED = 2;\n        var STATUS_KEY = '__connectUpdateStatus';\n\n        function updateConnectedChartsStatus(charts, status) {\n            for (var i = 0; i < charts.length; i++) {\n                var otherChart = charts[i];\n                otherChart[STATUS_KEY] = status;\n            }\n        }\n\n        zrUtil.each(eventActionMap, function (actionType, eventType) {\n            chart._messageCenter.on(eventType, function (event) {\n                if (connectedGroups[chart.group] && chart[STATUS_KEY] !== STATUS_PENDING) {\n                    if (event && event.escapeConnect) {\n                        return;\n                    }\n\n                    var action = chart.makeActionFromEvent(event);\n                    var otherCharts = [];\n\n                    zrUtil.each(instances, function (otherChart) {\n                        if (otherChart !== chart && otherChart.group === chart.group) {\n                            otherCharts.push(otherChart);\n                        }\n                    });\n\n                    updateConnectedChartsStatus(otherCharts, STATUS_PENDING);\n                    each(otherCharts, function (otherChart) {\n                        if (otherChart[STATUS_KEY] !== STATUS_UPDATING) {\n                            otherChart.dispatchAction(action);\n                        }\n                    });\n                    updateConnectedChartsStatus(otherCharts, STATUS_UPDATED);\n                }\n            });\n        });\n    }\n\n    /**\n     * @param {HTMLDomElement} dom\n     * @param {Object} [theme]\n     * @param {Object} opts\n     * @param {number} [opts.devicePixelRatio] Use window.devicePixelRatio by default\n     * @param {string} [opts.renderer] Currently only 'canvas' is supported.\n     * @param {number} [opts.width] Use clientWidth of the input `dom` by default.\n     *                              Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Use clientHeight of the input `dom` by default.\n     *                               Can be 'auto' (the same as null/undefined)\n     */\n    echarts.init = function (dom, theme, opts) {\n        if (__DEV__) {\n            // Check version\n            if ((zrender.version.replace('.', '') - 0) < (echarts.dependencies.zrender.replace('.', '') - 0)) {\n                throw new Error(\n                    'ZRender ' + zrender.version\n                    + ' is too old for ECharts ' + echarts.version\n                    + '. Current version need ZRender '\n                    + echarts.dependencies.zrender + '+'\n                );\n            }\n            if (!dom) {\n                throw new Error('Initialize failed: invalid dom.');\n            }\n            if (zrUtil.isDom(dom)\n                && dom.nodeName.toUpperCase() !== 'CANVAS'\n                && (\n                    (!dom.clientWidth && (!opts || opts.width == null))\n                    || (!dom.clientHeight && (!opts || opts.height == null))\n                )\n            ) {\n                console.warn('Can\\'t get dom width or height');\n            }\n        }\n\n        var chart = new ECharts(dom, theme, opts);\n        chart.id = 'ec_' + idBase++;\n        instances[chart.id] = chart;\n\n        dom.setAttribute &&\n            dom.setAttribute(DOM_ATTRIBUTE_KEY, chart.id);\n\n        enableConnect(chart);\n\n        return chart;\n    };\n\n    /**\n     * @return {string|Array.<module:echarts~ECharts>} groupId\n     */\n    echarts.connect = function (groupId) {\n        // Is array of charts\n        if (zrUtil.isArray(groupId)) {\n            var charts = groupId;\n            groupId = null;\n            // If any chart has group\n            zrUtil.each(charts, function (chart) {\n                if (chart.group != null) {\n                    groupId = chart.group;\n                }\n            });\n            groupId = groupId || ('g_' + groupIdBase++);\n            zrUtil.each(charts, function (chart) {\n                chart.group = groupId;\n            });\n        }\n        connectedGroups[groupId] = true;\n        return groupId;\n    };\n\n    /**\n     * @DEPRECATED\n     * @return {string} groupId\n     */\n    echarts.disConnect = function (groupId) {\n        connectedGroups[groupId] = false;\n    };\n\n    /**\n     * @return {string} groupId\n     */\n    echarts.disconnect = echarts.disConnect;\n\n    /**\n     * Dispose a chart instance\n     * @param  {module:echarts~ECharts|HTMLDomElement|string} chart\n     */\n    echarts.dispose = function (chart) {\n        if (zrUtil.isDom(chart)) {\n            chart = echarts.getInstanceByDom(chart);\n        }\n        else if (typeof chart === 'string') {\n            chart = instances[chart];\n        }\n        if ((chart instanceof ECharts) && !chart.isDisposed()) {\n            chart.dispose();\n        }\n    };\n\n    /**\n     * @param  {HTMLDomElement} dom\n     * @return {echarts~ECharts}\n     */\n    echarts.getInstanceByDom = function (dom) {\n        var key = dom.getAttribute(DOM_ATTRIBUTE_KEY);\n        return instances[key];\n    };\n    /**\n     * @param {string} key\n     * @return {echarts~ECharts}\n     */\n    echarts.getInstanceById = function (key) {\n        return instances[key];\n    };\n\n    /**\n     * Register theme\n     */\n    echarts.registerTheme = function (name, theme) {\n        themeStorage[name] = theme;\n    };\n\n    /**\n     * Register option preprocessor\n     * @param {Function} preprocessorFunc\n     */\n    echarts.registerPreprocessor = function (preprocessorFunc) {\n        optionPreprocessorFuncs.push(preprocessorFunc);\n    };\n\n    /**\n     * @param {number} [priority=1000]\n     * @param {Function} processorFunc\n     */\n    echarts.registerProcessor = function (priority, processorFunc) {\n        if (typeof priority === 'function') {\n            processorFunc = priority;\n            priority = PRIORITY_PROCESSOR_FILTER;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown processor priority');\n            }\n        }\n        dataProcessorFuncs.push({\n            prio: priority,\n            func: processorFunc\n        });\n    };\n\n    /**\n     * Register postUpdater\n     * @param {Function} postUpdateFunc\n     */\n    echarts.registerPostUpdate = function (postUpdateFunc) {\n        postUpdateFuncs.push(postUpdateFunc);\n    };\n\n    /**\n     * Usage:\n     * registerAction('someAction', 'someEvent', function () { ... });\n     * registerAction('someAction', function () { ... });\n     * registerAction(\n     *     {type: 'someAction', event: 'someEvent', update: 'updateView'},\n     *     function () { ... }\n     * );\n     *\n     * @param {(string|Object)} actionInfo\n     * @param {string} actionInfo.type\n     * @param {string} [actionInfo.event]\n     * @param {string} [actionInfo.update]\n     * @param {string} [eventName]\n     * @param {Function} action\n     */\n    echarts.registerAction = function (actionInfo, eventName, action) {\n        if (typeof eventName === 'function') {\n            action = eventName;\n            eventName = '';\n        }\n        var actionType = zrUtil.isObject(actionInfo)\n            ? actionInfo.type\n            : ([actionInfo, actionInfo = {\n                event: eventName\n            }][0]);\n\n        // Event name is all lowercase\n        actionInfo.event = (actionInfo.event || actionType).toLowerCase();\n        eventName = actionInfo.event;\n\n        // Validate action type and event name.\n        zrUtil.assert(ACTION_REG.test(actionType) && ACTION_REG.test(eventName));\n\n        if (!actions[actionType]) {\n            actions[actionType] = {action: action, actionInfo: actionInfo};\n        }\n        eventActionMap[eventName] = actionType;\n    };\n\n    /**\n     * @param {string} type\n     * @param {*} CoordinateSystem\n     */\n    echarts.registerCoordinateSystem = function (type, CoordinateSystem) {\n        CoordinateSystemManager.register(type, CoordinateSystem);\n    };\n\n    /**\n     * Layout is a special stage of visual encoding\n     * Most visual encoding like color are common for different chart\n     * But each chart has it's own layout algorithm\n     *\n     * @param {number} [priority=1000]\n     * @param {Function} layoutFunc\n     */\n    echarts.registerLayout = function (priority, layoutFunc) {\n        if (typeof priority === 'function') {\n            layoutFunc = priority;\n            priority = PRIORITY_VISUAL_LAYOUT;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown layout priority');\n            }\n        }\n        visualFuncs.push({\n            prio: priority,\n            func: layoutFunc,\n            isLayout: true\n        });\n    };\n\n    /**\n     * @param {number} [priority=3000]\n     * @param {Function} visualFunc\n     */\n    echarts.registerVisual = function (priority, visualFunc) {\n        if (typeof priority === 'function') {\n            visualFunc = priority;\n            priority = PRIORITY_VISUAL_CHART;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown visual priority');\n            }\n        }\n        visualFuncs.push({\n            prio: priority,\n            func: visualFunc\n        });\n    };\n\n    /**\n     * @param {string} name\n     */\n    echarts.registerLoading = function (name, loadingFx) {\n        loadingEffects[name] = loadingFx;\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendComponentModel = function (opts/*, superClass*/) {\n        // var Clazz = ComponentModel;\n        // if (superClass) {\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n        // }\n        return ComponentModel.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendComponentView = function (opts/*, superClass*/) {\n        // var Clazz = ComponentView;\n        // if (superClass) {\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentView.getClass(classType.main, classType.sub, true);\n        // }\n        return ComponentView.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendSeriesModel = function (opts/*, superClass*/) {\n        // var Clazz = SeriesModel;\n        // if (superClass) {\n        //     superClass = 'series.' + superClass.replace('series.', '');\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n        // }\n        return SeriesModel.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendChartView = function (opts/*, superClass*/) {\n        // var Clazz = ChartView;\n        // if (superClass) {\n        //     superClass = superClass.replace('series.', '');\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ChartView.getClass(classType.main, true);\n        // }\n        return ChartView.extend(opts);\n    };\n\n    /**\n     * ZRender need a canvas context to do measureText.\n     * But in node environment canvas may be created by node-canvas.\n     * So we need to specify how to create a canvas instead of using document.createElement('canvas')\n     *\n     * Be careful of using it in the browser.\n     *\n     * @param {Function} creator\n     * @example\n     *     var Canvas = require('canvas');\n     *     var echarts = require('echarts');\n     *     echarts.setCanvasCreator(function () {\n     *         // Small size is enough.\n     *         return new Canvas(32, 32);\n     *     });\n     */\n    echarts.setCanvasCreator = function (creator) {\n        zrUtil.createCanvas = creator;\n    };\n\n    echarts.registerVisual(PRIORITY_VISUAL_GLOBAL, require('./visual/seriesColor'));\n    echarts.registerPreprocessor(require('./preprocessor/backwardCompat'));\n    echarts.registerLoading('default', require('./loading/default'));\n\n    // Default action\n    echarts.registerAction({\n        type: 'highlight',\n        event: 'highlight',\n        update: 'highlight'\n    }, zrUtil.noop);\n    echarts.registerAction({\n        type: 'downplay',\n        event: 'downplay',\n        update: 'downplay'\n    }, zrUtil.noop);\n\n\n    // --------\n    // Exports\n    // --------\n    echarts.zrender = zrender;\n\n    echarts.List = require('./data/List');\n    echarts.Model = require('./model/Model');\n\n    echarts.Axis = require('./coord/Axis');\n\n    echarts.graphic = require('./util/graphic');\n    echarts.number = require('./util/number');\n    echarts.format = require('./util/format');\n    echarts.throttle = throttle.throttle;\n    echarts.matrix = require('zrender/lib/core/matrix');\n    echarts.vector = require('zrender/lib/core/vector');\n    echarts.color = require('zrender/lib/tool/color');\n\n    echarts.util = {};\n    each([\n            'map', 'each', 'filter', 'indexOf', 'inherits', 'reduce', 'filter',\n            'bind', 'curry', 'isArray', 'isString', 'isObject', 'isFunction',\n            'extend', 'defaults', 'clone', 'merge'\n        ],\n        function (name) {\n            echarts.util[name] = zrUtil[name];\n        }\n    );\n\n    echarts.helper = require('./helper');\n\n\n    // PRIORITY\n    echarts.PRIORITY = {\n        PROCESSOR: {\n            FILTER: PRIORITY_PROCESSOR_FILTER,\n            STATISTIC: PRIORITY_PROCESSOR_STATISTIC\n        },\n        VISUAL: {\n            LAYOUT: PRIORITY_VISUAL_LAYOUT,\n            GLOBAL: PRIORITY_VISUAL_GLOBAL,\n            CHART: PRIORITY_VISUAL_CHART,\n            COMPONENT: PRIORITY_VISUAL_COMPONENT,\n            BRUSH: PRIORITY_VISUAL_BRUSH\n        }\n    };\n\n    module.exports = echarts;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.echarts@3.5.4@echarts/lib/echarts.js\n// module id = 159\n// module chunks = 0","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var pathTool = require('zrender/lib/tool/path');\n    var round = Math.round;\n    var Path = require('zrender/lib/graphic/Path');\n    var colorTool = require('zrender/lib/tool/color');\n    var matrix = require('zrender/lib/core/matrix');\n    var vector = require('zrender/lib/core/vector');\n    var Transformable = require('zrender/lib/mixin/Transformable');\n    var BoundingRect = require('zrender/lib/core/BoundingRect');\n\n    var graphic = {};\n\n    graphic.Group = require('zrender/lib/container/Group');\n\n    graphic.Image = require('zrender/lib/graphic/Image');\n\n    graphic.Text = require('zrender/lib/graphic/Text');\n\n    graphic.Circle = require('zrender/lib/graphic/shape/Circle');\n\n    graphic.Sector = require('zrender/lib/graphic/shape/Sector');\n\n    graphic.Ring = require('zrender/lib/graphic/shape/Ring');\n\n    graphic.Polygon = require('zrender/lib/graphic/shape/Polygon');\n\n    graphic.Polyline = require('zrender/lib/graphic/shape/Polyline');\n\n    graphic.Rect = require('zrender/lib/graphic/shape/Rect');\n\n    graphic.Line = require('zrender/lib/graphic/shape/Line');\n\n    graphic.BezierCurve = require('zrender/lib/graphic/shape/BezierCurve');\n\n    graphic.Arc = require('zrender/lib/graphic/shape/Arc');\n\n    graphic.CompoundPath = require('zrender/lib/graphic/CompoundPath');\n\n    graphic.LinearGradient = require('zrender/lib/graphic/LinearGradient');\n\n    graphic.RadialGradient = require('zrender/lib/graphic/RadialGradient');\n\n    graphic.BoundingRect = BoundingRect;\n\n    /**\n     * Extend shape with parameters\n     */\n    graphic.extendShape = function (opts) {\n        return Path.extend(opts);\n    };\n\n    /**\n     * Extend path\n     */\n    graphic.extendPath = function (pathData, opts) {\n        return pathTool.extendFromString(pathData, opts);\n    };\n\n    /**\n     * Create a path element from path data string\n     * @param {string} pathData\n     * @param {Object} opts\n     * @param {module:zrender/core/BoundingRect} rect\n     * @param {string} [layout=cover] 'center' or 'cover'\n     */\n    graphic.makePath = function (pathData, opts, rect, layout) {\n        var path = pathTool.createFromString(pathData, opts);\n        var boundingRect = path.getBoundingRect();\n        if (rect) {\n            var aspect = boundingRect.width / boundingRect.height;\n\n            if (layout === 'center') {\n                // Set rect to center, keep width / height ratio.\n                var width = rect.height * aspect;\n                var height;\n                if (width <= rect.width) {\n                    height = rect.height;\n                }\n                else {\n                    width = rect.width;\n                    height = width / aspect;\n                }\n                var cx = rect.x + rect.width / 2;\n                var cy = rect.y + rect.height / 2;\n\n                rect.x = cx - width / 2;\n                rect.y = cy - height / 2;\n                rect.width = width;\n                rect.height = height;\n            }\n\n            graphic.resizePath(path, rect);\n        }\n        return path;\n    };\n\n    graphic.mergePath = pathTool.mergePath,\n\n    /**\n     * Resize a path to fit the rect\n     * @param {module:zrender/graphic/Path} path\n     * @param {Object} rect\n     */\n    graphic.resizePath = function (path, rect) {\n        if (!path.applyTransform) {\n            return;\n        }\n\n        var pathRect = path.getBoundingRect();\n\n        var m = pathRect.calculateTransform(rect);\n\n        path.applyTransform(m);\n    };\n\n    /**\n     * Sub pixel optimize line for canvas\n     *\n     * @param {Object} param\n     * @param {Object} [param.shape]\n     * @param {number} [param.shape.x1]\n     * @param {number} [param.shape.y1]\n     * @param {number} [param.shape.x2]\n     * @param {number} [param.shape.y2]\n     * @param {Object} [param.style]\n     * @param {number} [param.style.lineWidth]\n     * @return {Object} Modified param\n     */\n    graphic.subPixelOptimizeLine = function (param) {\n        var subPixelOptimize = graphic.subPixelOptimize;\n        var shape = param.shape;\n        var lineWidth = param.style.lineWidth;\n\n        if (round(shape.x1 * 2) === round(shape.x2 * 2)) {\n            shape.x1 = shape.x2 = subPixelOptimize(shape.x1, lineWidth, true);\n        }\n        if (round(shape.y1 * 2) === round(shape.y2 * 2)) {\n            shape.y1 = shape.y2 = subPixelOptimize(shape.y1, lineWidth, true);\n        }\n        return param;\n    };\n\n    /**\n     * Sub pixel optimize rect for canvas\n     *\n     * @param {Object} param\n     * @param {Object} [param.shape]\n     * @param {number} [param.shape.x]\n     * @param {number} [param.shape.y]\n     * @param {number} [param.shape.width]\n     * @param {number} [param.shape.height]\n     * @param {Object} [param.style]\n     * @param {number} [param.style.lineWidth]\n     * @return {Object} Modified param\n     */\n    graphic.subPixelOptimizeRect = function (param) {\n        var subPixelOptimize = graphic.subPixelOptimize;\n        var shape = param.shape;\n        var lineWidth = param.style.lineWidth;\n        var originX = shape.x;\n        var originY = shape.y;\n        var originWidth = shape.width;\n        var originHeight = shape.height;\n        shape.x = subPixelOptimize(shape.x, lineWidth, true);\n        shape.y = subPixelOptimize(shape.y, lineWidth, true);\n        shape.width = Math.max(\n            subPixelOptimize(originX + originWidth, lineWidth, false) - shape.x,\n            originWidth === 0 ? 0 : 1\n        );\n        shape.height = Math.max(\n            subPixelOptimize(originY + originHeight, lineWidth, false) - shape.y,\n            originHeight === 0 ? 0 : 1\n        );\n        return param;\n    };\n\n    /**\n     * Sub pixel optimize for canvas\n     *\n     * @param {number} position Coordinate, such as x, y\n     * @param {number} lineWidth Should be nonnegative integer.\n     * @param {boolean=} positiveOrNegative Default false (negative).\n     * @return {number} Optimized position.\n     */\n    graphic.subPixelOptimize = function (position, lineWidth, positiveOrNegative) {\n        // Assure that (position + lineWidth / 2) is near integer edge,\n        // otherwise line will be fuzzy in canvas.\n        var doubledPosition = round(position * 2);\n        return (doubledPosition + round(lineWidth)) % 2 === 0\n            ? doubledPosition / 2\n            : (doubledPosition + (positiveOrNegative ? 1 : -1)) / 2;\n    };\n\n    function hasFillOrStroke(fillOrStroke) {\n        return fillOrStroke != null && fillOrStroke != 'none';\n    }\n\n    function liftColor(color) {\n        return typeof color === 'string' ? colorTool.lift(color, -0.1) : color;\n    }\n\n    /**\n     * @private\n     */\n    function cacheElementStl(el) {\n        if (el.__hoverStlDirty) {\n            var stroke = el.style.stroke;\n            var fill = el.style.fill;\n\n            // Create hoverStyle on mouseover\n            var hoverStyle = el.__hoverStl;\n            hoverStyle.fill = hoverStyle.fill\n                || (hasFillOrStroke(fill) ? liftColor(fill) : null);\n            hoverStyle.stroke = hoverStyle.stroke\n                || (hasFillOrStroke(stroke) ? liftColor(stroke) : null);\n\n            var normalStyle = {};\n            for (var name in hoverStyle) {\n                if (hoverStyle.hasOwnProperty(name)) {\n                    normalStyle[name] = el.style[name];\n                }\n            }\n\n            el.__normalStl = normalStyle;\n\n            el.__hoverStlDirty = false;\n        }\n    }\n\n    /**\n     * @private\n     */\n    function doSingleEnterHover(el) {\n        if (el.__isHover) {\n            return;\n        }\n\n        cacheElementStl(el);\n\n        if (el.useHoverLayer) {\n            el.__zr && el.__zr.addHover(el, el.__hoverStl);\n        }\n        else {\n            el.setStyle(el.__hoverStl);\n            el.z2 += 1;\n        }\n\n        el.__isHover = true;\n    }\n\n    /**\n     * @inner\n     */\n    function doSingleLeaveHover(el) {\n        if (!el.__isHover) {\n            return;\n        }\n\n        var normalStl = el.__normalStl;\n        if (el.useHoverLayer) {\n            el.__zr && el.__zr.removeHover(el);\n        }\n        else {\n            normalStl && el.setStyle(normalStl);\n            el.z2 -= 1;\n        }\n\n        el.__isHover = false;\n    }\n\n    /**\n     * @inner\n     */\n    function doEnterHover(el) {\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    doSingleEnterHover(child);\n                }\n            })\n            : doSingleEnterHover(el);\n    }\n\n    function doLeaveHover(el) {\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    doSingleLeaveHover(child);\n                }\n            })\n            : doSingleLeaveHover(el);\n    }\n\n    /**\n     * @inner\n     */\n    function setElementHoverStl(el, hoverStl) {\n        // If element has sepcified hoverStyle, then use it instead of given hoverStyle\n        // Often used when item group has a label element and it's hoverStyle is different\n        el.__hoverStl = el.hoverStyle || hoverStl || {};\n        el.__hoverStlDirty = true;\n\n        if (el.__isHover) {\n            cacheElementStl(el);\n        }\n    }\n\n    /**\n     * @inner\n     */\n    function onElementMouseOver(e) {\n        if (this.__hoverSilentOnTouch && e.zrByTouch) {\n            return;\n        }\n\n        // Only if element is not in emphasis status\n        !this.__isEmphasis && doEnterHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function onElementMouseOut(e) {\n        if (this.__hoverSilentOnTouch && e.zrByTouch) {\n            return;\n        }\n\n        // Only if element is not in emphasis status\n        !this.__isEmphasis && doLeaveHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function enterEmphasis() {\n        this.__isEmphasis = true;\n        doEnterHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function leaveEmphasis() {\n        this.__isEmphasis = false;\n        doLeaveHover(this);\n    }\n\n    /**\n     * Set hover style of element.\n     * This method can be called repeatly without side-effects.\n     * @param {module:zrender/Element} el\n     * @param {Object} [hoverStyle]\n     * @param {Object} [opt]\n     * @param {boolean} [opt.hoverSilentOnTouch=false]\n     *        In touch device, mouseover event will be trigger on touchstart event\n     *        (see module:zrender/dom/HandlerProxy). By this mechanism, we can\n     *        conviniently use hoverStyle when tap on touch screen without additional\n     *        code for compatibility.\n     *        But if the chart/component has select feature, which usually also use\n     *        hoverStyle, there might be conflict between 'select-highlight' and\n     *        'hover-highlight' especially when roam is enabled (see geo for example).\n     *        In this case, hoverSilentOnTouch should be used to disable hover-highlight\n     *        on touch device.\n     */\n    graphic.setHoverStyle = function (el, hoverStyle, opt) {\n        el.__hoverSilentOnTouch = opt && opt.hoverSilentOnTouch;\n\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    setElementHoverStl(child, hoverStyle);\n                }\n            })\n            : setElementHoverStl(el, hoverStyle);\n\n        // Duplicated function will be auto-ignored, see Eventful.js.\n        el.on('mouseover', onElementMouseOver)\n          .on('mouseout', onElementMouseOut);\n\n        // Emphasis, normal can be triggered manually\n        el.on('emphasis', enterEmphasis)\n          .on('normal', leaveEmphasis);\n    };\n\n    /**\n     * Set text option in the style\n     * @param {Object} textStyle\n     * @param {module:echarts/model/Model} labelModel\n     * @param {string} color\n     */\n    graphic.setText = function (textStyle, labelModel, color) {\n        var labelPosition = labelModel.getShallow('position') || 'inside';\n        var labelOffset = labelModel.getShallow('offset');\n        var labelColor = labelPosition.indexOf('inside') >= 0 ? 'white' : color;\n        var textStyleModel = labelModel.getModel('textStyle');\n        zrUtil.extend(textStyle, {\n            textDistance: labelModel.getShallow('distance') || 5,\n            textFont: textStyleModel.getFont(),\n            textPosition: labelPosition,\n            textOffset: labelOffset,\n            textFill: textStyleModel.getTextColor() || labelColor\n        });\n    };\n\n    function animateOrSetProps(isUpdate, el, props, animatableModel, dataIndex, cb) {\n        if (typeof dataIndex === 'function') {\n            cb = dataIndex;\n            dataIndex = null;\n        }\n        // Do not check 'animation' property directly here. Consider this case:\n        // animation model is an `itemModel`, whose does not have `isAnimationEnabled`\n        // but its parent model (`seriesModel`) does.\n        var animationEnabled = animatableModel && animatableModel.isAnimationEnabled();\n\n        if (animationEnabled) {\n            var postfix = isUpdate ? 'Update' : '';\n            var duration = animatableModel.getShallow('animationDuration' + postfix);\n            var animationEasing = animatableModel.getShallow('animationEasing' + postfix);\n            var animationDelay = animatableModel.getShallow('animationDelay' + postfix);\n            if (typeof animationDelay === 'function') {\n                animationDelay = animationDelay(\n                    dataIndex,\n                    animatableModel.getAnimationDelayParams\n                        ? animatableModel.getAnimationDelayParams(el, dataIndex)\n                        : null\n                );\n            }\n            if (typeof duration === 'function') {\n                duration = duration(dataIndex);\n            }\n\n            duration > 0\n                ? el.animateTo(props, duration, animationDelay || 0, animationEasing, cb)\n                : (el.stopAnimation(), el.attr(props), cb && cb());\n        }\n        else {\n            el.stopAnimation();\n            el.attr(props);\n            cb && cb();\n        }\n    }\n\n    /**\n     * Update graphic element properties with or without animation according to the configuration in series\n     * @param {module:zrender/Element} el\n     * @param {Object} props\n     * @param {module:echarts/model/Model} [animatableModel]\n     * @param {number} [dataIndex]\n     * @param {Function} [cb]\n     * @example\n     *     graphic.updateProps(el, {\n     *         position: [100, 100]\n     *     }, seriesModel, dataIndex, function () { console.log('Animation done!'); });\n     *     // Or\n     *     graphic.updateProps(el, {\n     *         position: [100, 100]\n     *     }, seriesModel, function () { console.log('Animation done!'); });\n     */\n    graphic.updateProps = function (el, props, animatableModel, dataIndex, cb) {\n        animateOrSetProps(true, el, props, animatableModel, dataIndex, cb);\n    };\n\n    /**\n     * Init graphic element properties with or without animation according to the configuration in series\n     * @param {module:zrender/Element} el\n     * @param {Object} props\n     * @param {module:echarts/model/Model} [animatableModel]\n     * @param {number} [dataIndex]\n     * @param {Function} cb\n     */\n    graphic.initProps = function (el, props, animatableModel, dataIndex, cb) {\n        animateOrSetProps(false, el, props, animatableModel, dataIndex, cb);\n    };\n\n    /**\n     * Get transform matrix of target (param target),\n     * in coordinate of its ancestor (param ancestor)\n     *\n     * @param {module:zrender/mixin/Transformable} target\n     * @param {module:zrender/mixin/Transformable} [ancestor]\n     */\n    graphic.getTransform = function (target, ancestor) {\n        var mat = matrix.identity([]);\n\n        while (target && target !== ancestor) {\n            matrix.mul(mat, target.getLocalTransform(), mat);\n            target = target.parent;\n        }\n\n        return mat;\n    };\n\n    /**\n     * Apply transform to an vertex.\n     * @param {Array.<number>} target [x, y]\n     * @param {Array.<number>|TypedArray.<number>|Object} transform Can be:\n     *      + Transform matrix: like [1, 0, 0, 1, 0, 0]\n     *      + {position, rotation, scale}, the same as `zrender/Transformable`.\n     * @param {boolean=} invert Whether use invert matrix.\n     * @return {Array.<number>} [x, y]\n     */\n    graphic.applyTransform = function (target, transform, invert) {\n        if (transform && !zrUtil.isArrayLike(transform)) {\n            transform = Transformable.getLocalTransform(transform);\n        }\n\n        if (invert) {\n            transform = matrix.invert([], transform);\n        }\n        return vector.applyTransform([], target, transform);\n    };\n\n    /**\n     * @param {string} direction 'left' 'right' 'top' 'bottom'\n     * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n     * @param {boolean=} invert Whether use invert matrix.\n     * @return {string} Transformed direction. 'left' 'right' 'top' 'bottom'\n     */\n    graphic.transformDirection = function (direction, transform, invert) {\n\n        // Pick a base, ensure that transform result will not be (0, 0).\n        var hBase = (transform[4] === 0 || transform[5] === 0 || transform[0] === 0)\n            ? 1 : Math.abs(2 * transform[4] / transform[0]);\n        var vBase = (transform[4] === 0 || transform[5] === 0 || transform[2] === 0)\n            ? 1 : Math.abs(2 * transform[4] / transform[2]);\n\n        var vertex = [\n            direction === 'left' ? -hBase : direction === 'right' ? hBase : 0,\n            direction === 'top' ? -vBase : direction === 'bottom' ? vBase : 0\n        ];\n\n        vertex = graphic.applyTransform(vertex, transform, invert);\n\n        return Math.abs(vertex[0]) > Math.abs(vertex[1])\n            ? (vertex[0] > 0 ? 'right' : 'left')\n            : (vertex[1] > 0 ? 'bottom' : 'top');\n    };\n\n    /**\n     * Apply group transition animation from g1 to g2.\n     * If no animatableModel, no animation.\n     */\n    graphic.groupTransition = function (g1, g2, animatableModel, cb) {\n        if (!g1 || !g2) {\n            return;\n        }\n\n        function getElMap(g) {\n            var elMap = {};\n            g.traverse(function (el) {\n                if (!el.isGroup && el.anid) {\n                    elMap[el.anid] = el;\n                }\n            });\n            return elMap;\n        }\n        function getAnimatableProps(el) {\n            var obj = {\n                position: vector.clone(el.position),\n                rotation: el.rotation\n            };\n            if (el.shape) {\n                obj.shape = zrUtil.extend({}, el.shape);\n            }\n            return obj;\n        }\n        var elMap1 = getElMap(g1);\n\n        g2.traverse(function (el) {\n            if (!el.isGroup && el.anid) {\n                var oldEl = elMap1[el.anid];\n                if (oldEl) {\n                    var newProp = getAnimatableProps(el);\n                    el.attr(getAnimatableProps(oldEl));\n                    graphic.updateProps(el, newProp, animatableModel, el.dataIndex);\n                }\n                // else {\n                //     if (el.previousProps) {\n                //         graphic.updateProps\n                //     }\n                // }\n            }\n        });\n    };\n\n    module.exports = graphic;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.echarts@3.5.4@echarts/lib/util/graphic.js\n// module id = 160\n// module chunks = 0","/**\n * 数值处理模块\n * @module echarts/util/number\n */\n\n\n\n    var number = {};\n\n    var RADIAN_EPSILON = 1e-4;\n\n    function _trim(str) {\n        return str.replace(/^\\s+/, '').replace(/\\s+$/, '');\n    }\n\n    /**\n     * Linear mapping a value from domain to range\n     * @memberOf module:echarts/util/number\n     * @param  {(number|Array.<number>)} val\n     * @param  {Array.<number>} domain Domain extent domain[0] can be bigger than domain[1]\n     * @param  {Array.<number>} range  Range extent range[0] can be bigger than range[1]\n     * @param  {boolean} clamp\n     * @return {(number|Array.<number>}\n     */\n    number.linearMap = function (val, domain, range, clamp) {\n        var subDomain = domain[1] - domain[0];\n        var subRange = range[1] - range[0];\n\n        if (subDomain === 0) {\n            return subRange === 0\n                ? range[0]\n                : (range[0] + range[1]) / 2;\n        }\n\n        // Avoid accuracy problem in edge, such as\n        // 146.39 - 62.83 === 83.55999999999999.\n        // See echarts/test/ut/spec/util/number.js#linearMap#accuracyError\n        // It is a little verbose for efficiency considering this method\n        // is a hotspot.\n        if (clamp) {\n            if (subDomain > 0) {\n                if (val <= domain[0]) {\n                    return range[0];\n                }\n                else if (val >= domain[1]) {\n                    return range[1];\n                }\n            }\n            else {\n                if (val >= domain[0]) {\n                    return range[0];\n                }\n                else if (val <= domain[1]) {\n                    return range[1];\n                }\n            }\n        }\n        else {\n            if (val === domain[0]) {\n                return range[0];\n            }\n            if (val === domain[1]) {\n                return range[1];\n            }\n        }\n\n        return (val - domain[0]) / subDomain * subRange + range[0];\n    };\n\n    /**\n     * Convert a percent string to absolute number.\n     * Returns NaN if percent is not a valid string or number\n     * @memberOf module:echarts/util/number\n     * @param {string|number} percent\n     * @param {number} all\n     * @return {number}\n     */\n    number.parsePercent = function(percent, all) {\n        switch (percent) {\n            case 'center':\n            case 'middle':\n                percent = '50%';\n                break;\n            case 'left':\n            case 'top':\n                percent = '0%';\n                break;\n            case 'right':\n            case 'bottom':\n                percent = '100%';\n                break;\n        }\n        if (typeof percent === 'string') {\n            if (_trim(percent).match(/%$/)) {\n                return parseFloat(percent) / 100 * all;\n            }\n\n            return parseFloat(percent);\n        }\n\n        return percent == null ? NaN : +percent;\n    };\n\n    /**\n     * (1) Fix rounding error of float numbers.\n     * (2) Support return string to avoid scientific notation like '3.5e-7'.\n     *\n     * @param {number} x\n     * @param {number} [precision]\n     * @param {boolean} [returnStr]\n     * @return {number|string}\n     */\n    number.round = function (x, precision, returnStr) {\n        if (precision == null) {\n            precision = 10;\n        }\n        // Avoid range error\n        precision = Math.min(Math.max(0, precision), 20);\n        x = (+x).toFixed(precision);\n        return returnStr ? x : +x;\n    };\n\n    number.asc = function (arr) {\n        arr.sort(function (a, b) {\n            return a - b;\n        });\n        return arr;\n    };\n\n    /**\n     * Get precision\n     * @param {number} val\n     */\n    number.getPrecision = function (val) {\n        val = +val;\n        if (isNaN(val)) {\n            return 0;\n        }\n        // It is much faster than methods converting number to string as follows\n        //      var tmp = val.toString();\n        //      return tmp.length - 1 - tmp.indexOf('.');\n        // especially when precision is low\n        var e = 1;\n        var count = 0;\n        while (Math.round(val * e) / e !== val) {\n            e *= 10;\n            count++;\n        }\n        return count;\n    };\n\n    /**\n     * @param {string|number} val\n     * @return {number}\n     */\n    number.getPrecisionSafe = function (val) {\n        var str = val.toString();\n\n        // Consider scientific notation: '3.4e-12' '3.4e+12'\n        var eIndex = str.indexOf('e');\n        if (eIndex > 0) {\n            var precision = +str.slice(eIndex + 1);\n            return precision < 0 ? -precision : 0;\n        }\n        else {\n            var dotIndex = str.indexOf('.');\n            return dotIndex < 0 ? 0 : str.length - 1 - dotIndex;\n        }\n    };\n\n    /**\n     * Minimal dicernible data precisioin according to a single pixel.\n     *\n     * @param {Array.<number>} dataExtent\n     * @param {Array.<number>} pixelExtent\n     * @return {number} precision\n     */\n    number.getPixelPrecision = function (dataExtent, pixelExtent) {\n        var log = Math.log;\n        var LN10 = Math.LN10;\n        var dataQuantity = Math.floor(log(dataExtent[1] - dataExtent[0]) / LN10);\n        var sizeQuantity = Math.round(log(Math.abs(pixelExtent[1] - pixelExtent[0])) / LN10);\n        // toFixed() digits argument must be between 0 and 20.\n        var precision = Math.min(Math.max(-dataQuantity + sizeQuantity, 0), 20);\n        return !isFinite(precision) ? 20 : precision;\n    };\n\n    // Number.MAX_SAFE_INTEGER, ie do not support.\n    number.MAX_SAFE_INTEGER = 9007199254740991;\n\n    /**\n     * To 0 - 2 * PI, considering negative radian.\n     * @param {number} radian\n     * @return {number}\n     */\n    number.remRadian = function (radian) {\n        var pi2 = Math.PI * 2;\n        return (radian % pi2 + pi2) % pi2;\n    };\n\n    /**\n     * @param {type} radian\n     * @return {boolean}\n     */\n    number.isRadianAroundZero = function (val) {\n        return val > -RADIAN_EPSILON && val < RADIAN_EPSILON;\n    };\n\n    var TIME_REG = /^(?:(\\d{4})(?:[-\\/](\\d{1,2})(?:[-\\/](\\d{1,2})(?:[T ](\\d{1,2})(?::(\\d\\d)(?::(\\d\\d)(?:[.,](\\d+))?)?)?(Z|[\\+\\-]\\d\\d:?\\d\\d)?)?)?)?)?$/; // jshint ignore:line\n\n    /**\n     * @return {number} in minutes\n     */\n    number.getTimezoneOffset = function () {\n        return (new Date()).getTimezoneOffset();\n    };\n\n    /**\n     * @param {string|Date|number} value These values can be accepted:\n     *   + An instance of Date, represent a time in its own time zone.\n     *   + Or string in a subset of ISO 8601, only including:\n     *     + only year, month, date: '2012-03', '2012-03-01', '2012-03-01 05', '2012-03-01 05:06',\n     *     + separated with T or space: '2012-03-01T12:22:33.123', '2012-03-01 12:22:33.123',\n     *     + time zone: '2012-03-01T12:22:33Z', '2012-03-01T12:22:33+8000', '2012-03-01T12:22:33-05:00',\n     *     all of which will be treated as local time if time zone is not specified\n     *     (see <https://momentjs.com/>).\n     *   + Or other string format, including (all of which will be treated as loacal time):\n     *     '2012', '2012-3-1', '2012/3/1', '2012/03/01',\n     *     '2009/6/12 2:00', '2009/6/12 2:05:08', '2009/6/12 2:05:08.123'\n     *   + a timestamp, which represent a time in UTC.\n     * @return {Date} date\n     */\n    number.parseDate = function (value) {\n        if (value instanceof Date) {\n            return value;\n        }\n        else if (typeof value === 'string') {\n            // Different browsers parse date in different way, so we parse it manually.\n            // Some other issues:\n            // new Date('1970-01-01') is UTC,\n            // new Date('1970/01/01') and new Date('1970-1-01') is local.\n            // See issue #3623\n            var match = TIME_REG.exec(value);\n\n            if (!match) {\n                // return Invalid Date.\n                return new Date(NaN);\n            }\n\n            var timezoneOffset = number.getTimezoneOffset();\n            var timeOffset = !match[8]\n                ? 0\n                : match[8].toUpperCase() === 'Z'\n                ? timezoneOffset\n                : +match[8].slice(0, 3) * 60 + timezoneOffset;\n\n            // match[n] can only be string or undefined.\n            // But take care of '12' + 1 => '121'.\n            return new Date(\n                +match[1],\n                +(match[2] || 1) - 1,\n                +match[3] || 1,\n                +match[4] || 0,\n                +(match[5] || 0) - timeOffset,\n                +match[6] || 0,\n                +match[7] || 0\n            );\n        }\n        else if (value == null) {\n            return new Date(NaN);\n        }\n\n        return new Date(Math.round(value));\n    };\n\n    /**\n     * Quantity of a number. e.g. 0.1, 1, 10, 100\n     *\n     * @param  {number} val\n     * @return {number}\n     */\n    number.quantity = function (val) {\n        return Math.pow(10, quantityExponent(val));\n    };\n\n    function quantityExponent(val) {\n        return Math.floor(Math.log(val) / Math.LN10);\n    }\n\n    /**\n     * find a “nice” number approximately equal to x. Round the number if round = true,\n     * take ceiling if round = false. The primary observation is that the “nicest”\n     * numbers in decimal are 1, 2, and 5, and all power-of-ten multiples of these numbers.\n     *\n     * See \"Nice Numbers for Graph Labels\" of Graphic Gems.\n     *\n     * @param  {number} val Non-negative value.\n     * @param  {boolean} round\n     * @return {number}\n     */\n    number.nice = function (val, round) {\n        var exponent = quantityExponent(val);\n        var exp10 = Math.pow(10, exponent);\n        var f = val / exp10; // 1 <= f < 10\n        var nf;\n        if (round) {\n            if (f < 1.5) { nf = 1; }\n            else if (f < 2.5) { nf = 2; }\n            else if (f < 4) { nf = 3; }\n            else if (f < 7) { nf = 5; }\n            else { nf = 10; }\n        }\n        else {\n            if (f < 1) { nf = 1; }\n            else if (f < 2) { nf = 2; }\n            else if (f < 3) { nf = 3; }\n            else if (f < 5) { nf = 5; }\n            else { nf = 10; }\n        }\n        val = nf * exp10;\n\n        // Fix 3 * 0.1 === 0.30000000000000004 issue (see IEEE 754).\n        // 20 is the uppper bound of toFixed.\n        return exponent >= -20 ? +val.toFixed(exponent < 0 ? -exponent : 0) : val;\n    };\n\n    /**\n     * Order intervals asc, and split them when overlap.\n     * expect(numberUtil.reformIntervals([\n     *     {interval: [18, 62], close: [1, 1]},\n     *     {interval: [-Infinity, -70], close: [0, 0]},\n     *     {interval: [-70, -26], close: [1, 1]},\n     *     {interval: [-26, 18], close: [1, 1]},\n     *     {interval: [62, 150], close: [1, 1]},\n     *     {interval: [106, 150], close: [1, 1]},\n     *     {interval: [150, Infinity], close: [0, 0]}\n     * ])).toEqual([\n     *     {interval: [-Infinity, -70], close: [0, 0]},\n     *     {interval: [-70, -26], close: [1, 1]},\n     *     {interval: [-26, 18], close: [0, 1]},\n     *     {interval: [18, 62], close: [0, 1]},\n     *     {interval: [62, 150], close: [0, 1]},\n     *     {interval: [150, Infinity], close: [0, 0]}\n     * ]);\n     * @param {Array.<Object>} list, where `close` mean open or close\n     *        of the interval, and Infinity can be used.\n     * @return {Array.<Object>} The origin list, which has been reformed.\n     */\n    number.reformIntervals = function (list) {\n        list.sort(function (a, b) {\n            return littleThan(a, b, 0) ? -1 : 1;\n        });\n\n        var curr = -Infinity;\n        var currClose = 1;\n        for (var i = 0; i < list.length;) {\n            var interval = list[i].interval;\n            var close = list[i].close;\n\n            for (var lg = 0; lg < 2; lg++) {\n                if (interval[lg] <= curr) {\n                    interval[lg] = curr;\n                    close[lg] = !lg ? 1 - currClose : 1;\n                }\n                curr = interval[lg];\n                currClose = close[lg];\n            }\n\n            if (interval[0] === interval[1] && close[0] * close[1] !== 1) {\n                list.splice(i, 1);\n            }\n            else {\n                i++;\n            }\n        }\n\n        return list;\n\n        function littleThan(a, b, lg) {\n            return a.interval[lg] < b.interval[lg]\n                || (\n                    a.interval[lg] === b.interval[lg]\n                    && (\n                        (a.close[lg] - b.close[lg] === (!lg ? 1 : -1))\n                        || (!lg && littleThan(a, b, 1))\n                    )\n                );\n        }\n    };\n\n    /**\n     * parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n     * ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n     * subtraction forces infinities to NaN\n     *\n     * @param {*} v\n     * @return {boolean}\n     */\n    number.isNumeric = function (v) {\n        return v - parseFloat(v) >= 0;\n    };\n\n    module.exports = number;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.echarts@3.5.4@echarts/lib/util/number.js\n// module id = 161\n// module chunks = 0","\n\n    var formatUtil = require('./format');\n    var nubmerUtil = require('./number');\n    var Model = require('../model/Model');\n    var zrUtil = require('zrender/lib/core/util');\n    var each = zrUtil.each;\n    var isObject = zrUtil.isObject;\n\n    var modelUtil = {};\n\n    /**\n     * If value is not array, then translate it to array.\n     * @param  {*} value\n     * @return {Array} [value] or value\n     */\n    modelUtil.normalizeToArray = function (value) {\n        return value instanceof Array\n            ? value\n            : value == null\n            ? []\n            : [value];\n    };\n\n    /**\n     * Sync default option between normal and emphasis like `position` and `show`\n     * In case some one will write code like\n     *     label: {\n     *         normal: {\n     *             show: false,\n     *             position: 'outside',\n     *             textStyle: {\n     *                 fontSize: 18\n     *             }\n     *         },\n     *         emphasis: {\n     *             show: true\n     *         }\n     *     }\n     * @param {Object} opt\n     * @param {Array.<string>} subOpts\n     */\n     modelUtil.defaultEmphasis = function (opt, subOpts) {\n        if (opt) {\n            var emphasisOpt = opt.emphasis = opt.emphasis || {};\n            var normalOpt = opt.normal = opt.normal || {};\n\n            // Default emphasis option from normal\n            each(subOpts, function (subOptName) {\n                var val = zrUtil.retrieve(emphasisOpt[subOptName], normalOpt[subOptName]);\n                if (val != null) {\n                    emphasisOpt[subOptName] = val;\n                }\n            });\n        }\n    };\n\n    modelUtil.LABEL_OPTIONS = ['position', 'offset', 'show', 'textStyle', 'distance', 'formatter'];\n\n    /**\n     * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n     * This helper method retieves value from data.\n     * @param {string|number|Date|Array|Object} dataItem\n     * @return {number|string|Date|Array.<number|string|Date>}\n     */\n    modelUtil.getDataItemValue = function (dataItem) {\n        // Performance sensitive.\n        return dataItem && (dataItem.value == null ? dataItem : dataItem.value);\n    };\n\n    /**\n     * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n     * This helper method determine if dataItem has extra option besides value\n     * @param {string|number|Date|Array|Object} dataItem\n     */\n    modelUtil.isDataItemOption = function (dataItem) {\n        return isObject(dataItem)\n            && !(dataItem instanceof Array);\n            // // markLine data can be array\n            // && !(dataItem[0] && isObject(dataItem[0]) && !(dataItem[0] instanceof Array));\n    };\n\n    /**\n     * This helper method convert value in data.\n     * @param {string|number|Date} value\n     * @param {Object|string} [dimInfo] If string (like 'x'), dimType defaults 'number'.\n     */\n    modelUtil.converDataValue = function (value, dimInfo) {\n        // Performance sensitive.\n        var dimType = dimInfo && dimInfo.type;\n        if (dimType === 'ordinal') {\n            return value;\n        }\n\n        if (dimType === 'time'\n            // spead up when using timestamp\n            && typeof value !== 'number'\n            && value != null\n            && value !== '-'\n        ) {\n            value = +nubmerUtil.parseDate(value);\n        }\n\n        // dimType defaults 'number'.\n        // If dimType is not ordinal and value is null or undefined or NaN or '-',\n        // parse to NaN.\n        return (value == null || value === '')\n            ? NaN : +value; // If string (like '-'), using '+' parse to NaN\n    };\n\n    /**\n     * Create a model proxy to be used in tooltip for edge data, markLine data, markPoint data.\n     * @param {module:echarts/data/List} data\n     * @param {Object} opt\n     * @param {string} [opt.seriesIndex]\n     * @param {Object} [opt.name]\n     * @param {Object} [opt.mainType]\n     * @param {Object} [opt.subType]\n     */\n    modelUtil.createDataFormatModel = function (data, opt) {\n        var model = new Model();\n        zrUtil.mixin(model, modelUtil.dataFormatMixin);\n        model.seriesIndex = opt.seriesIndex;\n        model.name = opt.name || '';\n        model.mainType = opt.mainType;\n        model.subType = opt.subType;\n\n        model.getData = function () {\n            return data;\n        };\n        return model;\n    };\n\n    // PENDING A little ugly\n    modelUtil.dataFormatMixin = {\n        /**\n         * Get params for formatter\n         * @param {number} dataIndex\n         * @param {string} [dataType]\n         * @return {Object}\n         */\n        getDataParams: function (dataIndex, dataType) {\n            var data = this.getData(dataType);\n            var rawValue = this.getRawValue(dataIndex, dataType);\n            var rawDataIndex = data.getRawIndex(dataIndex);\n            var name = data.getName(dataIndex, true);\n            var itemOpt = data.getRawDataItem(dataIndex);\n\n            return {\n                componentType: this.mainType,\n                componentSubType: this.subType,\n                seriesType: this.mainType === 'series' ? this.subType : null,\n                seriesIndex: this.seriesIndex,\n                seriesId: this.id,\n                seriesName: this.name,\n                name: name,\n                dataIndex: rawDataIndex,\n                data: itemOpt,\n                dataType: dataType,\n                value: rawValue,\n                color: data.getItemVisual(dataIndex, 'color'),\n\n                // Param name list for mapping `a`, `b`, `c`, `d`, `e`\n                $vars: ['seriesName', 'name', 'value']\n            };\n        },\n\n        /**\n         * Format label\n         * @param {number} dataIndex\n         * @param {string} [status='normal'] 'normal' or 'emphasis'\n         * @param {string} [dataType]\n         * @param {number} [dimIndex]\n         * @return {string}\n         */\n        getFormattedLabel: function (dataIndex, status, dataType, dimIndex) {\n            status = status || 'normal';\n            var data = this.getData(dataType);\n            var itemModel = data.getItemModel(dataIndex);\n\n            var params = this.getDataParams(dataIndex, dataType);\n            if (dimIndex != null && (params.value instanceof Array)) {\n                params.value = params.value[dimIndex];\n            }\n\n            var formatter = itemModel.get(['label', status, 'formatter']);\n\n            if (typeof formatter === 'function') {\n                params.status = status;\n                return formatter(params);\n            }\n            else if (typeof formatter === 'string') {\n                return formatUtil.formatTpl(formatter, params);\n            }\n        },\n\n        /**\n         * Get raw value in option\n         * @param {number} idx\n         * @param {string} [dataType]\n         * @return {Object}\n         */\n        getRawValue: function (idx, dataType) {\n            var data = this.getData(dataType);\n            var dataItem = data.getRawDataItem(idx);\n            if (dataItem != null) {\n                return (isObject(dataItem) && !(dataItem instanceof Array))\n                    ? dataItem.value : dataItem;\n            }\n        },\n\n        /**\n         * Should be implemented.\n         * @param {number} dataIndex\n         * @param {boolean} [multipleSeries=false]\n         * @param {number} [dataType]\n         * @return {string} tooltip string\n         */\n        formatTooltip: zrUtil.noop\n    };\n\n    /**\n     * Mapping to exists for merge.\n     *\n     * @public\n     * @param {Array.<Object>|Array.<module:echarts/model/Component>} exists\n     * @param {Object|Array.<Object>} newCptOptions\n     * @return {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n     *                          index of which is the same as exists.\n     */\n    modelUtil.mappingToExists = function (exists, newCptOptions) {\n        // Mapping by the order by original option (but not order of\n        // new option) in merge mode. Because we should ensure\n        // some specified index (like xAxisIndex) is consistent with\n        // original option, which is easy to understand, espatially in\n        // media query. And in most case, merge option is used to\n        // update partial option but not be expected to change order.\n        newCptOptions = (newCptOptions || []).slice();\n\n        var result = zrUtil.map(exists || [], function (obj, index) {\n            return {exist: obj};\n        });\n\n        // Mapping by id or name if specified.\n        each(newCptOptions, function (cptOption, index) {\n            if (!isObject(cptOption)) {\n                return;\n            }\n\n            // id has highest priority.\n            for (var i = 0; i < result.length; i++) {\n                if (!result[i].option // Consider name: two map to one.\n                    && cptOption.id != null\n                    && result[i].exist.id === cptOption.id + ''\n                ) {\n                    result[i].option = cptOption;\n                    newCptOptions[index] = null;\n                    return;\n                }\n            }\n\n            for (var i = 0; i < result.length; i++) {\n                var exist = result[i].exist;\n                if (!result[i].option // Consider name: two map to one.\n                    // Can not match when both ids exist but different.\n                    && (exist.id == null || cptOption.id == null)\n                    && cptOption.name != null\n                    && !modelUtil.isIdInner(cptOption)\n                    && !modelUtil.isIdInner(exist)\n                    && exist.name === cptOption.name + ''\n                ) {\n                    result[i].option = cptOption;\n                    newCptOptions[index] = null;\n                    return;\n                }\n            }\n        });\n\n        // Otherwise mapping by index.\n        each(newCptOptions, function (cptOption, index) {\n            if (!isObject(cptOption)) {\n                return;\n            }\n\n            var i = 0;\n            for (; i < result.length; i++) {\n                var exist = result[i].exist;\n                if (!result[i].option\n                    // Existing model that already has id should be able to\n                    // mapped to (because after mapping performed model may\n                    // be assigned with a id, whish should not affect next\n                    // mapping), except those has inner id.\n                    && !modelUtil.isIdInner(exist)\n                    // Caution:\n                    // Do not overwrite id. But name can be overwritten,\n                    // because axis use name as 'show label text'.\n                    // 'exist' always has id and name and we dont\n                    // need to check it.\n                    && cptOption.id == null\n                ) {\n                    result[i].option = cptOption;\n                    break;\n                }\n            }\n\n            if (i >= result.length) {\n                result.push({option: cptOption});\n            }\n        });\n\n        return result;\n    };\n\n    /**\n     * Make id and name for mapping result (result of mappingToExists)\n     * into `keyInfo` field.\n     *\n     * @public\n     * @param {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n     *                          which order is the same as exists.\n     * @return {Array.<Object>} The input.\n     */\n    modelUtil.makeIdAndName = function (mapResult) {\n        // We use this id to hash component models and view instances\n        // in echarts. id can be specified by user, or auto generated.\n\n        // The id generation rule ensures new view instance are able\n        // to mapped to old instance when setOption are called in\n        // no-merge mode. So we generate model id by name and plus\n        // type in view id.\n\n        // name can be duplicated among components, which is convenient\n        // to specify multi components (like series) by one name.\n\n        // Ensure that each id is distinct.\n        var idMap = {};\n\n        each(mapResult, function (item, index) {\n            var existCpt = item.exist;\n            existCpt && (idMap[existCpt.id] = item);\n        });\n\n        each(mapResult, function (item, index) {\n            var opt = item.option;\n\n            zrUtil.assert(\n                !opt || opt.id == null || !idMap[opt.id] || idMap[opt.id] === item,\n                'id duplicates: ' + (opt && opt.id)\n            );\n\n            opt && opt.id != null && (idMap[opt.id] = item);\n            !item.keyInfo && (item.keyInfo = {});\n        });\n\n        // Make name and id.\n        each(mapResult, function (item, index) {\n            var existCpt = item.exist;\n            var opt = item.option;\n            var keyInfo = item.keyInfo;\n\n            if (!isObject(opt)) {\n                return;\n            }\n\n            // name can be overwitten. Consider case: axis.name = '20km'.\n            // But id generated by name will not be changed, which affect\n            // only in that case: setOption with 'not merge mode' and view\n            // instance will be recreated, which can be accepted.\n            keyInfo.name = opt.name != null\n                ? opt.name + ''\n                : existCpt\n                ? existCpt.name\n                : '\\0-'; // name may be displayed on screen, so use '-'.\n\n            if (existCpt) {\n                keyInfo.id = existCpt.id;\n            }\n            else if (opt.id != null) {\n                keyInfo.id = opt.id + '';\n            }\n            else {\n                // Consider this situatoin:\n                //  optionA: [{name: 'a'}, {name: 'a'}, {..}]\n                //  optionB [{..}, {name: 'a'}, {name: 'a'}]\n                // Series with the same name between optionA and optionB\n                // should be mapped.\n                var idNum = 0;\n                do {\n                    keyInfo.id = '\\0' + keyInfo.name + '\\0' + idNum++;\n                }\n                while (idMap[keyInfo.id]);\n            }\n\n            idMap[keyInfo.id] = item;\n        });\n    };\n\n    /**\n     * @public\n     * @param {Object} cptOption\n     * @return {boolean}\n     */\n    modelUtil.isIdInner = function (cptOption) {\n        return isObject(cptOption)\n            && cptOption.id\n            && (cptOption.id + '').indexOf('\\0_ec_\\0') === 0;\n    };\n\n    /**\n     * A helper for removing duplicate items between batchA and batchB,\n     * and in themselves, and categorize by series.\n     *\n     * @param {Array.<Object>} batchA Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n     * @param {Array.<Object>} batchB Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n     * @return {Array.<Array.<Object>, Array.<Object>>} result: [resultBatchA, resultBatchB]\n     */\n    modelUtil.compressBatches = function (batchA, batchB) {\n        var mapA = {};\n        var mapB = {};\n\n        makeMap(batchA || [], mapA);\n        makeMap(batchB || [], mapB, mapA);\n\n        return [mapToArray(mapA), mapToArray(mapB)];\n\n        function makeMap(sourceBatch, map, otherMap) {\n            for (var i = 0, len = sourceBatch.length; i < len; i++) {\n                var seriesId = sourceBatch[i].seriesId;\n                var dataIndices = modelUtil.normalizeToArray(sourceBatch[i].dataIndex);\n                var otherDataIndices = otherMap && otherMap[seriesId];\n\n                for (var j = 0, lenj = dataIndices.length; j < lenj; j++) {\n                    var dataIndex = dataIndices[j];\n\n                    if (otherDataIndices && otherDataIndices[dataIndex]) {\n                        otherDataIndices[dataIndex] = null;\n                    }\n                    else {\n                        (map[seriesId] || (map[seriesId] = {}))[dataIndex] = 1;\n                    }\n                }\n            }\n        }\n\n        function mapToArray(map, isData) {\n            var result = [];\n            for (var i in map) {\n                if (map.hasOwnProperty(i) && map[i] != null) {\n                    if (isData) {\n                        result.push(+i);\n                    }\n                    else {\n                        var dataIndices = mapToArray(map[i], true);\n                        dataIndices.length && result.push({seriesId: i, dataIndex: dataIndices});\n                    }\n                }\n            }\n            return result;\n        }\n    };\n\n    /**\n     * @param {module:echarts/data/List} data\n     * @param {Object} payload Contains dataIndex (means rawIndex) / dataIndexInside / name\n     *                         each of which can be Array or primary type.\n     * @return {number|Array.<number>} dataIndex If not found, return undefined/null.\n     */\n    modelUtil.queryDataIndex = function (data, payload) {\n        if (payload.dataIndexInside != null) {\n            return payload.dataIndexInside;\n        }\n        else if (payload.dataIndex != null) {\n            return zrUtil.isArray(payload.dataIndex)\n                ? zrUtil.map(payload.dataIndex, function (value) {\n                    return data.indexOfRawIndex(value);\n                })\n                : data.indexOfRawIndex(payload.dataIndex);\n        }\n        else if (payload.name != null) {\n            return zrUtil.isArray(payload.name)\n                ? zrUtil.map(payload.name, function (value) {\n                    return data.indexOfName(value);\n                })\n                : data.indexOfName(payload.name);\n        }\n    };\n\n    /**\n     * Enable property storage to any host object.\n     * Notice: Serialization is not supported.\n     *\n     * For example:\n     * var get = modelUitl.makeGetter();\n     *\n     * function some(hostObj) {\n     *      get(hostObj)._someProperty = 1212;\n     *      ...\n     * }\n     *\n     * @return {Function}\n     */\n    modelUtil.makeGetter = (function () {\n        var index = 0;\n        return function () {\n            var key = '\\0__ec_prop_getter_' + index++;\n            return function (hostObj) {\n                return hostObj[key] || (hostObj[key] = {});\n            };\n        };\n    })();\n\n    /**\n     * @param {module:echarts/model/Global} ecModel\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex, seriesId, seriesName,\n     *            geoIndex, geoId, geoName,\n     *            bmapIndex, bmapId, bmapName,\n     *            xAxisIndex, xAxisId, xAxisName,\n     *            yAxisIndex, yAxisId, yAxisName,\n     *            gridIndex, gridId, gridName,\n     *            ... (can be extended)\n     *        }\n     *        Each properties can be number|string|Array.<number>|Array.<string>\n     *        For example, a finder could be\n     *        {\n     *            seriesIndex: 3,\n     *            geoId: ['aa', 'cc'],\n     *            gridName: ['xx', 'rr']\n     *        }\n     *        xxxIndex can be set as 'all' (means all xxx) or 'none' (means not specify)\n     *        If nothing or null/undefined specified, return nothing.\n     * @param {Object} [opt]\n     * @param {string} [opt.defaultMainType]\n     * @param {Array.<string>} [opt.includeMainTypes]\n     * @return {Object} result like:\n     *        {\n     *            seriesModels: [seriesModel1, seriesModel2],\n     *            seriesModel: seriesModel1, // The first model\n     *            geoModels: [geoModel1, geoModel2],\n     *            geoModel: geoModel1, // The first model\n     *            ...\n     *        }\n     */\n    modelUtil.parseFinder = function (ecModel, finder, opt) {\n        if (zrUtil.isString(finder)) {\n            var obj = {};\n            obj[finder + 'Index'] = 0;\n            finder = obj;\n        }\n\n        var defaultMainType = opt && opt.defaultMainType;\n        if (defaultMainType\n            && !has(finder, defaultMainType + 'Index')\n            && !has(finder, defaultMainType + 'Id')\n            && !has(finder, defaultMainType + 'Name')\n        ) {\n            finder[defaultMainType + 'Index'] = 0;\n        }\n\n        var result = {};\n\n        each(finder, function (value, key) {\n            var value = finder[key];\n\n            // Exclude 'dataIndex' and other illgal keys.\n            if (key === 'dataIndex' || key === 'dataIndexInside') {\n                result[key] = value;\n                return;\n            }\n\n            var parsedKey = key.match(/^(\\w+)(Index|Id|Name)$/) || [];\n            var mainType = parsedKey[1];\n            var queryType = (parsedKey[2] || '').toLowerCase();\n\n            if (!mainType\n                || !queryType\n                || value == null\n                || (queryType === 'index' && value === 'none')\n                || (opt && opt.includeMainTypes && zrUtil.indexOf(opt.includeMainTypes, mainType) < 0)\n            ) {\n                return;\n            }\n\n            var queryParam = {mainType: mainType};\n            if (queryType !== 'index' || value !== 'all') {\n                queryParam[queryType] = value;\n            }\n\n            var models = ecModel.queryComponents(queryParam);\n            result[mainType + 'Models'] = models;\n            result[mainType + 'Model'] = models[0];\n        });\n\n        return result;\n    };\n\n    function has(obj, prop) {\n        return obj && obj.hasOwnProperty(prop);\n    }\n\n    module.exports = modelUtil;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.echarts@3.5.4@echarts/lib/util/model.js\n// module id = 162\n// module chunks = 0","\n    var ArrayCtor = typeof Float32Array === 'undefined'\n        ? Array\n        : Float32Array;\n\n    /**\n     * @typedef {Float32Array|Array.<number>} Vector2\n     */\n    /**\n     * 二维向量类\n     * @exports zrender/tool/vector\n     */\n    var vector = {\n        /**\n         * 创建一个向量\n         * @param {number} [x=0]\n         * @param {number} [y=0]\n         * @return {Vector2}\n         */\n        create: function (x, y) {\n            var out = new ArrayCtor(2);\n            if (x == null) {\n                x = 0;\n            }\n            if (y == null) {\n                y = 0;\n            }\n            out[0] = x;\n            out[1] = y;\n            return out;\n        },\n\n        /**\n         * 复制向量数据\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @return {Vector2}\n         */\n        copy: function (out, v) {\n            out[0] = v[0];\n            out[1] = v[1];\n            return out;\n        },\n\n        /**\n         * 克隆一个向量\n         * @param {Vector2} v\n         * @return {Vector2}\n         */\n        clone: function (v) {\n            var out = new ArrayCtor(2);\n            out[0] = v[0];\n            out[1] = v[1];\n            return out;\n        },\n\n        /**\n         * 设置向量的两个项\n         * @param {Vector2} out\n         * @param {number} a\n         * @param {number} b\n         * @return {Vector2} 结果\n         */\n        set: function (out, a, b) {\n            out[0] = a;\n            out[1] = b;\n            return out;\n        },\n\n        /**\n         * 向量相加\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        add: function (out, v1, v2) {\n            out[0] = v1[0] + v2[0];\n            out[1] = v1[1] + v2[1];\n            return out;\n        },\n\n        /**\n         * 向量缩放后相加\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @param {number} a\n         */\n        scaleAndAdd: function (out, v1, v2, a) {\n            out[0] = v1[0] + v2[0] * a;\n            out[1] = v1[1] + v2[1] * a;\n            return out;\n        },\n\n        /**\n         * 向量相减\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        sub: function (out, v1, v2) {\n            out[0] = v1[0] - v2[0];\n            out[1] = v1[1] - v2[1];\n            return out;\n        },\n\n        /**\n         * 向量长度\n         * @param {Vector2} v\n         * @return {number}\n         */\n        len: function (v) {\n            return Math.sqrt(this.lenSquare(v));\n        },\n\n        /**\n         * 向量长度平方\n         * @param {Vector2} v\n         * @return {number}\n         */\n        lenSquare: function (v) {\n            return v[0] * v[0] + v[1] * v[1];\n        },\n\n        /**\n         * 向量乘法\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        mul: function (out, v1, v2) {\n            out[0] = v1[0] * v2[0];\n            out[1] = v1[1] * v2[1];\n            return out;\n        },\n\n        /**\n         * 向量除法\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        div: function (out, v1, v2) {\n            out[0] = v1[0] / v2[0];\n            out[1] = v1[1] / v2[1];\n            return out;\n        },\n\n        /**\n         * 向量点乘\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        dot: function (v1, v2) {\n            return v1[0] * v2[0] + v1[1] * v2[1];\n        },\n\n        /**\n         * 向量缩放\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @param {number} s\n         */\n        scale: function (out, v, s) {\n            out[0] = v[0] * s;\n            out[1] = v[1] * s;\n            return out;\n        },\n\n        /**\n         * 向量归一化\n         * @param {Vector2} out\n         * @param {Vector2} v\n         */\n        normalize: function (out, v) {\n            var d = vector.len(v);\n            if (d === 0) {\n                out[0] = 0;\n                out[1] = 0;\n            }\n            else {\n                out[0] = v[0] / d;\n                out[1] = v[1] / d;\n            }\n            return out;\n        },\n\n        /**\n         * 计算向量间距离\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        distance: function (v1, v2) {\n            return Math.sqrt(\n                (v1[0] - v2[0]) * (v1[0] - v2[0])\n                + (v1[1] - v2[1]) * (v1[1] - v2[1])\n            );\n        },\n\n        /**\n         * 向量距离平方\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        distanceSquare: function (v1, v2) {\n            return (v1[0] - v2[0]) * (v1[0] - v2[0])\n                + (v1[1] - v2[1]) * (v1[1] - v2[1]);\n        },\n\n        /**\n         * 求负向量\n         * @param {Vector2} out\n         * @param {Vector2} v\n         */\n        negate: function (out, v) {\n            out[0] = -v[0];\n            out[1] = -v[1];\n            return out;\n        },\n\n        /**\n         * 插值两个点\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @param {number} t\n         */\n        lerp: function (out, v1, v2, t) {\n            out[0] = v1[0] + t * (v2[0] - v1[0]);\n            out[1] = v1[1] + t * (v2[1] - v1[1]);\n            return out;\n        },\n\n        /**\n         * 矩阵左乘向量\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @param {Vector2} m\n         */\n        applyTransform: function (out, v, m) {\n            var x = v[0];\n            var y = v[1];\n            out[0] = m[0] * x + m[2] * y + m[4];\n            out[1] = m[1] * x + m[3] * y + m[5];\n            return out;\n        },\n        /**\n         * 求两个向量最小值\n         * @param  {Vector2} out\n         * @param  {Vector2} v1\n         * @param  {Vector2} v2\n         */\n        min: function (out, v1, v2) {\n            out[0] = Math.min(v1[0], v2[0]);\n            out[1] = Math.min(v1[1], v2[1]);\n            return out;\n        },\n        /**\n         * 求两个向量最大值\n         * @param  {Vector2} out\n         * @param  {Vector2} v1\n         * @param  {Vector2} v2\n         */\n        max: function (out, v1, v2) {\n            out[0] = Math.max(v1[0], v2[0]);\n            out[1] = Math.max(v1[1], v2[1]);\n            return out;\n        }\n    };\n\n    vector.length = vector.len;\n    vector.lengthSquare = vector.lenSquare;\n    vector.dist = vector.distance;\n    vector.distSquare = vector.distanceSquare;\n\n    module.exports = vector;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.zrender@3.4.4@zrender/lib/core/vector.js\n// module id = 163\n// module chunks = 0","/**\n * Path element\n * @module zrender/graphic/Path\n */\n\n\n\n    var Displayable = require('./Displayable');\n    var zrUtil = require('../core/util');\n    var PathProxy = require('../core/PathProxy');\n    var pathContain = require('../contain/path');\n\n    var Pattern = require('./Pattern');\n    var getCanvasPattern = Pattern.prototype.getCanvasPattern;\n\n    var abs = Math.abs;\n\n    var pathProxyForDraw = new PathProxy(true);\n    /**\n     * @alias module:zrender/graphic/Path\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    function Path(opts) {\n        Displayable.call(this, opts);\n\n        /**\n         * @type {module:zrender/core/PathProxy}\n         * @readOnly\n         */\n        this.path = null;\n    }\n\n    Path.prototype = {\n\n        constructor: Path,\n\n        type: 'path',\n\n        __dirtyPath: true,\n\n        strokeContainThreshold: 5,\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n            var path = this.path || pathProxyForDraw;\n            var hasStroke = style.hasStroke();\n            var hasFill = style.hasFill();\n            var fill = style.fill;\n            var stroke = style.stroke;\n            var hasFillGradient = hasFill && !!(fill.colorStops);\n            var hasStrokeGradient = hasStroke && !!(stroke.colorStops);\n            var hasFillPattern = hasFill && !!(fill.image);\n            var hasStrokePattern = hasStroke && !!(stroke.image);\n\n            style.bind(ctx, this, prevEl);\n            this.setTransform(ctx);\n\n            if (this.__dirty) {\n                var rect;\n                // Update gradient because bounding rect may changed\n                if (hasFillGradient) {\n                    rect = rect || this.getBoundingRect();\n                    this._fillGradient = style.getGradient(ctx, fill, rect);\n                }\n                if (hasStrokeGradient) {\n                    rect = rect || this.getBoundingRect();\n                    this._strokeGradient = style.getGradient(ctx, stroke, rect);\n                }\n            }\n            // Use the gradient or pattern\n            if (hasFillGradient) {\n                // PENDING If may have affect the state\n                ctx.fillStyle = this._fillGradient;\n            }\n            else if (hasFillPattern) {\n                ctx.fillStyle = getCanvasPattern.call(fill, ctx);\n            }\n            if (hasStrokeGradient) {\n                ctx.strokeStyle = this._strokeGradient;\n            }\n            else if (hasStrokePattern) {\n                ctx.strokeStyle = getCanvasPattern.call(stroke, ctx);\n            }\n\n            var lineDash = style.lineDash;\n            var lineDashOffset = style.lineDashOffset;\n\n            var ctxLineDash = !!ctx.setLineDash;\n\n            // Update path sx, sy\n            var scale = this.getGlobalScale();\n            path.setScale(scale[0], scale[1]);\n\n            // Proxy context\n            // Rebuild path in following 2 cases\n            // 1. Path is dirty\n            // 2. Path needs javascript implemented lineDash stroking.\n            //    In this case, lineDash information will not be saved in PathProxy\n            if (this.__dirtyPath\n                || (lineDash && !ctxLineDash && hasStroke)\n            ) {\n                path.beginPath(ctx);\n\n                // Setting line dash before build path\n                if (lineDash && !ctxLineDash) {\n                    path.setLineDash(lineDash);\n                    path.setLineDashOffset(lineDashOffset);\n                }\n\n                this.buildPath(path, this.shape, false);\n\n                // Clear path dirty flag\n                if (this.path) {\n                    this.__dirtyPath = false;\n                }\n            }\n            else {\n                // Replay path building\n                ctx.beginPath();\n                this.path.rebuildPath(ctx);\n            }\n\n            hasFill && path.fill(ctx);\n\n            if (lineDash && ctxLineDash) {\n                ctx.setLineDash(lineDash);\n                ctx.lineDashOffset = lineDashOffset;\n            }\n\n            hasStroke && path.stroke(ctx);\n\n            if (lineDash && ctxLineDash) {\n                // PENDING\n                // Remove lineDash\n                ctx.setLineDash([]);\n            }\n\n\n            this.restoreTransform(ctx);\n\n            // Draw rect text\n            if (style.text != null) {\n                // var rect = this.getBoundingRect();\n                this.drawRectText(ctx, this.getBoundingRect());\n            }\n        },\n\n        // When bundling path, some shape may decide if use moveTo to begin a new subpath or closePath\n        // Like in circle\n        buildPath: function (ctx, shapeCfg, inBundle) {},\n\n        createPathProxy: function () {\n            this.path = new PathProxy();\n        },\n\n        getBoundingRect: function () {\n            var rect = this._rect;\n            var style = this.style;\n            var needsUpdateRect = !rect;\n            if (needsUpdateRect) {\n                var path = this.path;\n                if (!path) {\n                    // Create path on demand.\n                    path = this.path = new PathProxy();\n                }\n                if (this.__dirtyPath) {\n                    path.beginPath();\n                    this.buildPath(path, this.shape, false);\n                }\n                rect = path.getBoundingRect();\n            }\n            this._rect = rect;\n\n            if (style.hasStroke()) {\n                // Needs update rect with stroke lineWidth when\n                // 1. Element changes scale or lineWidth\n                // 2. Shape is changed\n                var rectWithStroke = this._rectWithStroke || (this._rectWithStroke = rect.clone());\n                if (this.__dirty || needsUpdateRect) {\n                    rectWithStroke.copy(rect);\n                    // FIXME Must after updateTransform\n                    var w = style.lineWidth;\n                    // PENDING, Min line width is needed when line is horizontal or vertical\n                    var lineScale = style.strokeNoScale ? this.getLineScale() : 1;\n\n                    // Only add extra hover lineWidth when there are no fill\n                    if (!style.hasFill()) {\n                        w = Math.max(w, this.strokeContainThreshold || 4);\n                    }\n                    // Consider line width\n                    // Line scale can't be 0;\n                    if (lineScale > 1e-10) {\n                        rectWithStroke.width += w / lineScale;\n                        rectWithStroke.height += w / lineScale;\n                        rectWithStroke.x -= w / lineScale / 2;\n                        rectWithStroke.y -= w / lineScale / 2;\n                    }\n                }\n\n                // Return rect with stroke\n                return rectWithStroke;\n            }\n\n            return rect;\n        },\n\n        contain: function (x, y) {\n            var localPos = this.transformCoordToLocal(x, y);\n            var rect = this.getBoundingRect();\n            var style = this.style;\n            x = localPos[0];\n            y = localPos[1];\n\n            if (rect.contain(x, y)) {\n                var pathData = this.path.data;\n                if (style.hasStroke()) {\n                    var lineWidth = style.lineWidth;\n                    var lineScale = style.strokeNoScale ? this.getLineScale() : 1;\n                    // Line scale can't be 0;\n                    if (lineScale > 1e-10) {\n                        // Only add extra hover lineWidth when there are no fill\n                        if (!style.hasFill()) {\n                            lineWidth = Math.max(lineWidth, this.strokeContainThreshold);\n                        }\n                        if (pathContain.containStroke(\n                            pathData, lineWidth / lineScale, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                }\n                if (style.hasFill()) {\n                    return pathContain.contain(pathData, x, y);\n                }\n            }\n            return false;\n        },\n\n        /**\n         * @param  {boolean} dirtyPath\n         */\n        dirty: function (dirtyPath) {\n            if (dirtyPath == null) {\n                dirtyPath = true;\n            }\n            // Only mark dirty, not mark clean\n            if (dirtyPath) {\n                this.__dirtyPath = dirtyPath;\n                this._rect = null;\n            }\n\n            this.__dirty = true;\n\n            this.__zr && this.__zr.refresh();\n\n            // Used as a clipping path\n            if (this.__clipTarget) {\n                this.__clipTarget.dirty();\n            }\n        },\n\n        /**\n         * Alias for animate('shape')\n         * @param {boolean} loop\n         */\n        animateShape: function (loop) {\n            return this.animate('shape', loop);\n        },\n\n        // Overwrite attrKV\n        attrKV: function (key, value) {\n            // FIXME\n            if (key === 'shape') {\n                this.setShape(value);\n                this.__dirtyPath = true;\n                this._rect = null;\n            }\n            else {\n                Displayable.prototype.attrKV.call(this, key, value);\n            }\n        },\n\n        /**\n         * @param {Object|string} key\n         * @param {*} value\n         */\n        setShape: function (key, value) {\n            var shape = this.shape;\n            // Path from string may not have shape\n            if (shape) {\n                if (zrUtil.isObject(key)) {\n                    for (var name in key) {\n                        if (key.hasOwnProperty(name)) {\n                            shape[name] = key[name];\n                        }\n                    }\n                }\n                else {\n                    shape[key] = value;\n                }\n                this.dirty(true);\n            }\n            return this;\n        },\n\n        getLineScale: function () {\n            var m = this.transform;\n            // Get the line scale.\n            // Determinant of `m` means how much the area is enlarged by the\n            // transformation. So its square root can be used as a scale factor\n            // for width.\n            return m && abs(m[0] - 1) > 1e-10 && abs(m[3] - 1) > 1e-10\n                ? Math.sqrt(abs(m[0] * m[3] - m[2] * m[1]))\n                : 1;\n        }\n    };\n\n    /**\n     * 扩展一个 Path element, 比如星形，圆等。\n     * Extend a path element\n     * @param {Object} props\n     * @param {string} props.type Path type\n     * @param {Function} props.init Initialize\n     * @param {Function} props.buildPath Overwrite buildPath method\n     * @param {Object} [props.style] Extended default style config\n     * @param {Object} [props.shape] Extended default shape config\n     */\n    Path.extend = function (defaults) {\n        var Sub = function (opts) {\n            Path.call(this, opts);\n\n            if (defaults.style) {\n                // Extend default style\n                this.style.extendFrom(defaults.style, false);\n            }\n\n            // Extend default shape\n            var defaultShape = defaults.shape;\n            if (defaultShape) {\n                this.shape = this.shape || {};\n                var thisShape = this.shape;\n                for (var name in defaultShape) {\n                    if (\n                        ! thisShape.hasOwnProperty(name)\n                        && defaultShape.hasOwnProperty(name)\n                    ) {\n                        thisShape[name] = defaultShape[name];\n                    }\n                }\n            }\n\n            defaults.init && defaults.init.call(this, opts);\n        };\n\n        zrUtil.inherits(Sub, Path);\n\n        // FIXME 不能 extend position, rotation 等引用对象\n        for (var name in defaults) {\n            // Extending prototype values and methods\n            if (name !== 'style' && name !== 'shape') {\n                Sub.prototype[name] = defaults[name];\n            }\n        }\n\n        return Sub;\n    };\n\n    zrUtil.inherits(Path, Displayable);\n\n    module.exports = Path;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.zrender@3.4.4@zrender/lib/graphic/Path.js\n// module id = 164\n// module chunks = 0","/**\n * @module echarts/model/Model\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var clazzUtil = require('../util/clazz');\n    var env = require('zrender/lib/core/env');\n\n    /**\n     * @alias module:echarts/model/Model\n     * @constructor\n     * @param {Object} option\n     * @param {module:echarts/model/Model} [parentModel]\n     * @param {module:echarts/model/Global} [ecModel]\n     */\n    function Model(option, parentModel, ecModel) {\n        /**\n         * @type {module:echarts/model/Model}\n         * @readOnly\n         */\n        this.parentModel = parentModel;\n\n        /**\n         * @type {module:echarts/model/Global}\n         * @readOnly\n         */\n        this.ecModel = ecModel;\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        this.option = option;\n\n        // Simple optimization\n        // if (this.init) {\n        //     if (arguments.length <= 4) {\n        //         this.init(option, parentModel, ecModel, extraOpt);\n        //     }\n        //     else {\n        //         this.init.apply(this, arguments);\n        //     }\n        // }\n    }\n\n    Model.prototype = {\n\n        constructor: Model,\n\n        /**\n         * Model 的初始化函数\n         * @param {Object} option\n         */\n        init: null,\n\n        /**\n         * 从新的 Option merge\n         */\n        mergeOption: function (option) {\n            zrUtil.merge(this.option, option, true);\n        },\n\n        /**\n         * @param {string|Array.<string>} path\n         * @param {boolean} [ignoreParent=false]\n         * @return {*}\n         */\n        get: function (path, ignoreParent) {\n            if (path == null) {\n                return this.option;\n            }\n\n            return doGet(\n                this.option,\n                this.parsePath(path),\n                !ignoreParent && getParent(this, path)\n            );\n        },\n\n        /**\n         * @param {string} key\n         * @param {boolean} [ignoreParent=false]\n         * @return {*}\n         */\n        getShallow: function (key, ignoreParent) {\n            var option = this.option;\n\n            var val = option == null ? option : option[key];\n            var parentModel = !ignoreParent && getParent(this, key);\n            if (val == null && parentModel) {\n                val = parentModel.getShallow(key);\n            }\n            return val;\n        },\n\n        /**\n         * @param {string|Array.<string>} path\n         * @param {module:echarts/model/Model} [parentModel]\n         * @return {module:echarts/model/Model}\n         */\n        getModel: function (path, parentModel) {\n            var obj = path == null\n                ? this.option\n                : doGet(this.option, path = this.parsePath(path));\n\n            var thisParentModel;\n            parentModel = parentModel || (\n                (thisParentModel = getParent(this, path))\n                    && thisParentModel.getModel(path)\n            );\n\n            return new Model(obj, parentModel, this.ecModel);\n        },\n\n        /**\n         * If model has option\n         */\n        isEmpty: function () {\n            return this.option == null;\n        },\n\n        restoreData: function () {},\n\n        // Pending\n        clone: function () {\n            var Ctor = this.constructor;\n            return new Ctor(zrUtil.clone(this.option));\n        },\n\n        setReadOnly: function (properties) {\n            clazzUtil.setReadOnly(this, properties);\n        },\n\n        // If path is null/undefined, return null/undefined.\n        parsePath: function(path) {\n            if (typeof path === 'string') {\n                path = path.split('.');\n            }\n            return path;\n        },\n\n        /**\n         * @param {Function} getParentMethod\n         *        param {Array.<string>|string} path\n         *        return {module:echarts/model/Model}\n         */\n        customizeGetParent: function (getParentMethod) {\n            clazzUtil.set(this, 'getParent', getParentMethod);\n        },\n\n        isAnimationEnabled: function () {\n            if (!env.node) {\n                if (this.option.animation != null) {\n                    return !!this.option.animation;\n                }\n                else if (this.parentModel) {\n                    return this.parentModel.isAnimationEnabled();\n                }\n            }\n        }\n    };\n\n    function doGet(obj, pathArr, parentModel) {\n        for (var i = 0; i < pathArr.length; i++) {\n            // Ignore empty\n            if (!pathArr[i]) {\n                continue;\n            }\n            // obj could be number/string/... (like 0)\n            obj = (obj && typeof obj === 'object') ? obj[pathArr[i]] : null;\n            if (obj == null) {\n                break;\n            }\n        }\n        if (obj == null && parentModel) {\n            obj = parentModel.get(pathArr);\n        }\n        return obj;\n    }\n\n    function getParent(model, path) {\n        var getParentMethod = clazzUtil.get(model, 'getParent');\n        return getParentMethod ? getParentMethod.call(model, path) : model.parentModel;\n    }\n\n    // Enable Model.extend.\n    clazzUtil.enableClassExtend(Model);\n\n    var mixin = zrUtil.mixin;\n    mixin(Model, require('./mixin/lineStyle'));\n    mixin(Model, require('./mixin/areaStyle'));\n    mixin(Model, require('./mixin/textStyle'));\n    mixin(Model, require('./mixin/itemStyle'));\n\n    module.exports = Model;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.echarts@3.5.4@echarts/lib/model/Model.js\n// module id = 165\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var numberUtil = require('./number');\n    var textContain = require('zrender/lib/contain/text');\n\n    var formatUtil = {};\n\n    /**\n     * 每三位默认加,格式化\n     * @param {string|number} x\n     * @return {string}\n     */\n    formatUtil.addCommas = function (x) {\n        if (isNaN(x)) {\n            return '-';\n        }\n        x = (x + '').split('.');\n        return x[0].replace(/(\\d{1,3})(?=(?:\\d{3})+(?!\\d))/g,'$1,')\n               + (x.length > 1 ? ('.' + x[1]) : '');\n    };\n\n    /**\n     * @param {string} str\n     * @param {boolean} [upperCaseFirst=false]\n     * @return {string} str\n     */\n    formatUtil.toCamelCase = function (str, upperCaseFirst) {\n        str = (str || '').toLowerCase().replace(/-(.)/g, function(match, group1) {\n            return group1.toUpperCase();\n        });\n\n        if (upperCaseFirst && str) {\n            str = str.charAt(0).toUpperCase() + str.slice(1);\n        }\n\n        return str;\n    };\n\n    /**\n     * Normalize css liked array configuration\n     * e.g.\n     *  3 => [3, 3, 3, 3]\n     *  [4, 2] => [4, 2, 4, 2]\n     *  [4, 3, 2] => [4, 3, 2, 3]\n     * @param {number|Array.<number>} val\n     */\n    formatUtil.normalizeCssArray = function (val) {\n        var len = val.length;\n        if (typeof (val) === 'number') {\n            return [val, val, val, val];\n        }\n        else if (len === 2) {\n            // vertical | horizontal\n            return [val[0], val[1], val[0], val[1]];\n        }\n        else if (len === 3) {\n            // top | horizontal | bottom\n            return [val[0], val[1], val[2], val[1]];\n        }\n        return val;\n    };\n\n    var encodeHTML = formatUtil.encodeHTML = function (source) {\n        return String(source)\n            .replace(/&/g, '&amp;')\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;')\n            .replace(/\"/g, '&quot;')\n            .replace(/'/g, '&#39;');\n    };\n\n    var TPL_VAR_ALIAS = ['a', 'b', 'c', 'd', 'e', 'f', 'g'];\n\n    var wrapVar = function (varName, seriesIdx) {\n        return '{' + varName + (seriesIdx == null ? '' : seriesIdx) + '}';\n    };\n\n    /**\n     * Template formatter\n     * @param {string} tpl\n     * @param {Array.<Object>|Object} paramsList\n     * @param {boolean} [encode=false]\n     * @return {string}\n     */\n    formatUtil.formatTpl = function (tpl, paramsList, encode) {\n        if (!zrUtil.isArray(paramsList)) {\n            paramsList = [paramsList];\n        }\n        var seriesLen = paramsList.length;\n        if (!seriesLen) {\n            return '';\n        }\n\n        var $vars = paramsList[0].$vars || [];\n        for (var i = 0; i < $vars.length; i++) {\n            var alias = TPL_VAR_ALIAS[i];\n            var val = wrapVar(alias, 0);\n            tpl = tpl.replace(wrapVar(alias), encode ? encodeHTML(val) : val);\n        }\n        for (var seriesIdx = 0; seriesIdx < seriesLen; seriesIdx++) {\n            for (var k = 0; k < $vars.length; k++) {\n                var val = paramsList[seriesIdx][$vars[k]];\n                tpl = tpl.replace(\n                    wrapVar(TPL_VAR_ALIAS[k], seriesIdx),\n                    encode ? encodeHTML(val) : val\n                );\n            }\n        }\n\n        return tpl;\n    };\n\n    /**\n     * simple Template formatter\n     *\n     * @param {string} tpl\n     * @param {Object} param\n     * @param {boolean} [encode=false]\n     * @return {string}\n     */\n    formatUtil.formatTplSimple = function (tpl, param, encode) {\n        zrUtil.each(param, function (value, key) {\n            tpl = tpl.replace(\n                '{' + key + '}',\n                encode ? encodeHTML(value) : value\n            );\n        });\n        return tpl;\n    };\n\n\n    /**\n     * @param {string} str\n     * @return {string}\n     * @inner\n     */\n    var s2d = function (str) {\n        return str < 10 ? ('0' + str) : str;\n    };\n\n    /**\n     * ISO Date format\n     * @param {string} tpl\n     * @param {number} value\n     * @param {boolean} [isUTC=false] Default in local time.\n     *           see `module:echarts/scale/Time`\n     *           and `module:echarts/util/number#parseDate`.\n     * @inner\n     */\n    formatUtil.formatTime = function (tpl, value, isUTC) {\n        if (tpl === 'week'\n            || tpl === 'month'\n            || tpl === 'quarter'\n            || tpl === 'half-year'\n            || tpl === 'year'\n        ) {\n            tpl = 'MM-dd\\nyyyy';\n        }\n\n        var date = numberUtil.parseDate(value);\n        var utc = isUTC ? 'UTC' : '';\n        var y = date['get' + utc + 'FullYear']();\n        var M = date['get' + utc + 'Month']() + 1;\n        var d = date['get' + utc + 'Date']();\n        var h = date['get' + utc + 'Hours']();\n        var m = date['get' + utc + 'Minutes']();\n        var s = date['get' + utc + 'Seconds']();\n\n        tpl = tpl.replace('MM', s2d(M))\n            .toLowerCase()\n            .replace('yyyy', y)\n            .replace('yy', y % 100)\n            .replace('dd', s2d(d))\n            .replace('d', d)\n            .replace('hh', s2d(h))\n            .replace('h', h)\n            .replace('mm', s2d(m))\n            .replace('m', m)\n            .replace('ss', s2d(s))\n            .replace('s', s);\n\n        return tpl;\n    };\n\n    /**\n     * Capital first\n     * @param {string} str\n     * @return {string}\n     */\n    formatUtil.capitalFirst = function (str) {\n        return str ? str.charAt(0).toUpperCase() + str.substr(1) : str;\n    };\n\n    formatUtil.truncateText = textContain.truncateText;\n\n    module.exports = formatUtil;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.echarts@3.5.4@echarts/lib/util/format.js\n// module id = 166\n// module chunks = 0","/**\n * echarts设备环境识别\n *\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\n * @author firede[firede@firede.us]\n * @desc thanks zepto.\n */\n\n    var env = {};\n    if (typeof navigator === 'undefined') {\n        // In node\n        env = {\n            browser: {},\n            os: {},\n            node: true,\n            // Assume canvas is supported\n            canvasSupported: true\n        };\n    }\n    else {\n        env = detect(navigator.userAgent);\n    }\n\n    module.exports = env;\n\n    // Zepto.js\n    // (c) 2010-2013 Thomas Fuchs\n    // Zepto.js may be freely distributed under the MIT license.\n\n    function detect(ua) {\n        var os = {};\n        var browser = {};\n        // var webkit = ua.match(/Web[kK]it[\\/]{0,1}([\\d.]+)/);\n        // var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/);\n        // var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n        // var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n        // var iphone = !ipad && ua.match(/(iPhone\\sOS)\\s([\\d_]+)/);\n        // var webos = ua.match(/(webOS|hpwOS)[\\s\\/]([\\d.]+)/);\n        // var touchpad = webos && ua.match(/TouchPad/);\n        // var kindle = ua.match(/Kindle\\/([\\d.]+)/);\n        // var silk = ua.match(/Silk\\/([\\d._]+)/);\n        // var blackberry = ua.match(/(BlackBerry).*Version\\/([\\d.]+)/);\n        // var bb10 = ua.match(/(BB10).*Version\\/([\\d.]+)/);\n        // var rimtabletos = ua.match(/(RIM\\sTablet\\sOS)\\s([\\d.]+)/);\n        // var playbook = ua.match(/PlayBook/);\n        // var chrome = ua.match(/Chrome\\/([\\d.]+)/) || ua.match(/CriOS\\/([\\d.]+)/);\n        var firefox = ua.match(/Firefox\\/([\\d.]+)/);\n        // var safari = webkit && ua.match(/Mobile\\//) && !chrome;\n        // var webview = ua.match(/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/) && !chrome;\n        var ie = ua.match(/MSIE\\s([\\d.]+)/)\n            // IE 11 Trident/7.0; rv:11.0\n            || ua.match(/Trident\\/.+?rv:(([\\d.]+))/);\n        var edge = ua.match(/Edge\\/([\\d.]+)/); // IE 12 and 12+\n\n        var weChat = (/micromessenger/i).test(ua);\n\n        // Todo: clean this up with a better OS/browser seperation:\n        // - discern (more) between multiple browsers on android\n        // - decide if kindle fire in silk mode is android or not\n        // - Firefox on Android doesn't specify the Android version\n        // - possibly devide in os, device and browser hashes\n\n        // if (browser.webkit = !!webkit) browser.version = webkit[1];\n\n        // if (android) os.android = true, os.version = android[2];\n        // if (iphone && !ipod) os.ios = os.iphone = true, os.version = iphone[2].replace(/_/g, '.');\n        // if (ipad) os.ios = os.ipad = true, os.version = ipad[2].replace(/_/g, '.');\n        // if (ipod) os.ios = os.ipod = true, os.version = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n        // if (webos) os.webos = true, os.version = webos[2];\n        // if (touchpad) os.touchpad = true;\n        // if (blackberry) os.blackberry = true, os.version = blackberry[2];\n        // if (bb10) os.bb10 = true, os.version = bb10[2];\n        // if (rimtabletos) os.rimtabletos = true, os.version = rimtabletos[2];\n        // if (playbook) browser.playbook = true;\n        // if (kindle) os.kindle = true, os.version = kindle[1];\n        // if (silk) browser.silk = true, browser.version = silk[1];\n        // if (!silk && os.android && ua.match(/Kindle Fire/)) browser.silk = true;\n        // if (chrome) browser.chrome = true, browser.version = chrome[1];\n        if (firefox) {\n            browser.firefox = true;\n            browser.version = firefox[1];\n        }\n        // if (safari && (ua.match(/Safari/) || !!os.ios)) browser.safari = true;\n        // if (webview) browser.webview = true;\n\n        if (ie) {\n            browser.ie = true;\n            browser.version = ie[1];\n        }\n\n        if (edge) {\n            browser.edge = true;\n            browser.version = edge[1];\n        }\n\n        // It is difficult to detect WeChat in Win Phone precisely, because ua can\n        // not be set on win phone. So we do not consider Win Phone.\n        if (weChat) {\n            browser.weChat = true;\n        }\n\n        // os.tablet = !!(ipad || playbook || (android && !ua.match(/Mobile/)) ||\n        //     (firefox && ua.match(/Tablet/)) || (ie && !ua.match(/Phone/) && ua.match(/Touch/)));\n        // os.phone  = !!(!os.tablet && !os.ipod && (android || iphone || webos ||\n        //     (chrome && ua.match(/Android/)) || (chrome && ua.match(/CriOS\\/([\\d.]+)/)) ||\n        //     (firefox && ua.match(/Mobile/)) || (ie && ua.match(/Touch/))));\n\n        return {\n            browser: browser,\n            os: os,\n            node: false,\n            // 原生canvas支持，改极端点了\n            // canvasSupported : !(browser.ie && parseFloat(browser.version) < 9)\n            canvasSupported : document.createElement('canvas').getContext ? true : false,\n            // @see <http://stackoverflow.com/questions/4817029/whats-the-best-way-to-detect-a-touch-screen-device-using-javascript>\n            // works on most browsers\n            // IE10/11 does not support touch event, and MS Edge supports them but not by\n            // default, so we dont check navigator.maxTouchPoints for them here.\n            touchEventsSupported: 'ontouchstart' in window && !browser.ie && !browser.edge,\n            // <http://caniuse.com/#search=pointer%20event>.\n            pointerEventsSupported: 'onpointerdown' in window\n                // Firefox supports pointer but not by default, only MS browsers are reliable on pointer\n                // events currently. So we dont use that on other browsers unless tested sufficiently.\n                // Although IE 10 supports pointer event, it use old style and is different from the\n                // standard. So we exclude that. (IE 10 is hardly used on touch device)\n                && (browser.edge || (browser.ie && browser.version >= 11))\n        };\n    }\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.zrender@3.4.4@zrender/lib/core/env.js\n// module id = 167\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var clazz = {};\n\n    var TYPE_DELIMITER = '.';\n    var IS_CONTAINER = '___EC__COMPONENT__CONTAINER___';\n    var MEMBER_PRIFIX = '\\0ec_\\0';\n\n    /**\n     * Hide private class member.\n     * The same behavior as `host[name] = value;` (can be right-value)\n     * @public\n     */\n    clazz.set = function (host, name, value) {\n        return (host[MEMBER_PRIFIX + name] = value);\n    };\n\n    /**\n     * Hide private class member.\n     * The same behavior as `host[name];`\n     * @public\n     */\n    clazz.get = function (host, name) {\n        return host[MEMBER_PRIFIX + name];\n    };\n\n    /**\n     * For hidden private class member.\n     * The same behavior as `host.hasOwnProperty(name);`\n     * @public\n     */\n    clazz.hasOwn = function (host, name) {\n        return host.hasOwnProperty(MEMBER_PRIFIX + name);\n    };\n\n    /**\n     * Notice, parseClassType('') should returns {main: '', sub: ''}\n     * @public\n     */\n    var parseClassType = clazz.parseClassType = function (componentType) {\n        var ret = {main: '', sub: ''};\n        if (componentType) {\n            componentType = componentType.split(TYPE_DELIMITER);\n            ret.main = componentType[0] || '';\n            ret.sub = componentType[1] || '';\n        }\n        return ret;\n    };\n\n    /**\n     * @public\n     */\n    function checkClassType(componentType) {\n        zrUtil.assert(\n            /^[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)?$/.test(componentType),\n            'componentType \"' + componentType + '\" illegal'\n        );\n    }\n\n    /**\n     * @public\n     */\n    clazz.enableClassExtend = function (RootClass, mandatoryMethods) {\n\n        RootClass.$constructor = RootClass;\n        RootClass.extend = function (proto) {\n\n            if (__DEV__) {\n                zrUtil.each(mandatoryMethods, function (method) {\n                    if (!proto[method]) {\n                        console.warn(\n                            'Method `' + method + '` should be implemented'\n                            + (proto.type ? ' in ' + proto.type : '') + '.'\n                        );\n                    }\n                });\n            }\n\n            var superClass = this;\n            var ExtendedClass = function () {\n                if (!proto.$constructor) {\n                    superClass.apply(this, arguments);\n                }\n                else {\n                    proto.$constructor.apply(this, arguments);\n                }\n            };\n\n            zrUtil.extend(ExtendedClass.prototype, proto);\n\n            ExtendedClass.extend = this.extend;\n            ExtendedClass.superCall = superCall;\n            ExtendedClass.superApply = superApply;\n            zrUtil.inherits(ExtendedClass, this);\n            ExtendedClass.superClass = superClass;\n\n            return ExtendedClass;\n        };\n    };\n\n    // superCall should have class info, which can not be fetch from 'this'.\n    // Consider this case:\n    // class A has method f,\n    // class B inherits class A, overrides method f, f call superApply('f'),\n    // class C inherits class B, do not overrides method f,\n    // then when method of class C is called, dead loop occured.\n    function superCall(context, methodName) {\n        var args = zrUtil.slice(arguments, 2);\n        return this.superClass.prototype[methodName].apply(context, args);\n    }\n\n    function superApply(context, methodName, args) {\n        return this.superClass.prototype[methodName].apply(context, args);\n    }\n\n    /**\n     * @param {Object} entity\n     * @param {Object} options\n     * @param {boolean} [options.registerWhenExtend]\n     * @public\n     */\n    clazz.enableClassManagement = function (entity, options) {\n        options = options || {};\n\n        /**\n         * Component model classes\n         * key: componentType,\n         * value:\n         *     componentClass, when componentType is 'xxx'\n         *     or Object.<subKey, componentClass>, when componentType is 'xxx.yy'\n         * @type {Object}\n         */\n        var storage = {};\n\n        entity.registerClass = function (Clazz, componentType) {\n            if (componentType) {\n                checkClassType(componentType);\n                componentType = parseClassType(componentType);\n\n                if (!componentType.sub) {\n                    if (__DEV__) {\n                        if (storage[componentType.main]) {\n                            console.warn(componentType.main + ' exists.');\n                        }\n                    }\n                    storage[componentType.main] = Clazz;\n                }\n                else if (componentType.sub !== IS_CONTAINER) {\n                    var container = makeContainer(componentType);\n                    container[componentType.sub] = Clazz;\n                }\n            }\n            return Clazz;\n        };\n\n        entity.getClass = function (componentMainType, subType, throwWhenNotFound) {\n            var Clazz = storage[componentMainType];\n\n            if (Clazz && Clazz[IS_CONTAINER]) {\n                Clazz = subType ? Clazz[subType] : null;\n            }\n\n            if (throwWhenNotFound && !Clazz) {\n                throw new Error(\n                    !subType\n                        ? componentMainType + '.' + 'type should be specified.'\n                        : 'Component ' + componentMainType + '.' + (subType || '') + ' not exists. Load it first.'\n                );\n            }\n\n            return Clazz;\n        };\n\n        entity.getClassesByMainType = function (componentType) {\n            componentType = parseClassType(componentType);\n\n            var result = [];\n            var obj = storage[componentType.main];\n\n            if (obj && obj[IS_CONTAINER]) {\n                zrUtil.each(obj, function (o, type) {\n                    type !== IS_CONTAINER && result.push(o);\n                });\n            }\n            else {\n                result.push(obj);\n            }\n\n            return result;\n        };\n\n        entity.hasClass = function (componentType) {\n            // Just consider componentType.main.\n            componentType = parseClassType(componentType);\n            return !!storage[componentType.main];\n        };\n\n        /**\n         * @return {Array.<string>} Like ['aa', 'bb'], but can not be ['aa.xx']\n         */\n        entity.getAllClassMainTypes = function () {\n            var types = [];\n            zrUtil.each(storage, function (obj, type) {\n                types.push(type);\n            });\n            return types;\n        };\n\n        /**\n         * If a main type is container and has sub types\n         * @param  {string}  mainType\n         * @return {boolean}\n         */\n        entity.hasSubTypes = function (componentType) {\n            componentType = parseClassType(componentType);\n            var obj = storage[componentType.main];\n            return obj && obj[IS_CONTAINER];\n        };\n\n        entity.parseClassType = parseClassType;\n\n        function makeContainer(componentType) {\n            var container = storage[componentType.main];\n            if (!container || !container[IS_CONTAINER]) {\n                container = storage[componentType.main] = {};\n                container[IS_CONTAINER] = true;\n            }\n            return container;\n        }\n\n        if (options.registerWhenExtend) {\n            var originalExtend = entity.extend;\n            if (originalExtend) {\n                entity.extend = function (proto) {\n                    var ExtendedClass = originalExtend.call(this, proto);\n                    return entity.registerClass(ExtendedClass, proto.type);\n                };\n            }\n        }\n\n        return entity;\n    };\n\n    /**\n     * @param {string|Array.<string>} properties\n     */\n    clazz.setReadOnly = function (obj, properties) {\n        // FIXME It seems broken in IE8 simulation of IE11\n        // if (!zrUtil.isArray(properties)) {\n        //     properties = properties != null ? [properties] : [];\n        // }\n        // zrUtil.each(properties, function (prop) {\n        //     var value = obj[prop];\n\n        //     Object.defineProperty\n        //         && Object.defineProperty(obj, prop, {\n        //             value: value, writable: false\n        //         });\n        //     zrUtil.isArray(obj[prop])\n        //         && Object.freeze\n        //         && Object.freeze(obj[prop]);\n        // });\n    };\n\n    module.exports = clazz;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.echarts@3.5.4@echarts/lib/util/clazz.js\n// module id = 168\n// module chunks = 0","'use strict';\n/**\n * @module echarts/core/BoundingRect\n */\n\n\n    var vec2 = require('./vector');\n    var matrix = require('./matrix');\n\n    var v2ApplyTransform = vec2.applyTransform;\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    /**\n     * @alias module:echarts/core/BoundingRect\n     */\n    function BoundingRect(x, y, width, height) {\n\n        if (width < 0) {\n            x = x + width;\n            width = -width;\n        }\n        if (height < 0) {\n            y = y + height;\n            height = -height;\n        }\n\n        /**\n         * @type {number}\n         */\n        this.x = x;\n        /**\n         * @type {number}\n         */\n        this.y = y;\n        /**\n         * @type {number}\n         */\n        this.width = width;\n        /**\n         * @type {number}\n         */\n        this.height = height;\n    }\n\n    BoundingRect.prototype = {\n\n        constructor: BoundingRect,\n\n        /**\n         * @param {module:echarts/core/BoundingRect} other\n         */\n        union: function (other) {\n            var x = mathMin(other.x, this.x);\n            var y = mathMin(other.y, this.y);\n\n            this.width = mathMax(\n                    other.x + other.width,\n                    this.x + this.width\n                ) - x;\n            this.height = mathMax(\n                    other.y + other.height,\n                    this.y + this.height\n                ) - y;\n            this.x = x;\n            this.y = y;\n        },\n\n        /**\n         * @param {Array.<number>} m\n         * @methods\n         */\n        applyTransform: (function () {\n            var lt = [];\n            var rb = [];\n            var lb = [];\n            var rt = [];\n            return function (m) {\n                // In case usage like this\n                // el.getBoundingRect().applyTransform(el.transform)\n                // And element has no transform\n                if (!m) {\n                    return;\n                }\n                lt[0] = lb[0] = this.x;\n                lt[1] = rt[1] = this.y;\n                rb[0] = rt[0] = this.x + this.width;\n                rb[1] = lb[1] = this.y + this.height;\n\n                v2ApplyTransform(lt, lt, m);\n                v2ApplyTransform(rb, rb, m);\n                v2ApplyTransform(lb, lb, m);\n                v2ApplyTransform(rt, rt, m);\n\n                this.x = mathMin(lt[0], rb[0], lb[0], rt[0]);\n                this.y = mathMin(lt[1], rb[1], lb[1], rt[1]);\n                var maxX = mathMax(lt[0], rb[0], lb[0], rt[0]);\n                var maxY = mathMax(lt[1], rb[1], lb[1], rt[1]);\n                this.width = maxX - this.x;\n                this.height = maxY - this.y;\n            };\n        })(),\n\n        /**\n         * Calculate matrix of transforming from self to target rect\n         * @param  {module:zrender/core/BoundingRect} b\n         * @return {Array.<number>}\n         */\n        calculateTransform: function (b) {\n            var a = this;\n            var sx = b.width / a.width;\n            var sy = b.height / a.height;\n\n            var m = matrix.create();\n\n            // 矩阵右乘\n            matrix.translate(m, m, [-a.x, -a.y]);\n            matrix.scale(m, m, [sx, sy]);\n            matrix.translate(m, m, [b.x, b.y]);\n\n            return m;\n        },\n\n        /**\n         * @param {(module:echarts/core/BoundingRect|Object)} b\n         * @return {boolean}\n         */\n        intersect: function (b) {\n            if (!b) {\n                return false;\n            }\n\n            if (!(b instanceof BoundingRect)) {\n                // Normalize negative width/height.\n                b = BoundingRect.create(b);\n            }\n\n            var a = this;\n            var ax0 = a.x;\n            var ax1 = a.x + a.width;\n            var ay0 = a.y;\n            var ay1 = a.y + a.height;\n\n            var bx0 = b.x;\n            var bx1 = b.x + b.width;\n            var by0 = b.y;\n            var by1 = b.y + b.height;\n\n            return ! (ax1 < bx0 || bx1 < ax0 || ay1 < by0 || by1 < ay0);\n        },\n\n        contain: function (x, y) {\n            var rect = this;\n            return x >= rect.x\n                && x <= (rect.x + rect.width)\n                && y >= rect.y\n                && y <= (rect.y + rect.height);\n        },\n\n        /**\n         * @return {module:echarts/core/BoundingRect}\n         */\n        clone: function () {\n            return new BoundingRect(this.x, this.y, this.width, this.height);\n        },\n\n        /**\n         * Copy from another rect\n         */\n        copy: function (other) {\n            this.x = other.x;\n            this.y = other.y;\n            this.width = other.width;\n            this.height = other.height;\n        },\n\n        plain: function () {\n            return {\n                x: this.x,\n                y: this.y,\n                width: this.width,\n                height: this.height\n            };\n        }\n    };\n\n    /**\n     * @param {Object|module:zrender/core/BoundingRect} rect\n     * @param {number} rect.x\n     * @param {number} rect.y\n     * @param {number} rect.width\n     * @param {number} rect.height\n     * @return {module:zrender/core/BoundingRect}\n     */\n    BoundingRect.create = function (rect) {\n        return new BoundingRect(rect.x, rect.y, rect.width, rect.height);\n    };\n\n    module.exports = BoundingRect;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.zrender@3.4.4@zrender/lib/core/BoundingRect.js\n// module id = 169\n// module chunks = 0","/**\n * Component model\n *\n * @module echarts/model/Component\n */\n\n\n    var Model = require('./Model');\n    var zrUtil = require('zrender/lib/core/util');\n    var arrayPush = Array.prototype.push;\n    var componentUtil = require('../util/component');\n    var clazzUtil = require('../util/clazz');\n    var layout = require('../util/layout');\n\n    /**\n     * @alias module:echarts/model/Component\n     * @constructor\n     * @param {Object} option\n     * @param {module:echarts/model/Model} parentModel\n     * @param {module:echarts/model/Model} ecModel\n     */\n    var ComponentModel = Model.extend({\n\n        type: 'component',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        id: '',\n\n        /**\n         * @readOnly\n         */\n        name: '',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        mainType: '',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        subType: '',\n\n        /**\n         * @readOnly\n         * @type {number}\n         */\n        componentIndex: 0,\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        defaultOption: null,\n\n        /**\n         * @type {module:echarts/model/Global}\n         * @readOnly\n         */\n        ecModel: null,\n\n        /**\n         * key: componentType\n         * value:  Component model list, can not be null.\n         * @type {Object.<string, Array.<module:echarts/model/Model>>}\n         * @readOnly\n         */\n        dependentModels: [],\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        uid: null,\n\n        /**\n         * Support merge layout params.\n         * Only support 'box' now (left/right/top/bottom/width/height).\n         * @type {string|Object} Object can be {ignoreSize: true}\n         * @readOnly\n         */\n        layoutMode: null,\n\n        $constructor: function (option, parentModel, ecModel, extraOpt) {\n            Model.call(this, option, parentModel, ecModel, extraOpt);\n\n            this.uid = componentUtil.getUID('componentModel');\n        },\n\n\n        init: function (option, parentModel, ecModel, extraOpt) {\n            this.mergeDefaultAndTheme(option, ecModel);\n        },\n\n        mergeDefaultAndTheme: function (option, ecModel) {\n            var layoutMode = this.layoutMode;\n            var inputPositionParams = layoutMode\n                ? layout.getLayoutParams(option) : {};\n\n            var themeModel = ecModel.getTheme();\n            zrUtil.merge(option, themeModel.get(this.mainType));\n            zrUtil.merge(option, this.getDefaultOption());\n\n            if (layoutMode) {\n                layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n            }\n        },\n\n        mergeOption: function (option, extraOpt) {\n            zrUtil.merge(this.option, option, true);\n\n            var layoutMode = this.layoutMode;\n            if (layoutMode) {\n                layout.mergeLayoutParam(this.option, option, layoutMode);\n            }\n        },\n\n        // Hooker after init or mergeOption\n        optionUpdated: function (newCptOption, isInit) {},\n\n        getDefaultOption: function () {\n            if (!clazzUtil.hasOwn(this, '__defaultOption')) {\n                var optList = [];\n                var Class = this.constructor;\n                while (Class) {\n                    var opt = Class.prototype.defaultOption;\n                    opt && optList.push(opt);\n                    Class = Class.superClass;\n                }\n\n                var defaultOption = {};\n                for (var i = optList.length - 1; i >= 0; i--) {\n                    defaultOption = zrUtil.merge(defaultOption, optList[i], true);\n                }\n                clazzUtil.set(this, '__defaultOption', defaultOption);\n            }\n            return clazzUtil.get(this, '__defaultOption');\n        },\n\n        getReferringComponents: function (mainType) {\n            return this.ecModel.queryComponents({\n                mainType: mainType,\n                index: this.get(mainType + 'Index', true),\n                id: this.get(mainType + 'Id', true)\n            });\n        }\n\n    });\n\n    // Reset ComponentModel.extend, add preConstruct.\n    // clazzUtil.enableClassExtend(\n    //     ComponentModel,\n    //     function (option, parentModel, ecModel, extraOpt) {\n    //         // Set dependentModels, componentIndex, name, id, mainType, subType.\n    //         zrUtil.extend(this, extraOpt);\n\n    //         this.uid = componentUtil.getUID('componentModel');\n\n    //         // this.setReadOnly([\n    //         //     'type', 'id', 'uid', 'name', 'mainType', 'subType',\n    //         //     'dependentModels', 'componentIndex'\n    //         // ]);\n    //     }\n    // );\n\n    // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(\n        ComponentModel, {registerWhenExtend: true}\n    );\n    componentUtil.enableSubTypeDefaulter(ComponentModel);\n\n    // Add capability of ComponentModel.topologicalTravel.\n    componentUtil.enableTopologicalTravel(ComponentModel, getDependencies);\n\n    function getDependencies(componentType) {\n        var deps = [];\n        zrUtil.each(ComponentModel.getClassesByMainType(componentType), function (Clazz) {\n            arrayPush.apply(deps, Clazz.prototype.dependencies || []);\n        });\n        // Ensure main type\n        return zrUtil.map(deps, function (type) {\n            return clazzUtil.parseClassType(type).main;\n        });\n    }\n\n    zrUtil.mixin(ComponentModel, require('./mixin/boxLayout'));\n\n    module.exports = ComponentModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.echarts@3.5.4@echarts/lib/model/Component.js\n// module id = 170\n// module chunks = 0","'use strict';\n// Layout helpers for each component positioning\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var BoundingRect = require('zrender/lib/core/BoundingRect');\n    var numberUtil = require('./number');\n    var formatUtil = require('./format');\n    var parsePercent = numberUtil.parsePercent;\n    var each = zrUtil.each;\n\n    var layout = {};\n\n    /**\n     * @public\n     */\n    var LOCATION_PARAMS = layout.LOCATION_PARAMS = [\n        'left', 'right', 'top', 'bottom', 'width', 'height'\n    ];\n\n    /**\n     * @public\n     */\n    var HV_NAMES = layout.HV_NAMES = [\n        ['width', 'left', 'right'],\n        ['height', 'top', 'bottom']\n    ];\n\n    function boxLayout(orient, group, gap, maxWidth, maxHeight) {\n        var x = 0;\n        var y = 0;\n        if (maxWidth == null) {\n            maxWidth = Infinity;\n        }\n        if (maxHeight == null) {\n            maxHeight = Infinity;\n        }\n        var currentLineMaxSize = 0;\n        group.eachChild(function (child, idx) {\n            var position = child.position;\n            var rect = child.getBoundingRect();\n            var nextChild = group.childAt(idx + 1);\n            var nextChildRect = nextChild && nextChild.getBoundingRect();\n            var nextX;\n            var nextY;\n            if (orient === 'horizontal') {\n                var moveX = rect.width + (nextChildRect ? (-nextChildRect.x + rect.x) : 0);\n                nextX = x + moveX;\n                // Wrap when width exceeds maxWidth or meet a `newline` group\n                if (nextX > maxWidth || child.newline) {\n                    x = 0;\n                    nextX = moveX;\n                    y += currentLineMaxSize + gap;\n                    currentLineMaxSize = rect.height;\n                }\n                else {\n                    currentLineMaxSize = Math.max(currentLineMaxSize, rect.height);\n                }\n            }\n            else {\n                var moveY = rect.height + (nextChildRect ? (-nextChildRect.y + rect.y) : 0);\n                nextY = y + moveY;\n                // Wrap when width exceeds maxHeight or meet a `newline` group\n                if (nextY > maxHeight || child.newline) {\n                    x += currentLineMaxSize + gap;\n                    y = 0;\n                    nextY = moveY;\n                    currentLineMaxSize = rect.width;\n                }\n                else {\n                    currentLineMaxSize = Math.max(currentLineMaxSize, rect.width);\n                }\n            }\n\n            if (child.newline) {\n                return;\n            }\n\n            position[0] = x;\n            position[1] = y;\n\n            orient === 'horizontal'\n                ? (x = nextX + gap)\n                : (y = nextY + gap);\n        });\n    }\n\n    /**\n     * VBox or HBox layouting\n     * @param {string} orient\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.box = boxLayout;\n\n    /**\n     * VBox layouting\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.vbox = zrUtil.curry(boxLayout, 'vertical');\n\n    /**\n     * HBox layouting\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.hbox = zrUtil.curry(boxLayout, 'horizontal');\n\n    /**\n     * If x or x2 is not specified or 'center' 'left' 'right',\n     * the width would be as long as possible.\n     * If y or y2 is not specified or 'middle' 'top' 'bottom',\n     * the height would be as long as possible.\n     *\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.x]\n     * @param {number|string} [positionInfo.y]\n     * @param {number|string} [positionInfo.x2]\n     * @param {number|string} [positionInfo.y2]\n     * @param {Object} containerRect\n     * @param {string|number} margin\n     * @return {Object} {width, height}\n     */\n    layout.getAvailableSize = function (positionInfo, containerRect, margin) {\n        var containerWidth = containerRect.width;\n        var containerHeight = containerRect.height;\n\n        var x = parsePercent(positionInfo.x, containerWidth);\n        var y = parsePercent(positionInfo.y, containerHeight);\n        var x2 = parsePercent(positionInfo.x2, containerWidth);\n        var y2 = parsePercent(positionInfo.y2, containerHeight);\n\n        (isNaN(x) || isNaN(parseFloat(positionInfo.x))) && (x = 0);\n        (isNaN(x2) || isNaN(parseFloat(positionInfo.x2))) && (x2 = containerWidth);\n        (isNaN(y) || isNaN(parseFloat(positionInfo.y))) && (y = 0);\n        (isNaN(y2) || isNaN(parseFloat(positionInfo.y2))) && (y2 = containerHeight);\n\n        margin = formatUtil.normalizeCssArray(margin || 0);\n\n        return {\n            width: Math.max(x2 - x - margin[1] - margin[3], 0),\n            height: Math.max(y2 - y - margin[0] - margin[2], 0)\n        };\n    };\n\n    /**\n     * Parse position info.\n     *\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.left]\n     * @param {number|string} [positionInfo.top]\n     * @param {number|string} [positionInfo.right]\n     * @param {number|string} [positionInfo.bottom]\n     * @param {number|string} [positionInfo.width]\n     * @param {number|string} [positionInfo.height]\n     * @param {number|string} [positionInfo.aspect] Aspect is width / height\n     * @param {Object} containerRect\n     * @param {string|number} [margin]\n     *\n     * @return {module:zrender/core/BoundingRect}\n     */\n    layout.getLayoutRect = function (\n        positionInfo, containerRect, margin\n    ) {\n        margin = formatUtil.normalizeCssArray(margin || 0);\n\n        var containerWidth = containerRect.width;\n        var containerHeight = containerRect.height;\n\n        var left = parsePercent(positionInfo.left, containerWidth);\n        var top = parsePercent(positionInfo.top, containerHeight);\n        var right = parsePercent(positionInfo.right, containerWidth);\n        var bottom = parsePercent(positionInfo.bottom, containerHeight);\n        var width = parsePercent(positionInfo.width, containerWidth);\n        var height = parsePercent(positionInfo.height, containerHeight);\n\n        var verticalMargin = margin[2] + margin[0];\n        var horizontalMargin = margin[1] + margin[3];\n        var aspect = positionInfo.aspect;\n\n        // If width is not specified, calculate width from left and right\n        if (isNaN(width)) {\n            width = containerWidth - right - horizontalMargin - left;\n        }\n        if (isNaN(height)) {\n            height = containerHeight - bottom - verticalMargin - top;\n        }\n\n        // If width and height are not given\n        // 1. Graph should not exceeds the container\n        // 2. Aspect must be keeped\n        // 3. Graph should take the space as more as possible\n        if (isNaN(width) && isNaN(height)) {\n            if (aspect > containerWidth / containerHeight) {\n                width = containerWidth * 0.8;\n            }\n            else {\n                height = containerHeight * 0.8;\n            }\n        }\n\n        if (aspect != null) {\n            // Calculate width or height with given aspect\n            if (isNaN(width)) {\n                width = aspect * height;\n            }\n            if (isNaN(height)) {\n                height = width / aspect;\n            }\n        }\n\n        // If left is not specified, calculate left from right and width\n        if (isNaN(left)) {\n            left = containerWidth - right - width - horizontalMargin;\n        }\n        if (isNaN(top)) {\n            top = containerHeight - bottom - height - verticalMargin;\n        }\n\n        // Align left and top\n        switch (positionInfo.left || positionInfo.right) {\n            case 'center':\n                left = containerWidth / 2 - width / 2 - margin[3];\n                break;\n            case 'right':\n                left = containerWidth - width - horizontalMargin;\n                break;\n        }\n        switch (positionInfo.top || positionInfo.bottom) {\n            case 'middle':\n            case 'center':\n                top = containerHeight / 2 - height / 2 - margin[0];\n                break;\n            case 'bottom':\n                top = containerHeight - height - verticalMargin;\n                break;\n        }\n        // If something is wrong and left, top, width, height are calculated as NaN\n        left = left || 0;\n        top = top || 0;\n        if (isNaN(width)) {\n            // Width may be NaN if only one value is given except width\n            width = containerWidth - left - (right || 0);\n        }\n        if (isNaN(height)) {\n            // Height may be NaN if only one value is given except height\n            height = containerHeight - top - (bottom || 0);\n        }\n\n        var rect = new BoundingRect(left + margin[3], top + margin[0], width, height);\n        rect.margin = margin;\n        return rect;\n    };\n\n\n    /**\n     * Position a zr element in viewport\n     *  Group position is specified by either\n     *  {left, top}, {right, bottom}\n     *  If all properties exists, right and bottom will be igonred.\n     *\n     * Logic:\n     *     1. Scale (against origin point in parent coord)\n     *     2. Rotate (against origin point in parent coord)\n     *     3. Traslate (with el.position by this method)\n     * So this method only fixes the last step 'Traslate', which does not affect\n     * scaling and rotating.\n     *\n     * If be called repeatly with the same input el, the same result will be gotten.\n     *\n     * @param {module:zrender/Element} el Should have `getBoundingRect` method.\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.left]\n     * @param {number|string} [positionInfo.top]\n     * @param {number|string} [positionInfo.right]\n     * @param {number|string} [positionInfo.bottom]\n     * @param {Object} containerRect\n     * @param {string|number} margin\n     * @param {Object} [opt]\n     * @param {Array.<number>} [opt.hv=[1,1]] Only horizontal or only vertical.\n     * @param {Array.<number>} [opt.boundingMode='all']\n     *        Specify how to calculate boundingRect when locating.\n     *        'all': Position the boundingRect that is transformed and uioned\n     *               both itself and its descendants.\n     *               This mode simplies confine the elements in the bounding\n     *               of their container (e.g., using 'right: 0').\n     *        'raw': Position the boundingRect that is not transformed and only itself.\n     *               This mode is useful when you want a element can overflow its\n     *               container. (Consider a rotated circle needs to be located in a corner.)\n     *               In this mode positionInfo.width/height can only be number.\n     */\n    layout.positionElement = function (el, positionInfo, containerRect, margin, opt) {\n        var h = !opt || !opt.hv || opt.hv[0];\n        var v = !opt || !opt.hv || opt.hv[1];\n        var boundingMode = opt && opt.boundingMode || 'all';\n\n        if (!h && !v) {\n            return;\n        }\n\n        var rect;\n        if (boundingMode === 'raw') {\n            rect = el.type === 'group'\n                ? new BoundingRect(0, 0, +positionInfo.width || 0, +positionInfo.height || 0)\n                : el.getBoundingRect();\n        }\n        else {\n            rect = el.getBoundingRect();\n            if (el.needLocalTransform()) {\n                var transform = el.getLocalTransform();\n                // Notice: raw rect may be inner object of el,\n                // which should not be modified.\n                rect = rect.clone();\n                rect.applyTransform(transform);\n            }\n        }\n\n        positionInfo = layout.getLayoutRect(\n            zrUtil.defaults(\n                {width: rect.width, height: rect.height},\n                positionInfo\n            ),\n            containerRect,\n            margin\n        );\n\n        // Because 'tranlate' is the last step in transform\n        // (see zrender/core/Transformable#getLocalTransfrom),\n        // we can just only modify el.position to get final result.\n        var elPos = el.position;\n        var dx = h ? positionInfo.x - rect.x : 0;\n        var dy = v ? positionInfo.y - rect.y : 0;\n\n        el.attr('position', boundingMode === 'raw' ? [dx, dy] : [elPos[0] + dx, elPos[1] + dy]);\n    };\n\n    /**\n     * @param {Object} option Contains some of the properties in HV_NAMES.\n     * @param {number} hvIdx 0: horizontal; 1: vertical.\n     */\n    layout.sizeCalculable = function (option, hvIdx) {\n        return option[HV_NAMES[hvIdx][0]] != null\n            || (option[HV_NAMES[hvIdx][1]] != null && option[HV_NAMES[hvIdx][2]] != null);\n    };\n\n    /**\n     * Consider Case:\n     * When defulat option has {left: 0, width: 100}, and we set {right: 0}\n     * through setOption or media query, using normal zrUtil.merge will cause\n     * {right: 0} does not take effect.\n     *\n     * @example\n     * ComponentModel.extend({\n     *     init: function () {\n     *         ...\n     *         var inputPositionParams = layout.getLayoutParams(option);\n     *         this.mergeOption(inputPositionParams);\n     *     },\n     *     mergeOption: function (newOption) {\n     *         newOption && zrUtil.merge(thisOption, newOption, true);\n     *         layout.mergeLayoutParam(thisOption, newOption);\n     *     }\n     * });\n     *\n     * @param {Object} targetOption\n     * @param {Object} newOption\n     * @param {Object|string} [opt]\n     * @param {boolean|Array.<boolean>} [opt.ignoreSize=false] Some component must has width and height.\n     */\n    layout.mergeLayoutParam = function (targetOption, newOption, opt) {\n        !zrUtil.isObject(opt) && (opt = {});\n\n        var ignoreSize = opt.ignoreSize;\n        !zrUtil.isArray(ignoreSize) && (ignoreSize = [ignoreSize, ignoreSize]);\n\n        var hResult = merge(HV_NAMES[0], 0);\n        var vResult = merge(HV_NAMES[1], 1);\n\n        copy(HV_NAMES[0], targetOption, hResult);\n        copy(HV_NAMES[1], targetOption, vResult);\n\n        function merge(names, hvIdx) {\n            var newParams = {};\n            var newValueCount = 0;\n            var merged = {};\n            var mergedValueCount = 0;\n            var enoughParamNumber = 2;\n\n            each(names, function (name) {\n                merged[name] = targetOption[name];\n            });\n            each(names, function (name) {\n                // Consider case: newOption.width is null, which is\n                // set by user for removing width setting.\n                hasProp(newOption, name) && (newParams[name] = merged[name] = newOption[name]);\n                hasValue(newParams, name) && newValueCount++;\n                hasValue(merged, name) && mergedValueCount++;\n            });\n\n            if (ignoreSize[hvIdx]) {\n                // Only one of left/right is premitted to exist.\n                if (hasValue(newOption, names[1])) {\n                    merged[names[2]] = null;\n                }\n                else if (hasValue(newOption, names[2])) {\n                    merged[names[1]] = null;\n                }\n                return merged;\n            }\n\n            // Case: newOption: {width: ..., right: ...},\n            // or targetOption: {right: ...} and newOption: {width: ...},\n            // There is no conflict when merged only has params count\n            // little than enoughParamNumber.\n            if (mergedValueCount === enoughParamNumber || !newValueCount) {\n                return merged;\n            }\n            // Case: newOption: {width: ..., right: ...},\n            // Than we can make sure user only want those two, and ignore\n            // all origin params in targetOption.\n            else if (newValueCount >= enoughParamNumber) {\n                return newParams;\n            }\n            else {\n                // Chose another param from targetOption by priority.\n                for (var i = 0; i < names.length; i++) {\n                    var name = names[i];\n                    if (!hasProp(newParams, name) && hasProp(targetOption, name)) {\n                        newParams[name] = targetOption[name];\n                        break;\n                    }\n                }\n                return newParams;\n            }\n        }\n\n        function hasProp(obj, name) {\n            return obj.hasOwnProperty(name);\n        }\n\n        function hasValue(obj, name) {\n            return obj[name] != null && obj[name] !== 'auto';\n        }\n\n        function copy(names, target, source) {\n            each(names, function (name) {\n                target[name] = source[name];\n            });\n        }\n    };\n\n    /**\n     * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n     * @param {Object} source\n     * @return {Object} Result contains those props.\n     */\n    layout.getLayoutParams = function (source) {\n        return layout.copyLayoutParams({}, source);\n    };\n\n    /**\n     * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n     * @param {Object} source\n     * @return {Object} Result contains those props.\n     */\n    layout.copyLayoutParams = function (target, source) {\n        source && target && each(LOCATION_PARAMS, function (name) {\n            source.hasOwnProperty(name) && (target[name] = source[name]);\n        });\n        return target;\n    };\n\n    module.exports = layout;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.echarts@3.5.4@echarts/lib/util/layout.js\n// module id = 171\n// module chunks = 0","\n\n    var textWidthCache = {};\n    var textWidthCacheCounter = 0;\n    var TEXT_CACHE_MAX = 5000;\n\n    var util = require('../core/util');\n    var BoundingRect = require('../core/BoundingRect');\n    var retrieve = util.retrieve;\n\n    function getTextWidth(text, textFont) {\n        var key = text + ':' + textFont;\n        if (textWidthCache[key]) {\n            return textWidthCache[key];\n        }\n\n        var textLines = (text + '').split('\\n');\n        var width = 0;\n\n        for (var i = 0, l = textLines.length; i < l; i++) {\n            // measureText 可以被覆盖以兼容不支持 Canvas 的环境\n            width = Math.max(textContain.measureText(textLines[i], textFont).width, width);\n        }\n\n        if (textWidthCacheCounter > TEXT_CACHE_MAX) {\n            textWidthCacheCounter = 0;\n            textWidthCache = {};\n        }\n        textWidthCacheCounter++;\n        textWidthCache[key] = width;\n\n        return width;\n    }\n\n    function getTextRect(text, textFont, textAlign, textBaseline) {\n        var textLineLen = ((text || '') + '').split('\\n').length;\n\n        var width = getTextWidth(text, textFont);\n        // FIXME 高度计算比较粗暴\n        var lineHeight = getTextWidth('国', textFont);\n        var height = textLineLen * lineHeight;\n\n        var rect = new BoundingRect(0, 0, width, height);\n        // Text has a special line height property\n        rect.lineHeight = lineHeight;\n\n        switch (textBaseline) {\n            case 'bottom':\n            case 'alphabetic':\n                rect.y -= lineHeight;\n                break;\n            case 'middle':\n                rect.y -= lineHeight / 2;\n                break;\n            // case 'hanging':\n            // case 'top':\n        }\n\n        // FIXME Right to left language\n        switch (textAlign) {\n            case 'end':\n            case 'right':\n                rect.x -= rect.width;\n                break;\n            case 'center':\n                rect.x -= rect.width / 2;\n                break;\n            // case 'start':\n            // case 'left':\n        }\n\n        return rect;\n    }\n\n    function adjustTextPositionOnRect(textPosition, rect, textRect, distance) {\n\n        var x = rect.x;\n        var y = rect.y;\n\n        var height = rect.height;\n        var width = rect.width;\n\n        var textHeight = textRect.height;\n\n        var lineHeight = textRect.lineHeight;\n        var halfHeight = height / 2 - textHeight / 2 + lineHeight;\n\n        var textAlign = 'left';\n\n        switch (textPosition) {\n            case 'left':\n                x -= distance;\n                y += halfHeight;\n                textAlign = 'right';\n                break;\n            case 'right':\n                x += distance + width;\n                y += halfHeight;\n                textAlign = 'left';\n                break;\n            case 'top':\n                x += width / 2;\n                y -= distance + textHeight - lineHeight;\n                textAlign = 'center';\n                break;\n            case 'bottom':\n                x += width / 2;\n                y += height + distance + lineHeight;\n                textAlign = 'center';\n                break;\n            case 'inside':\n                x += width / 2;\n                y += halfHeight;\n                textAlign = 'center';\n                break;\n            case 'insideLeft':\n                x += distance;\n                y += halfHeight;\n                textAlign = 'left';\n                break;\n            case 'insideRight':\n                x += width - distance;\n                y += halfHeight;\n                textAlign = 'right';\n                break;\n            case 'insideTop':\n                x += width / 2;\n                y += distance + lineHeight;\n                textAlign = 'center';\n                break;\n            case 'insideBottom':\n                x += width / 2;\n                y += height - textHeight - distance + lineHeight;\n                textAlign = 'center';\n                break;\n            case 'insideTopLeft':\n                x += distance;\n                y += distance + lineHeight;\n                textAlign = 'left';\n                break;\n            case 'insideTopRight':\n                x += width - distance;\n                y += distance + lineHeight;\n                textAlign = 'right';\n                break;\n            case 'insideBottomLeft':\n                x += distance;\n                y += height - textHeight - distance + lineHeight;\n                break;\n            case 'insideBottomRight':\n                x += width - distance;\n                y += height - textHeight - distance + lineHeight;\n                textAlign = 'right';\n                break;\n        }\n\n        return {\n            x: x,\n            y: y,\n            textAlign: textAlign,\n            textBaseline: 'alphabetic'\n        };\n    }\n\n    /**\n     * Show ellipsis if overflow.\n     *\n     * @param  {string} text\n     * @param  {string} containerWidth\n     * @param  {string} textFont\n     * @param  {number} [ellipsis='...']\n     * @param  {Object} [options]\n     * @param  {number} [options.maxIterations=3]\n     * @param  {number} [options.minChar=0] If truncate result are less\n     *                  then minChar, ellipsis will not show, which is\n     *                  better for user hint in some cases.\n     * @param  {number} [options.placeholder=''] When all truncated, use the placeholder.\n     * @return {string}\n     */\n    function truncateText(text, containerWidth, textFont, ellipsis, options) {\n        if (!containerWidth) {\n            return '';\n        }\n\n        options = options || {};\n\n        ellipsis = retrieve(ellipsis, '...');\n        var maxIterations = retrieve(options.maxIterations, 2);\n        var minChar = retrieve(options.minChar, 0);\n        // FIXME\n        // Other languages?\n        var cnCharWidth = getTextWidth('国', textFont);\n        // FIXME\n        // Consider proportional font?\n        var ascCharWidth = getTextWidth('a', textFont);\n        var placeholder = retrieve(options.placeholder, '');\n\n        // Example 1: minChar: 3, text: 'asdfzxcv', truncate result: 'asdf', but not: 'a...'.\n        // Example 2: minChar: 3, text: '维度', truncate result: '维', but not: '...'.\n        var contentWidth = containerWidth = Math.max(0, containerWidth - 1); // Reserve some gap.\n        for (var i = 0; i < minChar && contentWidth >= ascCharWidth; i++) {\n            contentWidth -= ascCharWidth;\n        }\n\n        var ellipsisWidth = getTextWidth(ellipsis);\n        if (ellipsisWidth > contentWidth) {\n            ellipsis = '';\n            ellipsisWidth = 0;\n        }\n\n        contentWidth = containerWidth - ellipsisWidth;\n\n        var textLines = (text + '').split('\\n');\n\n        for (var i = 0, len = textLines.length; i < len; i++) {\n            var textLine = textLines[i];\n            var lineWidth = getTextWidth(textLine, textFont);\n\n            if (lineWidth <= containerWidth) {\n                continue;\n            }\n\n            for (var j = 0;; j++) {\n                if (lineWidth <= contentWidth || j >= maxIterations) {\n                    textLine += ellipsis;\n                    break;\n                }\n\n                var subLength = j === 0\n                    ? estimateLength(textLine, contentWidth, ascCharWidth, cnCharWidth)\n                    : lineWidth > 0\n                    ? Math.floor(textLine.length * contentWidth / lineWidth)\n                    : 0;\n\n                textLine = textLine.substr(0, subLength);\n                lineWidth = getTextWidth(textLine, textFont);\n            }\n\n            if (textLine === '') {\n                textLine = placeholder;\n            }\n\n            textLines[i] = textLine;\n        }\n\n        return textLines.join('\\n');\n    }\n\n    function estimateLength(text, contentWidth, ascCharWidth, cnCharWidth) {\n        var width = 0;\n        var i = 0;\n        for (var len = text.length; i < len && width < contentWidth; i++) {\n            var charCode = text.charCodeAt(i);\n            width += (0 <= charCode && charCode <= 127) ? ascCharWidth : cnCharWidth;\n        }\n        return i;\n    }\n\n    var textContain = {\n\n        getWidth: getTextWidth,\n\n        getBoundingRect: getTextRect,\n\n        adjustTextPositionOnRect: adjustTextPositionOnRect,\n\n        truncateText: truncateText,\n\n        measureText: function (text, textFont) {\n            var ctx = util.getContext();\n            ctx.font = textFont || '12px sans-serif';\n            return ctx.measureText(text);\n        }\n    };\n\n    module.exports = textContain;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.zrender@3.4.4@zrender/lib/contain/text.js\n// module id = 172\n// module chunks = 0","\n\n    var OrdinalScale = require('../scale/Ordinal');\n    var IntervalScale = require('../scale/Interval');\n    require('../scale/Time');\n    require('../scale/Log');\n    var Scale = require('../scale/Scale');\n\n    var numberUtil = require('../util/number');\n    var zrUtil = require('zrender/lib/core/util');\n    var textContain = require('zrender/lib/contain/text');\n    var axisHelper = {};\n\n    /**\n     * Get axis scale extent before niced.\n     * Item of returned array can only be number (including Infinity and NaN).\n     */\n    axisHelper.getScaleExtent = function (scale, model) {\n        var scaleType = scale.type;\n\n        var min = model.getMin();\n        var max = model.getMax();\n        var fixMin = min != null;\n        var fixMax = max != null;\n        var originalExtent = scale.getExtent();\n\n        var axisDataLen;\n        var boundaryGap;\n        var span;\n        if (scaleType === 'ordinal') {\n            axisDataLen = (model.get('data') || []).length;\n        }\n        else {\n            boundaryGap = model.get('boundaryGap');\n            if (!zrUtil.isArray(boundaryGap)) {\n                boundaryGap = [boundaryGap || 0, boundaryGap || 0];\n            }\n            if (typeof boundaryGap[0] === 'boolean') {\n                if (__DEV__) {\n                    console.warn('Boolean type for boundaryGap is only '\n                        + 'allowed for ordinal axis. Please use string in '\n                        + 'percentage instead, e.g., \"20%\". Currently, '\n                        + 'boundaryGap is set to be 0.');\n                }\n                boundaryGap = [0, 0];\n            }\n            boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], 1);\n            boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], 1);\n            span = (originalExtent[1] - originalExtent[0])\n                || Math.abs(originalExtent[0]);\n        }\n\n        // Notice: When min/max is not set (that is, when there are null/undefined,\n        // which is the most common case), these cases should be ensured:\n        // (1) For 'ordinal', show all axis.data.\n        // (2) For others:\n        //      + `boundaryGap` is applied (if min/max set, boundaryGap is\n        //      disabled).\n        //      + If `needCrossZero`, min/max should be zero, otherwise, min/max should\n        //      be the result that originalExtent enlarged by boundaryGap.\n        // (3) If no data, it should be ensured that `scale.setBlank` is set.\n\n        // FIXME\n        // (1) When min/max is 'dataMin' or 'dataMax', should boundaryGap be able to used?\n        // (2) When `needCrossZero` and all data is positive/negative, should it be ensured\n        // that the results processed by boundaryGap are positive/negative?\n\n        if (min == null) {\n            min = scaleType === 'ordinal'\n                ? (axisDataLen ? 0 : NaN)\n                : originalExtent[0] - boundaryGap[0] * span;\n        }\n        if (max == null) {\n            max = scaleType === 'ordinal'\n                ? (axisDataLen ? axisDataLen - 1 : NaN)\n                : originalExtent[1] + boundaryGap[1] * span;\n        }\n\n        if (min === 'dataMin') {\n            min = originalExtent[0];\n        }\n        if (max === 'dataMax') {\n            max = originalExtent[1];\n        }\n\n        (min == null || !isFinite(min)) && (min = NaN);\n        (max == null || !isFinite(max)) && (max = NaN);\n\n        scale.setBlank(zrUtil.eqNaN(min) || zrUtil.eqNaN(max));\n\n        // Evaluate if axis needs cross zero\n        if (model.getNeedCrossZero()) {\n            // Axis is over zero and min is not set\n            if (min > 0 && max > 0 && !fixMin) {\n                min = 0;\n            }\n            // Axis is under zero and max is not set\n            if (min < 0 && max < 0 && !fixMax) {\n                max = 0;\n            }\n        }\n\n        return [min, max];\n    };\n\n    axisHelper.niceScaleExtent = function (scale, model) {\n        var extent = axisHelper.getScaleExtent(scale, model);\n        var fixMin = model.getMin() != null;\n        var fixMax = model.getMax() != null;\n        var splitNumber = model.get('splitNumber');\n\n        if (scale.type === 'log') {\n            scale.base = model.get('logBase');\n        }\n\n        scale.setExtent(extent[0], extent[1]);\n        scale.niceExtent(splitNumber, fixMin, fixMax);\n\n        // Use minInterval to constraint the calculated interval.\n        // If calculated interval is less than minInterval. increase the interval quantity until\n        // it is larger than minInterval.\n        // For example:\n        //  minInterval is 1, calculated interval is 0.2, so increase it to be 1. In this way we can get\n        //  an integer axis.\n        var minInterval = model.get('minInterval');\n        if (isFinite(minInterval) && !fixMin && !fixMax && scale.type === 'interval') {\n            var interval = scale.getInterval();\n            var intervalScale = Math.max(Math.abs(interval), minInterval) / interval;\n            // while (interval < minInterval) {\n            //     var quantity = numberUtil.quantity(interval);\n            //     interval = quantity * 10;\n            //     scaleQuantity *= 10;\n            // }\n            extent = scale.getExtent();\n            var origin = (extent[1] + extent[0]) / 2;\n            scale.setExtent(\n                intervalScale * (extent[0] - origin) + origin,\n                intervalScale * (extent[1] - origin) + origin\n            );\n            scale.niceExtent(splitNumber);\n        }\n\n        // If some one specified the min, max. And the default calculated interval\n        // is not good enough. He can specify the interval. It is often appeared\n        // in angle axis with angle 0 - 360. Interval calculated in interval scale is hard\n        // to be 60.\n        // FIXME\n        var interval = model.get('interval');\n        if (interval != null) {\n            scale.setInterval && scale.setInterval(interval);\n        }\n    };\n\n    /**\n     * @param {module:echarts/model/Model} model\n     * @param {string} [axisType] Default retrieve from model.type\n     * @return {module:echarts/scale/*}\n     */\n    axisHelper.createScaleByModel = function(model, axisType) {\n        axisType = axisType || model.get('type');\n        if (axisType) {\n            switch (axisType) {\n                // Buildin scale\n                case 'category':\n                    return new OrdinalScale(\n                        model.getCategories(), [Infinity, -Infinity]\n                    );\n                case 'value':\n                    return new IntervalScale();\n                // Extended scale, like time and log\n                default:\n                    return (Scale.getClass(axisType) || IntervalScale).create(model);\n            }\n        }\n    };\n\n    /**\n     * Check if the axis corss 0\n     */\n    axisHelper.ifAxisCrossZero = function (axis) {\n        var dataExtent = axis.scale.getExtent();\n        var min = dataExtent[0];\n        var max = dataExtent[1];\n        return !((min > 0 && max > 0) || (min < 0 && max < 0));\n    };\n\n    /**\n     * @param {Array.<number>} tickCoords In axis self coordinate.\n     * @param {Array.<string>} labels\n     * @param {string} font\n     * @param {boolean} isAxisHorizontal\n     * @return {number}\n     */\n    axisHelper.getAxisLabelInterval = function (tickCoords, labels, font, isAxisHorizontal) {\n        // FIXME\n        // 不同角的axis和label，不只是horizontal和vertical.\n\n        var textSpaceTakenRect;\n        var autoLabelInterval = 0;\n        var accumulatedLabelInterval = 0;\n\n        var step = 1;\n        if (labels.length > 40) {\n            // Simple optimization for large amount of labels\n            step = Math.floor(labels.length / 40);\n        }\n\n        for (var i = 0; i < tickCoords.length; i += step) {\n            var tickCoord = tickCoords[i];\n            var rect = textContain.getBoundingRect(\n                labels[i], font, 'center', 'top'\n            );\n            rect[isAxisHorizontal ? 'x' : 'y'] += tickCoord;\n            // FIXME Magic number 1.5\n            rect[isAxisHorizontal ? 'width' : 'height'] *= 1.3;\n            if (!textSpaceTakenRect) {\n                textSpaceTakenRect = rect.clone();\n            }\n            // There is no space for current label;\n            else if (textSpaceTakenRect.intersect(rect)) {\n                accumulatedLabelInterval++;\n                autoLabelInterval = Math.max(autoLabelInterval, accumulatedLabelInterval);\n            }\n            else {\n                textSpaceTakenRect.union(rect);\n                // Reset\n                accumulatedLabelInterval = 0;\n            }\n        }\n        if (autoLabelInterval === 0 && step > 1) {\n            return step;\n        }\n        return (autoLabelInterval + 1) * step - 1;\n    };\n\n    /**\n     * @param {Object} axis\n     * @param {Function} labelFormatter\n     * @return {Array.<string>}\n     */\n    axisHelper.getFormattedLabels = function (axis, labelFormatter) {\n        var scale = axis.scale;\n        var labels = scale.getTicksLabels();\n        var ticks = scale.getTicks();\n        if (typeof labelFormatter === 'string') {\n            labelFormatter = (function (tpl) {\n                return function (val) {\n                    return tpl.replace('{value}', val != null ? val : '');\n                };\n            })(labelFormatter);\n            // Consider empty array\n            return zrUtil.map(labels, labelFormatter);\n        }\n        else if (typeof labelFormatter === 'function') {\n            return zrUtil.map(ticks, function (tick, idx) {\n                return labelFormatter(\n                    axisHelper.getAxisRawValue(axis, tick),\n                    idx\n                );\n            }, this);\n        }\n        else {\n            return labels;\n        }\n    };\n\n    axisHelper.getAxisRawValue = function (axis, value) {\n        // In category axis with data zoom, tick is not the original\n        // index of axis.data. So tick should not be exposed to user\n        // in category axis.\n        return axis.type === 'category' ? axis.scale.getLabel(value) : value;\n    };\n\n    module.exports = axisHelper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.echarts@3.5.4@echarts/lib/coord/axisHelper.js\n// module id = 173\n// module chunks = 0","'use strict';\n/**\n * 曲线辅助模块\n * @module zrender/core/curve\n * @author pissang(https://www.github.com/pissang)\n */\n\n\n    var vec2 = require('./vector');\n    var v2Create = vec2.create;\n    var v2DistSquare = vec2.distSquare;\n    var mathPow = Math.pow;\n    var mathSqrt = Math.sqrt;\n\n    var EPSILON = 1e-8;\n    var EPSILON_NUMERIC = 1e-4;\n\n    var THREE_SQRT = mathSqrt(3);\n    var ONE_THIRD = 1 / 3;\n\n    // 临时变量\n    var _v0 = v2Create();\n    var _v1 = v2Create();\n    var _v2 = v2Create();\n    // var _v3 = vec2.create();\n\n    function isAroundZero(val) {\n        return val > -EPSILON && val < EPSILON;\n    }\n    function isNotAroundZero(val) {\n        return val > EPSILON || val < -EPSILON;\n    }\n    /**\n     * 计算三次贝塞尔值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @return {number}\n     */\n    function cubicAt(p0, p1, p2, p3, t) {\n        var onet = 1 - t;\n        return onet * onet * (onet * p0 + 3 * t * p1)\n             + t * t * (t * p3 + 3 * onet * p2);\n    }\n\n    /**\n     * 计算三次贝塞尔导数值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @return {number}\n     */\n    function cubicDerivativeAt(p0, p1, p2, p3, t) {\n        var onet = 1 - t;\n        return 3 * (\n            ((p1 - p0) * onet + 2 * (p2 - p1) * t) * onet\n            + (p3 - p2) * t * t\n        );\n    }\n\n    /**\n     * 计算三次贝塞尔方程根，使用盛金公式\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} val\n     * @param  {Array.<number>} roots\n     * @return {number} 有效根数目\n     */\n    function cubicRootAt(p0, p1, p2, p3, val, roots) {\n        // Evaluate roots of cubic functions\n        var a = p3 + 3 * (p1 - p2) - p0;\n        var b = 3 * (p2 - p1 * 2 + p0);\n        var c = 3 * (p1  - p0);\n        var d = p0 - val;\n\n        var A = b * b - 3 * a * c;\n        var B = b * c - 9 * a * d;\n        var C = c * c - 3 * b * d;\n\n        var n = 0;\n\n        if (isAroundZero(A) && isAroundZero(B)) {\n            if (isAroundZero(b)) {\n                roots[0] = 0;\n            }\n            else {\n                var t1 = -c / b;  //t1, t2, t3, b is not zero\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = B * B - 4 * A * C;\n\n            if (isAroundZero(disc)) {\n                var K = B / A;\n                var t1 = -b / a + K;  // t1, a is not zero\n                var t2 = -K / 2;  // t2, t3\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var Y1 = A * b + 1.5 * a * (-B + discSqrt);\n                var Y2 = A * b + 1.5 * a * (-B - discSqrt);\n                if (Y1 < 0) {\n                    Y1 = -mathPow(-Y1, ONE_THIRD);\n                }\n                else {\n                    Y1 = mathPow(Y1, ONE_THIRD);\n                }\n                if (Y2 < 0) {\n                    Y2 = -mathPow(-Y2, ONE_THIRD);\n                }\n                else {\n                    Y2 = mathPow(Y2, ONE_THIRD);\n                }\n                var t1 = (-b - (Y1 + Y2)) / (3 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n            else {\n                var T = (2 * A * b - 3 * a * B) / (2 * mathSqrt(A * A * A));\n                var theta = Math.acos(T) / 3;\n                var ASqrt = mathSqrt(A);\n                var tmp = Math.cos(theta);\n\n                var t1 = (-b - 2 * ASqrt * tmp) / (3 * a);\n                var t2 = (-b + ASqrt * (tmp + THREE_SQRT * Math.sin(theta))) / (3 * a);\n                var t3 = (-b + ASqrt * (tmp - THREE_SQRT * Math.sin(theta))) / (3 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n                if (t3 >= 0 && t3 <= 1) {\n                    roots[n++] = t3;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 计算三次贝塞尔方程极限值的位置\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {Array.<number>} extrema\n     * @return {number} 有效数目\n     */\n    function cubicExtrema(p0, p1, p2, p3, extrema) {\n        var b = 6 * p2 - 12 * p1 + 6 * p0;\n        var a = 9 * p1 + 3 * p3 - 3 * p0 - 9 * p2;\n        var c = 3 * p1 - 3 * p0;\n\n        var n = 0;\n        if (isAroundZero(a)) {\n            if (isNotAroundZero(b)) {\n                var t1 = -c / b;\n                if (t1 >= 0 && t1 <=1) {\n                    extrema[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = b * b - 4 * a * c;\n            if (isAroundZero(disc)) {\n                extrema[0] = -b / (2 * a);\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var t1 = (-b + discSqrt) / (2 * a);\n                var t2 = (-b - discSqrt) / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    extrema[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    extrema[n++] = t2;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 细分三次贝塞尔曲线\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @param  {Array.<number>} out\n     */\n    function cubicSubdivide(p0, p1, p2, p3, t, out) {\n        var p01 = (p1 - p0) * t + p0;\n        var p12 = (p2 - p1) * t + p1;\n        var p23 = (p3 - p2) * t + p2;\n\n        var p012 = (p12 - p01) * t + p01;\n        var p123 = (p23 - p12) * t + p12;\n\n        var p0123 = (p123 - p012) * t + p012;\n        // Seg0\n        out[0] = p0;\n        out[1] = p01;\n        out[2] = p012;\n        out[3] = p0123;\n        // Seg1\n        out[4] = p0123;\n        out[5] = p123;\n        out[6] = p23;\n        out[7] = p3;\n    }\n\n    /**\n     * 投射点到三次贝塞尔曲线上，返回投射距离。\n     * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x3\n     * @param {number} y3\n     * @param {number} x\n     * @param {number} y\n     * @param {Array.<number>} [out] 投射点\n     * @return {number}\n     */\n    function cubicProjectPoint(\n        x0, y0, x1, y1, x2, y2, x3, y3,\n        x, y, out\n    ) {\n        // http://pomax.github.io/bezierinfo/#projections\n        var t;\n        var interval = 0.005;\n        var d = Infinity;\n        var prev;\n        var next;\n        var d1;\n        var d2;\n\n        _v0[0] = x;\n        _v0[1] = y;\n\n        // 先粗略估计一下可能的最小距离的 t 值\n        // PENDING\n        for (var _t = 0; _t < 1; _t += 0.05) {\n            _v1[0] = cubicAt(x0, x1, x2, x3, _t);\n            _v1[1] = cubicAt(y0, y1, y2, y3, _t);\n            d1 = v2DistSquare(_v0, _v1);\n            if (d1 < d) {\n                t = _t;\n                d = d1;\n            }\n        }\n        d = Infinity;\n\n        // At most 32 iteration\n        for (var i = 0; i < 32; i++) {\n            if (interval < EPSILON_NUMERIC) {\n                break;\n            }\n            prev = t - interval;\n            next = t + interval;\n            // t - interval\n            _v1[0] = cubicAt(x0, x1, x2, x3, prev);\n            _v1[1] = cubicAt(y0, y1, y2, y3, prev);\n\n            d1 = v2DistSquare(_v1, _v0);\n\n            if (prev >= 0 && d1 < d) {\n                t = prev;\n                d = d1;\n            }\n            else {\n                // t + interval\n                _v2[0] = cubicAt(x0, x1, x2, x3, next);\n                _v2[1] = cubicAt(y0, y1, y2, y3, next);\n                d2 = v2DistSquare(_v2, _v0);\n\n                if (next <= 1 && d2 < d) {\n                    t = next;\n                    d = d2;\n                }\n                else {\n                    interval *= 0.5;\n                }\n            }\n        }\n        // t\n        if (out) {\n            out[0] = cubicAt(x0, x1, x2, x3, t);\n            out[1] = cubicAt(y0, y1, y2, y3, t);\n        }\n        // console.log(interval, i);\n        return mathSqrt(d);\n    }\n\n    /**\n     * 计算二次方贝塞尔值\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @return {number}\n     */\n    function quadraticAt(p0, p1, p2, t) {\n        var onet = 1 - t;\n        return onet * (onet * p0 + 2 * t * p1) + t * t * p2;\n    }\n\n    /**\n     * 计算二次方贝塞尔导数值\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @return {number}\n     */\n    function quadraticDerivativeAt(p0, p1, p2, t) {\n        return 2 * ((1 - t) * (p1 - p0) + t * (p2 - p1));\n    }\n\n    /**\n     * 计算二次方贝塞尔方程根\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @param  {Array.<number>} roots\n     * @return {number} 有效根数目\n     */\n    function quadraticRootAt(p0, p1, p2, val, roots) {\n        var a = p0 - 2 * p1 + p2;\n        var b = 2 * (p1 - p0);\n        var c = p0 - val;\n\n        var n = 0;\n        if (isAroundZero(a)) {\n            if (isNotAroundZero(b)) {\n                var t1 = -c / b;\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = b * b - 4 * a * c;\n            if (isAroundZero(disc)) {\n                var t1 = -b / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var t1 = (-b + discSqrt) / (2 * a);\n                var t2 = (-b - discSqrt) / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 计算二次贝塞尔方程极限值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @return {number}\n     */\n    function quadraticExtremum(p0, p1, p2) {\n        var divider = p0 + p2 - 2 * p1;\n        if (divider === 0) {\n            // p1 is center of p0 and p2\n            return 0.5;\n        }\n        else {\n            return (p0 - p1) / divider;\n        }\n    }\n\n    /**\n     * 细分二次贝塞尔曲线\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @param  {Array.<number>} out\n     */\n    function quadraticSubdivide(p0, p1, p2, t, out) {\n        var p01 = (p1 - p0) * t + p0;\n        var p12 = (p2 - p1) * t + p1;\n        var p012 = (p12 - p01) * t + p01;\n\n        // Seg0\n        out[0] = p0;\n        out[1] = p01;\n        out[2] = p012;\n\n        // Seg1\n        out[3] = p012;\n        out[4] = p12;\n        out[5] = p2;\n    }\n\n    /**\n     * 投射点到二次贝塞尔曲线上，返回投射距离。\n     * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x\n     * @param {number} y\n     * @param {Array.<number>} out 投射点\n     * @return {number}\n     */\n    function quadraticProjectPoint(\n        x0, y0, x1, y1, x2, y2,\n        x, y, out\n    ) {\n        // http://pomax.github.io/bezierinfo/#projections\n        var t;\n        var interval = 0.005;\n        var d = Infinity;\n\n        _v0[0] = x;\n        _v0[1] = y;\n\n        // 先粗略估计一下可能的最小距离的 t 值\n        // PENDING\n        for (var _t = 0; _t < 1; _t += 0.05) {\n            _v1[0] = quadraticAt(x0, x1, x2, _t);\n            _v1[1] = quadraticAt(y0, y1, y2, _t);\n            var d1 = v2DistSquare(_v0, _v1);\n            if (d1 < d) {\n                t = _t;\n                d = d1;\n            }\n        }\n        d = Infinity;\n\n        // At most 32 iteration\n        for (var i = 0; i < 32; i++) {\n            if (interval < EPSILON_NUMERIC) {\n                break;\n            }\n            var prev = t - interval;\n            var next = t + interval;\n            // t - interval\n            _v1[0] = quadraticAt(x0, x1, x2, prev);\n            _v1[1] = quadraticAt(y0, y1, y2, prev);\n\n            var d1 = v2DistSquare(_v1, _v0);\n\n            if (prev >= 0 && d1 < d) {\n                t = prev;\n                d = d1;\n            }\n            else {\n                // t + interval\n                _v2[0] = quadraticAt(x0, x1, x2, next);\n                _v2[1] = quadraticAt(y0, y1, y2, next);\n                var d2 = v2DistSquare(_v2, _v0);\n                if (next <= 1 && d2 < d) {\n                    t = next;\n                    d = d2;\n                }\n                else {\n                    interval *= 0.5;\n                }\n            }\n        }\n        // t\n        if (out) {\n            out[0] = quadraticAt(x0, x1, x2, t);\n            out[1] = quadraticAt(y0, y1, y2, t);\n        }\n        // console.log(interval, i);\n        return mathSqrt(d);\n    }\n\n    module.exports = {\n\n        cubicAt: cubicAt,\n\n        cubicDerivativeAt: cubicDerivativeAt,\n\n        cubicRootAt: cubicRootAt,\n\n        cubicExtrema: cubicExtrema,\n\n        cubicSubdivide: cubicSubdivide,\n\n        cubicProjectPoint: cubicProjectPoint,\n\n        quadraticAt: quadraticAt,\n\n        quadraticDerivativeAt: quadraticDerivativeAt,\n\n        quadraticRootAt: quadraticRootAt,\n\n        quadraticExtremum: quadraticExtremum,\n\n        quadraticSubdivide: quadraticSubdivide,\n\n        quadraticProjectPoint: quadraticProjectPoint\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.zrender@3.4.4@zrender/lib/core/curve.js\n// module id = 174\n// module chunks = 0","\n    var ArrayCtor = typeof Float32Array === 'undefined'\n        ? Array\n        : Float32Array;\n    /**\n     * 3x2矩阵操作类\n     * @exports zrender/tool/matrix\n     */\n    var matrix = {\n        /**\n         * 创建一个单位矩阵\n         * @return {Float32Array|Array.<number>}\n         */\n        create : function() {\n            var out = new ArrayCtor(6);\n            matrix.identity(out);\n\n            return out;\n        },\n        /**\n         * 设置矩阵为单位矩阵\n         * @param {Float32Array|Array.<number>} out\n         */\n        identity : function(out) {\n            out[0] = 1;\n            out[1] = 0;\n            out[2] = 0;\n            out[3] = 1;\n            out[4] = 0;\n            out[5] = 0;\n            return out;\n        },\n        /**\n         * 复制矩阵\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} m\n         */\n        copy: function(out, m) {\n            out[0] = m[0];\n            out[1] = m[1];\n            out[2] = m[2];\n            out[3] = m[3];\n            out[4] = m[4];\n            out[5] = m[5];\n            return out;\n        },\n        /**\n         * 矩阵相乘\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} m1\n         * @param {Float32Array|Array.<number>} m2\n         */\n        mul : function (out, m1, m2) {\n            // Consider matrix.mul(m, m2, m);\n            // where out is the same as m2.\n            // So use temp variable to escape error.\n            var out0 = m1[0] * m2[0] + m1[2] * m2[1];\n            var out1 = m1[1] * m2[0] + m1[3] * m2[1];\n            var out2 = m1[0] * m2[2] + m1[2] * m2[3];\n            var out3 = m1[1] * m2[2] + m1[3] * m2[3];\n            var out4 = m1[0] * m2[4] + m1[2] * m2[5] + m1[4];\n            var out5 = m1[1] * m2[4] + m1[3] * m2[5] + m1[5];\n            out[0] = out0;\n            out[1] = out1;\n            out[2] = out2;\n            out[3] = out3;\n            out[4] = out4;\n            out[5] = out5;\n            return out;\n        },\n        /**\n         * 平移变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {Float32Array|Array.<number>} v\n         */\n        translate : function(out, a, v) {\n            out[0] = a[0];\n            out[1] = a[1];\n            out[2] = a[2];\n            out[3] = a[3];\n            out[4] = a[4] + v[0];\n            out[5] = a[5] + v[1];\n            return out;\n        },\n        /**\n         * 旋转变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {number} rad\n         */\n        rotate : function(out, a, rad) {\n            var aa = a[0];\n            var ac = a[2];\n            var atx = a[4];\n            var ab = a[1];\n            var ad = a[3];\n            var aty = a[5];\n            var st = Math.sin(rad);\n            var ct = Math.cos(rad);\n\n            out[0] = aa * ct + ab * st;\n            out[1] = -aa * st + ab * ct;\n            out[2] = ac * ct + ad * st;\n            out[3] = -ac * st + ct * ad;\n            out[4] = ct * atx + st * aty;\n            out[5] = ct * aty - st * atx;\n            return out;\n        },\n        /**\n         * 缩放变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {Float32Array|Array.<number>} v\n         */\n        scale : function(out, a, v) {\n            var vx = v[0];\n            var vy = v[1];\n            out[0] = a[0] * vx;\n            out[1] = a[1] * vy;\n            out[2] = a[2] * vx;\n            out[3] = a[3] * vy;\n            out[4] = a[4] * vx;\n            out[5] = a[5] * vy;\n            return out;\n        },\n        /**\n         * 求逆矩阵\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         */\n        invert : function(out, a) {\n\n            var aa = a[0];\n            var ac = a[2];\n            var atx = a[4];\n            var ab = a[1];\n            var ad = a[3];\n            var aty = a[5];\n\n            var det = aa * ad - ab * ac;\n            if (!det) {\n                return null;\n            }\n            det = 1.0 / det;\n\n            out[0] = ad * det;\n            out[1] = -ab * det;\n            out[2] = -ac * det;\n            out[3] = aa * det;\n            out[4] = (ac * aty - ad * atx) * det;\n            out[5] = (ab * atx - aa * aty) * det;\n            return out;\n        }\n    };\n\n    module.exports = matrix;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.zrender@3.4.4@zrender/lib/core/matrix.js\n// module id = 175\n// module chunks = 0","'use strict';\n/**\n * 事件辅助类\n * @module zrender/core/event\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\n\n\n    var Eventful = require('../mixin/Eventful');\n    var env = require('./env');\n\n    var isDomLevel2 = (typeof window !== 'undefined') && !!window.addEventListener;\n\n    function getBoundingClientRect(el) {\n        // BlackBerry 5, iOS 3 (original iPhone) don't have getBoundingRect\n        return el.getBoundingClientRect ? el.getBoundingClientRect() : {left: 0, top: 0};\n    }\n\n    // `calculate` is optional, default false\n    function clientToLocal(el, e, out, calculate) {\n        out = out || {};\n\n        // According to the W3C Working Draft, offsetX and offsetY should be relative\n        // to the padding edge of the target element. The only browser using this convention\n        // is IE. Webkit uses the border edge, Opera uses the content edge, and FireFox does\n        // not support the properties.\n        // (see http://www.jacklmoore.com/notes/mouse-position/)\n        // In zr painter.dom, padding edge equals to border edge.\n\n        // FIXME\n        // When mousemove event triggered on ec tooltip, target is not zr painter.dom, and\n        // offsetX/Y is relative to e.target, where the calculation of zrX/Y via offsetX/Y\n        // is too complex. So css-transfrom dont support in this case temporarily.\n        if (calculate || !env.canvasSupported) {\n            defaultGetZrXY(el, e, out);\n        }\n        // Caution: In FireFox, layerX/layerY Mouse position relative to the closest positioned\n        // ancestor element, so we should make sure el is positioned (e.g., not position:static).\n        // BTW1, Webkit don't return the same results as FF in non-simple cases (like add\n        // zoom-factor, overflow / opacity layers, transforms ...)\n        // BTW2, (ev.offsetY || ev.pageY - $(ev.target).offset().top) is not correct in preserve-3d.\n        // <https://bugs.jquery.com/ticket/8523#comment:14>\n        // BTW3, In ff, offsetX/offsetY is always 0.\n        else if (env.browser.firefox && e.layerX != null && e.layerX !== e.offsetX) {\n            out.zrX = e.layerX;\n            out.zrY = e.layerY;\n        }\n        // For IE6+, chrome, safari, opera. (When will ff support offsetX?)\n        else if (e.offsetX != null) {\n            out.zrX = e.offsetX;\n            out.zrY = e.offsetY;\n        }\n        // For some other device, e.g., IOS safari.\n        else {\n            defaultGetZrXY(el, e, out);\n        }\n\n        return out;\n    }\n\n    function defaultGetZrXY(el, e, out) {\n        // This well-known method below does not support css transform.\n        var box = getBoundingClientRect(el);\n        out.zrX = e.clientX - box.left;\n        out.zrY = e.clientY - box.top;\n    }\n\n    /**\n     * 如果存在第三方嵌入的一些dom触发的事件，或touch事件，需要转换一下事件坐标.\n     * `calculate` is optional, default false.\n     */\n    function normalizeEvent(el, e, calculate) {\n\n        e = e || window.event;\n\n        if (e.zrX != null) {\n            return e;\n        }\n\n        var eventType = e.type;\n        var isTouch = eventType && eventType.indexOf('touch') >= 0;\n\n        if (!isTouch) {\n            clientToLocal(el, e, e, calculate);\n            e.zrDelta = (e.wheelDelta) ? e.wheelDelta / 120 : -(e.detail || 0) / 3;\n        }\n        else {\n            var touch = eventType != 'touchend'\n                ? e.targetTouches[0]\n                : e.changedTouches[0];\n            touch && clientToLocal(el, touch, e, calculate);\n        }\n\n        return e;\n    }\n\n    function addEventListener(el, name, handler) {\n        if (isDomLevel2) {\n            el.addEventListener(name, handler);\n        }\n        else {\n            el.attachEvent('on' + name, handler);\n        }\n    }\n\n    function removeEventListener(el, name, handler) {\n        if (isDomLevel2) {\n            el.removeEventListener(name, handler);\n        }\n        else {\n            el.detachEvent('on' + name, handler);\n        }\n    }\n\n    /**\n     * preventDefault and stopPropagation.\n     * Notice: do not do that in zrender. Upper application\n     * do that if necessary.\n     *\n     * @memberOf module:zrender/core/event\n     * @method\n     * @param {Event} e : event对象\n     */\n    var stop = isDomLevel2\n        ? function (e) {\n            e.preventDefault();\n            e.stopPropagation();\n            e.cancelBubble = true;\n        }\n        : function (e) {\n            e.returnValue = false;\n            e.cancelBubble = true;\n        };\n\n    module.exports = {\n        clientToLocal: clientToLocal,\n        normalizeEvent: normalizeEvent,\n        addEventListener: addEventListener,\n        removeEventListener: removeEventListener,\n\n        stop: stop,\n        // 做向上兼容\n        Dispatcher: Eventful\n    };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.zrender@3.4.4@zrender/lib/core/event.js\n// module id = 176\n// module chunks = 0","/**\n * 事件扩展\n * @module zrender/mixin/Eventful\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\n\n\n    var arrySlice = Array.prototype.slice;\n\n    /**\n     * 事件分发器\n     * @alias module:zrender/mixin/Eventful\n     * @constructor\n     */\n    var Eventful = function () {\n        this._$handlers = {};\n    };\n\n    Eventful.prototype = {\n\n        constructor: Eventful,\n\n        /**\n         * 单次触发绑定，trigger后销毁\n         *\n         * @param {string} event 事件名\n         * @param {Function} handler 响应函数\n         * @param {Object} context\n         */\n        one: function (event, handler, context) {\n            var _h = this._$handlers;\n\n            if (!handler || !event) {\n                return this;\n            }\n\n            if (!_h[event]) {\n                _h[event] = [];\n            }\n\n            for (var i = 0; i < _h[event].length; i++) {\n                if (_h[event][i].h === handler) {\n                    return this;\n                }\n            }\n\n            _h[event].push({\n                h: handler,\n                one: true,\n                ctx: context || this\n            });\n\n            return this;\n        },\n\n        /**\n         * 绑定事件\n         * @param {string} event 事件名\n         * @param {Function} handler 事件处理函数\n         * @param {Object} [context]\n         */\n        on: function (event, handler, context) {\n            var _h = this._$handlers;\n\n            if (!handler || !event) {\n                return this;\n            }\n\n            if (!_h[event]) {\n                _h[event] = [];\n            }\n\n            for (var i = 0; i < _h[event].length; i++) {\n                if (_h[event][i].h === handler) {\n                    return this;\n                }\n            }\n\n            _h[event].push({\n                h: handler,\n                one: false,\n                ctx: context || this\n            });\n\n            return this;\n        },\n\n        /**\n         * 是否绑定了事件\n         * @param  {string}  event\n         * @return {boolean}\n         */\n        isSilent: function (event) {\n            var _h = this._$handlers;\n            return _h[event] && _h[event].length;\n        },\n\n        /**\n         * 解绑事件\n         * @param {string} event 事件名\n         * @param {Function} [handler] 事件处理函数\n         */\n        off: function (event, handler) {\n            var _h = this._$handlers;\n\n            if (!event) {\n                this._$handlers = {};\n                return this;\n            }\n\n            if (handler) {\n                if (_h[event]) {\n                    var newList = [];\n                    for (var i = 0, l = _h[event].length; i < l; i++) {\n                        if (_h[event][i]['h'] != handler) {\n                            newList.push(_h[event][i]);\n                        }\n                    }\n                    _h[event] = newList;\n                }\n\n                if (_h[event] && _h[event].length === 0) {\n                    delete _h[event];\n                }\n            }\n            else {\n                delete _h[event];\n            }\n\n            return this;\n        },\n\n        /**\n         * 事件分发\n         *\n         * @param {string} type 事件类型\n         */\n        trigger: function (type) {\n            if (this._$handlers[type]) {\n                var args = arguments;\n                var argLen = args.length;\n\n                if (argLen > 3) {\n                    args = arrySlice.call(args, 1);\n                }\n\n                var _h = this._$handlers[type];\n                var len = _h.length;\n                for (var i = 0; i < len;) {\n                    // Optimize advise from backbone\n                    switch (argLen) {\n                        case 1:\n                            _h[i]['h'].call(_h[i]['ctx']);\n                            break;\n                        case 2:\n                            _h[i]['h'].call(_h[i]['ctx'], args[1]);\n                            break;\n                        case 3:\n                            _h[i]['h'].call(_h[i]['ctx'], args[1], args[2]);\n                            break;\n                        default:\n                            // have more than 2 given arguments\n                            _h[i]['h'].apply(_h[i]['ctx'], args);\n                            break;\n                    }\n\n                    if (_h[i]['one']) {\n                        _h.splice(i, 1);\n                        len--;\n                    }\n                    else {\n                        i++;\n                    }\n                }\n            }\n\n            return this;\n        },\n\n        /**\n         * 带有context的事件分发, 最后一个参数是事件回调的context\n         * @param {string} type 事件类型\n         */\n        triggerWithContext: function (type) {\n            if (this._$handlers[type]) {\n                var args = arguments;\n                var argLen = args.length;\n\n                if (argLen > 4) {\n                    args = arrySlice.call(args, 1, args.length - 1);\n                }\n                var ctx = args[args.length - 1];\n\n                var _h = this._$handlers[type];\n                var len = _h.length;\n                for (var i = 0; i < len;) {\n                    // Optimize advise from backbone\n                    switch (argLen) {\n                        case 1:\n                            _h[i]['h'].call(ctx);\n                            break;\n                        case 2:\n                            _h[i]['h'].call(ctx, args[1]);\n                            break;\n                        case 3:\n                            _h[i]['h'].call(ctx, args[1], args[2]);\n                            break;\n                        default:\n                            // have more than 2 given arguments\n                            _h[i]['h'].apply(ctx, args);\n                            break;\n                    }\n\n                    if (_h[i]['one']) {\n                        _h.splice(i, 1);\n                        len--;\n                    }\n                    else {\n                        i++;\n                    }\n                }\n            }\n\n            return this;\n        }\n    };\n\n    // 对象可以通过 onxxxx 绑定事件\n    /**\n     * @event module:zrender/mixin/Eventful#onclick\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseover\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseout\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousemove\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousewheel\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousedown\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseup\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondrag\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragstart\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragend\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragenter\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragleave\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragover\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondrop\n     * @type {Function}\n     * @default null\n     */\n\n    module.exports = Eventful;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.zrender@3.4.4@zrender/lib/mixin/Eventful.js\n// module id = 177\n// module chunks = 0","/**\n * @module zrender/tool/color\n */\n\n\n    var LRU = require('../core/LRU');\n\n    var kCSSColorTable = {\n        'transparent': [0,0,0,0], 'aliceblue': [240,248,255,1],\n        'antiquewhite': [250,235,215,1], 'aqua': [0,255,255,1],\n        'aquamarine': [127,255,212,1], 'azure': [240,255,255,1],\n        'beige': [245,245,220,1], 'bisque': [255,228,196,1],\n        'black': [0,0,0,1], 'blanchedalmond': [255,235,205,1],\n        'blue': [0,0,255,1], 'blueviolet': [138,43,226,1],\n        'brown': [165,42,42,1], 'burlywood': [222,184,135,1],\n        'cadetblue': [95,158,160,1], 'chartreuse': [127,255,0,1],\n        'chocolate': [210,105,30,1], 'coral': [255,127,80,1],\n        'cornflowerblue': [100,149,237,1], 'cornsilk': [255,248,220,1],\n        'crimson': [220,20,60,1], 'cyan': [0,255,255,1],\n        'darkblue': [0,0,139,1], 'darkcyan': [0,139,139,1],\n        'darkgoldenrod': [184,134,11,1], 'darkgray': [169,169,169,1],\n        'darkgreen': [0,100,0,1], 'darkgrey': [169,169,169,1],\n        'darkkhaki': [189,183,107,1], 'darkmagenta': [139,0,139,1],\n        'darkolivegreen': [85,107,47,1], 'darkorange': [255,140,0,1],\n        'darkorchid': [153,50,204,1], 'darkred': [139,0,0,1],\n        'darksalmon': [233,150,122,1], 'darkseagreen': [143,188,143,1],\n        'darkslateblue': [72,61,139,1], 'darkslategray': [47,79,79,1],\n        'darkslategrey': [47,79,79,1], 'darkturquoise': [0,206,209,1],\n        'darkviolet': [148,0,211,1], 'deeppink': [255,20,147,1],\n        'deepskyblue': [0,191,255,1], 'dimgray': [105,105,105,1],\n        'dimgrey': [105,105,105,1], 'dodgerblue': [30,144,255,1],\n        'firebrick': [178,34,34,1], 'floralwhite': [255,250,240,1],\n        'forestgreen': [34,139,34,1], 'fuchsia': [255,0,255,1],\n        'gainsboro': [220,220,220,1], 'ghostwhite': [248,248,255,1],\n        'gold': [255,215,0,1], 'goldenrod': [218,165,32,1],\n        'gray': [128,128,128,1], 'green': [0,128,0,1],\n        'greenyellow': [173,255,47,1], 'grey': [128,128,128,1],\n        'honeydew': [240,255,240,1], 'hotpink': [255,105,180,1],\n        'indianred': [205,92,92,1], 'indigo': [75,0,130,1],\n        'ivory': [255,255,240,1], 'khaki': [240,230,140,1],\n        'lavender': [230,230,250,1], 'lavenderblush': [255,240,245,1],\n        'lawngreen': [124,252,0,1], 'lemonchiffon': [255,250,205,1],\n        'lightblue': [173,216,230,1], 'lightcoral': [240,128,128,1],\n        'lightcyan': [224,255,255,1], 'lightgoldenrodyellow': [250,250,210,1],\n        'lightgray': [211,211,211,1], 'lightgreen': [144,238,144,1],\n        'lightgrey': [211,211,211,1], 'lightpink': [255,182,193,1],\n        'lightsalmon': [255,160,122,1], 'lightseagreen': [32,178,170,1],\n        'lightskyblue': [135,206,250,1], 'lightslategray': [119,136,153,1],\n        'lightslategrey': [119,136,153,1], 'lightsteelblue': [176,196,222,1],\n        'lightyellow': [255,255,224,1], 'lime': [0,255,0,1],\n        'limegreen': [50,205,50,1], 'linen': [250,240,230,1],\n        'magenta': [255,0,255,1], 'maroon': [128,0,0,1],\n        'mediumaquamarine': [102,205,170,1], 'mediumblue': [0,0,205,1],\n        'mediumorchid': [186,85,211,1], 'mediumpurple': [147,112,219,1],\n        'mediumseagreen': [60,179,113,1], 'mediumslateblue': [123,104,238,1],\n        'mediumspringgreen': [0,250,154,1], 'mediumturquoise': [72,209,204,1],\n        'mediumvioletred': [199,21,133,1], 'midnightblue': [25,25,112,1],\n        'mintcream': [245,255,250,1], 'mistyrose': [255,228,225,1],\n        'moccasin': [255,228,181,1], 'navajowhite': [255,222,173,1],\n        'navy': [0,0,128,1], 'oldlace': [253,245,230,1],\n        'olive': [128,128,0,1], 'olivedrab': [107,142,35,1],\n        'orange': [255,165,0,1], 'orangered': [255,69,0,1],\n        'orchid': [218,112,214,1], 'palegoldenrod': [238,232,170,1],\n        'palegreen': [152,251,152,1], 'paleturquoise': [175,238,238,1],\n        'palevioletred': [219,112,147,1], 'papayawhip': [255,239,213,1],\n        'peachpuff': [255,218,185,1], 'peru': [205,133,63,1],\n        'pink': [255,192,203,1], 'plum': [221,160,221,1],\n        'powderblue': [176,224,230,1], 'purple': [128,0,128,1],\n        'red': [255,0,0,1], 'rosybrown': [188,143,143,1],\n        'royalblue': [65,105,225,1], 'saddlebrown': [139,69,19,1],\n        'salmon': [250,128,114,1], 'sandybrown': [244,164,96,1],\n        'seagreen': [46,139,87,1], 'seashell': [255,245,238,1],\n        'sienna': [160,82,45,1], 'silver': [192,192,192,1],\n        'skyblue': [135,206,235,1], 'slateblue': [106,90,205,1],\n        'slategray': [112,128,144,1], 'slategrey': [112,128,144,1],\n        'snow': [255,250,250,1], 'springgreen': [0,255,127,1],\n        'steelblue': [70,130,180,1], 'tan': [210,180,140,1],\n        'teal': [0,128,128,1], 'thistle': [216,191,216,1],\n        'tomato': [255,99,71,1], 'turquoise': [64,224,208,1],\n        'violet': [238,130,238,1], 'wheat': [245,222,179,1],\n        'white': [255,255,255,1], 'whitesmoke': [245,245,245,1],\n        'yellow': [255,255,0,1], 'yellowgreen': [154,205,50,1]\n    };\n\n    function clampCssByte(i) {  // Clamp to integer 0 .. 255.\n        i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n        return i < 0 ? 0 : i > 255 ? 255 : i;\n    }\n\n    function clampCssAngle(i) {  // Clamp to integer 0 .. 360.\n        i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n        return i < 0 ? 0 : i > 360 ? 360 : i;\n    }\n\n    function clampCssFloat(f) {  // Clamp to float 0.0 .. 1.0.\n        return f < 0 ? 0 : f > 1 ? 1 : f;\n    }\n\n    function parseCssInt(str) {  // int or percentage.\n        if (str.length && str.charAt(str.length - 1) === '%') {\n            return clampCssByte(parseFloat(str) / 100 * 255);\n        }\n        return clampCssByte(parseInt(str, 10));\n    }\n\n    function parseCssFloat(str) {  // float or percentage.\n        if (str.length && str.charAt(str.length - 1) === '%') {\n            return clampCssFloat(parseFloat(str) / 100);\n        }\n        return clampCssFloat(parseFloat(str));\n    }\n\n    function cssHueToRgb(m1, m2, h) {\n        if (h < 0) {\n            h += 1;\n        }\n        else if (h > 1) {\n            h -= 1;\n        }\n\n        if (h * 6 < 1) {\n            return m1 + (m2 - m1) * h * 6;\n        }\n        if (h * 2 < 1) {\n            return m2;\n        }\n        if (h * 3 < 2) {\n            return m1 + (m2 - m1) * (2/3 - h) * 6;\n        }\n        return m1;\n    }\n\n    function lerp(a, b, p) {\n        return a + (b - a) * p;\n    }\n\n    function setRgba(out, r, g, b, a) {\n        out[0] = r; out[1] = g; out[2] = b; out[3] = a;\n        return out;\n    }\n    function copyRgba(out, a) {\n        out[0] = a[0]; out[1] = a[1]; out[2] = a[2]; out[3] = a[3];\n        return out;\n    }\n    var colorCache = new LRU(20);\n    var lastRemovedArr = null;\n    function putToCache(colorStr, rgbaArr) {\n        // Reuse removed array\n        if (lastRemovedArr) {\n            copyRgba(lastRemovedArr, rgbaArr);\n        }\n        lastRemovedArr = colorCache.put(colorStr, lastRemovedArr || (rgbaArr.slice()));\n    }\n    /**\n     * @param {string} colorStr\n     * @param {Array.<number>} out\n     * @return {Array.<number>}\n     * @memberOf module:zrender/util/color\n     */\n    function parse(colorStr, rgbaArr) {\n        if (!colorStr) {\n            return;\n        }\n        rgbaArr = rgbaArr || [];\n\n        var cached = colorCache.get(colorStr);\n        if (cached) {\n            return copyRgba(rgbaArr, cached);\n        }\n\n        // colorStr may be not string\n        colorStr = colorStr + '';\n        // Remove all whitespace, not compliant, but should just be more accepting.\n        var str = colorStr.replace(/ /g, '').toLowerCase();\n\n        // Color keywords (and transparent) lookup.\n        if (str in kCSSColorTable) {\n            copyRgba(rgbaArr, kCSSColorTable[str]);\n            putToCache(colorStr, rgbaArr);\n            return rgbaArr;\n        }\n\n        // #abc and #abc123 syntax.\n        if (str.charAt(0) === '#') {\n            if (str.length === 4) {\n                var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n                if (!(iv >= 0 && iv <= 0xfff)) {\n                    setRgba(rgbaArr, 0, 0, 0, 1);\n                    return;  // Covers NaN.\n                }\n                setRgba(rgbaArr,\n                    ((iv & 0xf00) >> 4) | ((iv & 0xf00) >> 8),\n                    (iv & 0xf0) | ((iv & 0xf0) >> 4),\n                    (iv & 0xf) | ((iv & 0xf) << 4),\n                    1\n                );\n                putToCache(colorStr, rgbaArr);\n                return rgbaArr;\n            }\n            else if (str.length === 7) {\n                var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n                if (!(iv >= 0 && iv <= 0xffffff)) {\n                    setRgba(rgbaArr, 0, 0, 0, 1);\n                    return;  // Covers NaN.\n                }\n                setRgba(rgbaArr,\n                    (iv & 0xff0000) >> 16,\n                    (iv & 0xff00) >> 8,\n                    iv & 0xff,\n                    1\n                );\n                putToCache(colorStr, rgbaArr);\n                return rgbaArr;\n            }\n\n            return;\n        }\n        var op = str.indexOf('('), ep = str.indexOf(')');\n        if (op !== -1 && ep + 1 === str.length) {\n            var fname = str.substr(0, op);\n            var params = str.substr(op + 1, ep - (op + 1)).split(',');\n            var alpha = 1;  // To allow case fallthrough.\n            switch (fname) {\n                case 'rgba':\n                    if (params.length !== 4) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    alpha = parseCssFloat(params.pop()); // jshint ignore:line\n                // Fall through.\n                case 'rgb':\n                    if (params.length !== 3) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    setRgba(rgbaArr,\n                        parseCssInt(params[0]),\n                        parseCssInt(params[1]),\n                        parseCssInt(params[2]),\n                        alpha\n                    );\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                case 'hsla':\n                    if (params.length !== 4) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    params[3] = parseCssFloat(params[3]);\n                    hsla2rgba(params, rgbaArr);\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                case 'hsl':\n                    if (params.length !== 3) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    hsla2rgba(params, rgbaArr);\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                default:\n                    return;\n            }\n        }\n\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return;\n    }\n\n    /**\n     * @param {Array.<number>} hsla\n     * @param {Array.<number>} rgba\n     * @return {Array.<number>} rgba\n     */\n    function hsla2rgba(hsla, rgba) {\n        var h = (((parseFloat(hsla[0]) % 360) + 360) % 360) / 360;  // 0 .. 1\n        // NOTE(deanm): According to the CSS spec s/l should only be\n        // percentages, but we don't bother and let float or percentage.\n        var s = parseCssFloat(hsla[1]);\n        var l = parseCssFloat(hsla[2]);\n        var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n        var m1 = l * 2 - m2;\n\n        rgba = rgba || [];\n        setRgba(rgba,\n            clampCssByte(cssHueToRgb(m1, m2, h + 1 / 3) * 255),\n            clampCssByte(cssHueToRgb(m1, m2, h) * 255),\n            clampCssByte(cssHueToRgb(m1, m2, h - 1 / 3) * 255),\n            1\n        );\n\n        if (hsla.length === 4) {\n            rgba[3] = hsla[3];\n        }\n\n        return rgba;\n    }\n\n    /**\n     * @param {Array.<number>} rgba\n     * @return {Array.<number>} hsla\n     */\n    function rgba2hsla(rgba) {\n        if (!rgba) {\n            return;\n        }\n\n        // RGB from 0 to 255\n        var R = rgba[0] / 255;\n        var G = rgba[1] / 255;\n        var B = rgba[2] / 255;\n\n        var vMin = Math.min(R, G, B); // Min. value of RGB\n        var vMax = Math.max(R, G, B); // Max. value of RGB\n        var delta = vMax - vMin; // Delta RGB value\n\n        var L = (vMax + vMin) / 2;\n        var H;\n        var S;\n        // HSL results from 0 to 1\n        if (delta === 0) {\n            H = 0;\n            S = 0;\n        }\n        else {\n            if (L < 0.5) {\n                S = delta / (vMax + vMin);\n            }\n            else {\n                S = delta / (2 - vMax - vMin);\n            }\n\n            var deltaR = (((vMax - R) / 6) + (delta / 2)) / delta;\n            var deltaG = (((vMax - G) / 6) + (delta / 2)) / delta;\n            var deltaB = (((vMax - B) / 6) + (delta / 2)) / delta;\n\n            if (R === vMax) {\n                H = deltaB - deltaG;\n            }\n            else if (G === vMax) {\n                H = (1 / 3) + deltaR - deltaB;\n            }\n            else if (B === vMax) {\n                H = (2 / 3) + deltaG - deltaR;\n            }\n\n            if (H < 0) {\n                H += 1;\n            }\n\n            if (H > 1) {\n                H -= 1;\n            }\n        }\n\n        var hsla = [H * 360, S, L];\n\n        if (rgba[3] != null) {\n            hsla.push(rgba[3]);\n        }\n\n        return hsla;\n    }\n\n    /**\n     * @param {string} color\n     * @param {number} level\n     * @return {string}\n     * @memberOf module:zrender/util/color\n     */\n    function lift(color, level) {\n        var colorArr = parse(color);\n        if (colorArr) {\n            for (var i = 0; i < 3; i++) {\n                if (level < 0) {\n                    colorArr[i] = colorArr[i] * (1 - level) | 0;\n                }\n                else {\n                    colorArr[i] = ((255 - colorArr[i]) * level + colorArr[i]) | 0;\n                }\n            }\n            return stringify(colorArr, colorArr.length === 4 ? 'rgba' : 'rgb');\n        }\n    }\n\n    /**\n     * @param {string} color\n     * @return {string}\n     * @memberOf module:zrender/util/color\n     */\n    function toHex(color, level) {\n        var colorArr = parse(color);\n        if (colorArr) {\n            return ((1 << 24) + (colorArr[0] << 16) + (colorArr[1] << 8) + (+colorArr[2])).toString(16).slice(1);\n        }\n    }\n\n    /**\n     * Map value to color. Faster than mapToColor methods because color is represented by rgba array.\n     * @param {number} normalizedValue A float between 0 and 1.\n     * @param {Array.<Array.<number>>} colors List of rgba color array\n     * @param {Array.<number>} [out] Mapped gba color array\n     * @return {Array.<number>} will be null/undefined if input illegal.\n     */\n    function fastMapToColor(normalizedValue, colors, out) {\n        if (!(colors && colors.length)\n            || !(normalizedValue >= 0 && normalizedValue <= 1)\n        ) {\n            return;\n        }\n\n        out = out || [];\n\n        var value = normalizedValue * (colors.length - 1);\n        var leftIndex = Math.floor(value);\n        var rightIndex = Math.ceil(value);\n        var leftColor = colors[leftIndex];\n        var rightColor = colors[rightIndex];\n        var dv = value - leftIndex;\n        out[0] = clampCssByte(lerp(leftColor[0], rightColor[0], dv));\n        out[1] = clampCssByte(lerp(leftColor[1], rightColor[1], dv));\n        out[2] = clampCssByte(lerp(leftColor[2], rightColor[2], dv));\n        out[3] = clampCssFloat(lerp(leftColor[3], rightColor[3], dv));\n\n        return out;\n    }\n    /**\n     * @param {number} normalizedValue A float between 0 and 1.\n     * @param {Array.<string>} colors Color list.\n     * @param {boolean=} fullOutput Default false.\n     * @return {(string|Object)} Result color. If fullOutput,\n     *                           return {color: ..., leftIndex: ..., rightIndex: ..., value: ...},\n     * @memberOf module:zrender/util/color\n     */\n    function mapToColor(normalizedValue, colors, fullOutput) {\n        if (!(colors && colors.length)\n            || !(normalizedValue >= 0 && normalizedValue <= 1)\n        ) {\n            return;\n        }\n\n        var value = normalizedValue * (colors.length - 1);\n        var leftIndex = Math.floor(value);\n        var rightIndex = Math.ceil(value);\n        var leftColor = parse(colors[leftIndex]);\n        var rightColor = parse(colors[rightIndex]);\n        var dv = value - leftIndex;\n\n        var color = stringify(\n            [\n                clampCssByte(lerp(leftColor[0], rightColor[0], dv)),\n                clampCssByte(lerp(leftColor[1], rightColor[1], dv)),\n                clampCssByte(lerp(leftColor[2], rightColor[2], dv)),\n                clampCssFloat(lerp(leftColor[3], rightColor[3], dv))\n            ],\n            'rgba'\n        );\n\n        return fullOutput\n            ? {\n                color: color,\n                leftIndex: leftIndex,\n                rightIndex: rightIndex,\n                value: value\n            }\n            : color;\n    }\n\n    /**\n     * @param {string} color\n     * @param {number=} h 0 ~ 360, ignore when null.\n     * @param {number=} s 0 ~ 1, ignore when null.\n     * @param {number=} l 0 ~ 1, ignore when null.\n     * @return {string} Color string in rgba format.\n     * @memberOf module:zrender/util/color\n     */\n    function modifyHSL(color, h, s, l) {\n        color = parse(color);\n\n        if (color) {\n            color = rgba2hsla(color);\n            h != null && (color[0] = clampCssAngle(h));\n            s != null && (color[1] = parseCssFloat(s));\n            l != null && (color[2] = parseCssFloat(l));\n\n            return stringify(hsla2rgba(color), 'rgba');\n        }\n    }\n\n    /**\n     * @param {string} color\n     * @param {number=} alpha 0 ~ 1\n     * @return {string} Color string in rgba format.\n     * @memberOf module:zrender/util/color\n     */\n    function modifyAlpha(color, alpha) {\n        color = parse(color);\n\n        if (color && alpha != null) {\n            color[3] = clampCssFloat(alpha);\n            return stringify(color, 'rgba');\n        }\n    }\n\n    /**\n     * @param {Array.<number>} arrColor like [12,33,44,0.4]\n     * @param {string} type 'rgba', 'hsva', ...\n     * @return {string} Result color. (If input illegal, return undefined).\n     */\n    function stringify(arrColor, type) {\n        if (!arrColor || !arrColor.length) {\n            return;\n        }\n        var colorStr = arrColor[0] + ',' + arrColor[1] + ',' + arrColor[2];\n        if (type === 'rgba' || type === 'hsva' || type === 'hsla') {\n            colorStr += ',' + arrColor[3];\n        }\n        return type + '(' + colorStr + ')';\n    }\n\n    module.exports = {\n        parse: parse,\n        lift: lift,\n        toHex: toHex,\n        fastMapToColor: fastMapToColor,\n        mapToColor: mapToColor,\n        modifyHSL: modifyHSL,\n        modifyAlpha: modifyAlpha,\n        stringify: stringify\n    };\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.zrender@3.4.4@zrender/lib/tool/color.js\n// module id = 178\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Model = require('../../model/Model');\n    var each = zrUtil.each;\n    var curry = zrUtil.curry;\n\n    var helper = {};\n\n    // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n    // allAxesInfo should be updated when setOption performed.\n    helper.collect = function (ecModel, api) {\n        var result = {\n            /**\n             * key: makeKey(axis.model)\n             * value: {\n             *      axis,\n             *      coordSys,\n             *      axisPointerModel,\n             *      triggerTooltip,\n             *      involveSeries,\n             *      snap,\n             *      seriesModels,\n             *      seriesDataCount\n             * }\n             */\n            axesInfo: {},\n            seriesInvolved: false,\n            /**\n             * key: makeKey(coordSys.model)\n             * value: Object: key makeKey(axis.model), value: axisInfo\n             */\n            coordSysAxesInfo: {},\n            coordSysMap: {}\n        };\n\n        collectAxesInfo(result, ecModel, api);\n\n        // Check seriesInvolved for performance, in case too many series in some chart.\n        result.seriesInvolved && collectSeriesInfo(result, ecModel);\n\n        return result;\n    };\n\n    function collectAxesInfo(result, ecModel, api) {\n        var globalTooltipModel = ecModel.getComponent('tooltip');\n        var globalAxisPointerModel = ecModel.getComponent('axisPointer');\n        // links can only be set on global.\n        var linksOption = globalAxisPointerModel.get('link', true) || [];\n        var linkGroups = [];\n\n        // Collect axes info.\n        each(api.getCoordinateSystems(), function (coordSys) {\n            // Some coordinate system do not support axes, like geo.\n            if (!coordSys.axisPointerEnabled) {\n                return;\n            }\n\n            var coordSysKey = makeKey(coordSys.model);\n            var axesInfoInCoordSys = result.coordSysAxesInfo[coordSysKey] = {};\n            result.coordSysMap[coordSysKey] = coordSys;\n\n            // Set tooltip (like 'cross') is a convienent way to show axisPointer\n            // for user. So we enable seting tooltip on coordSys model.\n            var coordSysModel = coordSys.model;\n            var baseTooltipModel = coordSysModel.getModel('tooltip', globalTooltipModel);\n\n            each(coordSys.getAxes(), curry(saveTooltipAxisInfo, false, null));\n\n            // If axis tooltip used, choose tooltip axis for each coordSys.\n            // Notice this case: coordSys is `grid` but not `cartesian2D` here.\n            if (coordSys.getTooltipAxes\n                && globalTooltipModel\n                // If tooltip.showContent is set as false, tooltip will not\n                // show but axisPointer will show as normal.\n                && baseTooltipModel.get('show')\n            ) {\n                // Compatible with previous logic. But series.tooltip.trigger: 'axis'\n                // or series.data[n].tooltip.trigger: 'axis' are not support any more.\n                var triggerAxis = baseTooltipModel.get('trigger') === 'axis';\n                var cross = baseTooltipModel.get('axisPointer.type') === 'cross';\n                var tooltipAxes = coordSys.getTooltipAxes(baseTooltipModel.get('axisPointer.axis'));\n                if (triggerAxis || cross) {\n                    each(tooltipAxes.baseAxes, curry(\n                        saveTooltipAxisInfo, cross ? 'cross' : true, triggerAxis\n                    ));\n                }\n                if (cross) {\n                    each(tooltipAxes.otherAxes, curry(saveTooltipAxisInfo, 'cross', false));\n                }\n            }\n\n            // fromTooltip: true | false | 'cross'\n            // triggerTooltip: true | false | null\n            function saveTooltipAxisInfo(fromTooltip, triggerTooltip, axis) {\n                var axisPointerModel = axis.model.getModel('axisPointer', globalAxisPointerModel);\n\n                var axisPointerShow = axisPointerModel.get('show');\n                if (!axisPointerShow || (\n                    axisPointerShow === 'auto'\n                    && !fromTooltip\n                    && !isHandleTrigger(axisPointerModel)\n                )) {\n                    return;\n                }\n\n                if (triggerTooltip == null) {\n                    triggerTooltip = axisPointerModel.get('triggerTooltip');\n                }\n\n                axisPointerModel = fromTooltip\n                    ? makeAxisPointerModel(\n                        axis, baseTooltipModel, globalAxisPointerModel, ecModel,\n                        fromTooltip, triggerTooltip\n                    )\n                    : axisPointerModel;\n\n                var snap = axisPointerModel.get('snap');\n                var key = makeKey(axis.model);\n                var involveSeries = triggerTooltip || snap || axis.type === 'category';\n\n                // If result.axesInfo[key] exist, override it (tooltip has higher priority).\n                var axisInfo = result.axesInfo[key] = {\n                    key: key,\n                    axis: axis,\n                    coordSys: coordSys,\n                    axisPointerModel: axisPointerModel,\n                    triggerTooltip: triggerTooltip,\n                    involveSeries: involveSeries,\n                    snap: snap,\n                    useHandle: isHandleTrigger(axisPointerModel),\n                    seriesModels: []\n                };\n                axesInfoInCoordSys[key] = axisInfo;\n                result.seriesInvolved |= involveSeries;\n\n                var groupIndex = getLinkGroupIndex(linksOption, axis);\n                if (groupIndex != null) {\n                    var linkGroup = linkGroups[groupIndex] || (linkGroups[groupIndex] = {axesInfo: {}});\n                    linkGroup.axesInfo[key] = axisInfo;\n                    linkGroup.mapper = linksOption[groupIndex].mapper;\n                    axisInfo.linkGroup = linkGroup;\n                }\n            }\n        });\n    }\n\n    function makeAxisPointerModel(\n        axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip\n    ) {\n        var tooltipAxisPointerModel = baseTooltipModel.getModel('axisPointer');\n        var volatileOption = {};\n\n        each(\n            [\n                'type', 'snap', 'lineStyle', 'shadowStyle', 'label',\n                'animation', 'animationDurationUpdate', 'animationEasingUpdate', 'z'\n            ],\n            function (field) {\n                volatileOption[field] = zrUtil.clone(tooltipAxisPointerModel.get(field));\n            }\n        );\n\n        // category axis do not auto snap, otherwise some tick that do not\n        // has value can not be hovered. value/time/log axis default snap if\n        // triggered from tooltip and trigger tooltip.\n        volatileOption.snap = axis.type !== 'category' && !!triggerTooltip;\n\n        // Compatibel with previous behavior, tooltip axis do not show label by default.\n        // Only these properties can be overrided from tooltip to axisPointer.\n        if (tooltipAxisPointerModel.get('type') === 'cross') {\n            volatileOption.type = 'line';\n        }\n        var labelOption = volatileOption.label || (volatileOption.label = {});\n        // Follow the convention, do not show label when triggered by tooltip by default.\n        labelOption.show == null && (labelOption.show = false);\n\n        if (fromTooltip === 'cross') {\n            // When 'cross', both axes show labels.\n            labelOption.show = true;\n            // If triggerTooltip, this is a base axis, which should better not use cross style\n            // (cross style is dashed by default)\n            if (!triggerTooltip) {\n                var crossStyle = volatileOption.lineStyle = tooltipAxisPointerModel.get('crossStyle');\n                crossStyle && zrUtil.defaults(\n                    labelOption.textStyle || (labelOption.textStyle = {}),\n                    crossStyle.textStyle\n                );\n            }\n        }\n\n        return axis.model.getModel(\n            'axisPointer',\n            new Model(volatileOption, globalAxisPointerModel, ecModel)\n        );\n    }\n\n    function collectSeriesInfo(result, ecModel) {\n        // Prepare data for axis trigger\n        ecModel.eachSeries(function (seriesModel) {\n\n            // Notice this case: this coordSys is `cartesian2D` but not `grid`.\n            var coordSys = seriesModel.coordinateSystem;\n            var seriesTooltipTrigger = seriesModel.get('tooltip.trigger', true);\n            if (!coordSys\n                || seriesTooltipTrigger === 'none'\n                || seriesTooltipTrigger === false\n                || seriesTooltipTrigger === 'item'\n                || seriesModel.get('axisPointer.show', true) === false\n            ) {\n                return;\n            }\n\n            each(result.coordSysAxesInfo[makeKey(coordSys.model)], function (axisInfo) {\n                var axis = axisInfo.axis;\n                if (coordSys.getAxis(axis.dim) === axis) {\n                    axisInfo.seriesModels.push(seriesModel);\n                    axisInfo.seriesDataCount == null && (axisInfo.seriesDataCount = 0);\n                    axisInfo.seriesDataCount += seriesModel.getData().count();\n                }\n            });\n\n        }, this);\n    }\n\n    /**\n     * For example:\n     * {\n     *     axisPointer: {\n     *         links: [{\n     *             xAxisIndex: [2, 4],\n     *             yAxisIndex: 'all'\n     *         }, {\n     *             xAxisId: ['a5', 'a7'],\n     *             xAxisName: 'xxx'\n     *         }]\n     *     }\n     * }\n     */\n    function getLinkGroupIndex(linksOption, axis) {\n        var axisModel = axis.model;\n        var dim = axis.dim;\n        for (var i = 0; i < linksOption.length; i++) {\n            var linkOption = linksOption[i] || {};\n            if (checkPropInLink(linkOption[dim + 'AxisId'], axisModel.id)\n                || checkPropInLink(linkOption[dim + 'AxisIndex'], axisModel.componentIndex)\n                || checkPropInLink(linkOption[dim + 'AxisName'], axisModel.name)\n            ) {\n                return i;\n            }\n        }\n    }\n\n    function checkPropInLink(linkPropValue, axisPropValue) {\n        return linkPropValue === 'all'\n            || (zrUtil.isArray(linkPropValue) && zrUtil.indexOf(linkPropValue, axisPropValue) >= 0)\n            || linkPropValue === axisPropValue;\n    }\n\n    helper.fixValue = function (axisModel) {\n        var axisInfo = helper.getAxisInfo(axisModel);\n        if (!axisInfo) {\n            return;\n        }\n\n        var axisPointerModel = axisInfo.axisPointerModel;\n        var scale = axisInfo.axis.scale;\n        var option = axisPointerModel.option;\n        var status = axisPointerModel.get('status');\n        var value = axisPointerModel.get('value');\n\n        // Parse init value for category and time axis.\n        if (value != null) {\n            value = scale.parse(value);\n        }\n\n        var useHandle = isHandleTrigger(axisPointerModel);\n        // If `handle` used, `axisPointer` will always be displayed, so value\n        // and status should be initialized.\n        if (status == null) {\n            option.status = useHandle ? 'show' : 'hide';\n        }\n\n        var extent = scale.getExtent().slice();\n        extent[0] > extent[1] && extent.reverse();\n\n        if (// Pick a value on axis when initializing.\n            value == null\n            // If both `handle` and `dataZoom` are used, value may be out of axis extent,\n            // where we should re-pick a value to keep `handle` displaying normally.\n            || value > extent[1]\n        ) {\n            // Make handle displayed on the end of the axis when init, which looks better.\n            value = extent[1];\n        }\n        if (value < extent[0]) {\n            value = extent[0];\n        }\n\n        option.value = value;\n\n        if (useHandle) {\n            option.status = axisInfo.axis.scale.isBlank() ? 'hide' : 'show';\n        }\n    };\n\n    helper.getAxisInfo = function (axisModel) {\n        var coordSysAxesInfo = (axisModel.ecModel.getComponent('axisPointer') || {}).coordSysAxesInfo;\n        return coordSysAxesInfo && coordSysAxesInfo.axesInfo[makeKey(axisModel)];\n    };\n\n    helper.getAxisPointerModel = function (axisModel) {\n        var axisInfo = helper.getAxisInfo(axisModel);\n        return axisInfo && axisInfo.axisPointerModel;\n    };\n\n    function isHandleTrigger(axisPointerModel) {\n        return !!axisPointerModel.get('handle.show');\n    }\n\n    /**\n     * @param {module:echarts/model/Model} model\n     * @return {string} unique key\n     */\n    var makeKey = helper.makeKey = function (model) {\n        return model.type + '||' + model.id;\n    };\n\n    module.exports = helper;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.echarts@3.5.4@echarts/lib/component/axisPointer/modelHelper.js\n// module id = 179\n// module chunks = 0","// TODO Parse shadow style\n// TODO Only shallow path support\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    module.exports = function (properties) {\n        // Normalize\n        for (var i = 0; i < properties.length; i++) {\n            if (!properties[i][1]) {\n               properties[i][1] = properties[i][0];\n            }\n        }\n        return function (excludes, includes) {\n            var style = {};\n            for (var i = 0; i < properties.length; i++) {\n                var propName = properties[i][1];\n                if ((excludes && zrUtil.indexOf(excludes, propName) >= 0)\n                    || (includes && zrUtil.indexOf(includes, propName) < 0)\n                ) {\n                    continue;\n                }\n                var val = this.getShallow(propName);\n                if (val != null) {\n                    style[properties[i][0]] = val;\n                }\n            }\n            return style;\n        };\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.echarts@3.5.4@echarts/lib/model/mixin/makeStyleMapper.js\n// module id = 180\n// module chunks = 0","/**\n * // Scale class management\n * @module echarts/scale/Scale\n */\n\n\n    var clazzUtil = require('../util/clazz');\n\n    /**\n     * @param {Object} [setting]\n     */\n    function Scale(setting) {\n        this._setting = setting || {};\n\n        /**\n         * Extent\n         * @type {Array.<number>}\n         * @protected\n         */\n        this._extent = [Infinity, -Infinity];\n\n        /**\n         * Step is calculated in adjustExtent\n         * @type {Array.<number>}\n         * @protected\n         */\n        this._interval = 0;\n\n        this.init && this.init.apply(this, arguments);\n    }\n\n    var scaleProto = Scale.prototype;\n\n    /**\n     * Parse input val to valid inner number.\n     * @param {*} val\n     * @return {number}\n     */\n    scaleProto.parse = function (val) {\n        // Notice: This would be a trap here, If the implementation\n        // of this method depends on extent, and this method is used\n        // before extent set (like in dataZoom), it would be wrong.\n        // Nevertheless, parse does not depend on extent generally.\n        return val;\n    };\n\n    scaleProto.getSetting = function (name) {\n        return this._setting[name];\n    };\n\n    scaleProto.contain = function (val) {\n        var extent = this._extent;\n        return val >= extent[0] && val <= extent[1];\n    };\n\n    /**\n     * Normalize value to linear [0, 1], return 0.5 if extent span is 0\n     * @param {number} val\n     * @return {number}\n     */\n    scaleProto.normalize = function (val) {\n        var extent = this._extent;\n        if (extent[1] === extent[0]) {\n            return 0.5;\n        }\n        return (val - extent[0]) / (extent[1] - extent[0]);\n    };\n\n    /**\n     * Scale normalized value\n     * @param {number} val\n     * @return {number}\n     */\n    scaleProto.scale = function (val) {\n        var extent = this._extent;\n        return val * (extent[1] - extent[0]) + extent[0];\n    };\n\n    /**\n     * Set extent from data\n     * @param {Array.<number>} other\n     */\n    scaleProto.unionExtent = function (other) {\n        var extent = this._extent;\n        other[0] < extent[0] && (extent[0] = other[0]);\n        other[1] > extent[1] && (extent[1] = other[1]);\n        // not setExtent because in log axis it may transformed to power\n        // this.setExtent(extent[0], extent[1]);\n    };\n\n    /**\n     * Set extent from data\n     * @param {module:echarts/data/List} data\n     * @param {string} dim\n     */\n    scaleProto.unionExtentFromData = function (data, dim) {\n        this.unionExtent(data.getDataExtent(dim, true));\n    };\n\n    /**\n     * Get extent\n     * @return {Array.<number>}\n     */\n    scaleProto.getExtent = function () {\n        return this._extent.slice();\n    };\n\n    /**\n     * Set extent\n     * @param {number} start\n     * @param {number} end\n     */\n    scaleProto.setExtent = function (start, end) {\n        var thisExtent = this._extent;\n        if (!isNaN(start)) {\n            thisExtent[0] = start;\n        }\n        if (!isNaN(end)) {\n            thisExtent[1] = end;\n        }\n    };\n\n    /**\n     * @return {Array.<string>}\n     */\n    scaleProto.getTicksLabels = function () {\n        var labels = [];\n        var ticks = this.getTicks();\n        for (var i = 0; i < ticks.length; i++) {\n            labels.push(this.getLabel(ticks[i]));\n        }\n        return labels;\n    };\n\n    /**\n     * When axis extent depends on data and no data exists,\n     * axis ticks should not be drawn, which is named 'blank'.\n     */\n    scaleProto.isBlank = function () {\n        return this._isBlank;\n    },\n\n    /**\n     * When axis extent depends on data and no data exists,\n     * axis ticks should not be drawn, which is named 'blank'.\n     */\n    scaleProto.setBlank = function (isBlank) {\n        this._isBlank = isBlank;\n    };\n\n\n    clazzUtil.enableClassExtend(Scale);\n    clazzUtil.enableClassManagement(Scale, {\n        registerWhenExtend: true\n    });\n\n    module.exports = Scale;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.echarts@3.5.4@echarts/lib/scale/Scale.js\n// module id = 181\n// module chunks = 0","\n    var dpr = 1;\n    // If in browser environment\n    if (typeof window !== 'undefined') {\n        dpr = Math.max(window.devicePixelRatio || 1, 1);\n    }\n    /**\n     * config默认配置项\n     * @exports zrender/config\n     * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n     */\n    var config = {\n        /**\n         * debug日志选项：catchBrushException为true下有效\n         * 0 : 不生成debug数据，发布用\n         * 1 : 异常抛出，调试用\n         * 2 : 控制台输出，调试用\n         */\n        debugMode: 0,\n\n        // retina 屏幕优化\n        devicePixelRatio: dpr\n    };\n    module.exports = config;\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.zrender@3.4.4@zrender/lib/config.js\n// module id = 182\n// module chunks = 0","/**\n * Group是一个容器，可以插入子节点，Group的变换也会被应用到子节点上\n * @module zrender/graphic/Group\n * @example\n *     var Group = require('zrender/lib/container/Group');\n *     var Circle = require('zrender/lib/graphic/shape/Circle');\n *     var g = new Group();\n *     g.position[0] = 100;\n *     g.position[1] = 100;\n *     g.add(new Circle({\n *         style: {\n *             x: 100,\n *             y: 100,\n *             r: 20,\n *         }\n *     }));\n *     zr.add(g);\n */\n\n\n    var zrUtil = require('../core/util');\n    var Element = require('../Element');\n    var BoundingRect = require('../core/BoundingRect');\n\n    /**\n     * @alias module:zrender/graphic/Group\n     * @constructor\n     * @extends module:zrender/mixin/Transformable\n     * @extends module:zrender/mixin/Eventful\n     */\n    var Group = function (opts) {\n\n        opts = opts || {};\n\n        Element.call(this, opts);\n\n        for (var key in opts) {\n            if (opts.hasOwnProperty(key)) {\n                this[key] = opts[key];\n            }\n        }\n\n        this._children = [];\n\n        this.__storage = null;\n\n        this.__dirty = true;\n    };\n\n    Group.prototype = {\n\n        constructor: Group,\n\n        isGroup: true,\n\n        /**\n         * @type {string}\n         */\n        type: 'group',\n\n        /**\n         * 所有子孙元素是否响应鼠标事件\n         * @name module:/zrender/container/Group#silent\n         * @type {boolean}\n         * @default false\n         */\n        silent: false,\n\n        /**\n         * @return {Array.<module:zrender/Element>}\n         */\n        children: function () {\n            return this._children.slice();\n        },\n\n        /**\n         * 获取指定 index 的儿子节点\n         * @param  {number} idx\n         * @return {module:zrender/Element}\n         */\n        childAt: function (idx) {\n            return this._children[idx];\n        },\n\n        /**\n         * 获取指定名字的儿子节点\n         * @param  {string} name\n         * @return {module:zrender/Element}\n         */\n        childOfName: function (name) {\n            var children = this._children;\n            for (var i = 0; i < children.length; i++) {\n                if (children[i].name === name) {\n                    return children[i];\n                }\n             }\n        },\n\n        /**\n         * @return {number}\n         */\n        childCount: function () {\n            return this._children.length;\n        },\n\n        /**\n         * 添加子节点到最后\n         * @param {module:zrender/Element} child\n         */\n        add: function (child) {\n            if (child && child !== this && child.parent !== this) {\n\n                this._children.push(child);\n\n                this._doAdd(child);\n            }\n\n            return this;\n        },\n\n        /**\n         * 添加子节点在 nextSibling 之前\n         * @param {module:zrender/Element} child\n         * @param {module:zrender/Element} nextSibling\n         */\n        addBefore: function (child, nextSibling) {\n            if (child && child !== this && child.parent !== this\n                && nextSibling && nextSibling.parent === this) {\n\n                var children = this._children;\n                var idx = children.indexOf(nextSibling);\n\n                if (idx >= 0) {\n                    children.splice(idx, 0, child);\n                    this._doAdd(child);\n                }\n            }\n\n            return this;\n        },\n\n        _doAdd: function (child) {\n            if (child.parent) {\n                child.parent.remove(child);\n            }\n\n            child.parent = this;\n\n            var storage = this.__storage;\n            var zr = this.__zr;\n            if (storage && storage !== child.__storage) {\n\n                storage.addToStorage(child);\n\n                if (child instanceof Group) {\n                    child.addChildrenToStorage(storage);\n                }\n            }\n\n            zr && zr.refresh();\n        },\n\n        /**\n         * 移除子节点\n         * @param {module:zrender/Element} child\n         */\n        remove: function (child) {\n            var zr = this.__zr;\n            var storage = this.__storage;\n            var children = this._children;\n\n            var idx = zrUtil.indexOf(children, child);\n            if (idx < 0) {\n                return this;\n            }\n            children.splice(idx, 1);\n\n            child.parent = null;\n\n            if (storage) {\n\n                storage.delFromStorage(child);\n\n                if (child instanceof Group) {\n                    child.delChildrenFromStorage(storage);\n                }\n            }\n\n            zr && zr.refresh();\n\n            return this;\n        },\n\n        /**\n         * 移除所有子节点\n         */\n        removeAll: function () {\n            var children = this._children;\n            var storage = this.__storage;\n            var child;\n            var i;\n            for (i = 0; i < children.length; i++) {\n                child = children[i];\n                if (storage) {\n                    storage.delFromStorage(child);\n                    if (child instanceof Group) {\n                        child.delChildrenFromStorage(storage);\n                    }\n                }\n                child.parent = null;\n            }\n            children.length = 0;\n\n            return this;\n        },\n\n        /**\n         * 遍历所有子节点\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        eachChild: function (cb, context) {\n            var children = this._children;\n            for (var i = 0; i < children.length; i++) {\n                var child = children[i];\n                cb.call(context, child, i);\n            }\n            return this;\n        },\n\n        /**\n         * 深度优先遍历所有子孙节点\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                cb.call(context, child);\n\n                if (child.type === 'group') {\n                    child.traverse(cb, context);\n                }\n            }\n            return this;\n        },\n\n        addChildrenToStorage: function (storage) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                storage.addToStorage(child);\n                if (child instanceof Group) {\n                    child.addChildrenToStorage(storage);\n                }\n            }\n        },\n\n        delChildrenFromStorage: function (storage) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                storage.delFromStorage(child);\n                if (child instanceof Group) {\n                    child.delChildrenFromStorage(storage);\n                }\n            }\n        },\n\n        dirty: function () {\n            this.__dirty = true;\n            this.__zr && this.__zr.refresh();\n            return this;\n        },\n\n        /**\n         * @return {module:zrender/core/BoundingRect}\n         */\n        getBoundingRect: function (includeChildren) {\n            // TODO Caching\n            var rect = null;\n            var tmpRect = new BoundingRect(0, 0, 0, 0);\n            var children = includeChildren || this._children;\n            var tmpMat = [];\n\n            for (var i = 0; i < children.length; i++) {\n                var child = children[i];\n                if (child.ignore || child.invisible) {\n                    continue;\n                }\n\n                var childRect = child.getBoundingRect();\n                var transform = child.getLocalTransform(tmpMat);\n                // TODO\n                // The boundingRect cacluated by transforming original\n                // rect may be bigger than the actual bundingRect when rotation\n                // is used. (Consider a circle rotated aginst its center, where\n                // the actual boundingRect should be the same as that not be\n                // rotated.) But we can not find better approach to calculate\n                // actual boundingRect yet, considering performance.\n                if (transform) {\n                    tmpRect.copy(childRect);\n                    tmpRect.applyTransform(transform);\n                    rect = rect || tmpRect.clone();\n                    rect.union(tmpRect);\n                }\n                else {\n                    rect = rect || childRect.clone();\n                    rect.union(childRect);\n                }\n            }\n            return rect || tmpRect;\n        }\n    };\n\n    zrUtil.inherits(Group, Element);\n\n    module.exports = Group;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.zrender@3.4.4@zrender/lib/container/Group.js\n// module id = 183\n// module chunks = 0","'use strict';\n/**\n * Path 代理，可以在`buildPath`中用于替代`ctx`, 会保存每个path操作的命令到pathCommands属性中\n * 可以用于 isInsidePath 判断以及获取boundingRect\n *\n * @module zrender/core/PathProxy\n * @author Yi Shen (http://www.github.com/pissang)\n */\n\n // TODO getTotalLength, getPointAtLength\n\n\n    var curve = require('./curve');\n    var vec2 = require('./vector');\n    var bbox = require('./bbox');\n    var BoundingRect = require('./BoundingRect');\n    var dpr = require('../config').devicePixelRatio;\n\n    var CMD = {\n        M: 1,\n        L: 2,\n        C: 3,\n        Q: 4,\n        A: 5,\n        Z: 6,\n        // Rect\n        R: 7\n    };\n\n    // var CMD_MEM_SIZE = {\n    //     M: 3,\n    //     L: 3,\n    //     C: 7,\n    //     Q: 5,\n    //     A: 9,\n    //     R: 5,\n    //     Z: 1\n    // };\n\n    var min = [];\n    var max = [];\n    var min2 = [];\n    var max2 = [];\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    var mathCos = Math.cos;\n    var mathSin = Math.sin;\n    var mathSqrt = Math.sqrt;\n    var mathAbs = Math.abs;\n\n    var hasTypedArray = typeof Float32Array != 'undefined';\n\n    /**\n     * @alias module:zrender/core/PathProxy\n     * @constructor\n     */\n    var PathProxy = function (notSaveData) {\n\n        this._saveData = !(notSaveData || false);\n\n        if (this._saveData) {\n            /**\n             * Path data. Stored as flat array\n             * @type {Array.<Object>}\n             */\n            this.data = [];\n        }\n\n        this._ctx = null;\n    };\n\n    /**\n     * 快速计算Path包围盒（并不是最小包围盒）\n     * @return {Object}\n     */\n    PathProxy.prototype = {\n\n        constructor: PathProxy,\n\n        _xi: 0,\n        _yi: 0,\n\n        _x0: 0,\n        _y0: 0,\n        // Unit x, Unit y. Provide for avoiding drawing that too short line segment\n        _ux: 0,\n        _uy: 0,\n\n        _len: 0,\n\n        _lineDash: null,\n\n        _dashOffset: 0,\n\n        _dashIdx: 0,\n\n        _dashSum: 0,\n\n        /**\n         * @readOnly\n         */\n        setScale: function (sx, sy) {\n            this._ux = mathAbs(1 / dpr / sx) || 0;\n            this._uy = mathAbs(1 / dpr / sy) || 0;\n        },\n\n        getContext: function () {\n            return this._ctx;\n        },\n\n        /**\n         * @param  {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        beginPath: function (ctx) {\n\n            this._ctx = ctx;\n\n            ctx && ctx.beginPath();\n\n            ctx && (this.dpr = ctx.dpr);\n\n            // Reset\n            if (this._saveData) {\n                this._len = 0;\n            }\n\n            if (this._lineDash) {\n                this._lineDash = null;\n\n                this._dashOffset = 0;\n            }\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x\n         * @param  {number} y\n         * @return {module:zrender/core/PathProxy}\n         */\n        moveTo: function (x, y) {\n            this.addData(CMD.M, x, y);\n            this._ctx && this._ctx.moveTo(x, y);\n\n            // x0, y0, xi, yi 是记录在 _dashedXXXXTo 方法中使用\n            // xi, yi 记录当前点, x0, y0 在 closePath 的时候回到起始点。\n            // 有可能在 beginPath 之后直接调用 lineTo，这时候 x0, y0 需要\n            // 在 lineTo 方法中记录，这里先不考虑这种情况，dashed line 也只在 IE10- 中不支持\n            this._x0 = x;\n            this._y0 = y;\n\n            this._xi = x;\n            this._yi = y;\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x\n         * @param  {number} y\n         * @return {module:zrender/core/PathProxy}\n         */\n        lineTo: function (x, y) {\n            var exceedUnit = mathAbs(x - this._xi) > this._ux\n                || mathAbs(y - this._yi) > this._uy\n                // Force draw the first segment\n                || this._len < 5;\n\n            this.addData(CMD.L, x, y);\n\n            if (this._ctx && exceedUnit) {\n                this._needsDash() ? this._dashedLineTo(x, y)\n                    : this._ctx.lineTo(x, y);\n            }\n            if (exceedUnit) {\n                this._xi = x;\n                this._yi = y;\n            }\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x1\n         * @param  {number} y1\n         * @param  {number} x2\n         * @param  {number} y2\n         * @param  {number} x3\n         * @param  {number} y3\n         * @return {module:zrender/core/PathProxy}\n         */\n        bezierCurveTo: function (x1, y1, x2, y2, x3, y3) {\n            this.addData(CMD.C, x1, y1, x2, y2, x3, y3);\n            if (this._ctx) {\n                this._needsDash() ? this._dashedBezierTo(x1, y1, x2, y2, x3, y3)\n                    : this._ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);\n            }\n            this._xi = x3;\n            this._yi = y3;\n            return this;\n        },\n\n        /**\n         * @param  {number} x1\n         * @param  {number} y1\n         * @param  {number} x2\n         * @param  {number} y2\n         * @return {module:zrender/core/PathProxy}\n         */\n        quadraticCurveTo: function (x1, y1, x2, y2) {\n            this.addData(CMD.Q, x1, y1, x2, y2);\n            if (this._ctx) {\n                this._needsDash() ? this._dashedQuadraticTo(x1, y1, x2, y2)\n                    : this._ctx.quadraticCurveTo(x1, y1, x2, y2);\n            }\n            this._xi = x2;\n            this._yi = y2;\n            return this;\n        },\n\n        /**\n         * @param  {number} cx\n         * @param  {number} cy\n         * @param  {number} r\n         * @param  {number} startAngle\n         * @param  {number} endAngle\n         * @param  {boolean} anticlockwise\n         * @return {module:zrender/core/PathProxy}\n         */\n        arc: function (cx, cy, r, startAngle, endAngle, anticlockwise) {\n            this.addData(\n                CMD.A, cx, cy, r, r, startAngle, endAngle - startAngle, 0, anticlockwise ? 0 : 1\n            );\n            this._ctx && this._ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);\n\n            this._xi = mathCos(endAngle) * r + cx;\n            this._yi = mathSin(endAngle) * r + cx;\n            return this;\n        },\n\n        // TODO\n        arcTo: function (x1, y1, x2, y2, radius) {\n            if (this._ctx) {\n                this._ctx.arcTo(x1, y1, x2, y2, radius);\n            }\n            return this;\n        },\n\n        // TODO\n        rect: function (x, y, w, h) {\n            this._ctx && this._ctx.rect(x, y, w, h);\n            this.addData(CMD.R, x, y, w, h);\n            return this;\n        },\n\n        /**\n         * @return {module:zrender/core/PathProxy}\n         */\n        closePath: function () {\n            this.addData(CMD.Z);\n\n            var ctx = this._ctx;\n            var x0 = this._x0;\n            var y0 = this._y0;\n            if (ctx) {\n                this._needsDash() && this._dashedLineTo(x0, y0);\n                ctx.closePath();\n            }\n\n            this._xi = x0;\n            this._yi = y0;\n            return this;\n        },\n\n        /**\n         * Context 从外部传入，因为有可能是 rebuildPath 完之后再 fill。\n         * stroke 同样\n         * @param {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        fill: function (ctx) {\n            ctx && ctx.fill();\n            this.toStatic();\n        },\n\n        /**\n         * @param {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        stroke: function (ctx) {\n            ctx && ctx.stroke();\n            this.toStatic();\n        },\n\n        /**\n         * 必须在其它绘制命令前调用\n         * Must be invoked before all other path drawing methods\n         * @return {module:zrender/core/PathProxy}\n         */\n        setLineDash: function (lineDash) {\n            if (lineDash instanceof Array) {\n                this._lineDash = lineDash;\n\n                this._dashIdx = 0;\n\n                var lineDashSum = 0;\n                for (var i = 0; i < lineDash.length; i++) {\n                    lineDashSum += lineDash[i];\n                }\n                this._dashSum = lineDashSum;\n            }\n            return this;\n        },\n\n        /**\n         * 必须在其它绘制命令前调用\n         * Must be invoked before all other path drawing methods\n         * @return {module:zrender/core/PathProxy}\n         */\n        setLineDashOffset: function (offset) {\n            this._dashOffset = offset;\n            return this;\n        },\n\n        /**\n         *\n         * @return {boolean}\n         */\n        len: function () {\n            return this._len;\n        },\n\n        /**\n         * 直接设置 Path 数据\n         */\n        setData: function (data) {\n\n            var len = data.length;\n\n            if (! (this.data && this.data.length == len) && hasTypedArray) {\n                this.data = new Float32Array(len);\n            }\n\n            for (var i = 0; i < len; i++) {\n                this.data[i] = data[i];\n            }\n\n            this._len = len;\n        },\n\n        /**\n         * 添加子路径\n         * @param {module:zrender/core/PathProxy|Array.<module:zrender/core/PathProxy>} path\n         */\n        appendPath: function (path) {\n            if (!(path instanceof Array)) {\n                path = [path];\n            }\n            var len = path.length;\n            var appendSize = 0;\n            var offset = this._len;\n            for (var i = 0; i < len; i++) {\n                appendSize += path[i].len();\n            }\n            if (hasTypedArray && (this.data instanceof Float32Array)) {\n                this.data = new Float32Array(offset + appendSize);\n            }\n            for (var i = 0; i < len; i++) {\n                var appendPathData = path[i].data;\n                for (var k = 0; k < appendPathData.length; k++) {\n                    this.data[offset++] = appendPathData[k];\n                }\n            }\n            this._len = offset;\n        },\n\n        /**\n         * 填充 Path 数据。\n         * 尽量复用而不申明新的数组。大部分图形重绘的指令数据长度都是不变的。\n         */\n        addData: function (cmd) {\n            if (!this._saveData) {\n                return;\n            }\n\n            var data = this.data;\n            if (this._len + arguments.length > data.length) {\n                // 因为之前的数组已经转换成静态的 Float32Array\n                // 所以不够用时需要扩展一个新的动态数组\n                this._expandData();\n                data = this.data;\n            }\n            for (var i = 0; i < arguments.length; i++) {\n                data[this._len++] = arguments[i];\n            }\n\n            this._prevCmd = cmd;\n        },\n\n        _expandData: function () {\n            // Only if data is Float32Array\n            if (!(this.data instanceof Array)) {\n                var newData = [];\n                for (var i = 0; i < this._len; i++) {\n                    newData[i] = this.data[i];\n                }\n                this.data = newData;\n            }\n        },\n\n        /**\n         * If needs js implemented dashed line\n         * @return {boolean}\n         * @private\n         */\n        _needsDash: function () {\n            return this._lineDash;\n        },\n\n        _dashedLineTo: function (x1, y1) {\n            var dashSum = this._dashSum;\n            var offset = this._dashOffset;\n            var lineDash = this._lineDash;\n            var ctx = this._ctx;\n\n            var x0 = this._xi;\n            var y0 = this._yi;\n            var dx = x1 - x0;\n            var dy = y1 - y0;\n            var dist = mathSqrt(dx * dx + dy * dy);\n            var x = x0;\n            var y = y0;\n            var dash;\n            var nDash = lineDash.length;\n            var idx;\n            dx /= dist;\n            dy /= dist;\n\n            if (offset < 0) {\n                // Convert to positive offset\n                offset = dashSum + offset;\n            }\n            offset %= dashSum;\n            x -= offset * dx;\n            y -= offset * dy;\n\n            while ((dx > 0 && x <= x1) || (dx < 0 && x >= x1)\n            || (dx == 0 && ((dy > 0 && y <= y1) || (dy < 0 && y >= y1)))) {\n                idx = this._dashIdx;\n                dash = lineDash[idx];\n                x += dx * dash;\n                y += dy * dash;\n                this._dashIdx = (idx + 1) % nDash;\n                // Skip positive offset\n                if ((dx > 0 && x < x0) || (dx < 0 && x > x0) || (dy > 0 && y < y0) || (dy < 0 && y > y0)) {\n                    continue;\n                }\n                ctx[idx % 2 ? 'moveTo' : 'lineTo'](\n                    dx >= 0 ? mathMin(x, x1) : mathMax(x, x1),\n                    dy >= 0 ? mathMin(y, y1) : mathMax(y, y1)\n                );\n            }\n            // Offset for next lineTo\n            dx = x - x1;\n            dy = y - y1;\n            this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n        },\n\n        // Not accurate dashed line to\n        _dashedBezierTo: function (x1, y1, x2, y2, x3, y3) {\n            var dashSum = this._dashSum;\n            var offset = this._dashOffset;\n            var lineDash = this._lineDash;\n            var ctx = this._ctx;\n\n            var x0 = this._xi;\n            var y0 = this._yi;\n            var t;\n            var dx;\n            var dy;\n            var cubicAt = curve.cubicAt;\n            var bezierLen = 0;\n            var idx = this._dashIdx;\n            var nDash = lineDash.length;\n\n            var x;\n            var y;\n\n            var tmpLen = 0;\n\n            if (offset < 0) {\n                // Convert to positive offset\n                offset = dashSum + offset;\n            }\n            offset %= dashSum;\n            // Bezier approx length\n            for (t = 0; t < 1; t += 0.1) {\n                dx = cubicAt(x0, x1, x2, x3, t + 0.1)\n                    - cubicAt(x0, x1, x2, x3, t);\n                dy = cubicAt(y0, y1, y2, y3, t + 0.1)\n                    - cubicAt(y0, y1, y2, y3, t);\n                bezierLen += mathSqrt(dx * dx + dy * dy);\n            }\n\n            // Find idx after add offset\n            for (; idx < nDash; idx++) {\n                tmpLen += lineDash[idx];\n                if (tmpLen > offset) {\n                    break;\n                }\n            }\n            t = (tmpLen - offset) / bezierLen;\n\n            while (t <= 1) {\n\n                x = cubicAt(x0, x1, x2, x3, t);\n                y = cubicAt(y0, y1, y2, y3, t);\n\n                // Use line to approximate dashed bezier\n                // Bad result if dash is long\n                idx % 2 ? ctx.moveTo(x, y)\n                    : ctx.lineTo(x, y);\n\n                t += lineDash[idx] / bezierLen;\n\n                idx = (idx + 1) % nDash;\n            }\n\n            // Finish the last segment and calculate the new offset\n            (idx % 2 !== 0) && ctx.lineTo(x3, y3);\n            dx = x3 - x;\n            dy = y3 - y;\n            this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n        },\n\n        _dashedQuadraticTo: function (x1, y1, x2, y2) {\n            // Convert quadratic to cubic using degree elevation\n            var x3 = x2;\n            var y3 = y2;\n            x2 = (x2 + 2 * x1) / 3;\n            y2 = (y2 + 2 * y1) / 3;\n            x1 = (this._xi + 2 * x1) / 3;\n            y1 = (this._yi + 2 * y1) / 3;\n\n            this._dashedBezierTo(x1, y1, x2, y2, x3, y3);\n        },\n\n        /**\n         * 转成静态的 Float32Array 减少堆内存占用\n         * Convert dynamic array to static Float32Array\n         */\n        toStatic: function () {\n            var data = this.data;\n            if (data instanceof Array) {\n                data.length = this._len;\n                if (hasTypedArray) {\n                    this.data = new Float32Array(data);\n                }\n            }\n        },\n\n        /**\n         * @return {module:zrender/core/BoundingRect}\n         */\n        getBoundingRect: function () {\n            min[0] = min[1] = min2[0] = min2[1] = Number.MAX_VALUE;\n            max[0] = max[1] = max2[0] = max2[1] = -Number.MAX_VALUE;\n\n            var data = this.data;\n            var xi = 0;\n            var yi = 0;\n            var x0 = 0;\n            var y0 = 0;\n\n            for (var i = 0; i < data.length;) {\n                var cmd = data[i++];\n\n                if (i == 1) {\n                    // 如果第一个命令是 L, C, Q\n                    // 则 previous point 同绘制命令的第一个 point\n                    //\n                    // 第一个命令为 Arc 的情况下会在后面特殊处理\n                    xi = data[i];\n                    yi = data[i + 1];\n\n                    x0 = xi;\n                    y0 = yi;\n                }\n\n                switch (cmd) {\n                    case CMD.M:\n                        // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n                        // 在 closePath 的时候使用\n                        x0 = data[i++];\n                        y0 = data[i++];\n                        xi = x0;\n                        yi = y0;\n                        min2[0] = x0;\n                        min2[1] = y0;\n                        max2[0] = x0;\n                        max2[1] = y0;\n                        break;\n                    case CMD.L:\n                        bbox.fromLine(xi, yi, data[i], data[i + 1], min2, max2);\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.C:\n                        bbox.fromCubic(\n                            xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            min2, max2\n                        );\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.Q:\n                        bbox.fromQuadratic(\n                            xi, yi, data[i++], data[i++], data[i], data[i + 1],\n                            min2, max2\n                        );\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.A:\n                        // TODO Arc 判断的开销比较大\n                        var cx = data[i++];\n                        var cy = data[i++];\n                        var rx = data[i++];\n                        var ry = data[i++];\n                        var startAngle = data[i++];\n                        var endAngle = data[i++] + startAngle;\n                        // TODO Arc 旋转\n                        var psi = data[i++];\n                        var anticlockwise = 1 - data[i++];\n\n                        if (i == 1) {\n                            // 直接使用 arc 命令\n                            // 第一个命令起点还未定义\n                            x0 = mathCos(startAngle) * rx + cx;\n                            y0 = mathSin(startAngle) * ry + cy;\n                        }\n\n                        bbox.fromArc(\n                            cx, cy, rx, ry, startAngle, endAngle,\n                            anticlockwise, min2, max2\n                        );\n\n                        xi = mathCos(endAngle) * rx + cx;\n                        yi = mathSin(endAngle) * ry + cy;\n                        break;\n                    case CMD.R:\n                        x0 = xi = data[i++];\n                        y0 = yi = data[i++];\n                        var width = data[i++];\n                        var height = data[i++];\n                        // Use fromLine\n                        bbox.fromLine(x0, y0, x0 + width, y0 + height, min2, max2);\n                        break;\n                    case CMD.Z:\n                        xi = x0;\n                        yi = y0;\n                        break;\n                }\n\n                // Union\n                vec2.min(min, min, min2);\n                vec2.max(max, max, max2);\n            }\n\n            // No data\n            if (i === 0) {\n                min[0] = min[1] = max[0] = max[1] = 0;\n            }\n\n            return new BoundingRect(\n                min[0], min[1], max[0] - min[0], max[1] - min[1]\n            );\n        },\n\n        /**\n         * Rebuild path from current data\n         * Rebuild path will not consider javascript implemented line dash.\n         * @param {CanvasRenderingContext} ctx\n         */\n        rebuildPath: function (ctx) {\n            var d = this.data;\n            var x0, y0;\n            var xi, yi;\n            var x, y;\n            var ux = this._ux;\n            var uy = this._uy;\n            var len = this._len;\n            for (var i = 0; i < len;) {\n                var cmd = d[i++];\n\n                if (i == 1) {\n                    // 如果第一个命令是 L, C, Q\n                    // 则 previous point 同绘制命令的第一个 point\n                    //\n                    // 第一个命令为 Arc 的情况下会在后面特殊处理\n                    xi = d[i];\n                    yi = d[i + 1];\n\n                    x0 = xi;\n                    y0 = yi;\n                }\n                switch (cmd) {\n                    case CMD.M:\n                        x0 = xi = d[i++];\n                        y0 = yi = d[i++];\n                        ctx.moveTo(xi, yi);\n                        break;\n                    case CMD.L:\n                        x = d[i++];\n                        y = d[i++];\n                        // Not draw too small seg between\n                        if (mathAbs(x - xi) > ux || mathAbs(y - yi) > uy || i === len - 1) {\n                            ctx.lineTo(x, y);\n                            xi = x;\n                            yi = y;\n                        }\n                        break;\n                    case CMD.C:\n                        ctx.bezierCurveTo(\n                            d[i++], d[i++], d[i++], d[i++], d[i++], d[i++]\n                        );\n                        xi = d[i - 2];\n                        yi = d[i - 1];\n                        break;\n                    case CMD.Q:\n                        ctx.quadraticCurveTo(d[i++], d[i++], d[i++], d[i++]);\n                        xi = d[i - 2];\n                        yi = d[i - 1];\n                        break;\n                    case CMD.A:\n                        var cx = d[i++];\n                        var cy = d[i++];\n                        var rx = d[i++];\n                        var ry = d[i++];\n                        var theta = d[i++];\n                        var dTheta = d[i++];\n                        var psi = d[i++];\n                        var fs = d[i++];\n                        var r = (rx > ry) ? rx : ry;\n                        var scaleX = (rx > ry) ? 1 : rx / ry;\n                        var scaleY = (rx > ry) ? ry / rx : 1;\n                        var isEllipse = Math.abs(rx - ry) > 1e-3;\n                        var endAngle = theta + dTheta;\n                        if (isEllipse) {\n                            ctx.translate(cx, cy);\n                            ctx.rotate(psi);\n                            ctx.scale(scaleX, scaleY);\n                            ctx.arc(0, 0, r, theta, endAngle, 1 - fs);\n                            ctx.scale(1 / scaleX, 1 / scaleY);\n                            ctx.rotate(-psi);\n                            ctx.translate(-cx, -cy);\n                        }\n                        else {\n                            ctx.arc(cx, cy, r, theta, endAngle, 1 - fs);\n                        }\n\n                        if (i == 1) {\n                            // 直接使用 arc 命令\n                            // 第一个命令起点还未定义\n                            x0 = mathCos(theta) * rx + cx;\n                            y0 = mathSin(theta) * ry + cy;\n                        }\n                        xi = mathCos(endAngle) * rx + cx;\n                        yi = mathSin(endAngle) * ry + cy;\n                        break;\n                    case CMD.R:\n                        x0 = xi = d[i];\n                        y0 = yi = d[i + 1];\n                        ctx.rect(d[i++], d[i++], d[i++], d[i++]);\n                        break;\n                    case CMD.Z:\n                        ctx.closePath();\n                        xi = x0;\n                        yi = y0;\n                }\n            }\n        }\n    };\n\n    PathProxy.CMD = CMD;\n\n    module.exports = PathProxy;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.zrender@3.4.4@zrender/lib/core/PathProxy.js\n// module id = 184\n// module chunks = 0","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var coordinateSystemCreators = {};\n\n    function CoordinateSystemManager() {\n\n        this._coordinateSystems = [];\n    }\n\n    CoordinateSystemManager.prototype = {\n\n        constructor: CoordinateSystemManager,\n\n        create: function (ecModel, api) {\n            var coordinateSystems = [];\n            zrUtil.each(coordinateSystemCreators, function (creater, type) {\n                var list = creater.create(ecModel, api);\n                coordinateSystems = coordinateSystems.concat(list || []);\n            });\n\n            this._coordinateSystems = coordinateSystems;\n        },\n\n        update: function (ecModel, api) {\n            zrUtil.each(this._coordinateSystems, function (coordSys) {\n                // FIXME MUST have\n                coordSys.update && coordSys.update(ecModel, api);\n            });\n        },\n\n        getCoordinateSystems: function () {\n            return this._coordinateSystems.slice();\n        }\n    };\n\n    CoordinateSystemManager.register = function (type, coordinateSystemCreator) {\n        coordinateSystemCreators[type] = coordinateSystemCreator;\n    };\n\n    CoordinateSystemManager.get = function (type) {\n        return coordinateSystemCreators[type];\n    };\n\n    module.exports = CoordinateSystemManager;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.echarts@3.5.4@echarts/lib/CoordinateSystem.js\n// module id = 188\n// module chunks = 0","'use strict';\n\n\n    var echarts = require('../echarts');\n    var graphic = require('../util/graphic');\n    var layout = require('../util/layout');\n\n    // Model\n    echarts.extendComponentModel({\n\n        type: 'title',\n\n        layoutMode: {type: 'box', ignoreSize: true},\n\n        defaultOption: {\n            // 一级层叠\n            zlevel: 0,\n            // 二级层叠\n            z: 6,\n            show: true,\n\n            text: '',\n            // 超链接跳转\n            // link: null,\n            // 仅支持self | blank\n            target: 'blank',\n            subtext: '',\n\n            // 超链接跳转\n            // sublink: null,\n            // 仅支持self | blank\n            subtarget: 'blank',\n\n            // 'center' ¦ 'left' ¦ 'right'\n            // ¦ {number}（x坐标，单位px）\n            left: 0,\n            // 'top' ¦ 'bottom' ¦ 'center'\n            // ¦ {number}（y坐标，单位px）\n            top: 0,\n\n            // 水平对齐\n            // 'auto' | 'left' | 'right' | 'center'\n            // 默认根据 left 的位置判断是左对齐还是右对齐\n            // textAlign: null\n            //\n            // 垂直对齐\n            // 'auto' | 'top' | 'bottom' | 'middle'\n            // 默认根据 top 位置判断是上对齐还是下对齐\n            // textBaseline: null\n\n            backgroundColor: 'rgba(0,0,0,0)',\n\n            // 标题边框颜色\n            borderColor: '#ccc',\n\n            // 标题边框线宽，单位px，默认为0（无边框）\n            borderWidth: 0,\n\n            // 标题内边距，单位px，默认各方向内边距为5，\n            // 接受数组分别设定上右下左边距，同css\n            padding: 5,\n\n            // 主副标题纵向间隔，单位px，默认为10，\n            itemGap: 10,\n            textStyle: {\n                fontSize: 18,\n                fontWeight: 'bolder',\n                color: '#333'\n            },\n            subtextStyle: {\n                color: '#aaa'\n            }\n        }\n    });\n\n    // View\n    echarts.extendComponentView({\n\n        type: 'title',\n\n        render: function (titleModel, ecModel, api) {\n            this.group.removeAll();\n\n            if (!titleModel.get('show')) {\n                return;\n            }\n\n            var group = this.group;\n\n            var textStyleModel = titleModel.getModel('textStyle');\n            var subtextStyleModel = titleModel.getModel('subtextStyle');\n\n            var textAlign = titleModel.get('textAlign');\n            var textBaseline = titleModel.get('textBaseline');\n\n            var textEl = new graphic.Text({\n                style: {\n                    text: titleModel.get('text'),\n                    textFont: textStyleModel.getFont(),\n                    fill: textStyleModel.getTextColor()\n                },\n                z2: 10\n            });\n\n            var textRect = textEl.getBoundingRect();\n\n            var subText = titleModel.get('subtext');\n            var subTextEl = new graphic.Text({\n                style: {\n                    text: subText,\n                    textFont: subtextStyleModel.getFont(),\n                    fill: subtextStyleModel.getTextColor(),\n                    y: textRect.height + titleModel.get('itemGap'),\n                    textBaseline: 'top'\n                },\n                z2: 10\n            });\n\n            var link = titleModel.get('link');\n            var sublink = titleModel.get('sublink');\n\n            textEl.silent = !link;\n            subTextEl.silent = !sublink;\n\n            if (link) {\n                textEl.on('click', function () {\n                    window.open(link, '_' + titleModel.get('target'));\n                });\n            }\n            if (sublink) {\n                subTextEl.on('click', function () {\n                    window.open(sublink, '_' + titleModel.get('subtarget'));\n                });\n            }\n\n            group.add(textEl);\n            subText && group.add(subTextEl);\n            // If no subText, but add subTextEl, there will be an empty line.\n\n            var groupRect = group.getBoundingRect();\n            var layoutOption = titleModel.getBoxLayoutParams();\n            layoutOption.width = groupRect.width;\n            layoutOption.height = groupRect.height;\n            var layoutRect = layout.getLayoutRect(\n                layoutOption, {\n                    width: api.getWidth(),\n                    height: api.getHeight()\n                }, titleModel.get('padding')\n            );\n            // Adjust text align based on position\n            if (!textAlign) {\n                // Align left if title is on the left. center and right is same\n                textAlign = titleModel.get('left') || titleModel.get('right');\n                if (textAlign === 'middle') {\n                    textAlign = 'center';\n                }\n                // Adjust layout by text align\n                if (textAlign === 'right') {\n                    layoutRect.x += layoutRect.width;\n                }\n                else if (textAlign === 'center') {\n                    layoutRect.x += layoutRect.width / 2;\n                }\n            }\n            if (!textBaseline) {\n                textBaseline = titleModel.get('top') || titleModel.get('bottom');\n                if (textBaseline === 'center') {\n                    textBaseline = 'middle';\n                }\n                if (textBaseline === 'bottom') {\n                    layoutRect.y += layoutRect.height;\n                }\n                else if (textBaseline === 'middle') {\n                    layoutRect.y += layoutRect.height / 2;\n                }\n\n                textBaseline = textBaseline || 'top';\n            }\n\n            group.attr('position', [layoutRect.x, layoutRect.y]);\n            var alignStyle = {\n                textAlign: textAlign,\n                textVerticalAlign: textBaseline\n            };\n            textEl.setStyle(alignStyle);\n            subTextEl.setStyle(alignStyle);\n\n            // Render background\n            // Get groupRect again because textAlign has been changed\n            groupRect = group.getBoundingRect();\n            var padding = layoutRect.margin;\n            var style = titleModel.getItemStyle(['color', 'opacity']);\n            style.fill = titleModel.get('backgroundColor');\n            var rect = new graphic.Rect({\n                shape: {\n                    x: groupRect.x - padding[3],\n                    y: groupRect.y - padding[0],\n                    width: groupRect.width + padding[1] + padding[3],\n                    height: groupRect.height + padding[0] + padding[2]\n                },\n                style: style,\n                silent: true\n            });\n            graphic.subPixelOptimizeRect(rect);\n\n            group.add(rect);\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.echarts@3.5.4@echarts/lib/component/title.js\n// module id = 189\n// module chunks = 0","// FIXME Better way to pack data in graphic element\n\n\n    require('./axisPointer');\n\n    require('./tooltip/TooltipModel');\n\n    require('./tooltip/TooltipView');\n\n\n    // Show tip action\n    /**\n     * @action\n     * @property {string} type\n     * @property {number} seriesIndex\n     * @property {number} dataIndex\n     * @property {number} [x]\n     * @property {number} [y]\n     */\n    require('../echarts').registerAction(\n        {\n            type: 'showTip',\n            event: 'showTip',\n            update: 'tooltip:manuallyShowTip'\n        },\n        // noop\n        function () {}\n    );\n    // Hide tip action\n    require('../echarts').registerAction(\n        {\n            type: 'hideTip',\n            event: 'hideTip',\n            update: 'tooltip:manuallyHideTip'\n        },\n        // noop\n        function () {}\n    );\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.echarts@3.5.4@echarts/lib/component/tooltip.js\n// module id = 190\n// module chunks = 0","/**\n * List for data storage\n * @module echarts/data/List\n */\n\n\n    var UNDEFINED = 'undefined';\n    var globalObj = typeof window === 'undefined' ? global : window;\n    var Float64Array = typeof globalObj.Float64Array === UNDEFINED\n        ? Array : globalObj.Float64Array;\n    var Int32Array = typeof globalObj.Int32Array === UNDEFINED\n        ? Array : globalObj.Int32Array;\n\n    var dataCtors = {\n        'float': Float64Array,\n        'int': Int32Array,\n        // Ordinal data type can be string or int\n        'ordinal': Array,\n        'number': Array,\n        'time': Array\n    };\n\n    var Model = require('../model/Model');\n    var DataDiffer = require('./DataDiffer');\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../util/model');\n    var isObject = zrUtil.isObject;\n\n    var TRANSFERABLE_PROPERTIES = [\n        'stackedOn', 'hasItemOption', '_nameList', '_idList', '_rawData'\n    ];\n\n    var transferProperties = function (a, b) {\n        zrUtil.each(TRANSFERABLE_PROPERTIES.concat(b.__wrappedMethods || []), function (propName) {\n            if (b.hasOwnProperty(propName)) {\n                a[propName] = b[propName];\n            }\n        });\n\n        a.__wrappedMethods = b.__wrappedMethods;\n    };\n\n    /**\n     * @constructor\n     * @alias module:echarts/data/List\n     *\n     * @param {Array.<string|Object>} dimensions\n     *      For example, ['someDimName', {name: 'someDimName', type: 'someDimType'}, ...].\n     *      Dimensions should be concrete names like x, y, z, lng, lat, angle, radius\n     * @param {module:echarts/model/Model} hostModel\n     */\n    var List = function (dimensions, hostModel) {\n\n        dimensions = dimensions || ['x', 'y'];\n\n        var dimensionInfos = {};\n        var dimensionNames = [];\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimensionName;\n            var dimensionInfo = {};\n            if (typeof dimensions[i] === 'string') {\n                dimensionName = dimensions[i];\n                dimensionInfo = {\n                    name: dimensionName,\n                    stackable: false,\n                    // Type can be 'float', 'int', 'number'\n                    // Default is number, Precision of float may not enough\n                    type: 'number'\n                };\n            }\n            else {\n                dimensionInfo = dimensions[i];\n                dimensionName = dimensionInfo.name;\n                dimensionInfo.type = dimensionInfo.type || 'number';\n            }\n            dimensionNames.push(dimensionName);\n            dimensionInfos[dimensionName] = dimensionInfo;\n        }\n        /**\n         * @readOnly\n         * @type {Array.<string>}\n         */\n        this.dimensions = dimensionNames;\n\n        /**\n         * Infomation of each data dimension, like data type.\n         * @type {Object}\n         */\n        this._dimensionInfos = dimensionInfos;\n\n        /**\n         * @type {module:echarts/model/Model}\n         */\n        this.hostModel = hostModel;\n\n        /**\n         * @type {module:echarts/model/Model}\n         */\n        this.dataType;\n\n        /**\n         * Indices stores the indices of data subset after filtered.\n         * This data subset will be used in chart.\n         * @type {Array.<number>}\n         * @readOnly\n         */\n        this.indices = [];\n\n        /**\n         * Data storage\n         * @type {Object.<key, TypedArray|Array>}\n         * @private\n         */\n        this._storage = {};\n\n        /**\n         * @type {Array.<string>}\n         */\n        this._nameList = [];\n        /**\n         * @type {Array.<string>}\n         */\n        this._idList = [];\n        /**\n         * Models of data option is stored sparse for optimizing memory cost\n         * @type {Array.<module:echarts/model/Model>}\n         * @private\n         */\n        this._optionModels = [];\n\n        /**\n         * @param {module:echarts/data/List}\n         */\n        this.stackedOn = null;\n\n        /**\n         * Global visual properties after visual coding\n         * @type {Object}\n         * @private\n         */\n        this._visual = {};\n\n        /**\n         * Globel layout properties.\n         * @type {Object}\n         * @private\n         */\n        this._layout = {};\n\n        /**\n         * Item visual properties after visual coding\n         * @type {Array.<Object>}\n         * @private\n         */\n        this._itemVisuals = [];\n\n        /**\n         * Item layout properties after layout\n         * @type {Array.<Object>}\n         * @private\n         */\n        this._itemLayouts = [];\n\n        /**\n         * Graphic elemnents\n         * @type {Array.<module:zrender/Element>}\n         * @private\n         */\n        this._graphicEls = [];\n\n        /**\n         * @type {Array.<Array|Object>}\n         * @private\n         */\n        this._rawData;\n\n        /**\n         * @type {Object}\n         * @private\n         */\n        this._extent;\n    };\n\n    var listProto = List.prototype;\n\n    listProto.type = 'list';\n    /**\n     * If each data item has it's own option\n     * @type {boolean}\n     */\n    listProto.hasItemOption = true;\n\n    /**\n     * Get dimension name\n     * @param {string|number} dim\n     *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n     *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n     * @return {string} Concrete dim name.\n     */\n    listProto.getDimension = function (dim) {\n        if (!isNaN(dim)) {\n            dim = this.dimensions[dim] || dim;\n        }\n        return dim;\n    };\n    /**\n     * Get type and stackable info of particular dimension\n     * @param {string|number} dim\n     *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n     *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n     */\n    listProto.getDimensionInfo = function (dim) {\n        return zrUtil.clone(this._dimensionInfos[this.getDimension(dim)]);\n    };\n\n    /**\n     * Initialize from data\n     * @param {Array.<Object|number|Array>} data\n     * @param {Array.<string>} [nameList]\n     * @param {Function} [dimValueGetter] (dataItem, dimName, dataIndex, dimIndex) => number\n     */\n    listProto.initData = function (data, nameList, dimValueGetter) {\n        data = data || [];\n\n        if (__DEV__) {\n            if (!zrUtil.isArray(data)) {\n                throw new Error('Invalid data.');\n            }\n        }\n\n        this._rawData = data;\n\n        // Clear\n        var storage = this._storage = {};\n        var indices = this.indices = [];\n\n        var dimensions = this.dimensions;\n        var size = data.length;\n        var dimensionInfoMap = this._dimensionInfos;\n\n        var idList = [];\n        var nameRepeatCount = {};\n\n        nameList = nameList || [];\n\n        // Init storage\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimInfo = dimensionInfoMap[dimensions[i]];\n            var DataCtor = dataCtors[dimInfo.type];\n            storage[dimensions[i]] = new DataCtor(size);\n        }\n\n        var self = this;\n        if (!dimValueGetter) {\n            self.hasItemOption = false;\n        }\n        // Default dim value getter\n        dimValueGetter = dimValueGetter || function (dataItem, dimName, dataIndex, dimIndex) {\n            var value = modelUtil.getDataItemValue(dataItem);\n            // If any dataItem is like { value: 10 }\n            if (modelUtil.isDataItemOption(dataItem)) {\n                self.hasItemOption = true;\n            }\n            return modelUtil.converDataValue(\n                (value instanceof Array)\n                    ? value[dimIndex]\n                    // If value is a single number or something else not array.\n                    : value,\n                dimensionInfoMap[dimName]\n            );\n        };\n\n        for (var idx = 0; idx < data.length; idx++) {\n            var dataItem = data[idx];\n            // Each data item is value\n            // [1, 2]\n            // 2\n            // Bar chart, line chart which uses category axis\n            // only gives the 'y' value. 'x' value is the indices of cateogry\n            // Use a tempValue to normalize the value to be a (x, y) value\n\n            // Store the data by dimensions\n            for (var k = 0; k < dimensions.length; k++) {\n                var dim = dimensions[k];\n                var dimStorage = storage[dim];\n                // PENDING NULL is empty or zero\n                dimStorage[idx] = dimValueGetter(dataItem, dim, idx, k);\n            }\n\n            indices.push(idx);\n        }\n\n        // Use the name in option and create id\n        for (var i = 0; i < data.length; i++) {\n            if (!nameList[i]) {\n                if (data[i] && data[i].name != null) {\n                    nameList[i] = data[i].name;\n                }\n            }\n            var name = nameList[i] || '';\n            // Try using the id in option\n            var id = data[i] && data[i].id;\n\n            if (!id && name) {\n                // Use name as id and add counter to avoid same name\n                nameRepeatCount[name] = nameRepeatCount[name] || 0;\n                id = name;\n                if (nameRepeatCount[name] > 0) {\n                    id += '__ec__' + nameRepeatCount[name];\n                }\n                nameRepeatCount[name]++;\n            }\n            id && (idList[i] = id);\n        }\n\n        this._nameList = nameList;\n        this._idList = idList;\n    };\n\n    /**\n     * @return {number}\n     */\n    listProto.count = function () {\n        return this.indices.length;\n    };\n\n    /**\n     * Get value. Return NaN if idx is out of range.\n     * @param {string} dim Dim must be concrete name.\n     * @param {number} idx\n     * @param {boolean} stack\n     * @return {number}\n     */\n    listProto.get = function (dim, idx, stack) {\n        var storage = this._storage;\n        var dataIndex = this.indices[idx];\n\n        // If value not exists\n        if (dataIndex == null) {\n            return NaN;\n        }\n\n        var value = storage[dim] && storage[dim][dataIndex];\n        // FIXME ordinal data type is not stackable\n        if (stack) {\n            var dimensionInfo = this._dimensionInfos[dim];\n            if (dimensionInfo && dimensionInfo.stackable) {\n                var stackedOn = this.stackedOn;\n                while (stackedOn) {\n                    // Get no stacked data of stacked on\n                    var stackedValue = stackedOn.get(dim, idx);\n                    // Considering positive stack, negative stack and empty data\n                    if ((value >= 0 && stackedValue > 0)  // Positive stack\n                        || (value <= 0 && stackedValue < 0) // Negative stack\n                    ) {\n                        value += stackedValue;\n                    }\n                    stackedOn = stackedOn.stackedOn;\n                }\n            }\n        }\n        return value;\n    };\n\n    /**\n     * Get value for multi dimensions.\n     * @param {Array.<string>} [dimensions] If ignored, using all dimensions.\n     * @param {number} idx\n     * @param {boolean} stack\n     * @return {number}\n     */\n    listProto.getValues = function (dimensions, idx, stack) {\n        var values = [];\n\n        if (!zrUtil.isArray(dimensions)) {\n            stack = idx;\n            idx = dimensions;\n            dimensions = this.dimensions;\n        }\n\n        for (var i = 0, len = dimensions.length; i < len; i++) {\n            values.push(this.get(dimensions[i], idx, stack));\n        }\n\n        return values;\n    };\n\n    /**\n     * If value is NaN. Inlcuding '-'\n     * @param {string} dim\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.hasValue = function (idx) {\n        var dimensions = this.dimensions;\n        var dimensionInfos = this._dimensionInfos;\n        for (var i = 0, len = dimensions.length; i < len; i++) {\n            if (\n                // Ordinal type can be string or number\n                dimensionInfos[dimensions[i]].type !== 'ordinal'\n                && isNaN(this.get(dimensions[i], idx))\n            ) {\n                return false;\n            }\n        }\n        return true;\n    };\n\n    /**\n     * Get extent of data in one dimension\n     * @param {string} dim\n     * @param {boolean} stack\n     * @param {Function} filter\n     */\n    listProto.getDataExtent = function (dim, stack, filter) {\n        dim = this.getDimension(dim);\n        var dimData = this._storage[dim];\n        var dimInfo = this.getDimensionInfo(dim);\n        stack = (dimInfo && dimInfo.stackable) && stack;\n        var dimExtent = (this._extent || (this._extent = {}))[dim + (!!stack)];\n        var value;\n        if (dimExtent) {\n            return dimExtent;\n        }\n        // var dimInfo = this._dimensionInfos[dim];\n        if (dimData) {\n            var min = Infinity;\n            var max = -Infinity;\n            // var isOrdinal = dimInfo.type === 'ordinal';\n            for (var i = 0, len = this.count(); i < len; i++) {\n                value = this.get(dim, i, stack);\n                // FIXME\n                // if (isOrdinal && typeof value === 'string') {\n                //     value = zrUtil.indexOf(dimData, value);\n                // }\n                if (!filter || filter(value, dim, i)) {\n                    value < min && (min = value);\n                    value > max && (max = value);\n                }\n            }\n            return (this._extent[dim + !!stack] = [min, max]);\n        }\n        else {\n            return [Infinity, -Infinity];\n        }\n    };\n\n    /**\n     * Get sum of data in one dimension\n     * @param {string} dim\n     * @param {boolean} stack\n     */\n    listProto.getSum = function (dim, stack) {\n        var dimData = this._storage[dim];\n        var sum = 0;\n        if (dimData) {\n            for (var i = 0, len = this.count(); i < len; i++) {\n                var value = this.get(dim, i, stack);\n                if (!isNaN(value)) {\n                    sum += value;\n                }\n            }\n        }\n        return sum;\n    };\n\n    /**\n     * Retreive the index with given value\n     * @param {number} idx\n     * @param {number} value\n     * @return {number}\n     */\n    // FIXME Precision of float value\n    listProto.indexOf = function (dim, value) {\n        var storage = this._storage;\n        var dimData = storage[dim];\n        var indices = this.indices;\n\n        if (dimData) {\n            for (var i = 0, len = indices.length; i < len; i++) {\n                var rawIndex = indices[i];\n                if (dimData[rawIndex] === value) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    };\n\n    /**\n     * Retreive the index with given name\n     * @param {number} idx\n     * @param {number} name\n     * @return {number}\n     */\n    listProto.indexOfName = function (name) {\n        var indices = this.indices;\n        var nameList = this._nameList;\n\n        for (var i = 0, len = indices.length; i < len; i++) {\n            var rawIndex = indices[i];\n            if (nameList[rawIndex] === name) {\n                return i;\n            }\n        }\n\n        return -1;\n    };\n\n    /**\n     * Retreive the index with given raw data index\n     * @param {number} idx\n     * @param {number} name\n     * @return {number}\n     */\n    listProto.indexOfRawIndex = function (rawIndex) {\n        // Indices are ascending\n        var indices = this.indices;\n\n        // If rawIndex === dataIndex\n        var rawDataIndex = indices[rawIndex];\n        if (rawDataIndex != null && rawDataIndex === rawIndex) {\n            return rawIndex;\n        }\n\n        var left = 0;\n        var right = indices.length - 1;\n        while (left <= right) {\n            var mid = (left + right) / 2 | 0;\n            if (indices[mid] < rawIndex) {\n                left = mid + 1;\n            }\n            else if (indices[mid] > rawIndex) {\n                right = mid - 1;\n            }\n            else {\n                return mid;\n            }\n        }\n        return -1;\n    };\n\n    /**\n     * Retreive the index of nearest value\n     * @param {string} dim\n     * @param {number} value\n     * @param {boolean} stack If given value is after stacked\n     * @param {number} [maxDistance=Infinity]\n     * @return {Array.<number>} Considere multiple points has the same value.\n     */\n    listProto.indicesOfNearest = function (dim, value, stack, maxDistance) {\n        var storage = this._storage;\n        var dimData = storage[dim];\n        var nearestIndices = [];\n\n        if (!dimData) {\n            return nearestIndices;\n        }\n\n        if (maxDistance == null) {\n            maxDistance = Infinity;\n        }\n\n        var minDist = Number.MAX_VALUE;\n        var minDiff = -1;\n        for (var i = 0, len = this.count(); i < len; i++) {\n            var diff = value - this.get(dim, i, stack);\n            var dist = Math.abs(diff);\n            if (diff <= maxDistance && dist <= minDist) {\n                // For the case of two data are same on xAxis, which has sequence data.\n                // Show the nearest index\n                // https://github.com/ecomfe/echarts/issues/2869\n                if (dist < minDist || (diff >= 0 && minDiff < 0)) {\n                    minDist = dist;\n                    minDiff = diff;\n                    nearestIndices.length = 0;\n                }\n                nearestIndices.push(i);\n            }\n        }\n        return nearestIndices;\n    };\n\n    /**\n     * Get raw data index\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.getRawIndex = function (idx) {\n        var rawIdx = this.indices[idx];\n        return rawIdx == null ? -1 : rawIdx;\n    };\n\n    /**\n     * Get raw data item\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.getRawDataItem = function (idx) {\n        return this._rawData[this.getRawIndex(idx)];\n    };\n\n    /**\n     * @param {number} idx\n     * @param {boolean} [notDefaultIdx=false]\n     * @return {string}\n     */\n    listProto.getName = function (idx) {\n        return this._nameList[this.indices[idx]] || '';\n    };\n\n    /**\n     * @param {number} idx\n     * @param {boolean} [notDefaultIdx=false]\n     * @return {string}\n     */\n    listProto.getId = function (idx) {\n        return this._idList[this.indices[idx]] || (this.getRawIndex(idx) + '');\n    };\n\n\n    function normalizeDimensions(dimensions) {\n        if (!zrUtil.isArray(dimensions)) {\n            dimensions = [dimensions];\n        }\n        return dimensions;\n    }\n\n    /**\n     * Data iteration\n     * @param {string|Array.<string>}\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     *\n     * @example\n     *  list.each('x', function (x, idx) {});\n     *  list.each(['x', 'y'], function (x, y, idx) {});\n     *  list.each(function (idx) {})\n     */\n    listProto.each = function (dims, cb, stack, context) {\n        if (typeof dims === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dims;\n            dims = [];\n        }\n\n        dims = zrUtil.map(normalizeDimensions(dims), this.getDimension, this);\n\n        var value = [];\n        var dimSize = dims.length;\n        var indices = this.indices;\n\n        context = context || this;\n\n        for (var i = 0; i < indices.length; i++) {\n            // Simple optimization\n            switch (dimSize) {\n                case 0:\n                    cb.call(context, i);\n                    break;\n                case 1:\n                    cb.call(context, this.get(dims[0], i, stack), i);\n                    break;\n                case 2:\n                    cb.call(context, this.get(dims[0], i, stack), this.get(dims[1], i, stack), i);\n                    break;\n                default:\n                    for (var k = 0; k < dimSize; k++) {\n                        value[k] = this.get(dims[k], i, stack);\n                    }\n                    // Index\n                    value[k] = i;\n                    cb.apply(context, value);\n            }\n        }\n    };\n\n    /**\n     * Data filter\n     * @param {string|Array.<string>}\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     */\n    listProto.filterSelf = function (dimensions, cb, stack, context) {\n        if (typeof dimensions === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dimensions;\n            dimensions = [];\n        }\n\n        dimensions = zrUtil.map(\n            normalizeDimensions(dimensions), this.getDimension, this\n        );\n\n        var newIndices = [];\n        var value = [];\n        var dimSize = dimensions.length;\n        var indices = this.indices;\n\n        context = context || this;\n\n        for (var i = 0; i < indices.length; i++) {\n            var keep;\n            // Simple optimization\n            if (dimSize === 1) {\n                keep = cb.call(\n                    context, this.get(dimensions[0], i, stack), i\n                );\n            }\n            else {\n                for (var k = 0; k < dimSize; k++) {\n                    value[k] = this.get(dimensions[k], i, stack);\n                }\n                value[k] = i;\n                keep = cb.apply(context, value);\n            }\n            if (keep) {\n                newIndices.push(indices[i]);\n            }\n        }\n\n        this.indices = newIndices;\n\n        // Reset data extent\n        this._extent = {};\n\n        return this;\n    };\n\n    /**\n     * Data mapping to a plain array\n     * @param {string|Array.<string>} [dimensions]\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     * @return {Array}\n     */\n    listProto.mapArray = function (dimensions, cb, stack, context) {\n        if (typeof dimensions === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dimensions;\n            dimensions = [];\n        }\n\n        var result = [];\n        this.each(dimensions, function () {\n            result.push(cb && cb.apply(this, arguments));\n        }, stack, context);\n        return result;\n    };\n\n    function cloneListForMapAndSample(original, excludeDimensions) {\n        var allDimensions = original.dimensions;\n        var list = new List(\n            zrUtil.map(allDimensions, original.getDimensionInfo, original),\n            original.hostModel\n        );\n        // FIXME If needs stackedOn, value may already been stacked\n        transferProperties(list, original);\n\n        var storage = list._storage = {};\n        var originalStorage = original._storage;\n        // Init storage\n        for (var i = 0; i < allDimensions.length; i++) {\n            var dim = allDimensions[i];\n            var dimStore = originalStorage[dim];\n            if (zrUtil.indexOf(excludeDimensions, dim) >= 0) {\n                storage[dim] = new dimStore.constructor(\n                    originalStorage[dim].length\n                );\n            }\n            else {\n                // Direct reference for other dimensions\n                storage[dim] = originalStorage[dim];\n            }\n        }\n        return list;\n    }\n\n    /**\n     * Data mapping to a new List with given dimensions\n     * @param {string|Array.<string>} dimensions\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     * @return {Array}\n     */\n    listProto.map = function (dimensions, cb, stack, context) {\n        dimensions = zrUtil.map(\n            normalizeDimensions(dimensions), this.getDimension, this\n        );\n\n        var list = cloneListForMapAndSample(this, dimensions);\n        // Following properties are all immutable.\n        // So we can reference to the same value\n        var indices = list.indices = this.indices;\n\n        var storage = list._storage;\n\n        var tmpRetValue = [];\n        this.each(dimensions, function () {\n            var idx = arguments[arguments.length - 1];\n            var retValue = cb && cb.apply(this, arguments);\n            if (retValue != null) {\n                // a number\n                if (typeof retValue === 'number') {\n                    tmpRetValue[0] = retValue;\n                    retValue = tmpRetValue;\n                }\n                for (var i = 0; i < retValue.length; i++) {\n                    var dim = dimensions[i];\n                    var dimStore = storage[dim];\n                    var rawIdx = indices[idx];\n                    if (dimStore) {\n                        dimStore[rawIdx] = retValue[i];\n                    }\n                }\n            }\n        }, stack, context);\n\n        return list;\n    };\n\n    /**\n     * Large data down sampling on given dimension\n     * @param {string} dimension\n     * @param {number} rate\n     * @param {Function} sampleValue\n     * @param {Function} sampleIndex Sample index for name and id\n     */\n    listProto.downSample = function (dimension, rate, sampleValue, sampleIndex) {\n        var list = cloneListForMapAndSample(this, [dimension]);\n        var storage = this._storage;\n        var targetStorage = list._storage;\n\n        var originalIndices = this.indices;\n        var indices = list.indices = [];\n\n        var frameValues = [];\n        var frameIndices = [];\n        var frameSize = Math.floor(1 / rate);\n\n        var dimStore = targetStorage[dimension];\n        var len = this.count();\n        // Copy data from original data\n        for (var i = 0; i < storage[dimension].length; i++) {\n            targetStorage[dimension][i] = storage[dimension][i];\n        }\n        for (var i = 0; i < len; i += frameSize) {\n            // Last frame\n            if (frameSize > len - i) {\n                frameSize = len - i;\n                frameValues.length = frameSize;\n            }\n            for (var k = 0; k < frameSize; k++) {\n                var idx = originalIndices[i + k];\n                frameValues[k] = dimStore[idx];\n                frameIndices[k] = idx;\n            }\n            var value = sampleValue(frameValues);\n            var idx = frameIndices[sampleIndex(frameValues, value) || 0];\n            // Only write value on the filtered data\n            dimStore[idx] = value;\n            indices.push(idx);\n        }\n\n        return list;\n    };\n\n    /**\n     * Get model of one data item.\n     *\n     * @param {number} idx\n     */\n    // FIXME Model proxy ?\n    listProto.getItemModel = function (idx) {\n        var hostModel = this.hostModel;\n        idx = this.indices[idx];\n        return new Model(this._rawData[idx], hostModel, hostModel && hostModel.ecModel);\n    };\n\n    /**\n     * Create a data differ\n     * @param {module:echarts/data/List} otherList\n     * @return {module:echarts/data/DataDiffer}\n     */\n    listProto.diff = function (otherList) {\n        var idList = this._idList;\n        var otherIdList = otherList && otherList._idList;\n        var val;\n        // Use prefix to avoid index to be the same as otherIdList[idx],\n        // which will cause weird udpate animation.\n        var prefix = 'e\\0\\0';\n\n        return new DataDiffer(\n            otherList ? otherList.indices : [],\n            this.indices,\n            function (idx) {\n                return (val = otherIdList[idx]) != null ? val : prefix + idx;\n            },\n            function (idx) {\n                return (val = idList[idx]) != null ? val : prefix + idx;\n            }\n        );\n    };\n    /**\n     * Get visual property.\n     * @param {string} key\n     */\n    listProto.getVisual = function (key) {\n        var visual = this._visual;\n        return visual && visual[key];\n    };\n\n    /**\n     * Set visual property\n     * @param {string|Object} key\n     * @param {*} [value]\n     *\n     * @example\n     *  setVisual('color', color);\n     *  setVisual({\n     *      'color': color\n     *  });\n     */\n    listProto.setVisual = function (key, val) {\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    this.setVisual(name, key[name]);\n                }\n            }\n            return;\n        }\n        this._visual = this._visual || {};\n        this._visual[key] = val;\n    };\n\n    /**\n     * Set layout property.\n     * @param {string} key\n     * @param {*} [val]\n     */\n    listProto.setLayout = function (key, val) {\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    this.setLayout(name, key[name]);\n                }\n            }\n            return;\n        }\n        this._layout[key] = val;\n    };\n\n    /**\n     * Get layout property.\n     * @param  {string} key.\n     * @return {*}\n     */\n    listProto.getLayout = function (key) {\n        return this._layout[key];\n    };\n\n    /**\n     * Get layout of single data item\n     * @param {number} idx\n     */\n    listProto.getItemLayout = function (idx) {\n        return this._itemLayouts[idx];\n    };\n\n    /**\n     * Set layout of single data item\n     * @param {number} idx\n     * @param {Object} layout\n     * @param {boolean=} [merge=false]\n     */\n    listProto.setItemLayout = function (idx, layout, merge) {\n        this._itemLayouts[idx] = merge\n            ? zrUtil.extend(this._itemLayouts[idx] || {}, layout)\n            : layout;\n    };\n\n    /**\n     * Clear all layout of single data item\n     */\n    listProto.clearItemLayouts = function () {\n        this._itemLayouts.length = 0;\n    };\n\n    /**\n     * Get visual property of single data item\n     * @param {number} idx\n     * @param {string} key\n     * @param {boolean} ignoreParent\n     */\n    listProto.getItemVisual = function (idx, key, ignoreParent) {\n        var itemVisual = this._itemVisuals[idx];\n        var val = itemVisual && itemVisual[key];\n        if (val == null && !ignoreParent) {\n            // Use global visual property\n            return this.getVisual(key);\n        }\n        return val;\n    };\n\n    /**\n     * Set visual property of single data item\n     *\n     * @param {number} idx\n     * @param {string|Object} key\n     * @param {*} [value]\n     *\n     * @example\n     *  setItemVisual(0, 'color', color);\n     *  setItemVisual(0, {\n     *      'color': color\n     *  });\n     */\n    listProto.setItemVisual = function (idx, key, value) {\n        var itemVisual = this._itemVisuals[idx] || {};\n        this._itemVisuals[idx] = itemVisual;\n\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    itemVisual[name] = key[name];\n                }\n            }\n            return;\n        }\n        itemVisual[key] = value;\n    };\n\n    /**\n     * Clear itemVisuals and list visual.\n     */\n    listProto.clearAllVisual = function () {\n        this._visual = {};\n        this._itemVisuals = [];\n    };\n\n    var setItemDataAndSeriesIndex = function (child) {\n        child.seriesIndex = this.seriesIndex;\n        child.dataIndex = this.dataIndex;\n        child.dataType = this.dataType;\n    };\n    /**\n     * Set graphic element relative to data. It can be set as null\n     * @param {number} idx\n     * @param {module:zrender/Element} [el]\n     */\n    listProto.setItemGraphicEl = function (idx, el) {\n        var hostModel = this.hostModel;\n\n        if (el) {\n            // Add data index and series index for indexing the data by element\n            // Useful in tooltip\n            el.dataIndex = idx;\n            el.dataType = this.dataType;\n            el.seriesIndex = hostModel && hostModel.seriesIndex;\n            if (el.type === 'group') {\n                el.traverse(setItemDataAndSeriesIndex, el);\n            }\n        }\n\n        this._graphicEls[idx] = el;\n    };\n\n    /**\n     * @param {number} idx\n     * @return {module:zrender/Element}\n     */\n    listProto.getItemGraphicEl = function (idx) {\n        return this._graphicEls[idx];\n    };\n\n    /**\n     * @param {Function} cb\n     * @param {*} context\n     */\n    listProto.eachItemGraphicEl = function (cb, context) {\n        zrUtil.each(this._graphicEls, function (el, idx) {\n            if (el) {\n                cb && cb.call(context, el, idx);\n            }\n        });\n    };\n\n    /**\n     * Shallow clone a new list except visual and layout properties, and graph elements.\n     * New list only change the indices.\n     */\n    listProto.cloneShallow = function () {\n        var dimensionInfoList = zrUtil.map(this.dimensions, this.getDimensionInfo, this);\n        var list = new List(dimensionInfoList, this.hostModel);\n\n        // FIXME\n        list._storage = this._storage;\n\n        transferProperties(list, this);\n\n\n        // Clone will not change the data extent and indices\n        list.indices = this.indices.slice();\n\n        if (this._extent) {\n            list._extent = zrUtil.extend({}, this._extent);\n        }\n\n        return list;\n    };\n\n    /**\n     * Wrap some method to add more feature\n     * @param {string} methodName\n     * @param {Function} injectFunction\n     */\n    listProto.wrapMethod = function (methodName, injectFunction) {\n        var originalMethod = this[methodName];\n        if (typeof originalMethod !== 'function') {\n            return;\n        }\n        this.__wrappedMethods = this.__wrappedMethods || [];\n        this.__wrappedMethods.push(methodName);\n        this[methodName] = function () {\n            var res = originalMethod.apply(this, arguments);\n            return injectFunction.apply(this, [res].concat(zrUtil.slice(arguments)));\n        };\n    };\n\n    // Methods that create a new list based on this list should be listed here.\n    // Notice that those method should `RETURN` the new list.\n    listProto.TRANSFERABLE_METHODS = ['cloneShallow', 'downSample', 'map'];\n    // Methods that change indices of this list should be listed here.\n    listProto.CHANGABLE_METHODS = ['filterSelf'];\n\n    module.exports = List;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.echarts@3.5.4@echarts/lib/data/List.js\n// module id = 191\n// module chunks = 0","/**\n * Complete dimensions by data (guess dimension).\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    /**\n     * Complete the dimensions array guessed from the data structure.\n     * @param  {Array.<string>} dimensions Necessary dimensions, like ['x', 'y']\n     * @param  {Array} data Data list. [[1, 2, 3], [2, 3, 4]]\n     * @param  {Object} [opt]\n     * @param  {Array.<string>} [opt.defaultNames] Default names to fill not necessary dimensions, like ['value']\n     * @param  {string} [opt.extraPrefix] Prefix of name when filling the left dimensions.\n     * @param  {number} [opt.dimCount] If not specified, guess by the first data item.\n     * @return {Array.<string>}\n     */\n    function completeDimensions(dimensions, data, opt) {\n        if (!data) {\n            return dimensions;\n        }\n\n        opt = opt || {};\n\n        var dimCount = opt.dimCount;\n        if (dimCount == null) {\n            var value0 = retrieveValue(data[0]);\n            dimCount = zrUtil.isArray(value0) && value0.length || 1;\n        }\n\n        var defaultNames = opt.defaultNames || [];\n        var extraPrefix = opt.extraPrefix || 'extra';\n        for (var i = 0; i < dimCount; i++) {\n            if (!dimensions[i]) {\n                var name = defaultNames[i] || (extraPrefix + (i - defaultNames.length));\n                dimensions[i] = guessOrdinal(data, i)\n                    ? {type: 'ordinal', name: name}\n                    : name;\n            }\n        }\n\n        return dimensions;\n    }\n\n    // The rule should not be complex, otherwise user might not\n    // be able to known where the data is wrong.\n    var guessOrdinal = completeDimensions.guessOrdinal = function (data, dimIndex) {\n        for (var i = 0, len = data.length; i < len; i++) {\n            var value = retrieveValue(data[i]);\n\n            if (!zrUtil.isArray(value)) {\n                return false;\n            }\n\n            var value = value[dimIndex];\n            if (value != null && isFinite(value)) {\n                return false;\n            }\n            else if (zrUtil.isString(value) && value !== '-') {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    function retrieveValue(o) {\n        return zrUtil.isArray(o) ? o : zrUtil.isObject(o) ? o.value: o;\n    }\n\n    module.exports = completeDimensions;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.echarts@3.5.4@echarts/lib/data/helper/completeDimensions.js\n// module id = 192\n// module chunks = 0","/**\n * Interval scale\n * @module echarts/scale/Interval\n */\n\n\n\n    var numberUtil = require('../util/number');\n    var formatUtil = require('../util/format');\n    var Scale = require('./Scale');\n    var helper = require('./helper');\n\n    var roundNumber = numberUtil.round;\n\n    /**\n     * @alias module:echarts/coord/scale/Interval\n     * @constructor\n     */\n    var IntervalScale = Scale.extend({\n\n        type: 'interval',\n\n        _interval: 0,\n\n        _intervalPrecision: 2,\n\n        setExtent: function (start, end) {\n            var thisExtent = this._extent;\n            //start,end may be a Number like '25',so...\n            if (!isNaN(start)) {\n                thisExtent[0] = parseFloat(start);\n            }\n            if (!isNaN(end)) {\n                thisExtent[1] = parseFloat(end);\n            }\n        },\n\n        unionExtent: function (other) {\n            var extent = this._extent;\n            other[0] < extent[0] && (extent[0] = other[0]);\n            other[1] > extent[1] && (extent[1] = other[1]);\n\n            // unionExtent may called by it's sub classes\n            IntervalScale.prototype.setExtent.call(this, extent[0], extent[1]);\n        },\n        /**\n         * Get interval\n         */\n        getInterval: function () {\n            if (!this._interval) {\n                this.niceTicks();\n            }\n            return this._interval;\n        },\n\n        /**\n         * Set interval\n         */\n        setInterval: function (interval) {\n            this._interval = interval;\n            // Dropped auto calculated niceExtent and use user setted extent\n            // We assume user wan't to set both interval, min, max to get a better result\n            this._niceExtent = this._extent.slice();\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicks: function () {\n            if (!this._interval) {\n                this.niceTicks();\n            }\n            return helper.intervalScaleGetTicks(\n                this._interval, this._extent, this._niceExtent, this._intervalPrecision\n            );\n        },\n\n        /**\n         * @return {Array.<string>}\n         */\n        getTicksLabels: function () {\n            var labels = [];\n            var ticks = this.getTicks();\n            for (var i = 0; i < ticks.length; i++) {\n                labels.push(this.getLabel(ticks[i]));\n            }\n            return labels;\n        },\n\n        /**\n         * @param {number} data\n         * @param {Object} [opt]\n         * @param {number|string} [opt.precision] If 'auto', use nice presision.\n         * @param {boolean} [opt.pad] returns 1.50 but not 1.5 if precision is 2.\n         * @return {string}\n         */\n        getLabel: function (data, opt) {\n            if (data == null) {\n                return '';\n            }\n\n            var precision = opt && opt.precision;\n\n            if (precision == null) {\n                precision = numberUtil.getPrecisionSafe(data) || 0;\n            }\n            else if (precision === 'auto') {\n                // Should be more precise then tick.\n                precision = this._intervalPrecision;\n            }\n\n            // (1) If `precision` is set, 12.005 should be display as '12.00500'.\n            // (2) Use roundNumber (toFixed) to avoid scientific notation like '3.5e-7'.\n            data = roundNumber(data, precision, true);\n\n            return formatUtil.addCommas(data);\n        },\n\n        /**\n         * Update interval and extent of intervals for nice ticks\n         *\n         * @param {number} [splitNumber = 5] Desired number of ticks\n         */\n        niceTicks: function (splitNumber) {\n            splitNumber = splitNumber || 5;\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            if (!isFinite(span)) {\n                return;\n            }\n            // User may set axis min 0 and data are all negative\n            // FIXME If it needs to reverse ?\n            if (span < 0) {\n                span = -span;\n                extent.reverse();\n            }\n\n            var result = helper.intervalScaleNiceTicks(extent, splitNumber);\n\n            this._intervalPrecision = result.intervalPrecision;\n            this._interval = result.interval;\n            this._niceExtent = result.niceTickExtent;\n        },\n\n        /**\n         * Nice extent.\n         * @param {number} [splitNumber = 5] Given approx tick number\n         * @param {boolean} [fixMin=false]\n         * @param {boolean} [fixMax=false]\n         */\n        niceExtent: function (splitNumber, fixMin, fixMax) {\n            var extent = this._extent;\n            // If extent start and end are same, expand them\n            if (extent[0] === extent[1]) {\n                if (extent[0] !== 0) {\n                    // Expand extent\n                    var expandSize = extent[0];\n                    // In the fowllowing case\n                    //      Axis has been fixed max 100\n                    //      Plus data are all 100 and axis extent are [100, 100].\n                    // Extend to the both side will cause expanded max is larger than fixed max.\n                    // So only expand to the smaller side.\n                    if (!fixMax) {\n                        extent[1] += expandSize / 2;\n                        extent[0] -= expandSize / 2;\n                    }\n                    else {\n                        extent[0] -= expandSize / 2;\n                    }\n                }\n                else {\n                    extent[1] = 1;\n                }\n            }\n            var span = extent[1] - extent[0];\n            // If there are no data and extent are [Infinity, -Infinity]\n            if (!isFinite(span)) {\n                extent[0] = 0;\n                extent[1] = 1;\n            }\n\n            this.niceTicks(splitNumber);\n\n            // var extent = this._extent;\n            var interval = this._interval;\n\n            if (!fixMin) {\n                extent[0] = roundNumber(Math.floor(extent[0] / interval) * interval);\n            }\n            if (!fixMax) {\n                extent[1] = roundNumber(Math.ceil(extent[1] / interval) * interval);\n            }\n        }\n    });\n\n    /**\n     * @return {module:echarts/scale/Time}\n     */\n    IntervalScale.create = function () {\n        return new IntervalScale();\n    };\n\n    module.exports = IntervalScale;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.echarts@3.5.4@echarts/lib/scale/Interval.js\n// module id = 193\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var clazz = require('./clazz');\n\n    var parseClassType = clazz.parseClassType;\n\n    var base = 0;\n\n    var componentUtil = {};\n\n    var DELIMITER = '_';\n\n    /**\n     * @public\n     * @param {string} type\n     * @return {string}\n     */\n    componentUtil.getUID = function (type) {\n        // Considering the case of crossing js context,\n        // use Math.random to make id as unique as possible.\n        return [(type || ''), base++, Math.random()].join(DELIMITER);\n    };\n\n    /**\n     * @inner\n     */\n    componentUtil.enableSubTypeDefaulter = function (entity) {\n\n        var subTypeDefaulters = {};\n\n        entity.registerSubTypeDefaulter = function (componentType, defaulter) {\n            componentType = parseClassType(componentType);\n            subTypeDefaulters[componentType.main] = defaulter;\n        };\n\n        entity.determineSubType = function (componentType, option) {\n            var type = option.type;\n            if (!type) {\n                var componentTypeMain = parseClassType(componentType).main;\n                if (entity.hasSubTypes(componentType) && subTypeDefaulters[componentTypeMain]) {\n                    type = subTypeDefaulters[componentTypeMain](option);\n                }\n            }\n            return type;\n        };\n\n        return entity;\n    };\n\n    /**\n     * Topological travel on Activity Network (Activity On Vertices).\n     * Dependencies is defined in Model.prototype.dependencies, like ['xAxis', 'yAxis'].\n     *\n     * If 'xAxis' or 'yAxis' is absent in componentTypeList, just ignore it in topology.\n     *\n     * If there is circle dependencey, Error will be thrown.\n     *\n     */\n    componentUtil.enableTopologicalTravel = function (entity, dependencyGetter) {\n\n        /**\n         * @public\n         * @param {Array.<string>} targetNameList Target Component type list.\n         *                                           Can be ['aa', 'bb', 'aa.xx']\n         * @param {Array.<string>} fullNameList By which we can build dependency graph.\n         * @param {Function} callback Params: componentType, dependencies.\n         * @param {Object} context Scope of callback.\n         */\n        entity.topologicalTravel = function (targetNameList, fullNameList, callback, context) {\n            if (!targetNameList.length) {\n                return;\n            }\n\n            var result = makeDepndencyGraph(fullNameList);\n            var graph = result.graph;\n            var stack = result.noEntryList;\n\n            var targetNameSet = {};\n            zrUtil.each(targetNameList, function (name) {\n                targetNameSet[name] = true;\n            });\n\n            while (stack.length) {\n                var currComponentType = stack.pop();\n                var currVertex = graph[currComponentType];\n                var isInTargetNameSet = !!targetNameSet[currComponentType];\n                if (isInTargetNameSet) {\n                    callback.call(context, currComponentType, currVertex.originalDeps.slice());\n                    delete targetNameSet[currComponentType];\n                }\n                zrUtil.each(\n                    currVertex.successor,\n                    isInTargetNameSet ? removeEdgeAndAdd : removeEdge\n                );\n            }\n\n            zrUtil.each(targetNameSet, function () {\n                throw new Error('Circle dependency may exists');\n            });\n\n            function removeEdge(succComponentType) {\n                graph[succComponentType].entryCount--;\n                if (graph[succComponentType].entryCount === 0) {\n                    stack.push(succComponentType);\n                }\n            }\n\n            // Consider this case: legend depends on series, and we call\n            // chart.setOption({series: [...]}), where only series is in option.\n            // If we do not have 'removeEdgeAndAdd', legendModel.mergeOption will\n            // not be called, but only sereis.mergeOption is called. Thus legend\n            // have no chance to update its local record about series (like which\n            // name of series is available in legend).\n            function removeEdgeAndAdd(succComponentType) {\n                targetNameSet[succComponentType] = true;\n                removeEdge(succComponentType);\n            }\n        };\n\n        /**\n         * DepndencyGraph: {Object}\n         * key: conponentType,\n         * value: {\n         *     successor: [conponentTypes...],\n         *     originalDeps: [conponentTypes...],\n         *     entryCount: {number}\n         * }\n         */\n        function makeDepndencyGraph(fullNameList) {\n            var graph = {};\n            var noEntryList = [];\n\n            zrUtil.each(fullNameList, function (name) {\n\n                var thisItem = createDependencyGraphItem(graph, name);\n                var originalDeps = thisItem.originalDeps = dependencyGetter(name);\n\n                var availableDeps = getAvailableDependencies(originalDeps, fullNameList);\n                thisItem.entryCount = availableDeps.length;\n                if (thisItem.entryCount === 0) {\n                    noEntryList.push(name);\n                }\n\n                zrUtil.each(availableDeps, function (dependentName) {\n                    if (zrUtil.indexOf(thisItem.predecessor, dependentName) < 0) {\n                        thisItem.predecessor.push(dependentName);\n                    }\n                    var thatItem = createDependencyGraphItem(graph, dependentName);\n                    if (zrUtil.indexOf(thatItem.successor, dependentName) < 0) {\n                        thatItem.successor.push(name);\n                    }\n                });\n            });\n\n            return {graph: graph, noEntryList: noEntryList};\n        }\n\n        function createDependencyGraphItem(graph, name) {\n            if (!graph[name]) {\n                graph[name] = {predecessor: [], successor: []};\n            }\n            return graph[name];\n        }\n\n        function getAvailableDependencies(originalDeps, fullNameList) {\n            var availableDeps = [];\n            zrUtil.each(originalDeps, function (dep) {\n                zrUtil.indexOf(fullNameList, dep) >= 0 && availableDeps.push(dep);\n            });\n            return availableDeps;\n        }\n    };\n\n    module.exports = componentUtil;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.echarts@3.5.4@echarts/lib/util/component.js\n// module id = 194\n// module chunks = 0","\n/* styles */\nrequire(\"!!../../.extract-text-webpack-plugin@2.1.0@extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../.vue-loader@11.3.4@vue-loader/lib/style-compiler/index?{\\\"id\\\":\\\"data-v-897bed0c\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../.vue-loader@11.3.4@vue-loader/lib/selector?type=styles&index=0!./lite.vue\")\n\nvar Component = require(\"!../../.vue-loader@11.3.4@vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../.vue-loader@11.3.4@vue-loader/lib/selector?type=script&index=0!./lite.vue\"),\n  /* template */\n  require(\"!!../../.vue-loader@11.3.4@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-897bed0c\\\"}!../../.vue-loader@11.3.4@vue-loader/lib/selector?type=template&index=0!./lite.vue\"),\n  /* scopeId */\n  \"data-v-897bed0c\",\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.vue-echarts-v3@1.0.4@vue-echarts-v3/src/lite.vue\n// module id = 195\n// module chunks = 0","// https://github.com/mziccard/node-timsort\n\n    var DEFAULT_MIN_MERGE = 32;\n\n    var DEFAULT_MIN_GALLOPING = 7;\n\n    var DEFAULT_TMP_STORAGE_LENGTH = 256;\n\n    function minRunLength(n) {\n        var r = 0;\n\n        while (n >= DEFAULT_MIN_MERGE) {\n            r |= n & 1;\n            n >>= 1;\n        }\n\n        return n + r;\n    }\n\n    function makeAscendingRun(array, lo, hi, compare) {\n        var runHi = lo + 1;\n\n        if (runHi === hi) {\n            return 1;\n        }\n\n        if (compare(array[runHi++], array[lo]) < 0) {\n            while (runHi < hi && compare(array[runHi], array[runHi - 1]) < 0) {\n                runHi++;\n            }\n\n            reverseRun(array, lo, runHi);\n        }\n        else {\n            while (runHi < hi && compare(array[runHi], array[runHi - 1]) >= 0) {\n                runHi++;\n            }\n        }\n\n        return runHi - lo;\n    }\n\n    function reverseRun(array, lo, hi) {\n        hi--;\n\n        while (lo < hi) {\n            var t = array[lo];\n            array[lo++] = array[hi];\n            array[hi--] = t;\n        }\n    }\n\n    function binaryInsertionSort(array, lo, hi, start, compare) {\n        if (start === lo) {\n            start++;\n        }\n\n        for (; start < hi; start++) {\n            var pivot = array[start];\n\n            var left = lo;\n            var right = start;\n            var mid;\n\n            while (left < right) {\n                mid = left + right >>> 1;\n\n                if (compare(pivot, array[mid]) < 0) {\n                    right = mid;\n                }\n                else {\n                    left = mid + 1;\n                }\n            }\n\n            var n = start - left;\n\n            switch (n) {\n                case 3:\n                    array[left + 3] = array[left + 2];\n\n                case 2:\n                    array[left + 2] = array[left + 1];\n\n                case 1:\n                    array[left + 1] = array[left];\n                    break;\n                default:\n                    while (n > 0) {\n                        array[left + n] = array[left + n - 1];\n                        n--;\n                    }\n            }\n\n            array[left] = pivot;\n        }\n    }\n\n    function gallopLeft(value, array, start, length, hint, compare) {\n        var lastOffset = 0;\n        var maxOffset = 0;\n        var offset = 1;\n\n        if (compare(value, array[start + hint]) > 0) {\n            maxOffset = length - hint;\n\n            while (offset < maxOffset && compare(value, array[start + hint + offset]) > 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            lastOffset += hint;\n            offset += hint;\n        }\n        else {\n            maxOffset = hint + 1;\n            while (offset < maxOffset && compare(value, array[start + hint - offset]) <= 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            var tmp = lastOffset;\n            lastOffset = hint - offset;\n            offset = hint - tmp;\n        }\n\n        lastOffset++;\n        while (lastOffset < offset) {\n            var m = lastOffset + (offset - lastOffset >>> 1);\n\n            if (compare(value, array[start + m]) > 0) {\n                lastOffset = m + 1;\n            }\n            else {\n                offset = m;\n            }\n        }\n        return offset;\n    }\n\n    function gallopRight(value, array, start, length, hint, compare) {\n        var lastOffset = 0;\n        var maxOffset = 0;\n        var offset = 1;\n\n        if (compare(value, array[start + hint]) < 0) {\n            maxOffset = hint + 1;\n\n            while (offset < maxOffset && compare(value, array[start + hint - offset]) < 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            var tmp = lastOffset;\n            lastOffset = hint - offset;\n            offset = hint - tmp;\n        }\n        else {\n            maxOffset = length - hint;\n\n            while (offset < maxOffset && compare(value, array[start + hint + offset]) >= 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            lastOffset += hint;\n            offset += hint;\n        }\n\n        lastOffset++;\n\n        while (lastOffset < offset) {\n            var m = lastOffset + (offset - lastOffset >>> 1);\n\n            if (compare(value, array[start + m]) < 0) {\n                offset = m;\n            }\n            else {\n                lastOffset = m + 1;\n            }\n        }\n\n        return offset;\n    }\n\n    function TimSort(array, compare) {\n        var minGallop = DEFAULT_MIN_GALLOPING;\n        var length = 0;\n        var tmpStorageLength = DEFAULT_TMP_STORAGE_LENGTH;\n        var stackLength = 0;\n        var runStart;\n        var runLength;\n        var stackSize = 0;\n\n        length = array.length;\n\n        if (length < 2 * DEFAULT_TMP_STORAGE_LENGTH) {\n            tmpStorageLength = length >>> 1;\n        }\n\n        var tmp = [];\n\n        stackLength = length < 120 ? 5 : length < 1542 ? 10 : length < 119151 ? 19 : 40;\n\n        runStart = [];\n        runLength = [];\n\n        function pushRun(_runStart, _runLength) {\n            runStart[stackSize] = _runStart;\n            runLength[stackSize] = _runLength;\n            stackSize += 1;\n        }\n\n        function mergeRuns() {\n            while (stackSize > 1) {\n                var n = stackSize - 2;\n\n                if (n >= 1 && runLength[n - 1] <= runLength[n] + runLength[n + 1] || n >= 2 && runLength[n - 2] <= runLength[n] + runLength[n - 1]) {\n                    if (runLength[n - 1] < runLength[n + 1]) {\n                        n--;\n                    }\n                }\n                else if (runLength[n] > runLength[n + 1]) {\n                    break;\n                }\n                mergeAt(n);\n            }\n        }\n\n        function forceMergeRuns() {\n            while (stackSize > 1) {\n                var n = stackSize - 2;\n\n                if (n > 0 && runLength[n - 1] < runLength[n + 1]) {\n                    n--;\n                }\n\n                mergeAt(n);\n            }\n        }\n\n        function mergeAt(i) {\n            var start1 = runStart[i];\n            var length1 = runLength[i];\n            var start2 = runStart[i + 1];\n            var length2 = runLength[i + 1];\n\n            runLength[i] = length1 + length2;\n\n            if (i === stackSize - 3) {\n                runStart[i + 1] = runStart[i + 2];\n                runLength[i + 1] = runLength[i + 2];\n            }\n\n            stackSize--;\n\n            var k = gallopRight(array[start2], array, start1, length1, 0, compare);\n            start1 += k;\n            length1 -= k;\n\n            if (length1 === 0) {\n                return;\n            }\n\n            length2 = gallopLeft(array[start1 + length1 - 1], array, start2, length2, length2 - 1, compare);\n\n            if (length2 === 0) {\n                return;\n            }\n\n            if (length1 <= length2) {\n                mergeLow(start1, length1, start2, length2);\n            }\n            else {\n                mergeHigh(start1, length1, start2, length2);\n            }\n        }\n\n        function mergeLow(start1, length1, start2, length2) {\n            var i = 0;\n\n            for (i = 0; i < length1; i++) {\n                tmp[i] = array[start1 + i];\n            }\n\n            var cursor1 = 0;\n            var cursor2 = start2;\n            var dest = start1;\n\n            array[dest++] = array[cursor2++];\n\n            if (--length2 === 0) {\n                for (i = 0; i < length1; i++) {\n                    array[dest + i] = tmp[cursor1 + i];\n                }\n                return;\n            }\n\n            if (length1 === 1) {\n                for (i = 0; i < length2; i++) {\n                    array[dest + i] = array[cursor2 + i];\n                }\n                array[dest + length2] = tmp[cursor1];\n                return;\n            }\n\n            var _minGallop = minGallop;\n            var count1, count2, exit;\n\n            while (1) {\n                count1 = 0;\n                count2 = 0;\n                exit = false;\n\n                do {\n                    if (compare(array[cursor2], tmp[cursor1]) < 0) {\n                        array[dest++] = array[cursor2++];\n                        count2++;\n                        count1 = 0;\n\n                        if (--length2 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    else {\n                        array[dest++] = tmp[cursor1++];\n                        count1++;\n                        count2 = 0;\n                        if (--length1 === 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                } while ((count1 | count2) < _minGallop);\n\n                if (exit) {\n                    break;\n                }\n\n                do {\n                    count1 = gallopRight(array[cursor2], tmp, cursor1, length1, 0, compare);\n\n                    if (count1 !== 0) {\n                        for (i = 0; i < count1; i++) {\n                            array[dest + i] = tmp[cursor1 + i];\n                        }\n\n                        dest += count1;\n                        cursor1 += count1;\n                        length1 -= count1;\n                        if (length1 <= 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest++] = array[cursor2++];\n\n                    if (--length2 === 0) {\n                        exit = true;\n                        break;\n                    }\n\n                    count2 = gallopLeft(tmp[cursor1], array, cursor2, length2, 0, compare);\n\n                    if (count2 !== 0) {\n                        for (i = 0; i < count2; i++) {\n                            array[dest + i] = array[cursor2 + i];\n                        }\n\n                        dest += count2;\n                        cursor2 += count2;\n                        length2 -= count2;\n\n                        if (length2 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    array[dest++] = tmp[cursor1++];\n\n                    if (--length1 === 1) {\n                        exit = true;\n                        break;\n                    }\n\n                    _minGallop--;\n                } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n                if (exit) {\n                    break;\n                }\n\n                if (_minGallop < 0) {\n                    _minGallop = 0;\n                }\n\n                _minGallop += 2;\n            }\n\n            minGallop = _minGallop;\n\n            minGallop < 1 && (minGallop = 1);\n\n            if (length1 === 1) {\n                for (i = 0; i < length2; i++) {\n                    array[dest + i] = array[cursor2 + i];\n                }\n                array[dest + length2] = tmp[cursor1];\n            }\n            else if (length1 === 0) {\n                throw new Error();\n                // throw new Error('mergeLow preconditions were not respected');\n            }\n            else {\n                for (i = 0; i < length1; i++) {\n                    array[dest + i] = tmp[cursor1 + i];\n                }\n            }\n        }\n\n        function mergeHigh (start1, length1, start2, length2) {\n            var i = 0;\n\n            for (i = 0; i < length2; i++) {\n                tmp[i] = array[start2 + i];\n            }\n\n            var cursor1 = start1 + length1 - 1;\n            var cursor2 = length2 - 1;\n            var dest = start2 + length2 - 1;\n            var customCursor = 0;\n            var customDest = 0;\n\n            array[dest--] = array[cursor1--];\n\n            if (--length1 === 0) {\n                customCursor = dest - (length2 - 1);\n\n                for (i = 0; i < length2; i++) {\n                    array[customCursor + i] = tmp[i];\n                }\n\n                return;\n            }\n\n            if (length2 === 1) {\n                dest -= length1;\n                cursor1 -= length1;\n                customDest = dest + 1;\n                customCursor = cursor1 + 1;\n\n                for (i = length1 - 1; i >= 0; i--) {\n                    array[customDest + i] = array[customCursor + i];\n                }\n\n                array[dest] = tmp[cursor2];\n                return;\n            }\n\n            var _minGallop = minGallop;\n\n            while (true) {\n                var count1 = 0;\n                var count2 = 0;\n                var exit = false;\n\n                do {\n                    if (compare(tmp[cursor2], array[cursor1]) < 0) {\n                        array[dest--] = array[cursor1--];\n                        count1++;\n                        count2 = 0;\n                        if (--length1 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    else {\n                        array[dest--] = tmp[cursor2--];\n                        count2++;\n                        count1 = 0;\n                        if (--length2 === 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                } while ((count1 | count2) < _minGallop);\n\n                if (exit) {\n                    break;\n                }\n\n                do {\n                    count1 = length1 - gallopRight(tmp[cursor2], array, start1, length1, length1 - 1, compare);\n\n                    if (count1 !== 0) {\n                        dest -= count1;\n                        cursor1 -= count1;\n                        length1 -= count1;\n                        customDest = dest + 1;\n                        customCursor = cursor1 + 1;\n\n                        for (i = count1 - 1; i >= 0; i--) {\n                            array[customDest + i] = array[customCursor + i];\n                        }\n\n                        if (length1 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest--] = tmp[cursor2--];\n\n                    if (--length2 === 1) {\n                        exit = true;\n                        break;\n                    }\n\n                    count2 = length2 - gallopLeft(array[cursor1], tmp, 0, length2, length2 - 1, compare);\n\n                    if (count2 !== 0) {\n                        dest -= count2;\n                        cursor2 -= count2;\n                        length2 -= count2;\n                        customDest = dest + 1;\n                        customCursor = cursor2 + 1;\n\n                        for (i = 0; i < count2; i++) {\n                            array[customDest + i] = tmp[customCursor + i];\n                        }\n\n                        if (length2 <= 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest--] = array[cursor1--];\n\n                    if (--length1 === 0) {\n                        exit = true;\n                        break;\n                    }\n\n                    _minGallop--;\n                } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n                if (exit) {\n                    break;\n                }\n\n                if (_minGallop < 0) {\n                    _minGallop = 0;\n                }\n\n                _minGallop += 2;\n            }\n\n            minGallop = _minGallop;\n\n            if (minGallop < 1) {\n                minGallop = 1;\n            }\n\n            if (length2 === 1) {\n                dest -= length1;\n                cursor1 -= length1;\n                customDest = dest + 1;\n                customCursor = cursor1 + 1;\n\n                for (i = length1 - 1; i >= 0; i--) {\n                    array[customDest + i] = array[customCursor + i];\n                }\n\n                array[dest] = tmp[cursor2];\n            }\n            else if (length2 === 0) {\n                throw new Error();\n                // throw new Error('mergeHigh preconditions were not respected');\n            }\n            else {\n                customCursor = dest - (length2 - 1);\n                for (i = 0; i < length2; i++) {\n                    array[customCursor + i] = tmp[i];\n                }\n            }\n        }\n\n        this.mergeRuns = mergeRuns;\n        this.forceMergeRuns = forceMergeRuns;\n        this.pushRun = pushRun;\n    }\n\n    function sort(array, compare, lo, hi) {\n        if (!lo) {\n            lo = 0;\n        }\n        if (!hi) {\n            hi = array.length;\n        }\n\n        var remaining = hi - lo;\n\n        if (remaining < 2) {\n            return;\n        }\n\n        var runLength = 0;\n\n        if (remaining < DEFAULT_MIN_MERGE) {\n            runLength = makeAscendingRun(array, lo, hi, compare);\n            binaryInsertionSort(array, lo, hi, lo + runLength, compare);\n            return;\n        }\n\n        var ts = new TimSort(array, compare);\n\n        var minRun = minRunLength(remaining);\n\n        do {\n            runLength = makeAscendingRun(array, lo, hi, compare);\n            if (runLength < minRun) {\n                var force = remaining;\n                if (force > minRun) {\n                    force = minRun;\n                }\n\n                binaryInsertionSort(array, lo, lo + force, lo + runLength, compare);\n                runLength = force;\n            }\n\n            ts.pushRun(lo, runLength);\n            ts.mergeRuns();\n\n            remaining -= runLength;\n            lo += runLength;\n        } while (remaining !== 0);\n\n        ts.forceMergeRuns();\n    }\n\n    module.exports = sort;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.zrender@3.4.4@zrender/lib/core/timsort.js\n// module id = 196\n// module chunks = 0","/**\n * 可绘制的图形基类\n * Base class of all displayable graphic objects\n * @module zrender/graphic/Displayable\n */\n\n\n\n    var zrUtil = require('../core/util');\n\n    var Style = require('./Style');\n\n    var Element = require('../Element');\n    var RectText = require('./mixin/RectText');\n    // var Stateful = require('./mixin/Stateful');\n\n    /**\n     * @alias module:zrender/graphic/Displayable\n     * @extends module:zrender/Element\n     * @extends module:zrender/graphic/mixin/RectText\n     */\n    function Displayable(opts) {\n\n        opts = opts || {};\n\n        Element.call(this, opts);\n\n        // Extend properties\n        for (var name in opts) {\n            if (\n                opts.hasOwnProperty(name) &&\n                name !== 'style'\n            ) {\n                this[name] = opts[name];\n            }\n        }\n\n        /**\n         * @type {module:zrender/graphic/Style}\n         */\n        this.style = new Style(opts.style);\n\n        this._rect = null;\n        // Shapes for cascade clipping.\n        this.__clipPaths = [];\n\n        // FIXME Stateful must be mixined after style is setted\n        // Stateful.call(this, opts);\n    }\n\n    Displayable.prototype = {\n\n        constructor: Displayable,\n\n        type: 'displayable',\n\n        /**\n         * Displayable 是否为脏，Painter 中会根据该标记判断是否需要是否需要重新绘制\n         * Dirty flag. From which painter will determine if this displayable object needs brush\n         * @name module:zrender/graphic/Displayable#__dirty\n         * @type {boolean}\n         */\n        __dirty: true,\n\n        /**\n         * 图形是否可见，为true时不绘制图形，但是仍能触发鼠标事件\n         * If ignore drawing of the displayable object. Mouse event will still be triggered\n         * @name module:/zrender/graphic/Displayable#invisible\n         * @type {boolean}\n         * @default false\n         */\n        invisible: false,\n\n        /**\n         * @name module:/zrender/graphic/Displayable#z\n         * @type {number}\n         * @default 0\n         */\n        z: 0,\n\n        /**\n         * @name module:/zrender/graphic/Displayable#z\n         * @type {number}\n         * @default 0\n         */\n        z2: 0,\n\n        /**\n         * z层level，决定绘画在哪层canvas中\n         * @name module:/zrender/graphic/Displayable#zlevel\n         * @type {number}\n         * @default 0\n         */\n        zlevel: 0,\n\n        /**\n         * 是否可拖拽\n         * @name module:/zrender/graphic/Displayable#draggable\n         * @type {boolean}\n         * @default false\n         */\n        draggable: false,\n\n        /**\n         * 是否正在拖拽\n         * @name module:/zrender/graphic/Displayable#draggable\n         * @type {boolean}\n         * @default false\n         */\n        dragging: false,\n\n        /**\n         * 是否相应鼠标事件\n         * @name module:/zrender/graphic/Displayable#silent\n         * @type {boolean}\n         * @default false\n         */\n        silent: false,\n\n        /**\n         * If enable culling\n         * @type {boolean}\n         * @default false\n         */\n        culling: false,\n\n        /**\n         * Mouse cursor when hovered\n         * @name module:/zrender/graphic/Displayable#cursor\n         * @type {string}\n         */\n        cursor: 'pointer',\n\n        /**\n         * If hover area is bounding rect\n         * @name module:/zrender/graphic/Displayable#rectHover\n         * @type {string}\n         */\n        rectHover: false,\n\n        /**\n         * Render the element progressively when the value >= 0,\n         * usefull for large data.\n         * @type {number}\n         */\n        progressive: -1,\n\n        beforeBrush: function (ctx) {},\n\n        afterBrush: function (ctx) {},\n\n        /**\n         * 图形绘制方法\n         * @param {Canvas2DRenderingContext} ctx\n         */\n        // Interface\n        brush: function (ctx, prevEl) {},\n\n        /**\n         * 获取最小包围盒\n         * @return {module:zrender/core/BoundingRect}\n         */\n        // Interface\n        getBoundingRect: function () {},\n\n        /**\n         * 判断坐标 x, y 是否在图形上\n         * If displayable element contain coord x, y\n         * @param  {number} x\n         * @param  {number} y\n         * @return {boolean}\n         */\n        contain: function (x, y) {\n            return this.rectContain(x, y);\n        },\n\n        /**\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {\n            cb.call(context, this);\n        },\n\n        /**\n         * 判断坐标 x, y 是否在图形的包围盒上\n         * If bounding rect of element contain coord x, y\n         * @param  {number} x\n         * @param  {number} y\n         * @return {boolean}\n         */\n        rectContain: function (x, y) {\n            var coord = this.transformCoordToLocal(x, y);\n            var rect = this.getBoundingRect();\n            return rect.contain(coord[0], coord[1]);\n        },\n\n        /**\n         * 标记图形元素为脏，并且在下一帧重绘\n         * Mark displayable element dirty and refresh next frame\n         */\n        dirty: function () {\n            this.__dirty = true;\n\n            this._rect = null;\n\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * 图形是否会触发事件\n         * If displayable object binded any event\n         * @return {boolean}\n         */\n        // TODO, 通过 bind 绑定的事件\n        // isSilent: function () {\n        //     return !(\n        //         this.hoverable || this.draggable\n        //         || this.onmousemove || this.onmouseover || this.onmouseout\n        //         || this.onmousedown || this.onmouseup || this.onclick\n        //         || this.ondragenter || this.ondragover || this.ondragleave\n        //         || this.ondrop\n        //     );\n        // },\n        /**\n         * Alias for animate('style')\n         * @param {boolean} loop\n         */\n        animateStyle: function (loop) {\n            return this.animate('style', loop);\n        },\n\n        attrKV: function (key, value) {\n            if (key !== 'style') {\n                Element.prototype.attrKV.call(this, key, value);\n            }\n            else {\n                this.style.set(value);\n            }\n        },\n\n        /**\n         * @param {Object|string} key\n         * @param {*} value\n         */\n        setStyle: function (key, value) {\n            this.style.set(key, value);\n            this.dirty(false);\n            return this;\n        },\n\n        /**\n         * Use given style object\n         * @param  {Object} obj\n         */\n        useStyle: function (obj) {\n            this.style = new Style(obj);\n            this.dirty(false);\n            return this;\n        }\n    };\n\n    zrUtil.inherits(Displayable, Element);\n\n    zrUtil.mixin(Displayable, RectText);\n    // zrUtil.mixin(Displayable, Stateful);\n\n    module.exports = Displayable;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.zrender@3.4.4@zrender/lib/graphic/Displayable.js\n// module id = 197\n// module chunks = 0","\n\n    /**\n     * @param {Array.<Object>} colorStops\n     */\n    var Gradient = function (colorStops) {\n\n        this.colorStops = colorStops || [];\n    };\n\n    Gradient.prototype = {\n\n        constructor: Gradient,\n\n        addColorStop: function (offset, color) {\n            this.colorStops.push({\n\n                offset: offset,\n\n                color: color\n            });\n        }\n    };\n\n    module.exports = Gradient;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.zrender@3.4.4@zrender/lib/graphic/Gradient.js\n// module id = 198\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    require('../coord/cartesian/Grid');\n\n    require('./bar/BarSeries');\n    require('./bar/BarView');\n\n    var barLayoutGrid = require('../layout/barGrid');\n    var echarts = require('../echarts');\n\n    echarts.registerLayout(zrUtil.curry(barLayoutGrid, 'bar'));\n    // Visual coding for legend\n    echarts.registerVisual(function (ecModel) {\n        ecModel.eachSeriesByType('bar', function (seriesModel) {\n            var data = seriesModel.getData();\n            data.setVisual('legendSymbol', 'roundRect');\n        });\n    });\n\n    // In case developer forget to include grid component\n    require('../component/gridSimple');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.echarts@3.5.4@echarts/lib/chart/bar.js\n// module id = 202\n// module chunks = 0","'use strict';\n\n\n    var List = require('../../data/List');\n    var completeDimensions = require('../../data/helper/completeDimensions');\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../../util/model');\n    var CoordinateSystem = require('../../CoordinateSystem');\n    var getDataItemValue = modelUtil.getDataItemValue;\n    var converDataValue = modelUtil.converDataValue;\n\n    function firstDataNotNull(data) {\n        var i = 0;\n        while (i < data.length && data[i] == null) {\n            i++;\n        }\n        return data[i];\n    }\n    function ifNeedCompleteOrdinalData(data) {\n        var sampleItem = firstDataNotNull(data);\n        return sampleItem != null\n            && !zrUtil.isArray(getDataItemValue(sampleItem));\n    }\n\n    /**\n     * Helper function to create a list from option data\n     */\n    function createListFromArray(data, seriesModel, ecModel) {\n        // If data is undefined\n        data = data || [];\n\n        if (__DEV__) {\n            if (!zrUtil.isArray(data)) {\n                throw new Error('Invalid data.');\n            }\n        }\n\n        var coordSysName = seriesModel.get('coordinateSystem');\n        var creator = creators[coordSysName];\n        var registeredCoordSys = CoordinateSystem.get(coordSysName);\n        // FIXME\n        var axesInfo = creator && creator(data, seriesModel, ecModel);\n        var dimensions = axesInfo && axesInfo.dimensions;\n        if (!dimensions) {\n            // Get dimensions from registered coordinate system\n            dimensions = (registeredCoordSys && (\n                registeredCoordSys.getDimensionsInfo\n                    ? registeredCoordSys.getDimensionsInfo()\n                    : registeredCoordSys.dimensions.slice()\n            )) || ['x', 'y'];\n            dimensions = completeDimensions(dimensions, data, {defaultNames: dimensions.concat(['value'])});\n        }\n\n        var categoryIndex = axesInfo ? axesInfo.categoryIndex : -1;\n\n        var list = new List(dimensions, seriesModel);\n\n        var nameList = createNameList(axesInfo, data);\n\n        var categories = {};\n        var dimValueGetter = (categoryIndex >= 0 && ifNeedCompleteOrdinalData(data))\n            ? function (itemOpt, dimName, dataIndex, dimIndex) {\n                // If any dataItem is like { value: 10 }\n                if (modelUtil.isDataItemOption(itemOpt)) {\n                    list.hasItemOption = true;\n                }\n\n                // Use dataIndex as ordinal value in categoryAxis\n                return dimIndex === categoryIndex\n                    ? dataIndex\n                    : converDataValue(getDataItemValue(itemOpt), dimensions[dimIndex]);\n            }\n            : function (itemOpt, dimName, dataIndex, dimIndex) {\n                var value = getDataItemValue(itemOpt);\n                var val = converDataValue(value && value[dimIndex], dimensions[dimIndex]);\n                // If any dataItem is like { value: 10 }\n                if (modelUtil.isDataItemOption(itemOpt)) {\n                    list.hasItemOption = true;\n                }\n\n                var categoryAxesModels = axesInfo && axesInfo.categoryAxesModels;\n                if (categoryAxesModels && categoryAxesModels[dimName]) {\n                    // If given value is a category string\n                    if (typeof val === 'string') {\n                        // Lazy get categories\n                        categories[dimName] = categories[dimName]\n                            || categoryAxesModels[dimName].getCategories();\n                        val = zrUtil.indexOf(categories[dimName], val);\n                        if (val < 0 && !isNaN(val)) {\n                            // In case some one write '1', '2' istead of 1, 2\n                            val = +val;\n                        }\n                    }\n                }\n                return val;\n            };\n\n        list.hasItemOption = false;\n        list.initData(data, nameList, dimValueGetter);\n\n        return list;\n    }\n\n    function isStackable(axisType) {\n        return axisType !== 'category' && axisType !== 'time';\n    }\n\n    function getDimTypeByAxis(axisType) {\n        return axisType === 'category'\n            ? 'ordinal'\n            : axisType === 'time'\n            ? 'time'\n            : 'float';\n    }\n\n    /**\n     * Creaters for each coord system.\n     */\n    var creators = {\n\n        cartesian2d: function (data, seriesModel, ecModel) {\n\n            var axesModels = zrUtil.map(['xAxis', 'yAxis'], function (name) {\n                return ecModel.queryComponents({\n                    mainType: name,\n                    index: seriesModel.get(name + 'Index'),\n                    id: seriesModel.get(name + 'Id')\n                })[0];\n            });\n            var xAxisModel = axesModels[0];\n            var yAxisModel = axesModels[1];\n\n            if (__DEV__) {\n                if (!xAxisModel) {\n                    throw new Error('xAxis \"' + zrUtil.retrieve(\n                        seriesModel.get('xAxisIndex'),\n                        seriesModel.get('xAxisId'),\n                        0\n                    ) + '\" not found');\n                }\n                if (!yAxisModel) {\n                    throw new Error('yAxis \"' + zrUtil.retrieve(\n                        seriesModel.get('xAxisIndex'),\n                        seriesModel.get('yAxisId'),\n                        0\n                    ) + '\" not found');\n                }\n            }\n\n            var xAxisType = xAxisModel.get('type');\n            var yAxisType = yAxisModel.get('type');\n\n            var dimensions = [\n                {\n                    name: 'x',\n                    type: getDimTypeByAxis(xAxisType),\n                    stackable: isStackable(xAxisType)\n                },\n                {\n                    name: 'y',\n                    // If two category axes\n                    type: getDimTypeByAxis(yAxisType),\n                    stackable: isStackable(yAxisType)\n                }\n            ];\n\n            var isXAxisCateogry = xAxisType === 'category';\n            var isYAxisCategory = yAxisType === 'category';\n\n            completeDimensions(dimensions, data, {defaultNames: ['x', 'y', 'z']});\n\n            var categoryAxesModels = {};\n            if (isXAxisCateogry) {\n                categoryAxesModels.x = xAxisModel;\n            }\n            if (isYAxisCategory) {\n                categoryAxesModels.y = yAxisModel;\n            }\n            return {\n                dimensions: dimensions,\n                categoryIndex: isXAxisCateogry ? 0 : (isYAxisCategory ? 1 : -1),\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        singleAxis: function (data, seriesModel, ecModel) {\n\n            var singleAxisModel = ecModel.queryComponents({\n                mainType: 'singleAxis',\n                index: seriesModel.get('singleAxisIndex'),\n                id: seriesModel.get('singleAxisId')\n            })[0];\n\n            if (__DEV__) {\n                if (!singleAxisModel) {\n                    throw new Error('singleAxis should be specified.');\n                }\n            }\n\n            var singleAxisType = singleAxisModel.get('type');\n            var isCategory = singleAxisType === 'category';\n\n            var dimensions = [{\n                name: 'single',\n                type: getDimTypeByAxis(singleAxisType),\n                stackable: isStackable(singleAxisType)\n            }];\n\n            completeDimensions(dimensions, data);\n\n            var categoryAxesModels = {};\n            if (isCategory) {\n                categoryAxesModels.single = singleAxisModel;\n            }\n\n            return {\n                dimensions: dimensions,\n                categoryIndex: isCategory ? 0 : -1,\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        polar: function (data, seriesModel, ecModel) {\n            var polarModel = ecModel.queryComponents({\n                mainType: 'polar',\n                index: seriesModel.get('polarIndex'),\n                id: seriesModel.get('polarId')\n            })[0];\n\n            var angleAxisModel = polarModel.findAxisModel('angleAxis');\n            var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n\n            if (__DEV__) {\n                if (!angleAxisModel) {\n                    throw new Error('angleAxis option not found');\n                }\n                if (!radiusAxisModel) {\n                    throw new Error('radiusAxis option not found');\n                }\n            }\n\n            var radiusAxisType = radiusAxisModel.get('type');\n            var angleAxisType = angleAxisModel.get('type');\n\n            var dimensions = [\n                {\n                    name: 'radius',\n                    type: getDimTypeByAxis(radiusAxisType),\n                    stackable: isStackable(radiusAxisType)\n                },\n                {\n                    name: 'angle',\n                    type: getDimTypeByAxis(angleAxisType),\n                    stackable: isStackable(angleAxisType)\n                }\n            ];\n            var isAngleAxisCateogry = angleAxisType === 'category';\n            var isRadiusAxisCateogry = radiusAxisType === 'category';\n\n            completeDimensions(dimensions, data, {defaultNames: ['radius', 'angle', 'value']});\n\n            var categoryAxesModels = {};\n            if (isRadiusAxisCateogry) {\n                categoryAxesModels.radius = radiusAxisModel;\n            }\n            if (isAngleAxisCateogry) {\n                categoryAxesModels.angle = angleAxisModel;\n            }\n            return {\n                dimensions: dimensions,\n                categoryIndex: isAngleAxisCateogry ? 1 : (isRadiusAxisCateogry ? 0 : -1),\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        geo: function (data, seriesModel, ecModel) {\n            // TODO Region\n            // 多个散点图系列在同一个地区的时候\n            return {\n                dimensions: completeDimensions([\n                    {name: 'lng'},\n                    {name: 'lat'}\n                ], data, {defaultNames: ['lng', 'lat', 'value']})\n            };\n        }\n    };\n\n    function createNameList(result, data) {\n        var nameList = [];\n\n        var categoryDim = result && result.dimensions[result.categoryIndex];\n        var categoryAxisModel;\n        if (categoryDim) {\n            categoryAxisModel = result.categoryAxesModels[categoryDim.name];\n        }\n\n        if (categoryAxisModel) {\n            // FIXME Two category axis\n            var categories = categoryAxisModel.getCategories();\n            if (categories) {\n                var dataLen = data.length;\n                // Ordered data is given explicitly like\n                // [[3, 0.2], [1, 0.3], [2, 0.15]]\n                // or given scatter data,\n                // pick the category\n                if (zrUtil.isArray(data[0]) && data[0].length > 1) {\n                    nameList = [];\n                    for (var i = 0; i < dataLen; i++) {\n                        nameList[i] = categories[data[i][result.categoryIndex || 0]];\n                    }\n                }\n                else {\n                    nameList = categories.slice(0);\n                }\n            }\n        }\n\n        return nameList;\n    }\n\n    module.exports = createListFromArray;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.echarts@3.5.4@echarts/lib/chart/helper/createListFromArray.js\n// module id = 203\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../../util/model');\n\n    /**\n     * @param {Object} finder contains {seriesIndex, dataIndex, dataIndexInside}\n     * @param {module:echarts/model/Global} ecModel\n     * @return {Object} {point: [x, y], el: ...} point Will not be null.\n     */\n    module.exports = function (finder, ecModel) {\n        var point = [];\n        var seriesIndex = finder.seriesIndex;\n        var seriesModel;\n        if (seriesIndex == null || !(\n            seriesModel = ecModel.getSeriesByIndex(seriesIndex)\n        )) {\n            return {point: []};\n        }\n\n        var data = seriesModel.getData();\n        var dataIndex = modelUtil.queryDataIndex(data, finder);\n        if (dataIndex == null || zrUtil.isArray(dataIndex)) {\n            return {point: []};\n        }\n\n        var el = data.getItemGraphicEl(dataIndex);\n        var coordSys = seriesModel.coordinateSystem;\n\n        if (seriesModel.getTooltipPosition) {\n            point = seriesModel.getTooltipPosition(dataIndex) || [];\n        }\n        else if (coordSys && coordSys.dataToPoint) {\n            point = coordSys.dataToPoint(\n                data.getValues(\n                    zrUtil.map(coordSys.dimensions, function (dim) {\n                        return seriesModel.coordDimToDataDim(dim)[0];\n                    }), dataIndex, true\n                )\n            ) || [];\n        }\n        else if (el) {\n            // Use graphic bounding rect\n            var rect = el.getBoundingRect().clone();\n            rect.applyTransform(el.transform);\n            point = [\n                rect.x + rect.width / 2,\n                rect.y + rect.height / 2\n            ];\n        }\n\n        return {point: point, el: el};\n    };\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.echarts@3.5.4@echarts/lib/component/axisPointer/findPointFromSeries.js\n// module id = 204\n// module chunks = 0","\n\n    var env = require('zrender/lib/core/env');\n    var zrUtil = require('zrender/lib/core/util');\n    var get = require('../../util/model').makeGetter();\n\n    var each = zrUtil.each;\n\n    var globalListener = {};\n\n    /**\n     * @param {string} key\n     * @param {module:echarts/ExtensionAPI} api\n     * @param {Function} handler\n     *      param: {string} currTrigger\n     *      param: {Array.<number>} point\n     */\n    globalListener.register = function (key, api, handler) {\n        if (env.node) {\n            return;\n        }\n\n        var zr = api.getZr();\n        get(zr).records || (get(zr).records = {});\n\n        initGlobalListeners(zr, api);\n\n        var record = get(zr).records[key] || (get(zr).records[key] = {});\n        record.handler = handler;\n    };\n\n    function initGlobalListeners(zr, api) {\n        if (get(zr).initialized) {\n            return;\n        }\n\n        get(zr).initialized = true;\n\n        useHandler('click', zrUtil.curry(doEnter, 'click'));\n        useHandler('mousemove', zrUtil.curry(doEnter, 'mousemove'));\n        // useHandler('mouseout', onLeave);\n        useHandler('globalout', onLeave);\n\n        function useHandler(eventType, cb) {\n            zr.on(eventType, function (e) {\n                var dis = makeDispatchAction(api);\n\n                each(get(zr).records, function (record) {\n                    record && cb(record, e, dis.dispatchAction);\n                });\n\n                dispatchTooltipFinally(dis.pendings, api);\n            });\n        }\n    }\n\n    function dispatchTooltipFinally(pendings, api) {\n        var showLen = pendings.showTip.length;\n        var hideLen = pendings.hideTip.length;\n\n        var actuallyPayload;\n        if (showLen) {\n            actuallyPayload = pendings.showTip[showLen - 1];\n        }\n        else if (hideLen) {\n            actuallyPayload = pendings.hideTip[hideLen - 1];\n        }\n        if (actuallyPayload) {\n            actuallyPayload.dispatchAction = null;\n            api.dispatchAction(actuallyPayload);\n        }\n    }\n\n    function onLeave(record, e, dispatchAction) {\n        record.handler('leave', null, dispatchAction);\n    }\n\n    function doEnter(currTrigger, record, e, dispatchAction) {\n        record.handler(currTrigger, e, dispatchAction);\n    }\n\n    function makeDispatchAction(api) {\n        var pendings = {\n            showTip: [],\n            hideTip: []\n        };\n        // FIXME\n        // better approach?\n        // 'showTip' and 'hideTip' can be triggered by axisPointer and tooltip,\n        // which may be conflict, (axisPointer call showTip but tooltip call hideTip);\n        // So we have to add \"final stage\" to merge those dispatched actions.\n        var dispatchAction = function (payload) {\n            var pendingList = pendings[payload.type];\n            if (pendingList) {\n                pendingList.push(payload);\n            }\n            else {\n                payload.dispatchAction = dispatchAction;\n                api.dispatchAction(payload);\n            }\n        };\n\n        return {\n            dispatchAction: dispatchAction,\n            pendings: pendings\n        };\n    }\n\n    /**\n     * @param {string} key\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    globalListener.unregister = function (key, api) {\n        if (env.node) {\n            return;\n        }\n        var zr = api.getZr();\n        var record = (get(zr).records || {})[key];\n        if (record) {\n            get(zr).records[key] = null;\n        }\n    };\n\n    module.exports = globalListener;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.echarts@3.5.4@echarts/lib/component/axisPointer/globalListener.js\n// module id = 205\n// module chunks = 0","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var graphic = require('../../util/graphic');\n    var textContain = require('zrender/lib/contain/text');\n    var formatUtil = require('../../util/format');\n    var matrix = require('zrender/lib/core/matrix');\n    var axisHelper = require('../../coord/axisHelper');\n    var AxisBuilder = require('../axis/AxisBuilder');\n\n    var helper = {};\n\n    /**\n     * @param {module:echarts/model/Model} axisPointerModel\n     */\n    helper.buildElStyle = function (axisPointerModel) {\n        var axisPointerType = axisPointerModel.get('type');\n        var styleModel = axisPointerModel.getModel(axisPointerType + 'Style');\n        var style;\n        if (axisPointerType === 'line') {\n            style = styleModel.getLineStyle();\n            style.fill = null;\n        }\n        else if (axisPointerType === 'shadow') {\n            style = styleModel.getAreaStyle();\n            style.stroke = null;\n        }\n        return style;\n    };\n\n    /**\n     * @param {Function} labelPos {align, verticalAlign, position}\n     */\n    helper.buildLabelElOption = function (\n        elOption, axisModel, axisPointerModel, api, labelPos\n    ) {\n        var value = axisPointerModel.get('value');\n        var text = helper.getValueLabel(\n            value, axisModel.axis, axisModel.ecModel,\n            axisPointerModel.get('seriesDataIndices'),\n            {\n                precision: axisPointerModel.get('label.precision'),\n                formatter: axisPointerModel.get('label.formatter')\n            }\n        );\n        var labelModel = axisPointerModel.getModel('label');\n        var textStyleModel = labelModel.getModel('textStyle');\n        var paddings = formatUtil.normalizeCssArray(labelModel.get('padding') || 0);\n\n        var font = textStyleModel.getFont();\n        var textRect = textContain.getBoundingRect(\n            text, font, labelPos.textAlign, labelPos.textBaseline\n        );\n\n        var position = labelPos.position;\n        var width = textRect.width + paddings[1] + paddings[3];\n        var height = textRect.height + paddings[0] + paddings[2];\n\n        // Adjust by align.\n        var align = labelPos.align;\n        align === 'right' && (position[0] -= width);\n        align === 'center' && (position[0] -= width / 2);\n        var verticalAlign = labelPos.verticalAlign;\n        verticalAlign === 'bottom' && (position[1] -= height);\n        verticalAlign === 'middle' && (position[1] -= height / 2);\n\n        // Not overflow ec container\n        confineInContainer(position, width, height, api);\n\n        var bgColor = labelModel.get('backgroundColor');\n        if (!bgColor || bgColor === 'auto') {\n            bgColor = axisModel.get('axisLine.lineStyle.color');\n        }\n\n        elOption.label = {\n            shape: {x: 0, y: 0, width: width, height: height, r: labelModel.get('borderRadius')},\n            position: position.slice(),\n            style: {\n                text: text,\n                textFont: font,\n                textFill: textStyleModel.getTextColor(),\n                textPosition: 'inside',\n                fill: bgColor,\n                stroke: labelModel.get('borderColor') || 'transparent',\n                lineWidth: labelModel.get('borderWidth') || 0,\n                shadowBlur: labelModel.get('shadowBlur'),\n                shadowColor: labelModel.get('shadowColor'),\n                shadowOffsetX: labelModel.get('shadowOffsetX'),\n                shadowOffsetY: labelModel.get('shadowOffsetY')\n            },\n            // Lable should be over axisPointer.\n            z2: 10\n        };\n    };\n\n    // Do not overflow ec container\n    function confineInContainer(position, width, height, api) {\n        var viewWidth = api.getWidth();\n        var viewHeight = api.getHeight();\n        position[0] = Math.min(position[0] + width, viewWidth) - width;\n        position[1] = Math.min(position[1] + height, viewHeight) - height;\n        position[0] = Math.max(position[0], 0);\n        position[1] = Math.max(position[1], 0);\n    }\n\n    /**\n     * @param {number} value\n     * @param {module:echarts/coord/Axis} axis\n     * @param {module:echarts/model/Global} ecModel\n     * @param {Object} opt\n     * @param {Array.<Object>} seriesDataIndices\n     * @param {number|string} opt.precision 'auto' or a number\n     * @param {string|Function} opt.formatter label formatter\n     */\n    helper.getValueLabel = function (value, axis, ecModel, seriesDataIndices, opt) {\n        var text = axis.scale.getLabel(\n            // If `precision` is set, width can be fixed (like '12.00500'), which\n            // helps to debounce when when moving label.\n            value, {precision: opt.precision}\n        );\n        var formatter = opt.formatter;\n\n        if (formatter) {\n            var params = {\n                value: axisHelper.getAxisRawValue(axis, value),\n                seriesData: []\n            };\n            zrUtil.each(seriesDataIndices, function (idxItem) {\n                var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n                var dataIndex = idxItem.dataIndexInside;\n                var dataParams = series && series.getDataParams(dataIndex);\n                dataParams && params.seriesData.push(dataParams);\n            });\n\n            if (zrUtil.isString(formatter)) {\n                text = formatter.replace('{value}', text);\n            }\n            else if (zrUtil.isFunction(formatter)) {\n                text = formatter(params);\n            }\n        }\n\n        return text;\n    };\n\n    /**\n     * @param {module:echarts/coord/Axis} axis\n     * @param {number} value\n     * @param {Object} layoutInfo {\n     *  rotation, position, labelOffset, labelDirection, labelMargin\n     * }\n     */\n    helper.getTransformedPosition = function (axis, value, layoutInfo) {\n        var transform = matrix.create();\n        matrix.rotate(transform, transform, layoutInfo.rotation);\n        matrix.translate(transform, transform, layoutInfo.position);\n\n        return graphic.applyTransform([\n            axis.dataToCoord(value),\n            (layoutInfo.labelOffset || 0)\n                + (layoutInfo.labelDirection || 1) * (layoutInfo.labelMargin || 0)\n        ], transform);\n    };\n\n    helper.buildCartesianSingleLabelElOption = function (\n        value, elOption, layoutInfo, axisModel, axisPointerModel, api\n    ) {\n        var textLayout = AxisBuilder.innerTextLayout(\n            layoutInfo.rotation, 0, layoutInfo.labelDirection\n        );\n        layoutInfo.labelMargin = axisPointerModel.get('label.margin');\n        helper.buildLabelElOption(elOption, axisModel, axisPointerModel, api, {\n            position: helper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n            align: textLayout.textAlign,\n            verticalAlign: textLayout.textVerticalAlign\n        });\n    };\n\n    /**\n     * @param {Array.<number>} p1\n     * @param {Array.<number>} p2\n     * @param {number} [xDimIndex=0] or 1\n     */\n    helper.makeLineShape = function (p1, p2, xDimIndex) {\n        xDimIndex = xDimIndex || 0;\n        return {\n            x1: p1[xDimIndex],\n            y1: p1[1 - xDimIndex],\n            x2: p2[xDimIndex],\n            y2: p2[1 - xDimIndex]\n        };\n    };\n\n    /**\n     * @param {Array.<number>} xy\n     * @param {Array.<number>} wh\n     * @param {number} [xDimIndex=0] or 1\n     */\n    helper.makeRectShape = function (xy, wh, xDimIndex) {\n        xDimIndex = xDimIndex || 0;\n        return {\n            x: xy[xDimIndex],\n            y: xy[1 - xDimIndex],\n            width: wh[xDimIndex],\n            height: wh[1 - xDimIndex]\n        };\n    };\n\n    helper.makeSectorShape = function (cx, cy, r0, r, startAngle, endAngle) {\n        return {\n            cx: cx,\n            cy: cy,\n            r0: r0,\n            r: r,\n            startAngle: startAngle,\n            endAngle: endAngle,\n            clockwise: true\n        };\n    };\n\n    module.exports = helper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.echarts@3.5.4@echarts/lib/component/axisPointer/viewHelper.js\n// module id = 206\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var formatUtil = require('../../util/format');\n    var graphic = require('../../util/graphic');\n    var Model = require('../../model/Model');\n    var numberUtil = require('../../util/number');\n    var remRadian = numberUtil.remRadian;\n    var isRadianAroundZero = numberUtil.isRadianAroundZero;\n    var vec2 = require('zrender/lib/core/vector');\n    var matrix = require('zrender/lib/core/matrix');\n    var v2ApplyTransform = vec2.applyTransform;\n    var retrieve = zrUtil.retrieve;\n\n    var PI = Math.PI;\n\n    function makeAxisEventDataBase(axisModel) {\n        var eventData = {\n            componentType: axisModel.mainType\n        };\n        eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\n        return eventData;\n    }\n\n    /**\n     * A final axis is translated and rotated from a \"standard axis\".\n     * So opt.position and opt.rotation is required.\n     *\n     * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\n     * for example: (0, 0) ------------> (0, 50)\n     *\n     * nameDirection or tickDirection or labelDirection is 1 means tick\n     * or label is below the standard axis, whereas is -1 means above\n     * the standard axis. labelOffset means offset between label and axis,\n     * which is useful when 'onZero', where axisLabel is in the grid and\n     * label in outside grid.\n     *\n     * Tips: like always,\n     * positive rotation represents anticlockwise, and negative rotation\n     * represents clockwise.\n     * The direction of position coordinate is the same as the direction\n     * of screen coordinate.\n     *\n     * Do not need to consider axis 'inverse', which is auto processed by\n     * axis extent.\n     *\n     * @param {module:zrender/container/Group} group\n     * @param {Object} axisModel\n     * @param {Object} opt Standard axis parameters.\n     * @param {Array.<number>} opt.position [x, y]\n     * @param {number} opt.rotation by radian\n     * @param {number} [opt.nameDirection=1] 1 or -1 Used when nameLocation is 'middle'.\n     * @param {number} [opt.tickDirection=1] 1 or -1\n     * @param {number} [opt.labelDirection=1] 1 or -1\n     * @param {number} [opt.labelOffset=0] Usefull when onZero.\n     * @param {string} [opt.axisLabelShow] default get from axisModel.\n     * @param {string} [opt.axisName] default get from axisModel.\n     * @param {number} [opt.axisNameAvailableWidth]\n     * @param {number} [opt.labelRotate] by degree, default get from axisModel.\n     * @param {number} [opt.labelInterval] Default label interval when label\n     *                                     interval from model is null or 'auto'.\n     * @param {number} [opt.strokeContainThreshold] Default label interval when label\n     * @param {number} [opt.nameTruncateMaxWidth]\n     */\n    var AxisBuilder = function (axisModel, opt) {\n\n        /**\n         * @readOnly\n         */\n        this.opt = opt;\n\n        /**\n         * @readOnly\n         */\n        this.axisModel = axisModel;\n\n        // Default value\n        zrUtil.defaults(\n            opt,\n            {\n                labelOffset: 0,\n                nameDirection: 1,\n                tickDirection: 1,\n                labelDirection: 1,\n                silent: true\n            }\n        );\n\n        /**\n         * @readOnly\n         */\n        this.group = new graphic.Group();\n\n        // FIXME Not use a seperate text group?\n        var dumbGroup = new graphic.Group({\n            position: opt.position.slice(),\n            rotation: opt.rotation\n        });\n\n        // this.group.add(dumbGroup);\n        // this._dumbGroup = dumbGroup;\n\n        dumbGroup.updateTransform();\n        this._transform = dumbGroup.transform;\n\n        this._dumbGroup = dumbGroup;\n    };\n\n    AxisBuilder.prototype = {\n\n        constructor: AxisBuilder,\n\n        hasBuilder: function (name) {\n            return !!builders[name];\n        },\n\n        add: function (name) {\n            builders[name].call(this);\n        },\n\n        getGroup: function () {\n            return this.group;\n        }\n\n    };\n\n    var builders = {\n\n        /**\n         * @private\n         */\n        axisLine: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n\n            if (!axisModel.get('axisLine.show')) {\n                return;\n            }\n\n            var extent = this.axisModel.axis.getExtent();\n\n            var matrix = this._transform;\n            var pt1 = [extent[0], 0];\n            var pt2 = [extent[1], 0];\n            if (matrix) {\n                v2ApplyTransform(pt1, pt1, matrix);\n                v2ApplyTransform(pt2, pt2, matrix);\n            }\n\n            this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n\n                // Id for animation\n                anid: 'line',\n\n                shape: {\n                    x1: pt1[0],\n                    y1: pt1[1],\n                    x2: pt2[0],\n                    y2: pt2[1]\n                },\n                style: zrUtil.extend(\n                    {lineCap: 'round'},\n                    axisModel.getModel('axisLine.lineStyle').getLineStyle()\n                ),\n                strokeContainThreshold: opt.strokeContainThreshold || 5,\n                silent: true,\n                z2: 1\n            })));\n        },\n\n        /**\n         * @private\n         */\n        axisTick: function () {\n            var axisModel = this.axisModel;\n            var axis = axisModel.axis;\n\n            if (!axisModel.get('axisTick.show') || axis.scale.isBlank()) {\n                return;\n            }\n\n            var tickModel = axisModel.getModel('axisTick');\n            var opt = this.opt;\n\n            var lineStyleModel = tickModel.getModel('lineStyle');\n            var tickLen = tickModel.get('length');\n\n            var tickInterval = getInterval(tickModel, opt.labelInterval);\n            var ticksCoords = axis.getTicksCoords(tickModel.get('alignWithLabel'));\n            var ticks = axis.scale.getTicks();\n\n            var pt1 = [];\n            var pt2 = [];\n            var matrix = this._transform;\n\n            for (var i = 0; i < ticksCoords.length; i++) {\n                // Only ordinal scale support tick interval\n                if (ifIgnoreOnTick(axis, i, tickInterval)) {\n                     continue;\n                }\n\n                var tickCoord = ticksCoords[i];\n\n                pt1[0] = tickCoord;\n                pt1[1] = 0;\n                pt2[0] = tickCoord;\n                pt2[1] = opt.tickDirection * tickLen;\n\n                if (matrix) {\n                    v2ApplyTransform(pt1, pt1, matrix);\n                    v2ApplyTransform(pt2, pt2, matrix);\n                }\n                // Tick line, Not use group transform to have better line draw\n                this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n\n                    // Id for animation\n                    anid: 'tick_' + ticks[i],\n\n                    shape: {\n                        x1: pt1[0],\n                        y1: pt1[1],\n                        x2: pt2[0],\n                        y2: pt2[1]\n                    },\n                    style: zrUtil.defaults(\n                        lineStyleModel.getLineStyle(),\n                        {\n                            stroke: axisModel.get('axisLine.lineStyle.color')\n                        }\n                    ),\n                    z2: 2,\n                    silent: true\n                })));\n            }\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @private\n         */\n        axisLabel: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n            var axis = axisModel.axis;\n            var show = retrieve(opt.axisLabelShow, axisModel.get('axisLabel.show'));\n\n            if (!show || axis.scale.isBlank()) {\n                return;\n            }\n\n            var labelModel = axisModel.getModel('axisLabel');\n            var textStyleModel = labelModel.getModel('textStyle');\n            var labelMargin = labelModel.get('margin');\n            var ticks = axis.scale.getTicks();\n            var labels = axisModel.getFormattedLabels();\n\n            // Special label rotate.\n            var labelRotation = (\n                retrieve(opt.labelRotate, labelModel.get('rotate')) || 0\n            ) * PI / 180;\n\n            var labelLayout = innerTextLayout(opt.rotation, labelRotation, opt.labelDirection);\n            var categoryData = axisModel.get('data');\n\n            var textEls = [];\n            var silent = isSilent(axisModel);\n            var triggerEvent = axisModel.get('triggerEvent');\n\n            zrUtil.each(ticks, function (tickVal, index) {\n                if (ifIgnoreOnTick(axis, index, opt.labelInterval)) {\n                     return;\n                }\n\n                var itemTextStyleModel = textStyleModel;\n                if (categoryData && categoryData[tickVal] && categoryData[tickVal].textStyle) {\n                    itemTextStyleModel = new Model(\n                        categoryData[tickVal].textStyle, textStyleModel, axisModel.ecModel\n                    );\n                }\n                var textColor = itemTextStyleModel.getTextColor()\n                    || axisModel.get('axisLine.lineStyle.color');\n\n                var tickCoord = axis.dataToCoord(tickVal);\n                var pos = [\n                    tickCoord,\n                    opt.labelOffset + opt.labelDirection * labelMargin\n                ];\n                var labelStr = axis.scale.getLabel(tickVal);\n\n                var textEl = new graphic.Text({\n\n                    // Id for animation\n                    anid: 'label_' + tickVal,\n\n                    style: {\n                        text: labels[index],\n                        textAlign: itemTextStyleModel.get('align', true) || labelLayout.textAlign,\n                        textVerticalAlign: itemTextStyleModel.get('baseline', true) || labelLayout.textVerticalAlign,\n                        textFont: itemTextStyleModel.getFont(),\n                        fill: typeof textColor === 'function'\n                            ? textColor(\n                                // (1) In category axis with data zoom, tick is not the original\n                                // index of axis.data. So tick should not be exposed to user\n                                // in category axis.\n                                // (2) Compatible with previous version, which always returns labelStr.\n                                // But in interval scale labelStr is like '223,445', which maked\n                                // user repalce ','. So we modify it to return original val but remain\n                                // it as 'string' to avoid error in replacing.\n                                axis.type === 'category' ? labelStr : axis.type === 'value' ? tickVal + '' : tickVal,\n                                index\n                            )\n                            : textColor\n                    },\n                    position: pos,\n                    rotation: labelLayout.rotation,\n                    silent: silent,\n                    z2: 10\n                });\n\n                // Pack data for mouse event\n                if (triggerEvent) {\n                    textEl.eventData = makeAxisEventDataBase(axisModel);\n                    textEl.eventData.targetType = 'axisLabel';\n                    textEl.eventData.value = labelStr;\n                }\n\n                // FIXME\n                this._dumbGroup.add(textEl);\n                textEl.updateTransform();\n\n                textEls.push(textEl);\n                this.group.add(textEl);\n\n                textEl.decomposeTransform();\n\n            }, this);\n\n            fixMinMaxLabelShow(axisModel, textEls);\n        },\n\n        /**\n         * @private\n         */\n        axisName: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n            var name = retrieve(opt.axisName, axisModel.get('name'));\n\n            if (!name) {\n                return;\n            }\n\n            var nameLocation = axisModel.get('nameLocation');\n            var nameDirection = opt.nameDirection;\n            var textStyleModel = axisModel.getModel('nameTextStyle');\n            var gap = axisModel.get('nameGap') || 0;\n\n            var extent = this.axisModel.axis.getExtent();\n            var gapSignal = extent[0] > extent[1] ? -1 : 1;\n            var pos = [\n                nameLocation === 'start'\n                    ? extent[0] - gapSignal * gap\n                    : nameLocation === 'end'\n                    ? extent[1] + gapSignal * gap\n                    : (extent[0] + extent[1]) / 2, // 'middle'\n                // Reuse labelOffset.\n                nameLocation === 'middle' ? opt.labelOffset + nameDirection * gap : 0\n            ];\n\n            var labelLayout;\n\n            var nameRotation = axisModel.get('nameRotate');\n            if (nameRotation != null) {\n                nameRotation = nameRotation * PI / 180; // To radian.\n            }\n\n            var axisNameAvailableWidth;\n\n            if (nameLocation === 'middle') {\n                labelLayout = innerTextLayout(\n                    opt.rotation,\n                    nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\n                    nameDirection\n                );\n            }\n            else {\n                labelLayout = endTextLayout(\n                    opt, nameLocation, nameRotation || 0, extent\n                );\n\n                axisNameAvailableWidth = opt.axisNameAvailableWidth;\n                if (axisNameAvailableWidth != null) {\n                    axisNameAvailableWidth = Math.abs(\n                        axisNameAvailableWidth / Math.sin(labelLayout.rotation)\n                    );\n                    !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\n                }\n            }\n\n            var textFont = textStyleModel.getFont();\n\n            var truncateOpt = axisModel.get('nameTruncate', true) || {};\n            var ellipsis = truncateOpt.ellipsis;\n            var maxWidth = retrieve(\n                opt.nameTruncateMaxWidth, truncateOpt.maxWidth, axisNameAvailableWidth\n            );\n            var truncatedText = (ellipsis != null && maxWidth != null)\n                ? formatUtil.truncateText(\n                    name, maxWidth, textFont, ellipsis,\n                    {minChar: 2, placeholder: truncateOpt.placeholder}\n                )\n                : name;\n\n            var tooltipOpt = axisModel.get('tooltip', true);\n\n            var mainType = axisModel.mainType;\n            var formatterParams = {\n                componentType: mainType,\n                name: name,\n                $vars: ['name']\n            };\n            formatterParams[mainType + 'Index'] = axisModel.componentIndex;\n\n            var textEl = new graphic.Text({\n\n                // Id for animation\n                anid: 'name',\n\n                __fullText: name,\n                __truncatedText: truncatedText,\n\n                style: {\n                    text: truncatedText,\n                    textFont: textFont,\n                    fill: textStyleModel.getTextColor()\n                        || axisModel.get('axisLine.lineStyle.color'),\n                    textAlign: labelLayout.textAlign,\n                    textVerticalAlign: labelLayout.textVerticalAlign\n                },\n                position: pos,\n                rotation: labelLayout.rotation,\n                silent: isSilent(axisModel),\n                z2: 1,\n                tooltip: (tooltipOpt && tooltipOpt.show)\n                    ? zrUtil.extend({\n                        content: name,\n                        formatter: function () {\n                            return name;\n                        },\n                        formatterParams: formatterParams\n                    }, tooltipOpt)\n                    : null\n            });\n\n            if (axisModel.get('triggerEvent')) {\n                textEl.eventData = makeAxisEventDataBase(axisModel);\n                textEl.eventData.targetType = 'axisName';\n                textEl.eventData.name = name;\n            }\n\n            // FIXME\n            this._dumbGroup.add(textEl);\n            textEl.updateTransform();\n\n            this.group.add(textEl);\n\n            textEl.decomposeTransform();\n        }\n\n    };\n\n    /**\n     * @public\n     * @static\n     * @param {Object} opt\n     * @param {number} axisRotation in radian\n     * @param {number} textRotation in radian\n     * @param {number} direction\n     * @return {Object} {\n     *  rotation, // according to axis\n     *  textAlign,\n     *  textVerticalAlign\n     * }\n     */\n    var innerTextLayout = AxisBuilder.innerTextLayout = function (axisRotation, textRotation, direction) {\n        var rotationDiff = remRadian(textRotation - axisRotation);\n        var textAlign;\n        var textVerticalAlign;\n\n        if (isRadianAroundZero(rotationDiff)) { // Label is parallel with axis line.\n            textVerticalAlign = direction > 0 ? 'top' : 'bottom';\n            textAlign = 'center';\n        }\n        else if (isRadianAroundZero(rotationDiff - PI)) { // Label is inverse parallel with axis line.\n            textVerticalAlign = direction > 0 ? 'bottom' : 'top';\n            textAlign = 'center';\n        }\n        else {\n            textVerticalAlign = 'middle';\n\n            if (rotationDiff > 0 && rotationDiff < PI) {\n                textAlign = direction > 0 ? 'right' : 'left';\n            }\n            else {\n                textAlign = direction > 0 ? 'left' : 'right';\n            }\n        }\n\n        return {\n            rotation: rotationDiff,\n            textAlign: textAlign,\n            textVerticalAlign: textVerticalAlign\n        };\n    };\n\n    function endTextLayout(opt, textPosition, textRotate, extent) {\n        var rotationDiff = remRadian(textRotate - opt.rotation);\n        var textAlign;\n        var textVerticalAlign;\n        var inverse = extent[0] > extent[1];\n        var onLeft = (textPosition === 'start' && !inverse)\n            || (textPosition !== 'start' && inverse);\n\n        if (isRadianAroundZero(rotationDiff - PI / 2)) {\n            textVerticalAlign = onLeft ? 'bottom' : 'top';\n            textAlign = 'center';\n        }\n        else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\n            textVerticalAlign = onLeft ? 'top' : 'bottom';\n            textAlign = 'center';\n        }\n        else {\n            textVerticalAlign = 'middle';\n            if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\n                textAlign = onLeft ? 'left' : 'right';\n            }\n            else {\n                textAlign = onLeft ? 'right' : 'left';\n            }\n        }\n\n        return {\n            rotation: rotationDiff,\n            textAlign: textAlign,\n            textVerticalAlign: textVerticalAlign\n        };\n    }\n\n    function isSilent(axisModel) {\n        var tooltipOpt = axisModel.get('tooltip');\n        return axisModel.get('silent')\n            // Consider mouse cursor, add these restrictions.\n            || !(\n                axisModel.get('triggerEvent') || (tooltipOpt && tooltipOpt.show)\n            );\n    }\n\n    function fixMinMaxLabelShow(axisModel, textEls) {\n        // If min or max are user set, we need to check\n        // If the tick on min(max) are overlap on their neighbour tick\n        // If they are overlapped, we need to hide the min(max) tick label\n        var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n        var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n        var firstLabel = textEls[0];\n        var nextLabel = textEls[1];\n        var lastLabel = textEls[textEls.length - 1];\n        var prevLabel = textEls[textEls.length - 2];\n\n        if (showMinLabel === false) {\n            firstLabel.ignore = true;\n        }\n        else if (axisModel.getMin() != null && isTwoLabelOverlapped(firstLabel, nextLabel)) {\n            showMinLabel ? (nextLabel.ignore = true) : (firstLabel.ignore = true);\n        }\n\n        if (showMaxLabel === false) {\n            lastLabel.ignore = true;\n        }\n        else if (axisModel.getMax() != null && isTwoLabelOverlapped(prevLabel, lastLabel)) {\n            showMaxLabel ? (prevLabel.ignore = true) : (lastLabel.ignore = true);\n        }\n    }\n\n    function isTwoLabelOverlapped(current, next, labelLayout) {\n        // current and next has the same rotation.\n        var firstRect = current && current.getBoundingRect().clone();\n        var nextRect = next && next.getBoundingRect().clone();\n\n        if (!firstRect || !nextRect) {\n            return;\n        }\n\n        // When checking intersect of two rotated labels, we use mRotationBack\n        // to avoid that boundingRect is enlarge when using `boundingRect.applyTransform`.\n        var mRotationBack = matrix.identity([]);\n        matrix.rotate(mRotationBack, mRotationBack, -current.rotation);\n\n        firstRect.applyTransform(matrix.mul([], mRotationBack, current.getLocalTransform()));\n        nextRect.applyTransform(matrix.mul([], mRotationBack, next.getLocalTransform()));\n\n        return firstRect.intersect(nextRect);\n    }\n\n\n    /**\n     * @static\n     */\n    var ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick = function (axis, i, interval) {\n        var rawTick;\n        var scale = axis.scale;\n        return scale.type === 'ordinal'\n            && (\n                typeof interval === 'function'\n                    ? (\n                        rawTick = scale.getTicks()[i],\n                        !interval(rawTick, scale.getLabel(rawTick))\n                    )\n                    : i % (interval + 1)\n            );\n    };\n\n    /**\n     * @static\n     */\n    var getInterval = AxisBuilder.getInterval = function (model, labelInterval) {\n        var interval = model.get('interval');\n        if (interval == null || interval == 'auto') {\n            interval = labelInterval;\n        }\n        return interval;\n    };\n\n    module.exports = AxisBuilder;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.echarts@3.5.4@echarts/lib/component/axis/AxisBuilder.js\n// module id = 207\n// module chunks = 0","\n\n    var axisPointerModelHelper = require('../axisPointer/modelHelper');\n\n    /**\n     * Base class of AxisView.\n     */\n    var AxisView = require('../../echarts').extendComponentView({\n\n        type: 'axis',\n\n        /**\n         * @private\n         */\n        _axisPointer: null,\n\n        /**\n         * @protected\n         * @type {string}\n         */\n        axisPointerClass: null,\n\n        /**\n         * @override\n         */\n        render: function (axisModel, ecModel, api, payload) {\n            // FIXME\n            // This process should proformed after coordinate systems updated\n            // (axis scale updated), and should be performed each time update.\n            // So put it here temporarily, although it is not appropriate to\n            // put a model-writing procedure in `view`.\n            this.axisPointerClass && axisPointerModelHelper.fixValue(axisModel);\n\n            AxisView.superApply(this, 'render', arguments);\n\n            updateAxisPointer(this, axisModel, ecModel, api, payload, true);\n        },\n\n        /**\n         * Action handler.\n         * @public\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/model/Global} ecModel\n         * @param {module:echarts/ExtensionAPI} api\n         * @param {Object} payload\n         */\n        updateAxisPointer: function (axisModel, ecModel, api, payload, force) {\n            updateAxisPointer(this, axisModel, ecModel, api, payload, false);\n        },\n\n        /**\n         * @override\n         */\n        remove: function (ecModel, api) {\n            var axisPointer = this._axisPointer;\n            axisPointer && axisPointer.remove(api);\n            AxisView.superApply(this, 'remove', arguments);\n        },\n\n        /**\n         * @override\n         */\n        dispose: function (ecModel, api) {\n            disposeAxisPointer(this, api);\n            AxisView.superApply(this, 'dispose', arguments);\n        }\n\n    });\n\n    function updateAxisPointer(axisView, axisModel, ecModel, api, payload, forceRender) {\n        var Clazz = AxisView.getAxisPointerClass(axisView.axisPointerClass);\n        if (!Clazz) {\n            return;\n        }\n        var axisPointerModel = axisPointerModelHelper.getAxisPointerModel(axisModel);\n        axisPointerModel\n            ? (axisView._axisPointer || (axisView._axisPointer = new Clazz()))\n                .render(axisModel, axisPointerModel, api, forceRender)\n            : disposeAxisPointer(axisView, api);\n    }\n\n    function disposeAxisPointer(axisView, ecModel, api) {\n        var axisPointer = axisView._axisPointer;\n        axisPointer && axisPointer.dispose(ecModel, api);\n        axisView._axisPointer = null;\n    }\n\n    var axisPointerClazz = [];\n\n    AxisView.registerAxisPointerClass = function (type, clazz) {\n        if (__DEV__) {\n            if (axisPointerClazz[type]) {\n                throw new Error('axisPointer ' + type + ' exists');\n            }\n        }\n        axisPointerClazz[type] = clazz;\n    };\n\n    AxisView.getAxisPointerClass = function (type) {\n        return type && axisPointerClazz[type];\n    };\n\n    module.exports = AxisView;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.echarts@3.5.4@echarts/lib/component/axis/AxisView.js\n// module id = 208\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var helper = {};\n\n    /**\n     * @param {Object} opt {labelInside}\n     * @return {Object} {\n     *  position, rotation, labelDirection, labelOffset,\n     *  tickDirection, labelRotate, labelInterval, z2\n     * }\n     */\n    helper.layout = function (gridModel, axisModel, opt) {\n        opt = opt || {};\n        var grid = gridModel.coordinateSystem;\n        var axis = axisModel.axis;\n        var layout = {};\n\n        var rawAxisPosition = axis.position;\n        var axisPosition = axis.onZero ? 'onZero' : rawAxisPosition;\n        var axisDim = axis.dim;\n\n        // [left, right, top, bottom]\n        var rect = grid.getRect();\n        var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n\n        var axisOffset = axisModel.get('offset') || 0;\n\n        var posMap = {\n            x: { top: rectBound[2] - axisOffset, bottom: rectBound[3] + axisOffset },\n            y: { left: rectBound[0] - axisOffset, right: rectBound[1] + axisOffset }\n        };\n\n        posMap.x.onZero = Math.max(Math.min(getZero('y'), posMap.x.bottom), posMap.x.top);\n        posMap.y.onZero = Math.max(Math.min(getZero('x'), posMap.y.right), posMap.y.left);\n\n        function getZero(dim, val) {\n            var theAxis = grid.getAxis(dim);\n            return theAxis.toGlobalCoord(theAxis.dataToCoord(0));\n        }\n\n        // Axis position\n        layout.position = [\n            axisDim === 'y' ? posMap.y[axisPosition] : rectBound[0],\n            axisDim === 'x' ? posMap.x[axisPosition] : rectBound[3]\n        ];\n\n        // Axis rotation\n        layout.rotation = Math.PI / 2 * (axisDim === 'x' ? 0 : 1);\n\n        // Tick and label direction, x y is axisDim\n        var dirMap = {top: -1, bottom: 1, left: -1, right: 1};\n\n        layout.labelDirection = layout.tickDirection = layout.nameDirection = dirMap[rawAxisPosition];\n        layout.labelOffset = axis.onZero ? posMap[axisDim][rawAxisPosition] - posMap[axisDim].onZero : 0;\n\n        if (axisModel.get('axisTick.inside')) {\n            layout.tickDirection = -layout.tickDirection;\n        }\n        if (zrUtil.retrieve(opt.labelInside, axisModel.get('axisLabel.inside'))) {\n            layout.labelDirection = -layout.labelDirection;\n        }\n\n        // Special label rotation\n        var labelRotate = axisModel.get('axisLabel.rotate');\n        layout.labelRotate = axisPosition === 'top' ? -labelRotate : labelRotate;\n\n        // label interval when auto mode.\n        layout.labelInterval = axis.getLabelInterval();\n\n        // Over splitLine and splitArea\n        layout.z2 = 1;\n\n        return layout;\n    };\n\n    module.exports = helper;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.echarts@3.5.4@echarts/lib/component/axis/cartesianAxisHelper.js\n// module id = 209\n// module chunks = 0","/**\n * Legend component entry file8\n */\n\n\n    require('./legend/LegendModel');\n    require('./legend/legendAction');\n    require('./legend/LegendView');\n\n    var echarts = require('../echarts');\n    // Series Filter\n    echarts.registerProcessor(require('./legend/legendFilter'));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.echarts@3.5.4@echarts/lib/component/legend.js\n// module id = 210\n// module chunks = 0","\n\n    var numberUtil = require('../util/number');\n    var linearMap = numberUtil.linearMap;\n    var zrUtil = require('zrender/lib/core/util');\n\n    function fixExtentWithBands(extent, nTick) {\n        var size = extent[1] - extent[0];\n        var len = nTick;\n        var margin = size / len / 2;\n        extent[0] += margin;\n        extent[1] -= margin;\n    }\n\n    var normalizedExtent = [0, 1];\n    /**\n     * @name module:echarts/coord/CartesianAxis\n     * @constructor\n     */\n    var Axis = function (dim, scale, extent) {\n\n        /**\n         * Axis dimension. Such as 'x', 'y', 'z', 'angle', 'radius'\n         * @type {string}\n         */\n        this.dim = dim;\n\n        /**\n         * Axis scale\n         * @type {module:echarts/coord/scale/*}\n         */\n        this.scale = scale;\n\n        /**\n         * @type {Array.<number>}\n         * @private\n         */\n        this._extent = extent || [0, 0];\n\n        /**\n         * @type {boolean}\n         */\n        this.inverse = false;\n\n        /**\n         * Usually true when axis has a ordinal scale\n         * @type {boolean}\n         */\n        this.onBand = false;\n    };\n\n    Axis.prototype = {\n\n        constructor: Axis,\n\n        /**\n         * If axis extent contain given coord\n         * @param {number} coord\n         * @return {boolean}\n         */\n        contain: function (coord) {\n            var extent = this._extent;\n            var min = Math.min(extent[0], extent[1]);\n            var max = Math.max(extent[0], extent[1]);\n            return coord >= min && coord <= max;\n        },\n\n        /**\n         * If axis extent contain given data\n         * @param {number} data\n         * @return {boolean}\n         */\n        containData: function (data) {\n            return this.contain(this.dataToCoord(data));\n        },\n\n        /**\n         * Get coord extent.\n         * @return {Array.<number>}\n         */\n        getExtent: function () {\n            var ret = this._extent.slice();\n            return ret;\n        },\n\n        /**\n         * Get precision used for formatting\n         * @param {Array.<number>} [dataExtent]\n         * @return {number}\n         */\n        getPixelPrecision: function (dataExtent) {\n            return numberUtil.getPixelPrecision(\n                dataExtent || this.scale.getExtent(),\n                this._extent\n            );\n        },\n\n        /**\n         * Set coord extent\n         * @param {number} start\n         * @param {number} end\n         */\n        setExtent: function (start, end) {\n            var extent = this._extent;\n            extent[0] = start;\n            extent[1] = end;\n        },\n\n        /**\n         * Convert data to coord. Data is the rank if it has a ordinal scale\n         * @param {number} data\n         * @param  {boolean} clamp\n         * @return {number}\n         */\n        dataToCoord: function (data, clamp) {\n            var extent = this._extent;\n            var scale = this.scale;\n            data = scale.normalize(data);\n\n            if (this.onBand && scale.type === 'ordinal') {\n                extent = extent.slice();\n                fixExtentWithBands(extent, scale.count());\n            }\n\n            return linearMap(data, normalizedExtent, extent, clamp);\n        },\n\n        /**\n         * Convert coord to data. Data is the rank if it has a ordinal scale\n         * @param {number} coord\n         * @param  {boolean} clamp\n         * @return {number}\n         */\n        coordToData: function (coord, clamp) {\n            var extent = this._extent;\n            var scale = this.scale;\n\n            if (this.onBand && scale.type === 'ordinal') {\n                extent = extent.slice();\n                fixExtentWithBands(extent, scale.count());\n            }\n\n            var t = linearMap(coord, extent, normalizedExtent, clamp);\n\n            return this.scale.scale(t);\n        },\n\n        /**\n         * Convert pixel point to data in axis\n         * @param {Array.<number>} point\n         * @param  {boolean} clamp\n         * @return {number} data\n         */\n        pointToData: function (point, clamp) {\n            // Should be implemented in derived class if necessary.\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicksCoords: function (alignWithLabel) {\n            if (this.onBand && !alignWithLabel) {\n                var bands = this.getBands();\n                var coords = [];\n                for (var i = 0; i < bands.length; i++) {\n                    coords.push(bands[i][0]);\n                }\n                if (bands[i - 1]) {\n                    coords.push(bands[i - 1][1]);\n                }\n                return coords;\n            }\n            else {\n                return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n            }\n        },\n\n        /**\n         * Coords of labels are on the ticks or on the middle of bands\n         * @return {Array.<number>}\n         */\n        getLabelsCoords: function () {\n            return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n        },\n\n        /**\n         * Get bands.\n         *\n         * If axis has labels [1, 2, 3, 4]. Bands on the axis are\n         * |---1---|---2---|---3---|---4---|.\n         *\n         * @return {Array}\n         */\n         // FIXME Situation when labels is on ticks\n        getBands: function () {\n            var extent = this.getExtent();\n            var bands = [];\n            var len = this.scale.count();\n            var start = extent[0];\n            var end = extent[1];\n            var span = end - start;\n\n            for (var i = 0; i < len; i++) {\n                bands.push([\n                    span * i / len + start,\n                    span * (i + 1) / len + start\n                ]);\n            }\n            return bands;\n        },\n\n        /**\n         * Get width of band\n         * @return {number}\n         */\n        getBandWidth: function () {\n            var axisExtent = this._extent;\n            var dataExtent = this.scale.getExtent();\n\n            var len = dataExtent[1] - dataExtent[0] + (this.onBand ? 1 : 0);\n            // Fix #2728, avoid NaN when only one data.\n            len === 0 && (len = 1);\n\n            var size = Math.abs(axisExtent[1] - axisExtent[0]);\n\n            return Math.abs(size) / len;\n        }\n\n    };\n\n    module.exports = Axis;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.echarts@3.5.4@echarts/lib/coord/Axis.js\n// module id = 211\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var axisHelper = require('./axisHelper');\n\n    function getName(obj) {\n        if (zrUtil.isObject(obj) && obj.value != null) {\n            return obj.value;\n        }\n        else {\n            return obj;\n        }\n    }\n\n    module.exports = {\n\n        /**\n         * Format labels\n         * @return {Array.<string>}\n         */\n        getFormattedLabels: function () {\n            return axisHelper.getFormattedLabels(\n                this.axis,\n                this.get('axisLabel.formatter')\n            );\n        },\n\n        /**\n         * Get categories\n         */\n        getCategories: function () {\n            return this.get('type') === 'category'\n                && zrUtil.map(this.get('data'), getName);\n        },\n\n        /**\n         * @param {boolean} origin\n         * @return {number|string} min value or 'dataMin' or null/undefined (means auto) or NaN\n         */\n        getMin: function (origin) {\n            var option = this.option;\n            var min = (!origin && option.rangeStart != null)\n                ? option.rangeStart : option.min;\n\n            if (this.axis && min != null && min !== 'dataMin' && !zrUtil.eqNaN(min)) {\n                min = this.axis.scale.parse(min);\n            }\n            return min;\n        },\n\n        /**\n         * @param {boolean} origin\n         * @return {number|string} max value or 'dataMax' or null/undefined (means auto) or NaN\n         */\n        getMax: function (origin) {\n            var option = this.option;\n            var max = (!origin && option.rangeEnd != null)\n                ? option.rangeEnd : option.max;\n\n            if (this.axis && max != null && max !== 'dataMax' && !zrUtil.eqNaN(max)) {\n                max = this.axis.scale.parse(max);\n            }\n            return max;\n        },\n\n        /**\n         * @return {boolean}\n         */\n        getNeedCrossZero: function () {\n            var option = this.option;\n            return (option.rangeStart != null || option.rangeEnd != null)\n                ? false : !option.scale;\n        },\n\n        /**\n         * Should be implemented by each axis model if necessary.\n         * @return {module:echarts/model/Component} coordinate system model\n         */\n        getCoordSysModel: zrUtil.noop,\n\n        /**\n         * @param {number} rangeStart Can only be finite number or null/undefined or NaN.\n         * @param {number} rangeEnd Can only be finite number or null/undefined or NaN.\n         */\n        setRange: function (rangeStart, rangeEnd) {\n            this.option.rangeStart = rangeStart;\n            this.option.rangeEnd = rangeEnd;\n        },\n\n        /**\n         * Reset range\n         */\n        resetRange: function () {\n            // rangeStart and rangeEnd is readonly.\n            this.option.rangeStart = this.option.rangeEnd = null;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.echarts@3.5.4@echarts/lib/coord/axisModelCommonMixin.js\n// module id = 212\n// module chunks = 0","'use strict';\n\n\n    var ComponentModel = require('../../model/Component');\n    var zrUtil = require('zrender/lib/core/util');\n    var axisModelCreator = require('../axisModelCreator');\n\n    var AxisModel = ComponentModel.extend({\n\n        type: 'cartesian2dAxis',\n\n        /**\n         * @type {module:echarts/coord/cartesian/Axis2D}\n         */\n        axis: null,\n\n        /**\n         * @override\n         */\n        init: function () {\n            AxisModel.superApply(this, 'init', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         */\n        mergeOption: function () {\n            AxisModel.superApply(this, 'mergeOption', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         */\n        restoreData: function () {\n            AxisModel.superApply(this, 'restoreData', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         * @return {module:echarts/model/Component}\n         */\n        getCoordSysModel: function () {\n            return this.ecModel.queryComponents({\n                mainType: 'grid',\n                index: this.option.gridIndex,\n                id: this.option.gridId\n            })[0];\n        }\n\n    });\n\n    function getAxisType(axisDim, option) {\n        // Default axis with data is category axis\n        return option.type || (option.data ? 'category' : 'value');\n    }\n\n    zrUtil.merge(AxisModel.prototype, require('../axisModelCommonMixin'));\n\n    var extraOption = {\n        // gridIndex: 0,\n        // gridId: '',\n\n        // Offset is for multiple axis on the same position\n        offset: 0\n    };\n\n    axisModelCreator('x', AxisModel, getAxisType, extraOption);\n    axisModelCreator('y', AxisModel, getAxisType, extraOption);\n\n    module.exports = AxisModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.echarts@3.5.4@echarts/lib/coord/cartesian/AxisModel.js\n// module id = 213\n// module chunks = 0","/**\n * Grid is a region which contains at most 4 cartesian systems\n *\n * TODO Default cartesian\n */\nvar factory = exports;\n\n    var layout = require('../../util/layout');\n    var axisHelper = require('../../coord/axisHelper');\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Cartesian2D = require('./Cartesian2D');\n    var Axis2D = require('./Axis2D');\n\n    var each = zrUtil.each;\n\n    var ifAxisCrossZero = axisHelper.ifAxisCrossZero;\n    var niceScaleExtent = axisHelper.niceScaleExtent;\n\n    // 依赖 GridModel, AxisModel 做预处理\n    require('./GridModel');\n\n    /**\n     * Check if the axis is used in the specified grid\n     * @inner\n     */\n    function isAxisUsedInTheGrid(axisModel, gridModel, ecModel) {\n        return axisModel.getCoordSysModel() === gridModel;\n    }\n\n    function getLabelUnionRect(axis) {\n        var axisModel = axis.model;\n        var labels = axisModel.getFormattedLabels();\n        var textStyleModel = axisModel.getModel('axisLabel.textStyle');\n        var rect;\n        var step = 1;\n        var labelCount = labels.length;\n        if (labelCount > 40) {\n            // Simple optimization for large amount of labels\n            step = Math.ceil(labelCount / 40);\n        }\n        for (var i = 0; i < labelCount; i += step) {\n            if (!axis.isLabelIgnored(i)) {\n                var singleRect = textStyleModel.getTextRect(labels[i]);\n                // FIXME consider label rotate\n                rect ? rect.union(singleRect) : (rect = singleRect);\n            }\n        }\n        return rect;\n    }\n\n    function Grid(gridModel, ecModel, api) {\n        /**\n         * @type {Object.<string, module:echarts/coord/cartesian/Cartesian2D>}\n         * @private\n         */\n        this._coordsMap = {};\n\n        /**\n         * @type {Array.<module:echarts/coord/cartesian/Cartesian>}\n         * @private\n         */\n        this._coordsList = [];\n\n        /**\n         * @type {Object.<string, module:echarts/coord/cartesian/Axis2D>}\n         * @private\n         */\n        this._axesMap = {};\n\n        /**\n         * @type {Array.<module:echarts/coord/cartesian/Axis2D>}\n         * @private\n         */\n        this._axesList = [];\n\n        this._initCartesian(gridModel, ecModel, api);\n\n        this.model = gridModel;\n    }\n\n    var gridProto = Grid.prototype;\n\n    gridProto.type = 'grid';\n\n    gridProto.axisPointerEnabled = true;\n\n    gridProto.getRect = function () {\n        return this._rect;\n    };\n\n    gridProto.update = function (ecModel, api) {\n\n        var axesMap = this._axesMap;\n\n        this._updateScale(ecModel, this.model);\n\n        function ifAxisCanNotOnZero(otherAxisDim) {\n            var axes = axesMap[otherAxisDim];\n            for (var idx in axes) {\n                if (axes.hasOwnProperty(idx)) {\n                    var axis = axes[idx];\n                    if (axis && (axis.type === 'category' || !ifAxisCrossZero(axis))) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        }\n\n        each(axesMap.x, function (xAxis) {\n            niceScaleExtent(xAxis.scale, xAxis.model);\n        });\n        each(axesMap.y, function (yAxis) {\n            niceScaleExtent(yAxis.scale, yAxis.model);\n        });\n        // Fix configuration\n        each(axesMap.x, function (xAxis) {\n            // onZero can not be enabled in these two situations\n            // 1. When any other axis is a category axis\n            // 2. When any other axis not across 0 point\n            if (ifAxisCanNotOnZero('y')) {\n                xAxis.onZero = false;\n            }\n        });\n        each(axesMap.y, function (yAxis) {\n            if (ifAxisCanNotOnZero('x')) {\n                yAxis.onZero = false;\n            }\n        });\n\n        // Resize again if containLabel is enabled\n        // FIXME It may cause getting wrong grid size in data processing stage\n        this.resize(this.model, api);\n    };\n\n    /**\n     * Resize the grid\n     * @param {module:echarts/coord/cartesian/GridModel} gridModel\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    gridProto.resize = function (gridModel, api) {\n\n        var gridRect = layout.getLayoutRect(\n            gridModel.getBoxLayoutParams(), {\n                width: api.getWidth(),\n                height: api.getHeight()\n            });\n\n        this._rect = gridRect;\n\n        var axesList = this._axesList;\n\n        adjustAxes();\n\n        // Minus label size\n        if (gridModel.get('containLabel')) {\n            each(axesList, function (axis) {\n                if (!axis.model.get('axisLabel.inside')) {\n                    var labelUnionRect = getLabelUnionRect(axis);\n                    if (labelUnionRect) {\n                        var dim = axis.isHorizontal() ? 'height' : 'width';\n                        var margin = axis.model.get('axisLabel.margin');\n                        gridRect[dim] -= labelUnionRect[dim] + margin;\n                        if (axis.position === 'top') {\n                            gridRect.y += labelUnionRect.height + margin;\n                        }\n                        else if (axis.position === 'left')  {\n                            gridRect.x += labelUnionRect.width + margin;\n                        }\n                    }\n                }\n            });\n\n            adjustAxes();\n        }\n\n        function adjustAxes() {\n            each(axesList, function (axis) {\n                var isHorizontal = axis.isHorizontal();\n                var extent = isHorizontal ? [0, gridRect.width] : [0, gridRect.height];\n                var idx = axis.inverse ? 1 : 0;\n                axis.setExtent(extent[idx], extent[1 - idx]);\n                updateAxisTransfrom(axis, isHorizontal ? gridRect.x : gridRect.y);\n            });\n        }\n    };\n\n    /**\n     * @param {string} axisType\n     * @param {ndumber} [axisIndex]\n     */\n    gridProto.getAxis = function (axisType, axisIndex) {\n        var axesMapOnDim = this._axesMap[axisType];\n        if (axesMapOnDim != null) {\n            if (axisIndex == null) {\n                // Find first axis\n                for (var name in axesMapOnDim) {\n                    if (axesMapOnDim.hasOwnProperty(name)) {\n                        return axesMapOnDim[name];\n                    }\n                }\n            }\n            return axesMapOnDim[axisIndex];\n        }\n    };\n\n    /**\n     * @return {Array.<module:echarts/coord/Axis>}\n     */\n    gridProto.getAxes = function () {\n        return this._axesList.slice();\n    };\n\n    /**\n     * Usage:\n     *      grid.getCartesian(xAxisIndex, yAxisIndex);\n     *      grid.getCartesian(xAxisIndex);\n     *      grid.getCartesian(null, yAxisIndex);\n     *      grid.getCartesian({xAxisIndex: ..., yAxisIndex: ...});\n     *\n     * @param {number|Object} [xAxisIndex]\n     * @param {number} [yAxisIndex]\n     */\n    gridProto.getCartesian = function (xAxisIndex, yAxisIndex) {\n        if (xAxisIndex != null && yAxisIndex != null) {\n            var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n            return this._coordsMap[key];\n        }\n\n        if (zrUtil.isObject(xAxisIndex)) {\n            yAxisIndex = xAxisIndex.yAxisIndex;\n            xAxisIndex = xAxisIndex.xAxisIndex;\n        }\n        // When only xAxisIndex or yAxisIndex given, find its first cartesian.\n        for (var i = 0, coordList = this._coordsList; i < coordList.length; i++) {\n            if (coordList[i].getAxis('x').index === xAxisIndex\n                || coordList[i].getAxis('y').index === yAxisIndex\n            ) {\n                return coordList[i];\n            }\n        }\n    };\n\n    gridProto.getCartesians = function () {\n        return this._coordsList.slice();\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.convertToPixel = function (ecModel, finder, value) {\n        var target = this._findConvertTarget(ecModel, finder);\n\n        return target.cartesian\n            ? target.cartesian.dataToPoint(value)\n            : target.axis\n            ? target.axis.toGlobalCoord(target.axis.dataToCoord(value))\n            : null;\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.convertFromPixel = function (ecModel, finder, value) {\n        var target = this._findConvertTarget(ecModel, finder);\n\n        return target.cartesian\n            ? target.cartesian.pointToData(value)\n            : target.axis\n            ? target.axis.coordToData(target.axis.toLocalCoord(value))\n            : null;\n    };\n\n    /**\n     * @inner\n     */\n    gridProto._findConvertTarget = function (ecModel, finder) {\n        var seriesModel = finder.seriesModel;\n        var xAxisModel = finder.xAxisModel\n            || (seriesModel && seriesModel.getReferringComponents('xAxis')[0]);\n        var yAxisModel = finder.yAxisModel\n            || (seriesModel && seriesModel.getReferringComponents('yAxis')[0]);\n        var gridModel = finder.gridModel;\n        var coordsList = this._coordsList;\n        var cartesian;\n        var axis;\n\n        if (seriesModel) {\n            cartesian = seriesModel.coordinateSystem;\n            zrUtil.indexOf(coordsList, cartesian) < 0 && (cartesian = null);\n        }\n        else if (xAxisModel && yAxisModel) {\n            cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n        }\n        else if (xAxisModel) {\n            axis = this.getAxis('x', xAxisModel.componentIndex);\n        }\n        else if (yAxisModel) {\n            axis = this.getAxis('y', yAxisModel.componentIndex);\n        }\n        // Lowest priority.\n        else if (gridModel) {\n            var grid = gridModel.coordinateSystem;\n            if (grid === this) {\n                cartesian = this._coordsList[0];\n            }\n        }\n\n        return {cartesian: cartesian, axis: axis};\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.containPoint = function (point) {\n        var coord = this._coordsList[0];\n        if (coord) {\n            return coord.containPoint(point);\n        }\n    };\n\n    /**\n     * Initialize cartesian coordinate systems\n     * @private\n     */\n    gridProto._initCartesian = function (gridModel, ecModel, api) {\n        var axisPositionUsed = {\n            left: false,\n            right: false,\n            top: false,\n            bottom: false\n        };\n\n        var axesMap = {\n            x: {},\n            y: {}\n        };\n        var axesCount = {\n            x: 0,\n            y: 0\n        };\n\n        /// Create axis\n        ecModel.eachComponent('xAxis', createAxisCreator('x'), this);\n        ecModel.eachComponent('yAxis', createAxisCreator('y'), this);\n\n        if (!axesCount.x || !axesCount.y) {\n            // Roll back when there no either x or y axis\n            this._axesMap = {};\n            this._axesList = [];\n            return;\n        }\n\n        this._axesMap = axesMap;\n\n        /// Create cartesian2d\n        each(axesMap.x, function (xAxis, xAxisIndex) {\n            each(axesMap.y, function (yAxis, yAxisIndex) {\n                var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n                var cartesian = new Cartesian2D(key);\n\n                cartesian.grid = this;\n                cartesian.model = gridModel;\n\n                this._coordsMap[key] = cartesian;\n                this._coordsList.push(cartesian);\n\n                cartesian.addAxis(xAxis);\n                cartesian.addAxis(yAxis);\n            }, this);\n        }, this);\n\n        function createAxisCreator(axisType) {\n            return function (axisModel, idx) {\n                if (!isAxisUsedInTheGrid(axisModel, gridModel, ecModel)) {\n                    return;\n                }\n\n                var axisPosition = axisModel.get('position');\n                if (axisType === 'x') {\n                    // Fix position\n                    if (axisPosition !== 'top' && axisPosition !== 'bottom') {\n                        // Default bottom of X\n                        axisPosition = 'bottom';\n                        if (axisPositionUsed[axisPosition]) {\n                            axisPosition = axisPosition === 'top' ? 'bottom' : 'top';\n                        }\n                    }\n                }\n                else {\n                    // Fix position\n                    if (axisPosition !== 'left' && axisPosition !== 'right') {\n                        // Default left of Y\n                        axisPosition = 'left';\n                        if (axisPositionUsed[axisPosition]) {\n                            axisPosition = axisPosition === 'left' ? 'right' : 'left';\n                        }\n                    }\n                }\n                axisPositionUsed[axisPosition] = true;\n\n                var axis = new Axis2D(\n                    axisType, axisHelper.createScaleByModel(axisModel),\n                    [0, 0],\n                    axisModel.get('type'),\n                    axisPosition\n                );\n\n                var isCategory = axis.type === 'category';\n                axis.onBand = isCategory && axisModel.get('boundaryGap');\n                axis.inverse = axisModel.get('inverse');\n\n                axis.onZero = axisModel.get('axisLine.onZero');\n\n                // Inject axis into axisModel\n                axisModel.axis = axis;\n\n                // Inject axisModel into axis\n                axis.model = axisModel;\n\n                // Inject grid info axis\n                axis.grid = this;\n\n                // Index of axis, can be used as key\n                axis.index = idx;\n\n                this._axesList.push(axis);\n\n                axesMap[axisType][idx] = axis;\n                axesCount[axisType]++;\n            };\n        }\n    };\n\n    /**\n     * Update cartesian properties from series\n     * @param  {module:echarts/model/Option} option\n     * @private\n     */\n    gridProto._updateScale = function (ecModel, gridModel) {\n        // Reset scale\n        zrUtil.each(this._axesList, function (axis) {\n            axis.scale.setExtent(Infinity, -Infinity);\n        });\n        ecModel.eachSeries(function (seriesModel) {\n            if (isCartesian2D(seriesModel)) {\n                var axesModels = findAxesModels(seriesModel, ecModel);\n                var xAxisModel = axesModels[0];\n                var yAxisModel = axesModels[1];\n\n                if (!isAxisUsedInTheGrid(xAxisModel, gridModel, ecModel)\n                    || !isAxisUsedInTheGrid(yAxisModel, gridModel, ecModel)\n                 ) {\n                    return;\n                }\n\n                var cartesian = this.getCartesian(\n                    xAxisModel.componentIndex, yAxisModel.componentIndex\n                );\n                var data = seriesModel.getData();\n                var xAxis = cartesian.getAxis('x');\n                var yAxis = cartesian.getAxis('y');\n\n                if (data.type === 'list') {\n                    unionExtent(data, xAxis, seriesModel);\n                    unionExtent(data, yAxis, seriesModel);\n                }\n            }\n        }, this);\n\n        function unionExtent(data, axis, seriesModel) {\n            each(seriesModel.coordDimToDataDim(axis.dim), function (dim) {\n                axis.scale.unionExtentFromData(data, dim);\n            });\n        }\n    };\n\n    /**\n     * @param {string} [dim] 'x' or 'y' or 'auto' or null/undefined\n     * @return {Object} {baseAxes: [], otherAxes: []}\n     */\n    gridProto.getTooltipAxes = function (dim) {\n        var baseAxes = [];\n        var otherAxes = [];\n\n        each(this.getCartesians(), function (cartesian) {\n            var baseAxis = (dim != null && dim !== 'auto')\n                ? cartesian.getAxis(dim) : cartesian.getBaseAxis();\n            var otherAxis = cartesian.getOtherAxis(baseAxis);\n            zrUtil.indexOf(baseAxes, baseAxis) < 0 && baseAxes.push(baseAxis);\n            zrUtil.indexOf(otherAxes, otherAxis) < 0 && otherAxes.push(otherAxis);\n        });\n\n        return {baseAxes: baseAxes, otherAxes: otherAxes};\n    };\n\n    /**\n     * @inner\n     */\n    function updateAxisTransfrom(axis, coordBase) {\n        var axisExtent = axis.getExtent();\n        var axisExtentSum = axisExtent[0] + axisExtent[1];\n\n        // Fast transform\n        axis.toGlobalCoord = axis.dim === 'x'\n            ? function (coord) {\n                return coord + coordBase;\n            }\n            : function (coord) {\n                return axisExtentSum - coord + coordBase;\n            };\n        axis.toLocalCoord = axis.dim === 'x'\n            ? function (coord) {\n                return coord - coordBase;\n            }\n            : function (coord) {\n                return axisExtentSum - coord + coordBase;\n            };\n    }\n\n    var axesTypes = ['xAxis', 'yAxis'];\n    /**\n     * @inner\n     */\n    function findAxesModels(seriesModel, ecModel) {\n        return zrUtil.map(axesTypes, function (axisType) {\n            var axisModel = seriesModel.getReferringComponents(axisType)[0];\n\n            if (__DEV__) {\n                if (!axisModel) {\n                    throw new Error(axisType + ' \"' + zrUtil.retrieve(\n                        seriesModel.get(axisType + 'Index'),\n                        seriesModel.get(axisType + 'Id'),\n                        0\n                    ) + '\" not found');\n                }\n            }\n            return axisModel;\n        });\n    }\n\n    /**\n     * @inner\n     */\n    function isCartesian2D(seriesModel) {\n        return seriesModel.get('coordinateSystem') === 'cartesian2d';\n    }\n\n    Grid.create = function (ecModel, api) {\n        var grids = [];\n        ecModel.eachComponent('grid', function (gridModel, idx) {\n            var grid = new Grid(gridModel, ecModel, api);\n            grid.name = 'grid_' + idx;\n            grid.resize(gridModel, api);\n\n            gridModel.coordinateSystem = grid;\n\n            grids.push(grid);\n        });\n\n        // Inject the coordinateSystems into seriesModel\n        ecModel.eachSeries(function (seriesModel) {\n            if (!isCartesian2D(seriesModel)) {\n                return;\n            }\n\n            var axesModels = findAxesModels(seriesModel, ecModel);\n            var xAxisModel = axesModels[0];\n            var yAxisModel = axesModels[1];\n\n            var gridModel = xAxisModel.getCoordSysModel();\n\n            if (__DEV__) {\n                if (!gridModel) {\n                    throw new Error(\n                        'Grid \"' + zrUtil.retrieve(\n                            xAxisModel.get('gridIndex'),\n                            xAxisModel.get('gridId'),\n                            0\n                        ) + '\" not found'\n                    );\n                }\n                if (xAxisModel.getCoordSysModel() !== yAxisModel.getCoordSysModel()) {\n                    throw new Error('xAxis and yAxis must use the same grid');\n                }\n            }\n\n            var grid = gridModel.coordinateSystem;\n\n            seriesModel.coordinateSystem = grid.getCartesian(\n                xAxisModel.componentIndex, yAxisModel.componentIndex\n            );\n        });\n\n        return grids;\n    };\n\n    // For deciding which dimensions to use when creating list data\n    Grid.dimensions = Grid.prototype.dimensions = Cartesian2D.prototype.dimensions;\n\n    require('../../CoordinateSystem').register('cartesian2d', Grid);\n\n    module.exports = Grid;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.echarts@3.5.4@echarts/lib/coord/cartesian/Grid.js\n// module id = 214\n// module chunks = 0","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var formatUtil = require('../util/format');\n    var classUtil = require('../util/clazz');\n    var modelUtil = require('../util/model');\n    var ComponentModel = require('./Component');\n    var colorPaletteMixin = require('./mixin/colorPalette');\n    var env = require('zrender/lib/core/env');\n    var layout = require('../util/layout');\n\n    var set = classUtil.set;\n    var get = classUtil.get;\n    var encodeHTML = formatUtil.encodeHTML;\n    var addCommas = formatUtil.addCommas;\n\n    var SeriesModel = ComponentModel.extend({\n\n        type: 'series.__base__',\n\n        /**\n         * @readOnly\n         */\n        seriesIndex: 0,\n\n        // coodinateSystem will be injected in the echarts/CoordinateSystem\n        coordinateSystem: null,\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        defaultOption: null,\n\n        /**\n         * Data provided for legend\n         * @type {Function}\n         */\n        // PENDING\n        legendDataProvider: null,\n\n        /**\n         * Access path of color for visual\n         */\n        visualColorAccessPath: 'itemStyle.normal.color',\n\n        /**\n         * Support merge layout params.\n         * Only support 'box' now (left/right/top/bottom/width/height).\n         * @type {string|Object} Object can be {ignoreSize: true}\n         * @readOnly\n         */\n        layoutMode: null,\n\n        init: function (option, parentModel, ecModel, extraOpt) {\n\n            /**\n             * @type {number}\n             * @readOnly\n             */\n            this.seriesIndex = this.componentIndex;\n\n            this.mergeDefaultAndTheme(option, ecModel);\n\n            var data = this.getInitialData(option, ecModel);\n            if (__DEV__) {\n                zrUtil.assert(data, 'getInitialData returned invalid data.');\n            }\n            /**\n             * @type {module:echarts/data/List|module:echarts/data/Tree|module:echarts/data/Graph}\n             * @private\n             */\n            set(this, 'dataBeforeProcessed', data);\n\n            // If we reverse the order (make data firstly, and then make\n            // dataBeforeProcessed by cloneShallow), cloneShallow will\n            // cause data.graph.data !== data when using\n            // module:echarts/data/Graph or module:echarts/data/Tree.\n            // See module:echarts/data/helper/linkList\n            this.restoreData();\n        },\n\n        /**\n         * Util for merge default and theme to option\n         * @param  {Object} option\n         * @param  {module:echarts/model/Global} ecModel\n         */\n        mergeDefaultAndTheme: function (option, ecModel) {\n            var layoutMode = this.layoutMode;\n            var inputPositionParams = layoutMode\n                ? layout.getLayoutParams(option) : {};\n\n            zrUtil.merge(\n                option,\n                ecModel.getTheme().get(this.subType)\n            );\n            zrUtil.merge(option, this.getDefaultOption());\n\n            // Default label emphasis `position` and `show`\n            // FIXME Set label in mergeOption\n            modelUtil.defaultEmphasis(option.label, modelUtil.LABEL_OPTIONS);\n\n            this.fillDataTextStyle(option.data);\n\n            if (layoutMode) {\n                layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n            }\n        },\n\n        mergeOption: function (newSeriesOption, ecModel) {\n            newSeriesOption = zrUtil.merge(this.option, newSeriesOption, true);\n            this.fillDataTextStyle(newSeriesOption.data);\n\n            var layoutMode = this.layoutMode;\n            if (layoutMode) {\n                layout.mergeLayoutParam(this.option, newSeriesOption, layoutMode);\n            }\n\n            var data = this.getInitialData(newSeriesOption, ecModel);\n            // TODO Merge data?\n            if (data) {\n                set(this, 'data', data);\n                set(this, 'dataBeforeProcessed', data.cloneShallow());\n            }\n        },\n\n        fillDataTextStyle: function (data) {\n            // Default data label emphasis `position` and `show`\n            // FIXME Tree structure data ?\n            // FIXME Performance ?\n            if (data) {\n                for (var i = 0; i < data.length; i++) {\n                    if (data[i] && data[i].label) {\n                        modelUtil.defaultEmphasis(data[i].label, modelUtil.LABEL_OPTIONS);\n                    }\n                }\n            }\n        },\n\n        /**\n         * Init a data structure from data related option in series\n         * Must be overwritten\n         */\n        getInitialData: function () {},\n\n        /**\n         * @param {string} [dataType]\n         * @return {module:echarts/data/List}\n         */\n        getData: function (dataType) {\n            var data = get(this, 'data');\n            return dataType == null ? data : data.getLinkedData(dataType);\n        },\n\n        /**\n         * @param {module:echarts/data/List} data\n         */\n        setData: function (data) {\n            set(this, 'data', data);\n        },\n\n        /**\n         * Get data before processed\n         * @return {module:echarts/data/List}\n         */\n        getRawData: function () {\n            return get(this, 'dataBeforeProcessed');\n        },\n\n        /**\n         * Coord dimension to data dimension.\n         *\n         * By default the result is the same as dimensions of series data.\n         * But in some series data dimensions are different from coord dimensions (i.e.\n         * candlestick and boxplot). Override this method to handle those cases.\n         *\n         * Coord dimension to data dimension can be one-to-many\n         *\n         * @param {string} coordDim\n         * @return {Array.<string>} dimensions on the axis.\n         */\n        coordDimToDataDim: function (coordDim) {\n            return [coordDim];\n        },\n\n        /**\n         * Convert data dimension to coord dimension.\n         *\n         * @param {string|number} dataDim\n         * @return {string}\n         */\n        dataDimToCoordDim: function (dataDim) {\n            return dataDim;\n        },\n\n        /**\n         * Get base axis if has coordinate system and has axis.\n         * By default use coordSys.getBaseAxis();\n         * Can be overrided for some chart.\n         * @return {type} description\n         */\n        getBaseAxis: function () {\n            var coordSys = this.coordinateSystem;\n            return coordSys && coordSys.getBaseAxis && coordSys.getBaseAxis();\n        },\n\n        // FIXME\n        /**\n         * Default tooltip formatter\n         *\n         * @param {number} dataIndex\n         * @param {boolean} [multipleSeries=false]\n         * @param {number} [dataType]\n         */\n        formatTooltip: function (dataIndex, multipleSeries, dataType) {\n            function formatArrayValue(value) {\n                var result = [];\n\n                zrUtil.each(value, function (val, idx) {\n                    var dimInfo = data.getDimensionInfo(idx);\n                    var dimType = dimInfo && dimInfo.type;\n                    var valStr;\n\n                    if (dimType === 'ordinal') {\n                        valStr = val + '';\n                    }\n                    else if (dimType === 'time') {\n                        valStr = multipleSeries ? '' : formatUtil.formatTime('yyyy/MM/dd hh:mm:ss', val);\n                    }\n                    else {\n                        valStr = addCommas(val);\n                    }\n\n                    valStr && result.push(valStr);\n                });\n\n                return result.join(', ');\n            }\n\n            var data = get(this, 'data');\n\n            var value = this.getRawValue(dataIndex);\n            var formattedValue = encodeHTML(\n                zrUtil.isArray(value) ? formatArrayValue(value) : addCommas(value)\n            );\n            var name = data.getName(dataIndex);\n\n            var color = data.getItemVisual(dataIndex, 'color');\n            if (zrUtil.isObject(color) && color.colorStops) {\n                color = (color.colorStops[0] || {}).color;\n            }\n            color = color || 'transparent';\n\n            var colorEl = '<span style=\"display:inline-block;margin-right:5px;'\n                + 'border-radius:10px;width:9px;height:9px;background-color:' + encodeHTML(color) + '\"></span>';\n\n            var seriesName = this.name;\n            // FIXME\n            if (seriesName === '\\0-') {\n                // Not show '-'\n                seriesName = '';\n            }\n            return !multipleSeries\n                ? ((seriesName && encodeHTML(seriesName) + '<br />') + colorEl\n                    + (name\n                        ? encodeHTML(name) + ' : ' + formattedValue\n                        : formattedValue\n                    )\n                  )\n                : (colorEl + encodeHTML(this.name) + ' : ' + formattedValue);\n        },\n\n        /**\n         * @return {boolean}\n         */\n        isAnimationEnabled: function () {\n            if (env.node) {\n                return false;\n            }\n\n            var animationEnabled = this.getShallow('animation');\n            if (animationEnabled) {\n                if (this.getData().count() > this.getShallow('animationThreshold')) {\n                    animationEnabled = false;\n                }\n            }\n            return animationEnabled;\n        },\n\n        restoreData: function () {\n            set(this, 'data', get(this, 'dataBeforeProcessed').cloneShallow());\n        },\n\n        getColorFromPalette: function (name, scope) {\n            var ecModel = this.ecModel;\n            // PENDING\n            var color = colorPaletteMixin.getColorFromPalette.call(this, name, scope);\n            if (!color) {\n                color = ecModel.getColorFromPalette(name, scope);\n            }\n            return color;\n        },\n\n        /**\n         * Get data indices for show tooltip content. See tooltip.\n         * @abstract\n         * @param {Array.<string>|string} dim\n         * @param {Array.<number>} value\n         * @param {module:echarts/coord/single/SingleAxis} baseAxis\n         * @return {Object} {dataIndices, nestestValue}.\n         */\n        getAxisTooltipData: null,\n\n        /**\n         * See tooltip.\n         * @abstract\n         * @param {number} dataIndex\n         * @return {Array.<number>} Point of tooltip. null/undefined can be returned.\n         */\n        getTooltipPosition: null\n    });\n\n    zrUtil.mixin(SeriesModel, modelUtil.dataFormatMixin);\n    zrUtil.mixin(SeriesModel, colorPaletteMixin);\n\n    module.exports = SeriesModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.echarts@3.5.4@echarts/lib/model/Series.js\n// module id = 215\n// module chunks = 0","\n\n    var classUtil = require('../../util/clazz');\n    var set = classUtil.set;\n    var get = classUtil.get;\n\n    module.exports = {\n        clearColorPalette: function () {\n            set(this, 'colorIdx', 0);\n            set(this, 'colorNameMap', {});\n        },\n\n        getColorFromPalette: function (name, scope) {\n            scope = scope || this;\n            var colorIdx = get(scope, 'colorIdx') || 0;\n            var colorNameMap = get(scope, 'colorNameMap') || set(scope, 'colorNameMap', {});\n            if (colorNameMap[name]) {\n                return colorNameMap[name];\n            }\n            var colorPalette = this.get('color', true) || [];\n            if (!colorPalette.length) {\n                return;\n            }\n\n            var color = colorPalette[colorIdx];\n            if (name) {\n                colorNameMap[name] = color;\n            }\n            set(scope, 'colorIdx', (colorIdx + 1) % colorPalette.length);\n\n            return color;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.echarts@3.5.4@echarts/lib/model/mixin/colorPalette.js\n// module id = 216\n// module chunks = 0","/**\n * For testable.\n */\n\n\n    var numberUtil = require('../util/number');\n\n    var roundNumber = numberUtil.round;\n\n    var helper = {};\n\n    /**\n     * @param {Array.<number>} extent Both extent[0] and extent[1] should be valid number.\n     *                                Should be extent[0] < extent[1].\n     * @param {number} splitNumber splitNumber should be >= 1.\n     * @return {Object} {interval, intervalPrecision, niceTickExtent}\n     */\n    helper.intervalScaleNiceTicks = function (extent, splitNumber) {\n        var result = {};\n        var span = extent[1] - extent[0];\n\n        var interval = result.interval = numberUtil.nice(span / splitNumber, true);\n        // Tow more digital for tick.\n        var precision = result.intervalPrecision = numberUtil.getPrecisionSafe(interval) + 2;\n        // Niced extent inside original extent\n        var niceTickExtent = result.niceTickExtent = [\n            roundNumber(Math.ceil(extent[0] / interval) * interval, precision),\n            roundNumber(Math.floor(extent[1] / interval) * interval, precision)\n        ];\n\n        helper.fixExtent(niceTickExtent, extent);\n\n        return result;\n    };\n\n    function clamp(niceTickExtent, idx, extent) {\n        niceTickExtent[idx] = Math.max(Math.min(niceTickExtent[idx], extent[1]), extent[0]);\n    }\n\n    // In some cases (e.g., splitNumber is 1), niceTickExtent may be out of extent.\n    helper.fixExtent = function (niceTickExtent, extent) {\n        !isFinite(niceTickExtent[0]) && (niceTickExtent[0] = extent[0]);\n        !isFinite(niceTickExtent[1]) && (niceTickExtent[1] = extent[1]);\n        clamp(niceTickExtent, 0, extent);\n        clamp(niceTickExtent, 1, extent);\n        if (niceTickExtent[0] > niceTickExtent[1]) {\n            niceTickExtent[0] = niceTickExtent[1];\n        }\n    };\n\n    helper.intervalScaleGetTicks = function (interval, extent, niceTickExtent, intervalPrecision) {\n        var ticks = [];\n\n        // If interval is 0, return [];\n        if (!interval) {\n            return ticks;\n        }\n\n        // Consider this case: using dataZoom toolbox, zoom and zoom.\n        var safeLimit = 10000;\n\n        if (extent[0] < niceTickExtent[0]) {\n            ticks.push(extent[0]);\n        }\n        var tick = niceTickExtent[0];\n\n        while (tick <= niceTickExtent[1]) {\n            ticks.push(tick);\n            // Avoid rounding error\n            tick = roundNumber(tick + interval, intervalPrecision);\n            if (tick === ticks[ticks.length - 1]) {\n                // Consider out of safe float point, e.g.,\n                // -3711126.9907707 + 2e-10 === -3711126.9907707\n                break;\n            }\n            if (ticks.length > safeLimit) {\n                return [];\n            }\n        }\n        // Consider this case: the last item of ticks is smaller\n        // than niceTickExtent[1] and niceTickExtent[1] === extent[1].\n        if (extent[1] > (ticks.length ? ticks[ticks.length - 1] : niceTickExtent[1])) {\n            ticks.push(extent[1]);\n        }\n\n        return ticks;\n    };\n\n    module.exports = helper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.echarts@3.5.4@echarts/lib/scale/helper.js\n// module id = 217\n// module chunks = 0","'use strict';\n// Symbol factory\n\n\n    var graphic = require('./graphic');\n    var BoundingRect = require('zrender/lib/core/BoundingRect');\n\n    /**\n     * Triangle shape\n     * @inner\n     */\n    var Triangle = graphic.extendShape({\n        type: 'triangle',\n        shape: {\n            cx: 0,\n            cy: 0,\n            width: 0,\n            height: 0\n        },\n        buildPath: function (path, shape) {\n            var cx = shape.cx;\n            var cy = shape.cy;\n            var width = shape.width / 2;\n            var height = shape.height / 2;\n            path.moveTo(cx, cy - height);\n            path.lineTo(cx + width, cy + height);\n            path.lineTo(cx - width, cy + height);\n            path.closePath();\n        }\n    });\n    /**\n     * Diamond shape\n     * @inner\n     */\n    var Diamond = graphic.extendShape({\n        type: 'diamond',\n        shape: {\n            cx: 0,\n            cy: 0,\n            width: 0,\n            height: 0\n        },\n        buildPath: function (path, shape) {\n            var cx = shape.cx;\n            var cy = shape.cy;\n            var width = shape.width / 2;\n            var height = shape.height / 2;\n            path.moveTo(cx, cy - height);\n            path.lineTo(cx + width, cy);\n            path.lineTo(cx, cy + height);\n            path.lineTo(cx - width, cy);\n            path.closePath();\n        }\n    });\n\n    /**\n     * Pin shape\n     * @inner\n     */\n    var Pin = graphic.extendShape({\n        type: 'pin',\n        shape: {\n            // x, y on the cusp\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (path, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var w = shape.width / 5 * 3;\n            // Height must be larger than width\n            var h = Math.max(w, shape.height);\n            var r = w / 2;\n\n            // Dist on y with tangent point and circle center\n            var dy = r * r / (h - r);\n            var cy = y - h + r + dy;\n            var angle = Math.asin(dy / r);\n            // Dist on x with tangent point and circle center\n            var dx = Math.cos(angle) * r;\n\n            var tanX = Math.sin(angle);\n            var tanY = Math.cos(angle);\n\n            path.arc(\n                x, cy, r,\n                Math.PI - angle,\n                Math.PI * 2 + angle\n            );\n\n            var cpLen = r * 0.6;\n            var cpLen2 = r * 0.7;\n            path.bezierCurveTo(\n                x + dx - tanX * cpLen, cy + dy + tanY * cpLen,\n                x, y - cpLen2,\n                x, y\n            );\n            path.bezierCurveTo(\n                x, y - cpLen2,\n                x - dx + tanX * cpLen, cy + dy + tanY * cpLen,\n                x - dx, cy + dy\n            );\n            path.closePath();\n        }\n    });\n\n    /**\n     * Arrow shape\n     * @inner\n     */\n    var Arrow = graphic.extendShape({\n\n        type: 'arrow',\n\n        shape: {\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var height = shape.height;\n            var width = shape.width;\n            var x = shape.x;\n            var y = shape.y;\n            var dx = width / 3 * 2;\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + dx, y + height);\n            ctx.lineTo(x, y + height / 4 * 3);\n            ctx.lineTo(x - dx, y + height);\n            ctx.lineTo(x, y);\n            ctx.closePath();\n        }\n    });\n\n    /**\n     * Map of path contructors\n     * @type {Object.<string, module:zrender/graphic/Path>}\n     */\n    var symbolCtors = {\n        line: graphic.Line,\n\n        rect: graphic.Rect,\n\n        roundRect: graphic.Rect,\n\n        square: graphic.Rect,\n\n        circle: graphic.Circle,\n\n        diamond: Diamond,\n\n        pin: Pin,\n\n        arrow: Arrow,\n\n        triangle: Triangle\n    };\n\n    var symbolShapeMakers = {\n\n        line: function (x, y, w, h, shape) {\n            // FIXME\n            shape.x1 = x;\n            shape.y1 = y + h / 2;\n            shape.x2 = x + w;\n            shape.y2 = y + h / 2;\n        },\n\n        rect: function (x, y, w, h, shape) {\n            shape.x = x;\n            shape.y = y;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        roundRect: function (x, y, w, h, shape) {\n            shape.x = x;\n            shape.y = y;\n            shape.width = w;\n            shape.height = h;\n            shape.r = Math.min(w, h) / 4;\n        },\n\n        square: function (x, y, w, h, shape) {\n            var size = Math.min(w, h);\n            shape.x = x;\n            shape.y = y;\n            shape.width = size;\n            shape.height = size;\n        },\n\n        circle: function (x, y, w, h, shape) {\n            // Put circle in the center of square\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.r = Math.min(w, h) / 2;\n        },\n\n        diamond: function (x, y, w, h, shape) {\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        pin: function (x, y, w, h, shape) {\n            shape.x = x + w / 2;\n            shape.y = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        arrow: function (x, y, w, h, shape) {\n            shape.x = x + w / 2;\n            shape.y = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        triangle: function (x, y, w, h, shape) {\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        }\n    };\n\n    var symbolBuildProxies = {};\n    for (var name in symbolCtors) {\n        if (symbolCtors.hasOwnProperty(name)) {\n            symbolBuildProxies[name] = new symbolCtors[name]();\n        }\n    }\n\n    var Symbol = graphic.extendShape({\n\n        type: 'symbol',\n\n        shape: {\n            symbolType: '',\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        beforeBrush: function () {\n            var style = this.style;\n            var shape = this.shape;\n            // FIXME\n            if (shape.symbolType === 'pin' && style.textPosition === 'inside') {\n                style.textPosition = ['50%', '40%'];\n                style.textAlign = 'center';\n                style.textVerticalAlign = 'middle';\n            }\n        },\n\n        buildPath: function (ctx, shape, inBundle) {\n            var symbolType = shape.symbolType;\n            var proxySymbol = symbolBuildProxies[symbolType];\n            if (shape.symbolType !== 'none') {\n                if (!proxySymbol) {\n                    // Default rect\n                    symbolType = 'rect';\n                    proxySymbol = symbolBuildProxies[symbolType];\n                }\n                symbolShapeMakers[symbolType](\n                    shape.x, shape.y, shape.width, shape.height, proxySymbol.shape\n                );\n                proxySymbol.buildPath(ctx, proxySymbol.shape, inBundle);\n            }\n        }\n    });\n\n    // Provide setColor helper method to avoid determine if set the fill or stroke outside\n    var symbolPathSetColor = function (color) {\n        if (this.type !== 'image') {\n            var symbolStyle = this.style;\n            var symbolShape = this.shape;\n            if (symbolShape && symbolShape.symbolType === 'line') {\n                symbolStyle.stroke = color;\n            }\n            else if (this.__isEmptyBrush) {\n                symbolStyle.stroke = color;\n                symbolStyle.fill = '#fff';\n            }\n            else {\n                // FIXME 判断图形默认是填充还是描边，使用 onlyStroke ?\n                symbolStyle.fill && (symbolStyle.fill = color);\n                symbolStyle.stroke && (symbolStyle.stroke = color);\n            }\n            this.dirty(false);\n        }\n    };\n\n    var symbolUtil = {\n        /**\n         * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n         * @param {string} symbolType\n         * @param {number} x\n         * @param {number} y\n         * @param {number} w\n         * @param {number} h\n         * @param {string} color\n         */\n        createSymbol: function (symbolType, x, y, w, h, color) {\n            // TODO Support image object, DynamicImage.\n\n            var isEmpty = symbolType.indexOf('empty') === 0;\n            if (isEmpty) {\n                symbolType = symbolType.substr(5, 1).toLowerCase() + symbolType.substr(6);\n            }\n            var symbolPath;\n\n            if (symbolType.indexOf('image://') === 0) {\n                symbolPath = new graphic.Image({\n                    style: {\n                        image: symbolType.slice(8),\n                        x: x,\n                        y: y,\n                        width: w,\n                        height: h\n                    }\n                });\n            }\n            else if (symbolType.indexOf('path://') === 0) {\n                symbolPath = graphic.makePath(symbolType.slice(7), {}, new BoundingRect(x, y, w, h));\n            }\n            else {\n                symbolPath = new Symbol({\n                    shape: {\n                        symbolType: symbolType,\n                        x: x,\n                        y: y,\n                        width: w,\n                        height: h\n                    }\n                });\n            }\n\n            symbolPath.__isEmptyBrush = isEmpty;\n\n            symbolPath.setColor = symbolPathSetColor;\n\n            symbolPath.setColor(color);\n\n            return symbolPath;\n        }\n    };\n\n    module.exports = symbolUtil;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.echarts@3.5.4@echarts/lib/util/symbol.js\n// module id = 218\n// module chunks = 0","\n\n    var lib = {};\n\n    var ORIGIN_METHOD = '\\0__throttleOriginMethod';\n    var RATE = '\\0__throttleRate';\n    var THROTTLE_TYPE = '\\0__throttleType';\n\n    /**\n     * @public\n     * @param {(Function)} fn\n     * @param {number} [delay=0] Unit: ms.\n     * @param {boolean} [debounce=false]\n     *        true: If call interval less than `delay`, only the last call works.\n     *        false: If call interval less than `delay, call works on fixed rate.\n     * @return {(Function)} throttled fn.\n     */\n    lib.throttle = function (fn, delay, debounce) {\n\n        var currCall;\n        var lastCall = 0;\n        var lastExec = 0;\n        var timer = null;\n        var diff;\n        var scope;\n        var args;\n        var debounceNextCall;\n\n        delay = delay || 0;\n\n        function exec() {\n            lastExec = (new Date()).getTime();\n            timer = null;\n            fn.apply(scope, args || []);\n        }\n\n        var cb = function () {\n            currCall = (new Date()).getTime();\n            scope = this;\n            args = arguments;\n            var thisDelay = debounceNextCall || delay;\n            var thisDebounce = debounceNextCall || debounce;\n            debounceNextCall = null;\n            diff = currCall - (thisDebounce ? lastCall : lastExec) - thisDelay;\n\n            clearTimeout(timer);\n\n            if (thisDebounce) {\n                timer = setTimeout(exec, thisDelay);\n            }\n            else {\n                if (diff >= 0) {\n                    exec();\n                }\n                else {\n                    timer = setTimeout(exec, -diff);\n                }\n            }\n\n            lastCall = currCall;\n        };\n\n        /**\n         * Clear throttle.\n         * @public\n         */\n        cb.clear = function () {\n            if (timer) {\n                clearTimeout(timer);\n                timer = null;\n            }\n        };\n\n        /**\n         * Enable debounce once.\n         */\n        cb.debounceNextCall = function (debounceDelay) {\n            debounceNextCall = debounceDelay;\n        };\n\n        return cb;\n    };\n\n    /**\n     * Create throttle method or update throttle rate.\n     *\n     * @example\n     * ComponentView.prototype.render = function () {\n     *     ...\n     *     throttle.createOrUpdate(\n     *         this,\n     *         '_dispatchAction',\n     *         this.model.get('throttle'),\n     *         'fixRate'\n     *     );\n     * };\n     * ComponentView.prototype.remove = function () {\n     *     throttle.clear(this, '_dispatchAction');\n     * };\n     * ComponentView.prototype.dispose = function () {\n     *     throttle.clear(this, '_dispatchAction');\n     * };\n     *\n     * @public\n     * @param {Object} obj\n     * @param {string} fnAttr\n     * @param {number} [rate]\n     * @param {string} [throttleType='fixRate'] 'fixRate' or 'debounce'\n     * @return {Function} throttled function.\n     */\n    lib.createOrUpdate = function (obj, fnAttr, rate, throttleType) {\n        var fn = obj[fnAttr];\n\n        if (!fn) {\n            return;\n        }\n\n        var originFn = fn[ORIGIN_METHOD] || fn;\n        var lastThrottleType = fn[THROTTLE_TYPE];\n        var lastRate = fn[RATE];\n\n        if (lastRate !== rate || lastThrottleType !== throttleType) {\n            if (rate == null || !throttleType) {\n                return (obj[fnAttr] = originFn);\n            }\n\n            fn = obj[fnAttr] = lib.throttle(\n                originFn, rate, throttleType === 'debounce'\n            );\n            fn[ORIGIN_METHOD] = originFn;\n            fn[THROTTLE_TYPE] = throttleType;\n            fn[RATE] = rate;\n        }\n\n        return fn;\n    };\n\n    /**\n     * Clear throttle. Example see throttle.createOrUpdate.\n     *\n     * @public\n     * @param {Object} obj\n     * @param {string} fnAttr\n     */\n    lib.clear = function (obj, fnAttr) {\n        var fn = obj[fnAttr];\n        if (fn && fn[ORIGIN_METHOD]) {\n            obj[fnAttr] = fn[ORIGIN_METHOD];\n        }\n    };\n\n    module.exports = lib;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.echarts@3.5.4@echarts/lib/util/throttle.js\n// module id = 219\n// module chunks = 0","\n\n    var Group = require('zrender/lib/container/Group');\n    var componentUtil = require('../util/component');\n    var clazzUtil = require('../util/clazz');\n    var modelUtil = require('../util/model');\n    var zrUtil = require('zrender/lib/core/util');\n\n    function Chart() {\n\n        /**\n         * @type {module:zrender/container/Group}\n         * @readOnly\n         */\n        this.group = new Group();\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        this.uid = componentUtil.getUID('viewChart');\n    }\n\n    Chart.prototype = {\n\n        type: 'chart',\n\n        /**\n         * Init the chart\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        init: function (ecModel, api) {},\n\n        /**\n         * Render the chart\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        render: function (seriesModel, ecModel, api, payload) {},\n\n        /**\n         * Highlight series or specified data item\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        highlight: function (seriesModel, ecModel, api, payload) {\n            toggleHighlight(seriesModel.getData(), payload, 'emphasis');\n        },\n\n        /**\n         * Downplay series or specified data item\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        downplay: function (seriesModel, ecModel, api, payload) {\n            toggleHighlight(seriesModel.getData(), payload, 'normal');\n        },\n\n        /**\n         * Remove self\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        remove: function (ecModel, api) {\n            this.group.removeAll();\n        },\n\n        /**\n         * Dispose self\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        dispose: function () {}\n\n        /**\n         * The view contains the given point.\n         * @interface\n         * @param {Array.<number>} point\n         * @return {boolean}\n         */\n        // containPoint: function () {}\n\n    };\n\n    var chartProto = Chart.prototype;\n    chartProto.updateView\n        = chartProto.updateLayout\n        = chartProto.updateVisual\n        = function (seriesModel, ecModel, api, payload) {\n            this.render(seriesModel, ecModel, api, payload);\n        };\n\n    /**\n     * Set state of single element\n     * @param  {module:zrender/Element} el\n     * @param  {string} state\n     */\n    function elSetState(el, state) {\n        if (el) {\n            el.trigger(state);\n            if (el.type === 'group') {\n                for (var i = 0; i < el.childCount(); i++) {\n                    elSetState(el.childAt(i), state);\n                }\n            }\n        }\n    }\n    /**\n     * @param  {module:echarts/data/List} data\n     * @param  {Object} payload\n     * @param  {string} state 'normal'|'emphasis'\n     * @inner\n     */\n    function toggleHighlight(data, payload, state) {\n        var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n        if (dataIndex != null) {\n            zrUtil.each(modelUtil.normalizeToArray(dataIndex), function (dataIdx) {\n                elSetState(data.getItemGraphicEl(dataIdx), state);\n            });\n        }\n        else {\n            data.eachItemGraphicEl(function (el) {\n                elSetState(el, state);\n            });\n        }\n    }\n\n    // Enable Chart.extend.\n    clazzUtil.enableClassExtend(Chart, ['dispose']);\n\n    // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(Chart, {registerWhenExtend: true});\n\n    module.exports = Chart;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.echarts@3.5.4@echarts/lib/view/Chart.js\n// module id = 220\n// module chunks = 0","\"use strict\";\n\nvar detector = module.exports = {};\n\ndetector.isIE = function(version) {\n    function isAnyIeVersion() {\n        var agent = navigator.userAgent.toLowerCase();\n        return agent.indexOf(\"msie\") !== -1 || agent.indexOf(\"trident\") !== -1 || agent.indexOf(\" edge/\") !== -1;\n    }\n\n    if(!isAnyIeVersion()) {\n        return false;\n    }\n\n    if(!version) {\n        return true;\n    }\n\n    //Shamelessly stolen from https://gist.github.com/padolsey/527683\n    var ieVersion = (function(){\n        var undef,\n            v = 3,\n            div = document.createElement(\"div\"),\n            all = div.getElementsByTagName(\"i\");\n\n        do {\n            div.innerHTML = \"<!--[if gt IE \" + (++v) + \"]><i></i><![endif]-->\";\n        }\n        while (all[0]);\n\n        return v > 4 ? v : undef;\n    }());\n\n    return version === ieVersion;\n};\n\ndetector.isLegacyOpera = function() {\n    return !!window.opera;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.element-resize-detector@1.1.12@element-resize-detector/src/browser-detector.js\n// module id = 221\n// module chunks = 0","\"use strict\";\n\nvar utils = module.exports = {};\n\n/**\n * Loops through the collection and calls the callback for each element. if the callback returns truthy, the loop is broken and returns the same value.\n * @public\n * @param {*} collection The collection to loop through. Needs to have a length property set and have indices set from 0 to length - 1.\n * @param {function} callback The callback to be called for each element. The element will be given as a parameter to the callback. If this callback returns truthy, the loop is broken and the same value is returned.\n * @returns {*} The value that a callback has returned (if truthy). Otherwise nothing.\n */\nutils.forEach = function(collection, callback) {\n    for(var i = 0; i < collection.length; i++) {\n        var result = callback(collection[i]);\n        if(result) {\n            return result;\n        }\n    }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.element-resize-detector@1.1.12@element-resize-detector/src/collection-utils.js\n// module id = 222\n// module chunks = 0","'use strict';\n/**\n * @module zrender/Element\n */\n\n\n    var guid = require('./core/guid');\n    var Eventful = require('./mixin/Eventful');\n    var Transformable = require('./mixin/Transformable');\n    var Animatable = require('./mixin/Animatable');\n    var zrUtil = require('./core/util');\n\n    /**\n     * @alias module:zrender/Element\n     * @constructor\n     * @extends {module:zrender/mixin/Animatable}\n     * @extends {module:zrender/mixin/Transformable}\n     * @extends {module:zrender/mixin/Eventful}\n     */\n    var Element = function (opts) {\n\n        Transformable.call(this, opts);\n        Eventful.call(this, opts);\n        Animatable.call(this, opts);\n\n        /**\n         * 画布元素ID\n         * @type {string}\n         */\n        this.id = opts.id || guid();\n    };\n\n    Element.prototype = {\n\n        /**\n         * 元素类型\n         * Element type\n         * @type {string}\n         */\n        type: 'element',\n\n        /**\n         * 元素名字\n         * Element name\n         * @type {string}\n         */\n        name: '',\n\n        /**\n         * ZRender 实例对象，会在 element 添加到 zrender 实例中后自动赋值\n         * ZRender instance will be assigned when element is associated with zrender\n         * @name module:/zrender/Element#__zr\n         * @type {module:zrender/ZRender}\n         */\n        __zr: null,\n\n        /**\n         * 图形是否忽略，为true时忽略图形的绘制以及事件触发\n         * If ignore drawing and events of the element object\n         * @name module:/zrender/Element#ignore\n         * @type {boolean}\n         * @default false\n         */\n        ignore: false,\n\n        /**\n         * 用于裁剪的路径(shape)，所有 Group 内的路径在绘制时都会被这个路径裁剪\n         * 该路径会继承被裁减对象的变换\n         * @type {module:zrender/graphic/Path}\n         * @see http://www.w3.org/TR/2dcontext/#clipping-region\n         * @readOnly\n         */\n        clipPath: null,\n\n        /**\n         * Drift element\n         * @param  {number} dx dx on the global space\n         * @param  {number} dy dy on the global space\n         */\n        drift: function (dx, dy) {\n            switch (this.draggable) {\n                case 'horizontal':\n                    dy = 0;\n                    break;\n                case 'vertical':\n                    dx = 0;\n                    break;\n            }\n\n            var m = this.transform;\n            if (!m) {\n                m = this.transform = [1, 0, 0, 1, 0, 0];\n            }\n            m[4] += dx;\n            m[5] += dy;\n\n            this.decomposeTransform();\n            this.dirty(false);\n        },\n\n        /**\n         * Hook before update\n         */\n        beforeUpdate: function () {},\n        /**\n         * Hook after update\n         */\n        afterUpdate: function () {},\n        /**\n         * Update each frame\n         */\n        update: function () {\n            this.updateTransform();\n        },\n\n        /**\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {},\n\n        /**\n         * @protected\n         */\n        attrKV: function (key, value) {\n            if (key === 'position' || key === 'scale' || key === 'origin') {\n                // Copy the array\n                if (value) {\n                    var target = this[key];\n                    if (!target) {\n                        target = this[key] = [];\n                    }\n                    target[0] = value[0];\n                    target[1] = value[1];\n                }\n            }\n            else {\n                this[key] = value;\n            }\n        },\n\n        /**\n         * Hide the element\n         */\n        hide: function () {\n            this.ignore = true;\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * Show the element\n         */\n        show: function () {\n            this.ignore = false;\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * @param {string|Object} key\n         * @param {*} value\n         */\n        attr: function (key, value) {\n            if (typeof key === 'string') {\n                this.attrKV(key, value);\n            }\n            else if (zrUtil.isObject(key)) {\n                for (var name in key) {\n                    if (key.hasOwnProperty(name)) {\n                        this.attrKV(name, key[name]);\n                    }\n                }\n            }\n\n            this.dirty(false);\n\n            return this;\n        },\n\n        /**\n         * @param {module:zrender/graphic/Path} clipPath\n         */\n        setClipPath: function (clipPath) {\n            var zr = this.__zr;\n            if (zr) {\n                clipPath.addSelfToZr(zr);\n            }\n\n            // Remove previous clip path\n            if (this.clipPath && this.clipPath !== clipPath) {\n                this.removeClipPath();\n            }\n\n            this.clipPath = clipPath;\n            clipPath.__zr = zr;\n            clipPath.__clipTarget = this;\n\n            this.dirty(false);\n        },\n\n        /**\n         */\n        removeClipPath: function () {\n            var clipPath = this.clipPath;\n            if (clipPath) {\n                if (clipPath.__zr) {\n                    clipPath.removeSelfFromZr(clipPath.__zr);\n                }\n\n                clipPath.__zr = null;\n                clipPath.__clipTarget = null;\n                this.clipPath = null;\n\n                this.dirty(false);\n            }\n        },\n\n        /**\n         * Add self from zrender instance.\n         * Not recursively because it will be invoked when element added to storage.\n         * @param {module:zrender/ZRender} zr\n         */\n        addSelfToZr: function (zr) {\n            this.__zr = zr;\n            // 添加动画\n            var animators = this.animators;\n            if (animators) {\n                for (var i = 0; i < animators.length; i++) {\n                    zr.animation.addAnimator(animators[i]);\n                }\n            }\n\n            if (this.clipPath) {\n                this.clipPath.addSelfToZr(zr);\n            }\n        },\n\n        /**\n         * Remove self from zrender instance.\n         * Not recursively because it will be invoked when element added to storage.\n         * @param {module:zrender/ZRender} zr\n         */\n        removeSelfFromZr: function (zr) {\n            this.__zr = null;\n            // 移除动画\n            var animators = this.animators;\n            if (animators) {\n                for (var i = 0; i < animators.length; i++) {\n                    zr.animation.removeAnimator(animators[i]);\n                }\n            }\n\n            if (this.clipPath) {\n                this.clipPath.removeSelfFromZr(zr);\n            }\n        }\n    };\n\n    zrUtil.mixin(Element, Animatable);\n    zrUtil.mixin(Element, Transformable);\n    zrUtil.mixin(Element, Eventful);\n\n    module.exports = Element;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.zrender@3.4.4@zrender/lib/Element.js\n// module id = 223\n// module chunks = 0","/**\n * @module echarts/animation/Animator\n */\n\n\n    var Clip = require('./Clip');\n    var color = require('../tool/color');\n    var util = require('../core/util');\n    var isArrayLike = util.isArrayLike;\n\n    var arraySlice = Array.prototype.slice;\n\n    function defaultGetter(target, key) {\n        return target[key];\n    }\n\n    function defaultSetter(target, key, value) {\n        target[key] = value;\n    }\n\n    /**\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} percent\n     * @return {number}\n     */\n    function interpolateNumber(p0, p1, percent) {\n        return (p1 - p0) * percent + p0;\n    }\n\n    /**\n     * @param  {string} p0\n     * @param  {string} p1\n     * @param  {number} percent\n     * @return {string}\n     */\n    function interpolateString(p0, p1, percent) {\n        return percent > 0.5 ? p1 : p0;\n    }\n\n    /**\n     * @param  {Array} p0\n     * @param  {Array} p1\n     * @param  {number} percent\n     * @param  {Array} out\n     * @param  {number} arrDim\n     */\n    function interpolateArray(p0, p1, percent, out, arrDim) {\n        var len = p0.length;\n        if (arrDim == 1) {\n            for (var i = 0; i < len; i++) {\n                out[i] = interpolateNumber(p0[i], p1[i], percent);\n            }\n        }\n        else {\n            var len2 = p0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    out[i][j] = interpolateNumber(\n                        p0[i][j], p1[i][j], percent\n                    );\n                }\n            }\n        }\n    }\n\n    // arr0 is source array, arr1 is target array.\n    // Do some preprocess to avoid error happened when interpolating from arr0 to arr1\n    function fillArr(arr0, arr1, arrDim) {\n        var arr0Len = arr0.length;\n        var arr1Len = arr1.length;\n        if (arr0Len !== arr1Len) {\n            // FIXME Not work for TypedArray\n            var isPreviousLarger = arr0Len > arr1Len;\n            if (isPreviousLarger) {\n                // Cut the previous\n                arr0.length = arr1Len;\n            }\n            else {\n                // Fill the previous\n                for (var i = arr0Len; i < arr1Len; i++) {\n                    arr0.push(\n                        arrDim === 1 ? arr1[i] : arraySlice.call(arr1[i])\n                    );\n                }\n            }\n        }\n        // Handling NaN value\n        var len2 = arr0[0] && arr0[0].length;\n        for (var i = 0; i < arr0.length; i++) {\n            if (arrDim === 1) {\n                if (isNaN(arr0[i])) {\n                    arr0[i] = arr1[i];\n                }\n            }\n            else {\n                for (var j = 0; j < len2; j++) {\n                    if (isNaN(arr0[i][j])) {\n                        arr0[i][j] = arr1[i][j];\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @param  {Array} arr0\n     * @param  {Array} arr1\n     * @param  {number} arrDim\n     * @return {boolean}\n     */\n    function isArraySame(arr0, arr1, arrDim) {\n        if (arr0 === arr1) {\n            return true;\n        }\n        var len = arr0.length;\n        if (len !== arr1.length) {\n            return false;\n        }\n        if (arrDim === 1) {\n            for (var i = 0; i < len; i++) {\n                if (arr0[i] !== arr1[i]) {\n                    return false;\n                }\n            }\n        }\n        else {\n            var len2 = arr0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    if (arr0[i][j] !== arr1[i][j]) {\n                        return false;\n                    }\n                }\n            }\n        }\n        return true;\n    }\n\n    /**\n     * Catmull Rom interpolate array\n     * @param  {Array} p0\n     * @param  {Array} p1\n     * @param  {Array} p2\n     * @param  {Array} p3\n     * @param  {number} t\n     * @param  {number} t2\n     * @param  {number} t3\n     * @param  {Array} out\n     * @param  {number} arrDim\n     */\n    function catmullRomInterpolateArray(\n        p0, p1, p2, p3, t, t2, t3, out, arrDim\n    ) {\n        var len = p0.length;\n        if (arrDim == 1) {\n            for (var i = 0; i < len; i++) {\n                out[i] = catmullRomInterpolate(\n                    p0[i], p1[i], p2[i], p3[i], t, t2, t3\n                );\n            }\n        }\n        else {\n            var len2 = p0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    out[i][j] = catmullRomInterpolate(\n                        p0[i][j], p1[i][j], p2[i][j], p3[i][j],\n                        t, t2, t3\n                    );\n                }\n            }\n        }\n    }\n\n    /**\n     * Catmull Rom interpolate number\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @param  {number} t2\n     * @param  {number} t3\n     * @return {number}\n     */\n    function catmullRomInterpolate(p0, p1, p2, p3, t, t2, t3) {\n        var v0 = (p2 - p0) * 0.5;\n        var v1 = (p3 - p1) * 0.5;\n        return (2 * (p1 - p2) + v0 + v1) * t3\n                + (-3 * (p1 - p2) - 2 * v0 - v1) * t2\n                + v0 * t + p1;\n    }\n\n    function cloneValue(value) {\n        if (isArrayLike(value)) {\n            var len = value.length;\n            if (isArrayLike(value[0])) {\n                var ret = [];\n                for (var i = 0; i < len; i++) {\n                    ret.push(arraySlice.call(value[i]));\n                }\n                return ret;\n            }\n\n            return arraySlice.call(value);\n        }\n\n        return value;\n    }\n\n    function rgba2String(rgba) {\n        rgba[0] = Math.floor(rgba[0]);\n        rgba[1] = Math.floor(rgba[1]);\n        rgba[2] = Math.floor(rgba[2]);\n\n        return 'rgba(' + rgba.join(',') + ')';\n    }\n\n    function createTrackClip (animator, easing, oneTrackDone, keyframes, propName) {\n        var getter = animator._getter;\n        var setter = animator._setter;\n        var useSpline = easing === 'spline';\n\n        var trackLen = keyframes.length;\n        if (!trackLen) {\n            return;\n        }\n        // Guess data type\n        var firstVal = keyframes[0].value;\n        var isValueArray = isArrayLike(firstVal);\n        var isValueColor = false;\n        var isValueString = false;\n\n        // For vertices morphing\n        var arrDim = (\n                isValueArray\n                && isArrayLike(firstVal[0])\n            )\n            ? 2 : 1;\n        var trackMaxTime;\n        // Sort keyframe as ascending\n        keyframes.sort(function(a, b) {\n            return a.time - b.time;\n        });\n\n        trackMaxTime = keyframes[trackLen - 1].time;\n        // Percents of each keyframe\n        var kfPercents = [];\n        // Value of each keyframe\n        var kfValues = [];\n        var prevValue = keyframes[0].value;\n        var isAllValueEqual = true;\n        for (var i = 0; i < trackLen; i++) {\n            kfPercents.push(keyframes[i].time / trackMaxTime);\n            // Assume value is a color when it is a string\n            var value = keyframes[i].value;\n\n            // Check if value is equal, deep check if value is array\n            if (!((isValueArray && isArraySame(value, prevValue, arrDim))\n                || (!isValueArray && value === prevValue))) {\n                isAllValueEqual = false;\n            }\n            prevValue = value;\n\n            // Try converting a string to a color array\n            if (typeof value == 'string') {\n                var colorArray = color.parse(value);\n                if (colorArray) {\n                    value = colorArray;\n                    isValueColor = true;\n                }\n                else {\n                    isValueString = true;\n                }\n            }\n            kfValues.push(value);\n        }\n        if (isAllValueEqual) {\n            return;\n        }\n\n        var lastValue = kfValues[trackLen - 1];\n        // Polyfill array and NaN value\n        for (var i = 0; i < trackLen - 1; i++) {\n            if (isValueArray) {\n                fillArr(kfValues[i], lastValue, arrDim);\n            }\n            else {\n                if (isNaN(kfValues[i]) && !isNaN(lastValue) && !isValueString && !isValueColor) {\n                    kfValues[i] = lastValue;\n                }\n            }\n        }\n        isValueArray && fillArr(getter(animator._target, propName), lastValue, arrDim);\n\n        // Cache the key of last frame to speed up when\n        // animation playback is sequency\n        var lastFrame = 0;\n        var lastFramePercent = 0;\n        var start;\n        var w;\n        var p0;\n        var p1;\n        var p2;\n        var p3;\n\n        if (isValueColor) {\n            var rgba = [0, 0, 0, 0];\n        }\n\n        var onframe = function (target, percent) {\n            // Find the range keyframes\n            // kf1-----kf2---------current--------kf3\n            // find kf2 and kf3 and do interpolation\n            var frame;\n            // In the easing function like elasticOut, percent may less than 0\n            if (percent < 0) {\n                frame = 0;\n            }\n            else if (percent < lastFramePercent) {\n                // Start from next key\n                // PENDING start from lastFrame ?\n                start = Math.min(lastFrame + 1, trackLen - 1);\n                for (frame = start; frame >= 0; frame--) {\n                    if (kfPercents[frame] <= percent) {\n                        break;\n                    }\n                }\n                // PENDING really need to do this ?\n                frame = Math.min(frame, trackLen - 2);\n            }\n            else {\n                for (frame = lastFrame; frame < trackLen; frame++) {\n                    if (kfPercents[frame] > percent) {\n                        break;\n                    }\n                }\n                frame = Math.min(frame - 1, trackLen - 2);\n            }\n            lastFrame = frame;\n            lastFramePercent = percent;\n\n            var range = (kfPercents[frame + 1] - kfPercents[frame]);\n            if (range === 0) {\n                return;\n            }\n            else {\n                w = (percent - kfPercents[frame]) / range;\n            }\n            if (useSpline) {\n                p1 = kfValues[frame];\n                p0 = kfValues[frame === 0 ? frame : frame - 1];\n                p2 = kfValues[frame > trackLen - 2 ? trackLen - 1 : frame + 1];\n                p3 = kfValues[frame > trackLen - 3 ? trackLen - 1 : frame + 2];\n                if (isValueArray) {\n                    catmullRomInterpolateArray(\n                        p0, p1, p2, p3, w, w * w, w * w * w,\n                        getter(target, propName),\n                        arrDim\n                    );\n                }\n                else {\n                    var value;\n                    if (isValueColor) {\n                        value = catmullRomInterpolateArray(\n                            p0, p1, p2, p3, w, w * w, w * w * w,\n                            rgba, 1\n                        );\n                        value = rgba2String(rgba);\n                    }\n                    else if (isValueString) {\n                        // String is step(0.5)\n                        return interpolateString(p1, p2, w);\n                    }\n                    else {\n                        value = catmullRomInterpolate(\n                            p0, p1, p2, p3, w, w * w, w * w * w\n                        );\n                    }\n                    setter(\n                        target,\n                        propName,\n                        value\n                    );\n                }\n            }\n            else {\n                if (isValueArray) {\n                    interpolateArray(\n                        kfValues[frame], kfValues[frame + 1], w,\n                        getter(target, propName),\n                        arrDim\n                    );\n                }\n                else {\n                    var value;\n                    if (isValueColor) {\n                        interpolateArray(\n                            kfValues[frame], kfValues[frame + 1], w,\n                            rgba, 1\n                        );\n                        value = rgba2String(rgba);\n                    }\n                    else if (isValueString) {\n                        // String is step(0.5)\n                        return interpolateString(kfValues[frame], kfValues[frame + 1], w);\n                    }\n                    else {\n                        value = interpolateNumber(kfValues[frame], kfValues[frame + 1], w);\n                    }\n                    setter(\n                        target,\n                        propName,\n                        value\n                    );\n                }\n            }\n        };\n\n        var clip = new Clip({\n            target: animator._target,\n            life: trackMaxTime,\n            loop: animator._loop,\n            delay: animator._delay,\n            onframe: onframe,\n            ondestroy: oneTrackDone\n        });\n\n        if (easing && easing !== 'spline') {\n            clip.easing = easing;\n        }\n\n        return clip;\n    }\n\n    /**\n     * @alias module:zrender/animation/Animator\n     * @constructor\n     * @param {Object} target\n     * @param {boolean} loop\n     * @param {Function} getter\n     * @param {Function} setter\n     */\n    var Animator = function(target, loop, getter, setter) {\n        this._tracks = {};\n        this._target = target;\n\n        this._loop = loop || false;\n\n        this._getter = getter || defaultGetter;\n        this._setter = setter || defaultSetter;\n\n        this._clipCount = 0;\n\n        this._delay = 0;\n\n        this._doneList = [];\n\n        this._onframeList = [];\n\n        this._clipList = [];\n    };\n\n    Animator.prototype = {\n        /**\n         * 设置动画关键帧\n         * @param  {number} time 关键帧时间，单位是ms\n         * @param  {Object} props 关键帧的属性值，key-value表示\n         * @return {module:zrender/animation/Animator}\n         */\n        when: function(time /* ms */, props) {\n            var tracks = this._tracks;\n            for (var propName in props) {\n                if (!props.hasOwnProperty(propName)) {\n                    continue;\n                }\n\n                if (!tracks[propName]) {\n                    tracks[propName] = [];\n                    // Invalid value\n                    var value = this._getter(this._target, propName);\n                    if (value == null) {\n                        // zrLog('Invalid property ' + propName);\n                        continue;\n                    }\n                    // If time is 0\n                    //  Then props is given initialize value\n                    // Else\n                    //  Initialize value from current prop value\n                    if (time !== 0) {\n                        tracks[propName].push({\n                            time: 0,\n                            value: cloneValue(value)\n                        });\n                    }\n                }\n                tracks[propName].push({\n                    time: time,\n                    value: props[propName]\n                });\n            }\n            return this;\n        },\n        /**\n         * 添加动画每一帧的回调函数\n         * @param  {Function} callback\n         * @return {module:zrender/animation/Animator}\n         */\n        during: function (callback) {\n            this._onframeList.push(callback);\n            return this;\n        },\n\n        pause: function () {\n            for (var i = 0; i < this._clipList.length; i++) {\n                this._clipList[i].pause();\n            }\n            this._paused = true;\n        },\n\n        resume: function () {\n            for (var i = 0; i < this._clipList.length; i++) {\n                this._clipList[i].resume();\n            }\n            this._paused = false;\n        },\n\n        isPaused: function () {\n            return !!this._paused;\n        },\n\n        _doneCallback: function () {\n            // Clear all tracks\n            this._tracks = {};\n            // Clear all clips\n            this._clipList.length = 0;\n\n            var doneList = this._doneList;\n            var len = doneList.length;\n            for (var i = 0; i < len; i++) {\n                doneList[i].call(this);\n            }\n        },\n        /**\n         * 开始执行动画\n         * @param  {string|Function} easing\n         *         动画缓动函数，详见{@link module:zrender/animation/easing}\n         * @return {module:zrender/animation/Animator}\n         */\n        start: function (easing) {\n\n            var self = this;\n            var clipCount = 0;\n\n            var oneTrackDone = function() {\n                clipCount--;\n                if (!clipCount) {\n                    self._doneCallback();\n                }\n            };\n\n            var lastClip;\n            for (var propName in this._tracks) {\n                if (!this._tracks.hasOwnProperty(propName)) {\n                    continue;\n                }\n                var clip = createTrackClip(\n                    this, easing, oneTrackDone,\n                    this._tracks[propName], propName\n                );\n                if (clip) {\n                    this._clipList.push(clip);\n                    clipCount++;\n\n                    // If start after added to animation\n                    if (this.animation) {\n                        this.animation.addClip(clip);\n                    }\n\n                    lastClip = clip;\n                }\n            }\n\n            // Add during callback on the last clip\n            if (lastClip) {\n                var oldOnFrame = lastClip.onframe;\n                lastClip.onframe = function (target, percent) {\n                    oldOnFrame(target, percent);\n\n                    for (var i = 0; i < self._onframeList.length; i++) {\n                        self._onframeList[i](target, percent);\n                    }\n                };\n            }\n\n            if (!clipCount) {\n                this._doneCallback();\n            }\n            return this;\n        },\n        /**\n         * 停止动画\n         * @param {boolean} forwardToLast If move to last frame before stop\n         */\n        stop: function (forwardToLast) {\n            var clipList = this._clipList;\n            var animation = this.animation;\n            for (var i = 0; i < clipList.length; i++) {\n                var clip = clipList[i];\n                if (forwardToLast) {\n                    // Move to last frame before stop\n                    clip.onframe(this._target, 1);\n                }\n                animation && animation.removeClip(clip);\n            }\n            clipList.length = 0;\n        },\n        /**\n         * 设置动画延迟开始的时间\n         * @param  {number} time 单位ms\n         * @return {module:zrender/animation/Animator}\n         */\n        delay: function (time) {\n            this._delay = time;\n            return this;\n        },\n        /**\n         * 添加动画结束的回调\n         * @param  {Function} cb\n         * @return {module:zrender/animation/Animator}\n         */\n        done: function(cb) {\n            if (cb) {\n                this._doneList.push(cb);\n            }\n            return this;\n        },\n\n        /**\n         * @return {Array.<module:zrender/animation/Clip>}\n         */\n        getClips: function () {\n            return this._clipList;\n        }\n    };\n\n    module.exports = Animator;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.zrender@3.4.4@zrender/lib/animation/Animator.js\n// module id = 224\n// module chunks = 0","\n\n    module.exports = (typeof window !== 'undefined' &&\n                                    (window.requestAnimationFrame\n                                    || window.msRequestAnimationFrame\n                                    || window.mozRequestAnimationFrame\n                                    || window.webkitRequestAnimationFrame))\n                                || function (func) {\n                                    setTimeout(func, 16);\n                                };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.zrender@3.4.4@zrender/lib/animation/requestAnimationFrame.js\n// module id = 225\n// module chunks = 0","\n\n    var PI2 = Math.PI * 2;\n    module.exports = {\n        normalizeRadian: function(angle) {\n            angle %= PI2;\n            if (angle < 0) {\n                angle += PI2;\n            }\n            return angle;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.zrender@3.4.4@zrender/lib/contain/util.js\n// module id = 226\n// module chunks = 0","// Simple LRU cache use doubly linked list\n// @module zrender/core/LRU\n\n\n    /**\n     * Simple double linked list. Compared with array, it has O(1) remove operation.\n     * @constructor\n     */\n    var LinkedList = function () {\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.head = null;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.tail = null;\n\n        this._len = 0;\n    };\n\n    var linkedListProto = LinkedList.prototype;\n    /**\n     * Insert a new value at the tail\n     * @param  {} val\n     * @return {module:zrender/core/LRU~Entry}\n     */\n    linkedListProto.insert = function (val) {\n        var entry = new Entry(val);\n        this.insertEntry(entry);\n        return entry;\n    };\n\n    /**\n     * Insert an entry at the tail\n     * @param  {module:zrender/core/LRU~Entry} entry\n     */\n    linkedListProto.insertEntry = function (entry) {\n        if (!this.head) {\n            this.head = this.tail = entry;\n        }\n        else {\n            this.tail.next = entry;\n            entry.prev = this.tail;\n            entry.next = null;\n            this.tail = entry;\n        }\n        this._len++;\n    };\n\n    /**\n     * Remove entry.\n     * @param  {module:zrender/core/LRU~Entry} entry\n     */\n    linkedListProto.remove = function (entry) {\n        var prev = entry.prev;\n        var next = entry.next;\n        if (prev) {\n            prev.next = next;\n        }\n        else {\n            // Is head\n            this.head = next;\n        }\n        if (next) {\n            next.prev = prev;\n        }\n        else {\n            // Is tail\n            this.tail = prev;\n        }\n        entry.next = entry.prev = null;\n        this._len--;\n    };\n\n    /**\n     * @return {number}\n     */\n    linkedListProto.len = function () {\n        return this._len;\n    };\n\n    /**\n     * Clear list\n     */\n    linkedListProto.clear = function () {\n        this.head = this.tail = null;\n        this._len = 0;\n    };\n\n    /**\n     * @constructor\n     * @param {} val\n     */\n    var Entry = function (val) {\n        /**\n         * @type {}\n         */\n        this.value = val;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.next;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.prev;\n    };\n\n    /**\n     * LRU Cache\n     * @constructor\n     * @alias module:zrender/core/LRU\n     */\n    var LRU = function (maxSize) {\n\n        this._list = new LinkedList();\n\n        this._map = {};\n\n        this._maxSize = maxSize || 10;\n\n        this._lastRemovedEntry = null;\n    };\n\n    var LRUProto = LRU.prototype;\n\n    /**\n     * @param  {string} key\n     * @param  {} value\n     * @return {} Removed value\n     */\n    LRUProto.put = function (key, value) {\n        var list = this._list;\n        var map = this._map;\n        var removed = null;\n        if (map[key] == null) {\n            var len = list.len();\n            // Reuse last removed entry\n            var entry = this._lastRemovedEntry;\n\n            if (len >= this._maxSize && len > 0) {\n                // Remove the least recently used\n                var leastUsedEntry = list.head;\n                list.remove(leastUsedEntry);\n                delete map[leastUsedEntry.key];\n\n                removed = leastUsedEntry.value;\n                this._lastRemovedEntry = leastUsedEntry;\n            }\n\n            if (entry) {\n                entry.value = value;\n            }\n            else {\n                entry = new Entry(value);\n            }\n            entry.key = key;\n            list.insertEntry(entry);\n            map[key] = entry;\n        }\n\n        return removed;\n    };\n\n    /**\n     * @param  {string} key\n     * @return {}\n     */\n    LRUProto.get = function (key) {\n        var entry = this._map[key];\n        var list = this._list;\n        if (entry != null) {\n            // Put the latest used entry in the tail\n            if (entry !== list.tail) {\n                list.remove(entry);\n                list.insertEntry(entry);\n            }\n\n            return entry.value;\n        }\n    };\n\n    /**\n     * Clear the cache\n     */\n    LRUProto.clear = function () {\n        this._list.clear();\n        this._map = {};\n    };\n\n    module.exports = LRU;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.zrender@3.4.4@zrender/lib/core/LRU.js\n// module id = 227\n// module chunks = 0","/**\n * zrender: 生成唯一id\n *\n * @author errorrik (errorrik@gmail.com)\n */\n\n\n    var idStart = 0x0907;\n\n    module.exports = function () {\n        return idStart++;\n    };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.zrender@3.4.4@zrender/lib/core/guid.js\n// module id = 228\n// module chunks = 0","\n        var config = require('../config');\n\n        /**\n         * @exports zrender/tool/log\n         * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n         */\n        module.exports = function() {\n            if (config.debugMode === 0) {\n                return;\n            }\n            else if (config.debugMode == 1) {\n                for (var k in arguments) {\n                    throw new Error(arguments[k]);\n                }\n            }\n            else if (config.debugMode > 1) {\n                for (var k in arguments) {\n                    console.log(arguments[k]);\n                }\n            }\n        };\n\n        /* for debug\n        return function(mes) {\n            document.getElementById('wrong-message').innerHTML =\n                mes + ' ' + (new Date() - 0)\n                + '<br/>'\n                + document.getElementById('wrong-message').innerHTML;\n        };\n        */\n    \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.zrender@3.4.4@zrender/lib/core/log.js\n// module id = 229\n// module chunks = 0","/**\n * Image element\n * @module zrender/graphic/Image\n */\n\n\n\n    var Displayable = require('./Displayable');\n    var BoundingRect = require('../core/BoundingRect');\n    var zrUtil = require('../core/util');\n\n    var LRU = require('../core/LRU');\n    var globalImageCache = new LRU(50);\n    /**\n     * @alias zrender/graphic/Image\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    function ZImage(opts) {\n        Displayable.call(this, opts);\n    }\n\n    ZImage.prototype = {\n\n        constructor: ZImage,\n\n        type: 'image',\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n            var src = style.image;\n            var image;\n\n            // Must bind each time\n            style.bind(ctx, this, prevEl);\n            // style.image is a url string\n            if (typeof src === 'string') {\n                image = this._image;\n            }\n            // style.image is an HTMLImageElement or HTMLCanvasElement or Canvas\n            else {\n                image = src;\n            }\n            // FIXME Case create many images with src\n            if (!image && src) {\n                // Try get from global image cache\n                var cachedImgObj = globalImageCache.get(src);\n                if (!cachedImgObj) {\n                    // Create a new image\n                    image = new Image();\n                    image.onload = function () {\n                        image.onload = null;\n                        for (var i = 0; i < cachedImgObj.pending.length; i++) {\n                            cachedImgObj.pending[i].dirty();\n                        }\n                    };\n                    cachedImgObj = {\n                        image: image,\n                        pending: [this]\n                    };\n                    image.src = src;\n                    globalImageCache.put(src, cachedImgObj);\n                    this._image = image;\n                    return;\n                }\n                else {\n                    image = cachedImgObj.image;\n                    this._image = image;\n                    // Image is not complete finish, add to pending list\n                    if (!image.width || !image.height) {\n                        cachedImgObj.pending.push(this);\n                        return;\n                    }\n                }\n            }\n\n            if (image) {\n                // 图片已经加载完成\n                // if (image.nodeName.toUpperCase() == 'IMG') {\n                //     if (!image.complete) {\n                //         return;\n                //     }\n                // }\n                // Else is canvas\n\n                var x = style.x || 0;\n                var y = style.y || 0;\n                // 图片加载失败\n                if (!image.width || !image.height) {\n                    return;\n                }\n                var width = style.width;\n                var height = style.height;\n                var aspect = image.width / image.height;\n                if (width == null && height != null) {\n                    // Keep image/height ratio\n                    width = height * aspect;\n                }\n                else if (height == null && width != null) {\n                    height = width / aspect;\n                }\n                else if (width == null && height == null) {\n                    width = image.width;\n                    height = image.height;\n                }\n\n                // 设置transform\n                this.setTransform(ctx);\n\n                if (style.sWidth && style.sHeight) {\n                    var sx = style.sx || 0;\n                    var sy = style.sy || 0;\n                    ctx.drawImage(\n                        image,\n                        sx, sy, style.sWidth, style.sHeight,\n                        x, y, width, height\n                    );\n                }\n                else if (style.sx && style.sy) {\n                    var sx = style.sx;\n                    var sy = style.sy;\n                    var sWidth = width - sx;\n                    var sHeight = height - sy;\n                    ctx.drawImage(\n                        image,\n                        sx, sy, sWidth, sHeight,\n                        x, y, width, height\n                    );\n                }\n                else {\n                    ctx.drawImage(image, x, y, width, height);\n                }\n\n                this.restoreTransform(ctx);\n\n                // Draw rect text\n                if (style.text != null) {\n                    this.drawRectText(ctx, this.getBoundingRect());\n                }\n\n            }\n        },\n\n        getBoundingRect: function () {\n            var style = this.style;\n            if (! this._rect) {\n                this._rect = new BoundingRect(\n                    style.x || 0, style.y || 0, style.width || 0, style.height || 0\n                );\n            }\n            return this._rect;\n        }\n    };\n\n    zrUtil.inherits(ZImage, Displayable);\n\n    module.exports = ZImage;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.zrender@3.4.4@zrender/lib/graphic/Image.js\n// module id = 230\n// module chunks = 0","\n\n    var Pattern = function (image, repeat) {\n        // Should do nothing more in this constructor. Because gradient can be\n        // declard by `color: {image: ...}`, where this constructor will not be called.\n\n        this.image = image;\n        this.repeat = repeat;\n\n        // Can be cloned\n        this.type = 'pattern';\n    };\n\n    Pattern.prototype.getCanvasPattern = function (ctx) {\n        return ctx.createPattern(this.image, this.repeat || 'repeat');\n    };\n\n    module.exports = Pattern;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.zrender@3.4.4@zrender/lib/graphic/Pattern.js\n// module id = 231\n// module chunks = 0","/**\n * @module zrender/graphic/Style\n */\n\n\n    var STYLE_COMMON_PROPS = [\n        ['shadowBlur', 0], ['shadowOffsetX', 0], ['shadowOffsetY', 0], ['shadowColor', '#000'],\n        ['lineCap', 'butt'], ['lineJoin', 'miter'], ['miterLimit', 10]\n    ];\n\n    // var SHADOW_PROPS = STYLE_COMMON_PROPS.slice(0, 4);\n    // var LINE_PROPS = STYLE_COMMON_PROPS.slice(4);\n\n    var Style = function (opts) {\n        this.extendFrom(opts);\n    };\n\n    function createLinearGradient(ctx, obj, rect) {\n        var x = obj.x == null ? 0 : obj.x;\n        var x2 = obj.x2 == null ? 1 : obj.x2;\n        var y = obj.y == null ? 0 : obj.y;\n        var y2 = obj.y2 == null ? 0 : obj.y2;\n\n        if (!obj.global) {\n            x = x * rect.width + rect.x;\n            x2 = x2 * rect.width + rect.x;\n            y = y * rect.height + rect.y;\n            y2 = y2 * rect.height + rect.y;\n        }\n\n        var canvasGradient = ctx.createLinearGradient(x, y, x2, y2);\n\n        return canvasGradient;\n    }\n\n    function createRadialGradient(ctx, obj, rect) {\n        var width = rect.width;\n        var height = rect.height;\n        var min = Math.min(width, height);\n\n        var x = obj.x == null ? 0.5 : obj.x;\n        var y = obj.y == null ? 0.5 : obj.y;\n        var r = obj.r == null ? 0.5 : obj.r;\n        if (!obj.global) {\n            x = x * width + rect.x;\n            y = y * height + rect.y;\n            r = r * min;\n        }\n\n        var canvasGradient = ctx.createRadialGradient(x, y, 0, x, y, r);\n\n        return canvasGradient;\n    }\n\n\n    Style.prototype = {\n\n        constructor: Style,\n\n        /**\n         * @type {string}\n         */\n        fill: '#000000',\n\n        /**\n         * @type {string}\n         */\n        stroke: null,\n\n        /**\n         * @type {number}\n         */\n        opacity: 1,\n\n        /**\n         * @type {Array.<number>}\n         */\n        lineDash: null,\n\n        /**\n         * @type {number}\n         */\n        lineDashOffset: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowBlur: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowOffsetX: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowOffsetY: 0,\n\n        /**\n         * @type {number}\n         */\n        lineWidth: 1,\n\n        /**\n         * If stroke ignore scale\n         * @type {Boolean}\n         */\n        strokeNoScale: false,\n\n        // Bounding rect text configuration\n        // Not affected by element transform\n        /**\n         * @type {string}\n         */\n        text: null,\n\n        /**\n         * @type {string}\n         */\n        textFill: '#000',\n\n        /**\n         * @type {string}\n         */\n        textStroke: null,\n\n        /**\n         * 'inside', 'left', 'right', 'top', 'bottom'\n         * [x, y]\n         * @type {string|Array.<number>}\n         * @default 'inside'\n         */\n        textPosition: 'inside',\n\n        /**\n         * [x, y]\n         * @type {Array.<number>}\n         */\n        textOffset: null,\n\n        /**\n         * @type {string}\n         */\n        textBaseline: null,\n\n        /**\n         * @type {string}\n         */\n        textAlign: null,\n\n        /**\n         * @type {string}\n         */\n        textVerticalAlign: null,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textDistance: 5,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textShadowBlur: 0,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textShadowOffsetX: 0,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textShadowOffsetY: 0,\n\n        /**\n         * If transform text\n         * Only useful in Path and Image element\n         * @type {boolean}\n         */\n        textTransform: false,\n\n        /**\n         * Text rotate around position of Path or Image\n         * Only useful in Path and Image element and textTransform is false.\n         */\n        textRotation: 0,\n\n        /**\n         * @type {string}\n         * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n         */\n        blend: null,\n\n        /**\n         * @param {CanvasRenderingContext2D} ctx\n         */\n        bind: function (ctx, el, prevEl) {\n            var style = this;\n            var prevStyle = prevEl && prevEl.style;\n            var firstDraw = !prevStyle;\n\n            for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n                var prop = STYLE_COMMON_PROPS[i];\n                var styleName = prop[0];\n\n                if (firstDraw || style[styleName] !== prevStyle[styleName]) {\n                    // FIXME Invalid property value will cause style leak from previous element.\n                    ctx[styleName] = style[styleName] || prop[1];\n                }\n            }\n\n            if ((firstDraw || style.fill !== prevStyle.fill)) {\n                ctx.fillStyle = style.fill;\n            }\n            if ((firstDraw || style.stroke !== prevStyle.stroke)) {\n                ctx.strokeStyle = style.stroke;\n            }\n            if ((firstDraw || style.opacity !== prevStyle.opacity)) {\n                ctx.globalAlpha = style.opacity == null ? 1 : style.opacity;\n            }\n\n            if ((firstDraw || style.blend !== prevStyle.blend)) {\n                ctx.globalCompositeOperation = style.blend || 'source-over';\n            }\n            if (this.hasStroke()) {\n                var lineWidth = style.lineWidth;\n                ctx.lineWidth = lineWidth / (\n                    (this.strokeNoScale && el && el.getLineScale) ? el.getLineScale() : 1\n                );\n            }\n        },\n\n        hasFill: function () {\n            var fill = this.fill;\n            return fill != null && fill !== 'none';\n        },\n\n        hasStroke: function () {\n            var stroke = this.stroke;\n            return stroke != null && stroke !== 'none' && this.lineWidth > 0;\n        },\n\n        /**\n         * Extend from other style\n         * @param {zrender/graphic/Style} otherStyle\n         * @param {boolean} overwrite\n         */\n        extendFrom: function (otherStyle, overwrite) {\n            if (otherStyle) {\n                var target = this;\n                for (var name in otherStyle) {\n                    if (otherStyle.hasOwnProperty(name)\n                        && (overwrite || ! target.hasOwnProperty(name))\n                    ) {\n                        target[name] = otherStyle[name];\n                    }\n                }\n            }\n        },\n\n        /**\n         * Batch setting style with a given object\n         * @param {Object|string} obj\n         * @param {*} [obj]\n         */\n        set: function (obj, value) {\n            if (typeof obj === 'string') {\n                this[obj] = value;\n            }\n            else {\n                this.extendFrom(obj, true);\n            }\n        },\n\n        /**\n         * Clone\n         * @return {zrender/graphic/Style} [description]\n         */\n        clone: function () {\n            var newStyle = new this.constructor();\n            newStyle.extendFrom(this, true);\n            return newStyle;\n        },\n\n        getGradient: function (ctx, obj, rect) {\n            var method = obj.type === 'radial' ? createRadialGradient : createLinearGradient;\n            var canvasGradient = method(ctx, obj, rect);\n            var colorStops = obj.colorStops;\n            for (var i = 0; i < colorStops.length; i++) {\n                canvasGradient.addColorStop(\n                    colorStops[i].offset, colorStops[i].color\n                );\n            }\n            return canvasGradient;\n        }\n    };\n\n    var styleProto = Style.prototype;\n    for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n        var prop = STYLE_COMMON_PROPS[i];\n        if (!(prop[0] in styleProto)) {\n            styleProto[prop[0]] = prop[1];\n        }\n    }\n\n    // Provide for others\n    Style.getGradient = styleProto.getGradient;\n\n    module.exports = Style;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.zrender@3.4.4@zrender/lib/graphic/Style.js\n// module id = 232\n// module chunks = 0","\n\n    var smoothSpline = require('./smoothSpline');\n    var smoothBezier = require('./smoothBezier');\n\n    module.exports = {\n        buildPath: function (ctx, shape, closePath) {\n            var points = shape.points;\n            var smooth = shape.smooth;\n            if (points && points.length >= 2) {\n                if (smooth && smooth !== 'spline') {\n                    var controlPoints = smoothBezier(\n                        points, smooth, closePath, shape.smoothConstraint\n                    );\n\n                    ctx.moveTo(points[0][0], points[0][1]);\n                    var len = points.length;\n                    for (var i = 0; i < (closePath ? len : len - 1); i++) {\n                        var cp1 = controlPoints[i * 2];\n                        var cp2 = controlPoints[i * 2 + 1];\n                        var p = points[(i + 1) % len];\n                        ctx.bezierCurveTo(\n                            cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]\n                        );\n                    }\n                }\n                else {\n                    if (smooth === 'spline') {\n                        points = smoothSpline(points, closePath);\n                    }\n\n                    ctx.moveTo(points[0][0], points[0][1]);\n                    for (var i = 1, l = points.length; i < l; i++) {\n                        ctx.lineTo(points[i][0], points[i][1]);\n                    }\n                }\n\n                closePath && ctx.closePath();\n            }\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.zrender@3.4.4@zrender/lib/graphic/helper/poly.js\n// module id = 233\n// module chunks = 0","'use strict';\n/**\n * 提供变换扩展\n * @module zrender/mixin/Transformable\n * @author pissang (https://www.github.com/pissang)\n */\n\n\n    var matrix = require('../core/matrix');\n    var vector = require('../core/vector');\n    var mIdentity = matrix.identity;\n\n    var EPSILON = 5e-5;\n\n    function isNotAroundZero(val) {\n        return val > EPSILON || val < -EPSILON;\n    }\n\n    /**\n     * @alias module:zrender/mixin/Transformable\n     * @constructor\n     */\n    var Transformable = function (opts) {\n        opts = opts || {};\n        // If there are no given position, rotation, scale\n        if (!opts.position) {\n            /**\n             * 平移\n             * @type {Array.<number>}\n             * @default [0, 0]\n             */\n            this.position = [0, 0];\n        }\n        if (opts.rotation == null) {\n            /**\n             * 旋转\n             * @type {Array.<number>}\n             * @default 0\n             */\n            this.rotation = 0;\n        }\n        if (!opts.scale) {\n            /**\n             * 缩放\n             * @type {Array.<number>}\n             * @default [1, 1]\n             */\n            this.scale = [1, 1];\n        }\n        /**\n         * 旋转和缩放的原点\n         * @type {Array.<number>}\n         * @default null\n         */\n        this.origin = this.origin || null;\n    };\n\n    var transformableProto = Transformable.prototype;\n    transformableProto.transform = null;\n\n    /**\n     * 判断是否需要有坐标变换\n     * 如果有坐标变换, 则从position, rotation, scale以及父节点的transform计算出自身的transform矩阵\n     */\n    transformableProto.needLocalTransform = function () {\n        return isNotAroundZero(this.rotation)\n            || isNotAroundZero(this.position[0])\n            || isNotAroundZero(this.position[1])\n            || isNotAroundZero(this.scale[0] - 1)\n            || isNotAroundZero(this.scale[1] - 1);\n    };\n\n    transformableProto.updateTransform = function () {\n        var parent = this.parent;\n        var parentHasTransform = parent && parent.transform;\n        var needLocalTransform = this.needLocalTransform();\n\n        var m = this.transform;\n        if (!(needLocalTransform || parentHasTransform)) {\n            m && mIdentity(m);\n            return;\n        }\n\n        m = m || matrix.create();\n\n        if (needLocalTransform) {\n            this.getLocalTransform(m);\n        }\n        else {\n            mIdentity(m);\n        }\n\n        // 应用父节点变换\n        if (parentHasTransform) {\n            if (needLocalTransform) {\n                matrix.mul(m, parent.transform, m);\n            }\n            else {\n                matrix.copy(m, parent.transform);\n            }\n        }\n        // 保存这个变换矩阵\n        this.transform = m;\n\n        this.invTransform = this.invTransform || matrix.create();\n        matrix.invert(this.invTransform, m);\n    };\n\n    transformableProto.getLocalTransform = function (m) {\n        return Transformable.getLocalTransform(this, m);\n    };\n\n    /**\n     * 将自己的transform应用到context上\n     * @param {Context2D} ctx\n     */\n    transformableProto.setTransform = function (ctx) {\n        var m = this.transform;\n        var dpr = ctx.dpr || 1;\n        if (m) {\n            ctx.setTransform(dpr * m[0], dpr * m[1], dpr * m[2], dpr * m[3], dpr * m[4], dpr * m[5]);\n        }\n        else {\n            ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n        }\n    };\n\n    transformableProto.restoreTransform = function (ctx) {\n        var dpr = ctx.dpr || 1;\n        ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n    };\n\n    var tmpTransform = [];\n\n    /**\n     * 分解`transform`矩阵到`position`, `rotation`, `scale`\n     */\n    transformableProto.decomposeTransform = function () {\n        if (!this.transform) {\n            return;\n        }\n        var parent = this.parent;\n        var m = this.transform;\n        if (parent && parent.transform) {\n            // Get local transform and decompose them to position, scale, rotation\n            matrix.mul(tmpTransform, parent.invTransform, m);\n            m = tmpTransform;\n        }\n        var sx = m[0] * m[0] + m[1] * m[1];\n        var sy = m[2] * m[2] + m[3] * m[3];\n        var position = this.position;\n        var scale = this.scale;\n        if (isNotAroundZero(sx - 1)) {\n            sx = Math.sqrt(sx);\n        }\n        if (isNotAroundZero(sy - 1)) {\n            sy = Math.sqrt(sy);\n        }\n        if (m[0] < 0) {\n            sx = -sx;\n        }\n        if (m[3] < 0) {\n            sy = -sy;\n        }\n        position[0] = m[4];\n        position[1] = m[5];\n        scale[0] = sx;\n        scale[1] = sy;\n        this.rotation = Math.atan2(-m[1] / sy, m[0] / sx);\n    };\n\n    /**\n     * Get global scale\n     * @return {Array.<number>}\n     */\n    transformableProto.getGlobalScale = function () {\n        var m = this.transform;\n        if (!m) {\n            return [1, 1];\n        }\n        var sx = Math.sqrt(m[0] * m[0] + m[1] * m[1]);\n        var sy = Math.sqrt(m[2] * m[2] + m[3] * m[3]);\n        if (m[0] < 0) {\n            sx = -sx;\n        }\n        if (m[3] < 0) {\n            sy = -sy;\n        }\n        return [sx, sy];\n    };\n    /**\n     * 变换坐标位置到 shape 的局部坐标空间\n     * @method\n     * @param {number} x\n     * @param {number} y\n     * @return {Array.<number>}\n     */\n    transformableProto.transformCoordToLocal = function (x, y) {\n        var v2 = [x, y];\n        var invTransform = this.invTransform;\n        if (invTransform) {\n            vector.applyTransform(v2, v2, invTransform);\n        }\n        return v2;\n    };\n\n    /**\n     * 变换局部坐标位置到全局坐标空间\n     * @method\n     * @param {number} x\n     * @param {number} y\n     * @return {Array.<number>}\n     */\n    transformableProto.transformCoordToGlobal = function (x, y) {\n        var v2 = [x, y];\n        var transform = this.transform;\n        if (transform) {\n            vector.applyTransform(v2, v2, transform);\n        }\n        return v2;\n    };\n\n    /**\n     * @static\n     * @param {Object} target\n     * @param {Array.<number>} target.origin\n     * @param {number} target.rotation\n     * @param {Array.<number>} target.position\n     * @param {Array.<number>} [m]\n     */\n    Transformable.getLocalTransform = function (target, m) {\n        m = m || [];\n        mIdentity(m);\n\n        var origin = target.origin;\n        var scale = target.scale || [1, 1];\n        var rotation = target.rotation || 0;\n        var position = target.position || [0, 0];\n\n        if (origin) {\n            // Translate to origin\n            m[4] -= origin[0];\n            m[5] -= origin[1];\n        }\n        matrix.scale(m, m, scale);\n        if (rotation) {\n            matrix.rotate(m, m, rotation);\n        }\n        if (origin) {\n            // Translate back from origin\n            m[4] += origin[0];\n            m[5] += origin[1];\n        }\n\n        m[4] += position[0];\n        m[5] += position[1];\n\n        return m;\n    };\n\n    module.exports = Transformable;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.zrender@3.4.4@zrender/lib/mixin/Transformable.js\n// module id = 234\n// module chunks = 0","<template>\n  <div :class=\"className\"></div>\n</template>\n\n<style scoped>\n  .vue-echarts {\n    width: 100%;\n    height: 100%;\n  }\n</style>\n\n<script>\n  import ECharts from 'echarts/lib/echarts.js';\n  import Debounce from 'lodash.debounce';\n  // import Resize from 'element-resize-event';\n  import Resize from 'element-resize-detector';\n  import Wrapper from './wrapper.js';\n\n  const IEcharts = Wrapper(ECharts, Resize, Debounce);\n  export default IEcharts;\n</script>\n\n\n\n// WEBPACK FOOTER //\n// lite.vue?03bbbe32","<template>\n  <Row class=\"dashboard-grid\" :gutter=\"16\">\n    <Col :md=\"6\" :sm=\"12\" v-for=\"(num, index) in [1,2,3,4]\" :key=\"index\">\n      <Card style=\"height: 88px\" />\n    </Col>\n    <Col :md=\"14\" :sm=\"24\">\n      <Card style=\"height: 284px\" />\n    </Col>\n    <Col :md=\"10\" :sm=\"24\">\n      <Card style=\"height: 284px\" />\n    </Col>\n    <Col :md=\"10\" :sm=\"24\">\n      <Card style=\"height: 284px\" />\n    </Col>\n    <Col :md=\"14\" :sm=\"24\">\n      <Card style=\"height: 284px\" />\n    </Col>\n  </Row>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n\n    }\n  }\n}\n</script>\n\n<style scoped>\n.dashboard-grid .ivu-col {\n  margin-bottom: 16px;\n}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// LoadingMarker.vue?b30e75e6","<template>\n  <div class=\"chart-box\">\n    <chart\n      :option=\"bar\"\n      resizable\n    />\n  </div>\n</template>\n\n<script>\nimport ECharts from 'vue-echarts-v3/src/lite.vue'\n\nimport 'echarts/lib/chart/bar'\nimport 'echarts/lib/component/title'\nimport 'echarts/lib/component/tooltip'\nimport 'echarts/lib/component/legend'\n\nexport default {\n  components: {\n    chart: ECharts\n  },\n  props: {\n    title: String,\n    data: Array\n  },\n  watch: {\n    data: (newValue) => {\n    }\n  },\n  mounted() {\n    let data = this.data\n    let x = data.map(item => item.name)\n    let seriesData = data.map(item =>item.percent)\n\n    this.bar.title.text = this.title\n    this.bar.xAxis.data = x\n    this.bar.series[0].data = seriesData\n  },\n  data: () => ({\n    bar: {\n      color: ['#f69899'],\n      title: {\n        text: '',\n        textStyle: {\n          color: '#666',\n          fontWeight: 'normal',\n          fontSize: 16\n        },\n      },\n       legend: {\n        data: ['占比'],\n        top: 'bottom'\n      },\n      tooltip: {},\n      xAxis: {\n        data: []\n      },\n      yAxis: {},\n      series: [{\n        name: '占比',\n        type: 'bar',\n        data: []\n      }]\n    }\n  }),\n};\n</script>\n\n<style scoped>\n.chart-box {\n  height: 250px;\n  width: 100%;\n}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// AgeChart.vue?3a53f61c","<template>\n  <Card class=\"number-card\">\n    <Icon class=\"icon\" :type=\"icon\" :color=\"color\"></Icon>\n    <div class=\"content\">\n      <h3 class=\"title\">{{title}}</h3>\n      <p class=\"number\">\n        <countTo :endVal=\"number\" :duration=\"1000\" />\n      </p>\n    </div>\n  </Card>\n</template>\n\n<script>\nimport countTo from 'vue-count-to'\n\nexport default {\n  data() {\n    return {\n    }\n  },\n  components: {\n    countTo\n  },\n  props: {\n    icon: String,\n    title: String,\n    color: String,\n    number: Number\n  }\n}\n</script>\n\n<style scoped>\n.icon {\n  float: left;\n  font-size: 48px;\n  line-height: 56px;\n  width: 56px;\n  text-align: center;\n}\n\n.content {\n  width: 100%;\n  padding-left: 62px;\n}\n\n.title {\n  line-height: 16px;\n  font-size: 14px;\n  font-weight: 500;\n  margin-bottom: 8px;\n  height: 16px;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n}\n\n.number {\n  line-height: 32px;\n  font-size: 24px;\n  height: 32px;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// NumberCard.vue?9661ba6c","<template>\n  <div class=\"chart-box\">\n    <chart\n      :option=\"chartOpts\"\n      resizable\n    />\n  </div>\n</template>\n\n<script>\nimport ECharts from 'vue-echarts-v3/src/lite.vue'\n\nimport 'echarts/lib/chart/Pie'\nimport 'echarts/lib/component/title'\nimport 'echarts/lib/component/tooltip'\n\nexport default {\n  components: {\n    chart: ECharts\n  },\n  props: {\n    title: String,\n    data: Array\n  },\n  watch: {\n    data: (newValue) => {\n    }\n  },\n  mounted() {\n    let data = this.data\n\n    this.chartOpts.title.text = this.title\n    this.chartOpts.series[0].data = data\n  },\n  data: () => ({\n    chartOpts: {\n      color: ['#d897eb', '#64ea91', '#8fc9fb', '#f69899'],\n      title: {\n        text: '',\n        textStyle: {\n          color: '#666',\n          fontWeight: 'normal',\n          fontSize: 16\n        },\n      },\n      tooltip: {},\n      series: [{\n        name: '系统',\n        type: 'pie',\n        radius: '55%',\n        data: []\n      }]\n    }\n  }),\n};\n</script>\n\n<style scoped>\n.chart-box {\n  height: 250px;\n  width: 100%;\n}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// OSChart.vue?408d18cc","<template>\n  <div class=\"chart-box\">\n    <chart\n      :option=\"bar\"\n      resizable\n    />\n  </div>\n</template>\n\n<script>\nimport ECharts from 'vue-echarts-v3/src/lite.vue'\n\nimport 'echarts/lib/chart/bar'\nimport 'echarts/lib/component/title'\nimport 'echarts/lib/component/tooltip'\nimport 'echarts/lib/component/legend'\n\nexport default {\n  components: {\n    chart: ECharts\n  },\n  props: {\n    title: String,\n    data: Array\n  },\n  watch: {\n    data: (newValue) => {\n    }\n  },\n  mounted() {\n    let data = this.data\n    let x = data.map(item => item.name)\n    let seriesData = data.map(item => item.percent)\n\n    this.bar.title.text = this.title\n    this.bar.xAxis.data = x\n    this.bar.series[0].data = seriesData\n  },\n  data: () => ({\n    bar: {\n      color: ['#8fc9fb'],\n      title: {\n        text: '',\n        textStyle: {\n          color: '#666',\n          fontWeight: 'normal',\n          fontSize: 16\n        },\n      },\n      legend: {\n        data: ['占比'],\n        top: 'bottom'\n      },\n      tooltip: {},\n      xAxis: {\n        data: []\n      },\n      yAxis: {},\n      series: [{\n        name: '占比',\n        type: 'bar',\n        data: []\n      }]\n    }\n  }),\n};\n</script>\n\n<style scoped>\n.chart-box {\n  height: 250px;\n  width: 100%;\n}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// RegionChart.vue?218fe168","<template>\n  <div>\n    <transition name=\"fade\">\n      <Row v-if=\"!loading\" class=\"dashboard-grid\" :gutter=\"16\">\n        <Col :md=\"6\" :sm=\"12\" v-for=\"num in numbers\" :key=\"num.key\">\n          <NumberCard\n            :title=\"num.title\"\n            :color=\"num.color\"\n            :number=\"num.number\"\n            :icon=\"num.icon\"\n          />\n        </Col>\n        <Col :md=\"14\" :sm=\"24\">\n          <Card>\n            <RegionChart\n              :title=\"region.title\"\n              :data=\"region.data\"\n            />\n          </Card>\n        </Col>\n        <Col :md=\"10\" :sm=\"24\">\n          <Card>\n            <OSChart\n              :title=\"os.title\"\n              :data=\"os.data\"\n            />\n          </Card>\n        </Col>\n        <Col :md=\"10\" :sm=\"24\">\n          <Card>\n            <OSChart\n              :title=\"terminal.title\"\n              :data=\"terminal.data\"\n            />\n          </Card>\n        </Col>\n        <Col :md=\"14\" :sm=\"24\">\n          <Card>\n            <AgeChart\n              :title=\"age.title\"\n              :data=\"age.data\"\n            />\n          </Card>\n        </Col>\n      </Row>\n    </transition>\n    <LoadingMarker v-if=\"loading\" />\n  </div>\n</template>\n\n<script>\nimport { mapActions, mapGetters } from 'vuex'\n\nimport LoadingMarker from './LoadingMarker'\nimport NumberCard from './components/NumberCard'\nimport RegionChart from './components/RegionChart'\nimport AgeChart from './components/AgeChart'\nimport OSChart from './components/OSChart'\n\nexport default {\n  data() {\n    return {\n      loading: true\n    }\n  },\n  created() {\n    this.$store.dispatch('fetchDashboard')\n    setTimeout(() => { this.loading = false }, 2000)\n  },\n  computed: {\n    ...mapGetters({\n      numbers: 'statisticsNumbers',\n      region: 'regionChartData',\n      age: 'ageChartData',\n      os: 'osChartData',\n      terminal: 'terminalChartData'\n    })\n  },\n  methods: {\n  },\n  components: {\n    LoadingMarker,\n    NumberCard,\n    RegionChart,\n    AgeChart,\n    OSChart\n  }\n}\n</script>\n\n<style scoped>\n.dashboard-grid .ivu-col {\n  margin-bottom: 16px;\n}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// index.vue?880eae34","\"use strict\";\n\nvar utils = require(\"./utils\");\n\nmodule.exports = function batchProcessorMaker(options) {\n    options             = options || {};\n    var reporter        = options.reporter;\n    var asyncProcess    = utils.getOption(options, \"async\", true);\n    var autoProcess     = utils.getOption(options, \"auto\", true);\n\n    if(autoProcess && !asyncProcess) {\n        reporter && reporter.warn(\"Invalid options combination. auto=true and async=false is invalid. Setting async=true.\");\n        asyncProcess = true;\n    }\n\n    var batch = Batch();\n    var asyncFrameHandler;\n    var isProcessing = false;\n\n    function addFunction(level, fn) {\n        if(!isProcessing && autoProcess && asyncProcess && batch.size() === 0) {\n            // Since this is async, it is guaranteed to be executed after that the fn is added to the batch.\n            // This needs to be done before, since we're checking the size of the batch to be 0.\n            processBatchAsync();\n        }\n\n        batch.add(level, fn);\n    }\n\n    function processBatch() {\n        // Save the current batch, and create a new batch so that incoming functions are not added into the currently processing batch.\n        // Continue processing until the top-level batch is empty (functions may be added to the new batch while processing, and so on).\n        isProcessing = true;\n        while (batch.size()) {\n            var processingBatch = batch;\n            batch = Batch();\n            processingBatch.process();\n        }\n        isProcessing = false;\n    }\n\n    function forceProcessBatch(localAsyncProcess) {\n        if (isProcessing) {\n            return;\n        }\n\n        if(localAsyncProcess === undefined) {\n            localAsyncProcess = asyncProcess;\n        }\n\n        if(asyncFrameHandler) {\n            cancelFrame(asyncFrameHandler);\n            asyncFrameHandler = null;\n        }\n\n        if(localAsyncProcess) {\n            processBatchAsync();\n        } else {\n            processBatch();\n        }\n    }\n\n    function processBatchAsync() {\n        asyncFrameHandler = requestFrame(processBatch);\n    }\n\n    function clearBatch() {\n        batch           = {};\n        batchSize       = 0;\n        topLevel        = 0;\n        bottomLevel     = 0;\n    }\n\n    function cancelFrame(listener) {\n        // var cancel = window.cancelAnimationFrame || window.mozCancelAnimationFrame || window.webkitCancelAnimationFrame || window.clearTimeout;\n        var cancel = clearTimeout;\n        return cancel(listener);\n    }\n\n    function requestFrame(callback) {\n        // var raf = window.requestAnimationFrame || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame || function(fn) { return window.setTimeout(fn, 20); };\n        var raf = function(fn) { return setTimeout(fn, 0); };\n        return raf(callback);\n    }\n\n    return {\n        add: addFunction,\n        force: forceProcessBatch\n    };\n};\n\nfunction Batch() {\n    var batch       = {};\n    var size        = 0;\n    var topLevel    = 0;\n    var bottomLevel = 0;\n\n    function add(level, fn) {\n        if(!fn) {\n            fn = level;\n            level = 0;\n        }\n\n        if(level > topLevel) {\n            topLevel = level;\n        } else if(level < bottomLevel) {\n            bottomLevel = level;\n        }\n\n        if(!batch[level]) {\n            batch[level] = [];\n        }\n\n        batch[level].push(fn);\n        size++;\n    }\n\n    function process() {\n        for(var level = bottomLevel; level <= topLevel; level++) {\n            var fns = batch[level];\n\n            for(var i = 0; i < fns.length; i++) {\n                var fn = fns[i];\n                fn();\n            }\n        }\n    }\n\n    function getSize() {\n        return size;\n    }\n\n    return {\n        add: add,\n        process: process,\n        size: getSize\n    };\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.batch-processor@1.0.0@batch-processor/src/batch-processor.js\n// module id = 259\n// module chunks = 0","\"use strict\";\n\nvar utils = module.exports = {};\n\nutils.getOption = getOption;\n\nfunction getOption(options, name, defaultValue) {\n    var value = options[name];\n\n    if((value === undefined || value === null) && defaultValue !== undefined) {\n        return defaultValue;\n    }\n\n    return value;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.batch-processor@1.0.0@batch-processor/src/utils.js\n// module id = 260\n// module chunks = 0","exports = module.exports = require(\"../../../../node_modules/.css-loader@0.28.1@css-loader/lib/css-base.js\")(true);\n// imports\n\n\n// module\nexports.push([module.id, \".chart-box[data-v-1108af1c]{height:250px;width:100%}\", \"\", {\"version\":3,\"sources\":[\"D:/z/p/vue-mdmp/src/pages/Dashboard/components/RegionChart.vue\"],\"names\":[],\"mappings\":\"AACA,4BACE,aAAc,AACd,UAAY,CACb\",\"file\":\"RegionChart.vue\",\"sourcesContent\":[\"\\n.chart-box[data-v-1108af1c] {\\n  height: 250px;\\n  width: 100%;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.css-loader@0.28.1@css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/.vue-loader@11.3.4@vue-loader/lib/style-compiler?{\"id\":\"data-v-1108af1c\",\"scoped\":true,\"hasInlineConfig\":false}!./~/.vue-loader@11.3.4@vue-loader/lib/selector.js?type=styles&index=0!./src/pages/Dashboard/components/RegionChart.vue\n// module id = 279\n// module chunks = 0","exports = module.exports = require(\"../../../node_modules/.css-loader@0.28.1@css-loader/lib/css-base.js\")(true);\n// imports\n\n\n// module\nexports.push([module.id, \".dashboard-grid .ivu-col[data-v-17dfc345]{margin-bottom:16px}\", \"\", {\"version\":3,\"sources\":[\"D:/z/p/vue-mdmp/src/pages/Dashboard/LoadingMarker.vue\"],\"names\":[],\"mappings\":\"AACA,0CACE,kBAAoB,CACrB\",\"file\":\"LoadingMarker.vue\",\"sourcesContent\":[\"\\n.dashboard-grid .ivu-col[data-v-17dfc345] {\\n  margin-bottom: 16px;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.css-loader@0.28.1@css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/.vue-loader@11.3.4@vue-loader/lib/style-compiler?{\"id\":\"data-v-17dfc345\",\"scoped\":true,\"hasInlineConfig\":false}!./~/.vue-loader@11.3.4@vue-loader/lib/selector.js?type=styles&index=0!./src/pages/Dashboard/LoadingMarker.vue\n// module id = 280\n// module chunks = 0","exports = module.exports = require(\"../../../../node_modules/.css-loader@0.28.1@css-loader/lib/css-base.js\")(true);\n// imports\n\n\n// module\nexports.push([module.id, \".chart-box[data-v-2f29b3a2]{height:250px;width:100%}\", \"\", {\"version\":3,\"sources\":[\"D:/z/p/vue-mdmp/src/pages/Dashboard/components/OSChart.vue\"],\"names\":[],\"mappings\":\"AACA,4BACE,aAAc,AACd,UAAY,CACb\",\"file\":\"OSChart.vue\",\"sourcesContent\":[\"\\n.chart-box[data-v-2f29b3a2] {\\n  height: 250px;\\n  width: 100%;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.css-loader@0.28.1@css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/.vue-loader@11.3.4@vue-loader/lib/style-compiler?{\"id\":\"data-v-2f29b3a2\",\"scoped\":true,\"hasInlineConfig\":false}!./~/.vue-loader@11.3.4@vue-loader/lib/selector.js?type=styles&index=0!./src/pages/Dashboard/components/OSChart.vue\n// module id = 281\n// module chunks = 0","exports = module.exports = require(\"../../../../node_modules/.css-loader@0.28.1@css-loader/lib/css-base.js\")(true);\n// imports\n\n\n// module\nexports.push([module.id, \".chart-box[data-v-443ef9a7]{height:250px;width:100%}\", \"\", {\"version\":3,\"sources\":[\"D:/z/p/vue-mdmp/src/pages/Dashboard/components/AgeChart.vue\"],\"names\":[],\"mappings\":\"AACA,4BACE,aAAc,AACd,UAAY,CACb\",\"file\":\"AgeChart.vue\",\"sourcesContent\":[\"\\n.chart-box[data-v-443ef9a7] {\\n  height: 250px;\\n  width: 100%;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.css-loader@0.28.1@css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/.vue-loader@11.3.4@vue-loader/lib/style-compiler?{\"id\":\"data-v-443ef9a7\",\"scoped\":true,\"hasInlineConfig\":false}!./~/.vue-loader@11.3.4@vue-loader/lib/selector.js?type=styles&index=0!./src/pages/Dashboard/components/AgeChart.vue\n// module id = 282\n// module chunks = 0","exports = module.exports = require(\"../../../node_modules/.css-loader@0.28.1@css-loader/lib/css-base.js\")(true);\n// imports\n\n\n// module\nexports.push([module.id, \".dashboard-grid .ivu-col[data-v-61c0d0a1]{margin-bottom:16px}\", \"\", {\"version\":3,\"sources\":[\"D:/z/p/vue-mdmp/src/pages/Dashboard/index.vue\"],\"names\":[],\"mappings\":\"AACA,0CACE,kBAAoB,CACrB\",\"file\":\"index.vue\",\"sourcesContent\":[\"\\n.dashboard-grid .ivu-col[data-v-61c0d0a1] {\\n  margin-bottom: 16px;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.css-loader@0.28.1@css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/.vue-loader@11.3.4@vue-loader/lib/style-compiler?{\"id\":\"data-v-61c0d0a1\",\"scoped\":true,\"hasInlineConfig\":false}!./~/.vue-loader@11.3.4@vue-loader/lib/selector.js?type=styles&index=0!./src/pages/Dashboard/index.vue\n// module id = 283\n// module chunks = 0","exports = module.exports = require(\"../../../../node_modules/.css-loader@0.28.1@css-loader/lib/css-base.js\")(true);\n// imports\n\n\n// module\nexports.push([module.id, \".icon[data-v-6840e881]{float:left;font-size:48px;line-height:56px;width:56px;text-align:center}.content[data-v-6840e881]{width:100%;padding-left:62px}.title[data-v-6840e881]{line-height:16px;font-size:14px;font-weight:500;margin-bottom:8px;height:16px}.number[data-v-6840e881],.title[data-v-6840e881]{white-space:nowrap;text-overflow:ellipsis;overflow:hidden}.number[data-v-6840e881]{line-height:32px;font-size:24px;height:32px}\", \"\", {\"version\":3,\"sources\":[\"D:/z/p/vue-mdmp/src/pages/Dashboard/components/NumberCard.vue\"],\"names\":[],\"mappings\":\"AACA,uBACE,WAAY,AACZ,eAAgB,AAChB,iBAAkB,AAClB,WAAY,AACZ,iBAAmB,CACpB,AACD,0BACE,WAAY,AACZ,iBAAmB,CACpB,AACD,wBACE,iBAAkB,AAClB,eAAgB,AAChB,gBAAiB,AACjB,kBAAmB,AACnB,WAAa,CAId,AACD,iDAJE,mBAAoB,AACpB,uBAAwB,AACxB,eAAiB,CASlB,AAPD,yBACE,iBAAkB,AAClB,eAAgB,AAChB,WAAa,CAId\",\"file\":\"NumberCard.vue\",\"sourcesContent\":[\"\\n.icon[data-v-6840e881] {\\n  float: left;\\n  font-size: 48px;\\n  line-height: 56px;\\n  width: 56px;\\n  text-align: center;\\n}\\n.content[data-v-6840e881] {\\n  width: 100%;\\n  padding-left: 62px;\\n}\\n.title[data-v-6840e881] {\\n  line-height: 16px;\\n  font-size: 14px;\\n  font-weight: 500;\\n  margin-bottom: 8px;\\n  height: 16px;\\n  white-space: nowrap;\\n  text-overflow: ellipsis;\\n  overflow: hidden;\\n}\\n.number[data-v-6840e881] {\\n  line-height: 32px;\\n  font-size: 24px;\\n  height: 32px;\\n  white-space: nowrap;\\n  text-overflow: ellipsis;\\n  overflow: hidden;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.css-loader@0.28.1@css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/.vue-loader@11.3.4@vue-loader/lib/style-compiler?{\"id\":\"data-v-6840e881\",\"scoped\":true,\"hasInlineConfig\":false}!./~/.vue-loader@11.3.4@vue-loader/lib/selector.js?type=styles&index=0!./src/pages/Dashboard/components/NumberCard.vue\n// module id = 284\n// module chunks = 0","exports = module.exports = require(\"../../.css-loader@0.28.1@css-loader/lib/css-base.js\")(true);\n// imports\n\n\n// module\nexports.push([module.id, \".vue-echarts[data-v-897bed0c]{width:100%;height:100%}\", \"\", {\"version\":3,\"sources\":[\"D:/z/p/vue-mdmp/node_modules/.vue-echarts-v3@1.0.4@vue-echarts-v3/src/lite.vue\"],\"names\":[],\"mappings\":\"AACA,8BACE,WAAY,AACZ,WAAa,CACd\",\"file\":\"lite.vue\",\"sourcesContent\":[\"\\n.vue-echarts[data-v-897bed0c] {\\n  width: 100%;\\n  height: 100%;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.css-loader@0.28.1@css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/.vue-loader@11.3.4@vue-loader/lib/style-compiler?{\"id\":\"data-v-897bed0c\",\"scoped\":true,\"hasInlineConfig\":false}!./~/.vue-loader@11.3.4@vue-loader/lib/selector.js?type=styles&index=0!./~/.vue-echarts-v3@1.0.4@vue-echarts-v3/src/lite.vue\n// module id = 286\n// module chunks = 0","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var echartsAPIList = [\n        'getDom', 'getZr', 'getWidth', 'getHeight', 'getDevicePixelRatio', 'dispatchAction', 'isDisposed',\n        'on', 'off', 'getDataURL', 'getConnectedDataURL', 'getModel', 'getOption',\n        'getViewOfComponentModel', 'getViewOfSeriesModel'\n    ];\n    // And `getCoordinateSystems` and `getComponentByElement` will be injected in echarts.js\n\n    function ExtensionAPI(chartInstance) {\n        zrUtil.each(echartsAPIList, function (name) {\n            this[name] = zrUtil.bind(chartInstance[name], chartInstance);\n        }, this);\n    }\n\n    module.exports = ExtensionAPI;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.echarts@3.5.4@echarts/lib/ExtensionAPI.js\n// module id = 294\n// module chunks = 0","\n    var echarts = require('../echarts');\n    var zrUtil = require('zrender/lib/core/util');\n    module.exports = function (seriesType, actionInfos) {\n        zrUtil.each(actionInfos, function (actionInfo) {\n            actionInfo.update = 'updateView';\n            /**\n             * @payload\n             * @property {string} seriesName\n             * @property {string} name\n             */\n            echarts.registerAction(actionInfo, function (payload, ecModel) {\n                var selected = {};\n                ecModel.eachComponent(\n                    {mainType: 'series', subType: seriesType, query: payload},\n                    function (seriesModel) {\n                        if (seriesModel[actionInfo.method]) {\n                            seriesModel[actionInfo.method](payload.name);\n                        }\n                        var data = seriesModel.getData();\n                        // Create selected map\n                        data.each(function (idx) {\n                            var name = data.getName(idx);\n                            selected[name] = seriesModel.isSelected(name) || false;\n                        });\n                    }\n                );\n                return {\n                    name: payload.name,\n                    selected: selected\n                };\n            });\n        });\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.echarts@3.5.4@echarts/lib/action/createDataSelectAction.js\n// module id = 295\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var echarts = require('../echarts');\n\n    require('./pie/PieSeries');\n    require('./pie/PieView');\n\n    require('../action/createDataSelectAction')('pie', [{\n        type: 'pieToggleSelect',\n        event: 'pieselectchanged',\n        method: 'toggleSelected'\n    }, {\n        type: 'pieSelect',\n        event: 'pieselected',\n        method: 'select'\n    }, {\n        type: 'pieUnSelect',\n        event: 'pieunselected',\n        method: 'unSelect'\n    }]);\n\n    echarts.registerVisual(zrUtil.curry(require('../visual/dataColor'), 'pie'));\n\n    echarts.registerLayout(zrUtil.curry(\n        require('./pie/pieLayout'), 'pie'\n    ));\n\n    echarts.registerProcessor(zrUtil.curry(require('../processor/dataFilter'), 'pie'));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.echarts@3.5.4@echarts/lib/chart/Pie.js\n// module id = 296\n// module chunks = 0","\n\n    module.exports = require('./BaseBarSeries').extend({\n\n        type: 'series.bar',\n\n        dependencies: ['grid', 'polar'],\n\n        brushSelector: 'rect'\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.echarts@3.5.4@echarts/lib/chart/bar/BarSeries.js\n// module id = 297\n// module chunks = 0","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var graphic = require('../../util/graphic');\n    var helper = require('./helper');\n\n    var BAR_BORDER_WIDTH_QUERY = ['itemStyle', 'normal', 'barBorderWidth'];\n\n    // FIXME\n    // Just for compatible with ec2.\n    zrUtil.extend(require('../../model/Model').prototype, require('./barItemStyle'));\n\n    var BarView = require('../../echarts').extendChartView({\n\n        type: 'bar',\n\n        render: function (seriesModel, ecModel, api) {\n            var coordinateSystemType = seriesModel.get('coordinateSystem');\n\n            if (coordinateSystemType === 'cartesian2d') {\n                this._renderOnCartesian(seriesModel, ecModel, api);\n            }\n\n            return this.group;\n        },\n\n        dispose: zrUtil.noop,\n\n        _renderOnCartesian: function (seriesModel, ecModel, api) {\n            var group = this.group;\n            var data = seriesModel.getData();\n            var oldData = this._data;\n\n            var cartesian = seriesModel.coordinateSystem;\n            var baseAxis = cartesian.getBaseAxis();\n            var isHorizontal = baseAxis.isHorizontal();\n            var animationModel = seriesModel.isAnimationEnabled() ? seriesModel : null;\n\n            data.diff(oldData)\n                .add(function (dataIndex) {\n                    if (!data.hasValue(dataIndex)) {\n                        return;\n                    }\n\n                    var itemModel = data.getItemModel(dataIndex);\n                    var layout = getRectItemLayout(data, dataIndex, itemModel);\n                    var el = createRect(data, dataIndex, itemModel, layout, isHorizontal, animationModel);\n                    data.setItemGraphicEl(dataIndex, el);\n                    group.add(el);\n\n                    updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontal);\n                })\n                .update(function (newIndex, oldIndex) {\n                    var el = oldData.getItemGraphicEl(oldIndex);\n\n                    if (!data.hasValue(newIndex)) {\n                        group.remove(el);\n                        return;\n                    }\n\n                    var itemModel = data.getItemModel(newIndex);\n                    var layout = getRectItemLayout(data, newIndex, itemModel);\n\n                    if (el) {\n                        graphic.updateProps(el, {shape: layout}, animationModel, newIndex);\n                    }\n                    else {\n                        el = createRect(data, newIndex, itemModel, layout, isHorizontal, animationModel, true);\n                    }\n\n                    data.setItemGraphicEl(newIndex, el);\n                    // Add back\n                    group.add(el);\n\n                    updateStyle(el, data, newIndex, itemModel, layout, seriesModel, isHorizontal);\n                })\n                .remove(function (dataIndex) {\n                    var el = oldData.getItemGraphicEl(dataIndex);\n                    el && removeRect(dataIndex, animationModel, el);\n                })\n                .execute();\n\n            this._data = data;\n        },\n\n        remove: function (ecModel, api) {\n            var group = this.group;\n            var data = this._data;\n            if (ecModel.get('animation')) {\n                if (data) {\n                    data.eachItemGraphicEl(function (el) {\n                        removeRect(el.dataIndex, ecModel, el);\n                    });\n                }\n            }\n            else {\n                group.removeAll();\n            }\n        }\n    });\n\n    function createRect(data, dataIndex, itemModel, layout, isHorizontal, animationModel, isUpdate) {\n        var rect = new graphic.Rect({shape: zrUtil.extend({}, layout)});\n\n        // Animation\n        if (animationModel) {\n            var rectShape = rect.shape;\n            var animateProperty = isHorizontal ? 'height' : 'width';\n            var animateTarget = {};\n            rectShape[animateProperty] = 0;\n            animateTarget[animateProperty] = layout[animateProperty];\n            graphic[isUpdate ? 'updateProps' : 'initProps'](rect, {\n                shape: animateTarget\n            }, animationModel, dataIndex);\n        }\n\n        return rect;\n    }\n\n    function removeRect(dataIndex, animationModel, el) {\n        // Not show text when animating\n        el.style.text = '';\n        graphic.updateProps(el, {\n            shape: {\n                width: 0\n            }\n        }, animationModel, dataIndex, function () {\n            el.parent && el.parent.remove(el);\n        });\n    }\n\n    function getRectItemLayout(data, dataIndex, itemModel) {\n        var layout = data.getItemLayout(dataIndex);\n        var fixedLineWidth = getLineWidth(itemModel, layout);\n\n        // fix layout with lineWidth\n        var signX = layout.width > 0 ? 1 : -1;\n        var signY = layout.height > 0 ? 1 : -1;\n        return {\n            x: layout.x + signX * fixedLineWidth / 2,\n            y: layout.y + signY * fixedLineWidth / 2,\n            width: layout.width - signX * fixedLineWidth,\n            height: layout.height - signY * fixedLineWidth\n        };\n    }\n\n    function updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontal) {\n        var color = data.getItemVisual(dataIndex, 'color');\n        var opacity = data.getItemVisual(dataIndex, 'opacity');\n        var itemStyleModel = itemModel.getModel('itemStyle.normal');\n        var hoverStyle = itemModel.getModel('itemStyle.emphasis').getBarItemStyle();\n\n        el.setShape('r', itemStyleModel.get('barBorderRadius') || 0);\n\n        el.useStyle(zrUtil.defaults(\n            {\n                fill: color,\n                opacity: opacity\n            },\n            itemStyleModel.getBarItemStyle()\n        ));\n\n        var labelPositionOutside = isHorizontal\n            ? (layout.height > 0 ? 'bottom' : 'top')\n            : (layout.width > 0 ? 'left' : 'right');\n\n        helper.setLabel(\n            el.style, hoverStyle, itemModel, color,\n            seriesModel, dataIndex, labelPositionOutside\n        );\n\n        graphic.setHoverStyle(el, hoverStyle);\n    }\n\n    // In case width or height are too small.\n    function getLineWidth(itemModel, rawLayout) {\n        var lineWidth = itemModel.get(BAR_BORDER_WIDTH_QUERY) || 0;\n        return Math.min(lineWidth, Math.abs(rawLayout.width), Math.abs(rawLayout.height));\n    }\n\n    module.exports = BarView;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.echarts@3.5.4@echarts/lib/chart/bar/BarView.js\n// module id = 298\n// module chunks = 0","'use strict';\n\n\n    var SeriesModel = require('../../model/Series');\n    var createListFromArray = require('../helper/createListFromArray');\n\n    module.exports = SeriesModel.extend({\n\n        type: 'series.__base_bar__',\n\n        getInitialData: function (option, ecModel) {\n            if (__DEV__) {\n                var coordSys = option.coordinateSystem;\n                if (coordSys !== 'cartesian2d') {\n                    throw new Error('Bar only support cartesian2d coordinateSystem');\n                }\n            }\n            return createListFromArray(option.data, this, ecModel);\n        },\n\n        getMarkerPosition: function (value) {\n            var coordSys = this.coordinateSystem;\n            if (coordSys) {\n                // PENDING if clamp ?\n                var pt = coordSys.dataToPoint(value, true);\n                var data = this.getData();\n                var offset = data.getLayout('offset');\n                var size = data.getLayout('size');\n                var offsetIndex = coordSys.getBaseAxis().isHorizontal() ? 0 : 1;\n                pt[offsetIndex] += offset + size / 2;\n                return pt;\n            }\n            return [NaN, NaN];\n        },\n\n        defaultOption: {\n            zlevel: 0,                  // 一级层叠\n            z: 2,                       // 二级层叠\n            coordinateSystem: 'cartesian2d',\n            legendHoverLink: true,\n            // stack: null\n\n            // Cartesian coordinate system\n            // xAxisIndex: 0,\n            // yAxisIndex: 0,\n\n            // 最小高度改为0\n            barMinHeight: 0,\n\n            // barMaxWidth: null,\n            // 默认自适应\n            // barWidth: null,\n            // 柱间距离，默认为柱形宽度的30%，可设固定值\n            // barGap: '30%',\n            // 类目间柱形距离，默认为类目间距的20%，可设固定值\n            // barCategoryGap: '20%',\n            // label: {\n            //     normal: {\n            //         show: false\n            //     }\n            // },\n            itemStyle: {\n                normal: {\n                    // color: '各异'\n                },\n                emphasis: {}\n            }\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.echarts@3.5.4@echarts/lib/chart/bar/BaseBarSeries.js\n// module id = 299\n// module chunks = 0","\n\n\n    var getBarItemStyle = require('../../model/mixin/makeStyleMapper')(\n        [\n            ['fill', 'color'],\n            ['stroke', 'borderColor'],\n            ['lineWidth', 'borderWidth'],\n            // Compatitable with 2\n            ['stroke', 'barBorderColor'],\n            ['lineWidth', 'barBorderWidth'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor']\n        ]\n    );\n    module.exports = {\n        getBarItemStyle: function (excludes) {\n            var style = getBarItemStyle.call(this, excludes);\n            if (this.getBorderLineDash) {\n                var lineDash = this.getBorderLineDash();\n                lineDash && (style.lineDash = lineDash);\n            }\n            return style;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.echarts@3.5.4@echarts/lib/chart/bar/barItemStyle.js\n// module id = 300\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var graphic = require('../../util/graphic');\n\n    var helper = {};\n\n    helper.setLabel = function (\n        normalStyle, hoverStyle, itemModel, color, seriesModel, dataIndex, labelPositionOutside\n    ) {\n        var labelModel = itemModel.getModel('label.normal');\n        var hoverLabelModel = itemModel.getModel('label.emphasis');\n\n        if (labelModel.get('show')) {\n            setLabel(\n                normalStyle, labelModel, color,\n                zrUtil.retrieve(\n                    seriesModel.getFormattedLabel(dataIndex, 'normal'),\n                    seriesModel.getRawValue(dataIndex)\n                ),\n                labelPositionOutside\n            );\n        }\n        else {\n            normalStyle.text = '';\n        }\n\n        if (hoverLabelModel.get('show')) {\n            setLabel(\n                hoverStyle, hoverLabelModel, color,\n                zrUtil.retrieve(\n                    seriesModel.getFormattedLabel(dataIndex, 'emphasis'),\n                    seriesModel.getRawValue(dataIndex)\n                ),\n                labelPositionOutside\n            );\n        }\n        else {\n            hoverStyle.text = '';\n        }\n    };\n\n    function setLabel(style, model, color, labelText, labelPositionOutside) {\n        graphic.setText(style, model, color);\n        style.text = labelText;\n        if (style.textPosition === 'outside') {\n            style.textPosition = labelPositionOutside;\n        }\n    }\n\n    module.exports = helper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.echarts@3.5.4@echarts/lib/chart/bar/helper.js\n// module id = 301\n// module chunks = 0","'use strict';\n\n\n    var List = require('../../data/List');\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../../util/model');\n    var completeDimensions = require('../../data/helper/completeDimensions');\n\n    var dataSelectableMixin = require('../../component/helper/selectableMixin');\n\n    var PieSeries = require('../../echarts').extendSeriesModel({\n\n        type: 'series.pie',\n\n        // Overwrite\n        init: function (option) {\n            PieSeries.superApply(this, 'init', arguments);\n\n            // Enable legend selection for each data item\n            // Use a function instead of direct access because data reference may changed\n            this.legendDataProvider = function () {\n                return this.getRawData();\n            };\n\n            this.updateSelectedMap(option.data);\n\n            this._defaultLabelLine(option);\n        },\n\n        // Overwrite\n        mergeOption: function (newOption) {\n            PieSeries.superCall(this, 'mergeOption', newOption);\n            this.updateSelectedMap(this.option.data);\n        },\n\n        getInitialData: function (option, ecModel) {\n            var dimensions = completeDimensions(['value'], option.data);\n            var list = new List(dimensions, this);\n            list.initData(option.data);\n            return list;\n        },\n\n        // Overwrite\n        getDataParams: function (dataIndex) {\n            var data = this.getData();\n            var params = PieSeries.superCall(this, 'getDataParams', dataIndex);\n            var sum = data.getSum('value');\n            // FIXME toFixed?\n            //\n            // Percent is 0 if sum is 0\n            params.percent = !sum ? 0 : +(data.get('value', dataIndex) / sum * 100).toFixed(2);\n\n            params.$vars.push('percent');\n            return params;\n        },\n\n        _defaultLabelLine: function (option) {\n            // Extend labelLine emphasis\n            modelUtil.defaultEmphasis(option.labelLine, ['show']);\n\n            var labelLineNormalOpt = option.labelLine.normal;\n            var labelLineEmphasisOpt = option.labelLine.emphasis;\n            // Not show label line if `label.normal.show = false`\n            labelLineNormalOpt.show = labelLineNormalOpt.show\n                && option.label.normal.show;\n            labelLineEmphasisOpt.show = labelLineEmphasisOpt.show\n                && option.label.emphasis.show;\n        },\n\n        defaultOption: {\n            zlevel: 0,\n            z: 2,\n            legendHoverLink: true,\n\n            hoverAnimation: true,\n            // 默认全局居中\n            center: ['50%', '50%'],\n            radius: [0, '75%'],\n            // 默认顺时针\n            clockwise: true,\n            startAngle: 90,\n            // 最小角度改为0\n            minAngle: 0,\n            // 选中是扇区偏移量\n            selectedOffset: 10,\n\n            // If use strategy to avoid label overlapping\n            avoidLabelOverlap: true,\n            // 选择模式，默认关闭，可选single，multiple\n            // selectedMode: false,\n            // 南丁格尔玫瑰图模式，'radius'（半径） | 'area'（面积）\n            // roseType: null,\n\n            // If still show when all data zero.\n            stillShowZeroSum: true,\n\n            label: {\n                normal: {\n                    // If rotate around circle\n                    rotate: false,\n                    show: true,\n                    // 'outer', 'inside', 'center'\n                    position: 'outer'\n                    // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n                    // textStyle: null      // 默认使用全局文本样式，详见TEXTSTYLE\n                    // distance: 当position为inner时有效，为label位置到圆心的距离与圆半径(环状图为内外半径和)的比例系数\n                },\n                emphasis: {}\n            },\n            // Enabled when label.normal.position is 'outer'\n            labelLine: {\n                normal: {\n                    show: true,\n                    // 引导线两段中的第一段长度\n                    length: 15,\n                    // 引导线两段中的第二段长度\n                    length2: 15,\n                    smooth: false,\n                    lineStyle: {\n                        // color: 各异,\n                        width: 1,\n                        type: 'solid'\n                    }\n                }\n            },\n            itemStyle: {\n                normal: {\n                    borderWidth: 1\n                },\n                emphasis: {}\n            },\n\n            // Animation type canbe expansion, scale\n            animationType: 'expansion',\n\n            animationEasing: 'cubicOut',\n\n            data: []\n        }\n    });\n\n    zrUtil.mixin(PieSeries, dataSelectableMixin);\n\n    module.exports = PieSeries;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.echarts@3.5.4@echarts/lib/chart/pie/PieSeries.js\n// module id = 302\n// module chunks = 0","\n\n    var graphic = require('../../util/graphic');\n    var zrUtil = require('zrender/lib/core/util');\n\n    /**\n     * @param {module:echarts/model/Series} seriesModel\n     * @param {boolean} hasAnimation\n     * @inner\n     */\n    function updateDataSelected(uid, seriesModel, hasAnimation, api) {\n        var data = seriesModel.getData();\n        var dataIndex = this.dataIndex;\n        var name = data.getName(dataIndex);\n        var selectedOffset = seriesModel.get('selectedOffset');\n\n        api.dispatchAction({\n            type: 'pieToggleSelect',\n            from: uid,\n            name: name,\n            seriesId: seriesModel.id\n        });\n\n        data.each(function (idx) {\n            toggleItemSelected(\n                data.getItemGraphicEl(idx),\n                data.getItemLayout(idx),\n                seriesModel.isSelected(data.getName(idx)),\n                selectedOffset,\n                hasAnimation\n            );\n        });\n    }\n\n    /**\n     * @param {module:zrender/graphic/Sector} el\n     * @param {Object} layout\n     * @param {boolean} isSelected\n     * @param {number} selectedOffset\n     * @param {boolean} hasAnimation\n     * @inner\n     */\n    function toggleItemSelected(el, layout, isSelected, selectedOffset, hasAnimation) {\n        var midAngle = (layout.startAngle + layout.endAngle) / 2;\n\n        var dx = Math.cos(midAngle);\n        var dy = Math.sin(midAngle);\n\n        var offset = isSelected ? selectedOffset : 0;\n        var position = [dx * offset, dy * offset];\n\n        hasAnimation\n            // animateTo will stop revious animation like update transition\n            ? el.animate()\n                .when(200, {\n                    position: position\n                })\n                .start('bounceOut')\n            : el.attr('position', position);\n    }\n\n    /**\n     * Piece of pie including Sector, Label, LabelLine\n     * @constructor\n     * @extends {module:zrender/graphic/Group}\n     */\n    function PiePiece(data, idx) {\n\n        graphic.Group.call(this);\n\n        var sector = new graphic.Sector({\n            z2: 2\n        });\n        var polyline = new graphic.Polyline();\n        var text = new graphic.Text();\n        this.add(sector);\n        this.add(polyline);\n        this.add(text);\n\n        this.updateData(data, idx, true);\n\n        // Hover to change label and labelLine\n        function onEmphasis() {\n            polyline.ignore = polyline.hoverIgnore;\n            text.ignore = text.hoverIgnore;\n        }\n        function onNormal() {\n            polyline.ignore = polyline.normalIgnore;\n            text.ignore = text.normalIgnore;\n        }\n        this.on('emphasis', onEmphasis)\n            .on('normal', onNormal)\n            .on('mouseover', onEmphasis)\n            .on('mouseout', onNormal);\n    }\n\n    var piePieceProto = PiePiece.prototype;\n\n    function getLabelStyle(data, idx, state, labelModel, labelPosition) {\n        var textStyleModel = labelModel.getModel('textStyle');\n        var isLabelInside = labelPosition === 'inside' || labelPosition === 'inner';\n        return {\n            fill: textStyleModel.getTextColor()\n                || (isLabelInside ? '#fff' : data.getItemVisual(idx, 'color')),\n            opacity: data.getItemVisual(idx, 'opacity'),\n            textFont: textStyleModel.getFont(),\n            text: zrUtil.retrieve(\n                data.hostModel.getFormattedLabel(idx, state), data.getName(idx)\n            )\n        };\n    }\n\n    piePieceProto.updateData = function (data, idx, firstCreate) {\n\n        var sector = this.childAt(0);\n\n        var seriesModel = data.hostModel;\n        var itemModel = data.getItemModel(idx);\n        var layout = data.getItemLayout(idx);\n        var sectorShape = zrUtil.extend({}, layout);\n        sectorShape.label = null;\n\n        if (firstCreate) {\n            sector.setShape(sectorShape);\n\n            var animationType = seriesModel.getShallow('animationType');\n            if (animationType === 'scale') {\n                sector.shape.r = layout.r0;\n                graphic.initProps(sector, {\n                    shape: {\n                        r: layout.r\n                    }\n                }, seriesModel, idx);\n            }\n            // Expansion\n            else {\n                sector.shape.endAngle = layout.startAngle;\n                graphic.updateProps(sector, {\n                    shape: {\n                        endAngle: layout.endAngle\n                    }\n                }, seriesModel, idx);\n            }\n\n        }\n        else {\n            graphic.updateProps(sector, {\n                shape: sectorShape\n            }, seriesModel, idx);\n        }\n\n        // Update common style\n        var itemStyleModel = itemModel.getModel('itemStyle');\n        var visualColor = data.getItemVisual(idx, 'color');\n\n        sector.useStyle(\n            zrUtil.defaults(\n                {\n                    lineJoin: 'bevel',\n                    fill: visualColor\n                },\n                itemStyleModel.getModel('normal').getItemStyle()\n            )\n        );\n        sector.hoverStyle = itemStyleModel.getModel('emphasis').getItemStyle();\n\n        // Toggle selected\n        toggleItemSelected(\n            this,\n            data.getItemLayout(idx),\n            itemModel.get('selected'),\n            seriesModel.get('selectedOffset'),\n            seriesModel.get('animation')\n        );\n\n        function onEmphasis() {\n            // Sector may has animation of updating data. Force to move to the last frame\n            // Or it may stopped on the wrong shape\n            sector.stopAnimation(true);\n            sector.animateTo({\n                shape: {\n                    r: layout.r + 10\n                }\n            }, 300, 'elasticOut');\n        }\n        function onNormal() {\n            sector.stopAnimation(true);\n            sector.animateTo({\n                shape: {\n                    r: layout.r\n                }\n            }, 300, 'elasticOut');\n        }\n        sector.off('mouseover').off('mouseout').off('emphasis').off('normal');\n        if (itemModel.get('hoverAnimation') && seriesModel.isAnimationEnabled()) {\n            sector\n                .on('mouseover', onEmphasis)\n                .on('mouseout', onNormal)\n                .on('emphasis', onEmphasis)\n                .on('normal', onNormal);\n        }\n\n        this._updateLabel(data, idx);\n\n        graphic.setHoverStyle(this);\n    };\n\n    piePieceProto._updateLabel = function (data, idx) {\n\n        var labelLine = this.childAt(1);\n        var labelText = this.childAt(2);\n\n        var seriesModel = data.hostModel;\n        var itemModel = data.getItemModel(idx);\n        var layout = data.getItemLayout(idx);\n        var labelLayout = layout.label;\n        var visualColor = data.getItemVisual(idx, 'color');\n\n        graphic.updateProps(labelLine, {\n            shape: {\n                points: labelLayout.linePoints || [\n                    [labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y]\n                ]\n            }\n        }, seriesModel, idx);\n\n        graphic.updateProps(labelText, {\n            style: {\n                x: labelLayout.x,\n                y: labelLayout.y\n            }\n        }, seriesModel, idx);\n        labelText.attr({\n            style: {\n                textVerticalAlign: labelLayout.verticalAlign,\n                textAlign: labelLayout.textAlign,\n                textFont: labelLayout.font\n            },\n            rotation: labelLayout.rotation,\n            origin: [labelLayout.x, labelLayout.y],\n            z2: 10\n        });\n\n        var labelModel = itemModel.getModel('label.normal');\n        var labelHoverModel = itemModel.getModel('label.emphasis');\n        var labelLineModel = itemModel.getModel('labelLine.normal');\n        var labelLineHoverModel = itemModel.getModel('labelLine.emphasis');\n        var labelPosition = labelModel.get('position') || labelHoverModel.get('position');\n\n        labelText.setStyle(getLabelStyle(data, idx, 'normal', labelModel, labelPosition));\n\n        labelText.ignore = labelText.normalIgnore = !labelModel.get('show');\n        labelText.hoverIgnore = !labelHoverModel.get('show');\n\n        labelLine.ignore = labelLine.normalIgnore = !labelLineModel.get('show');\n        labelLine.hoverIgnore = !labelLineHoverModel.get('show');\n\n        // Default use item visual color\n        labelLine.setStyle({\n            stroke: visualColor,\n            opacity: data.getItemVisual(idx, 'opacity')\n        });\n        labelLine.setStyle(labelLineModel.getModel('lineStyle').getLineStyle());\n\n        labelText.hoverStyle = getLabelStyle(data, idx, 'emphasis', labelHoverModel, labelPosition);\n        labelLine.hoverStyle = labelLineHoverModel.getModel('lineStyle').getLineStyle();\n\n        var smooth = labelLineModel.get('smooth');\n        if (smooth && smooth === true) {\n            smooth = 0.4;\n        }\n        labelLine.setShape({\n            smooth: smooth\n        });\n    };\n\n    zrUtil.inherits(PiePiece, graphic.Group);\n\n\n    // Pie view\n    var Pie = require('../../view/Chart').extend({\n\n        type: 'pie',\n\n        init: function () {\n            var sectorGroup = new graphic.Group();\n            this._sectorGroup = sectorGroup;\n        },\n\n        render: function (seriesModel, ecModel, api, payload) {\n            if (payload && (payload.from === this.uid)) {\n                return;\n            }\n\n            var data = seriesModel.getData();\n            var oldData = this._data;\n            var group = this.group;\n\n            var hasAnimation = ecModel.get('animation');\n            var isFirstRender = !oldData;\n            var animationType = seriesModel.get('animationType');\n\n            var onSectorClick = zrUtil.curry(\n                updateDataSelected, this.uid, seriesModel, hasAnimation, api\n            );\n\n            var selectedMode = seriesModel.get('selectedMode');\n\n            data.diff(oldData)\n                .add(function (idx) {\n                    var piePiece = new PiePiece(data, idx);\n                    // Default expansion animation\n                    if (isFirstRender && animationType !== 'scale') {\n                        piePiece.eachChild(function (child) {\n                            child.stopAnimation(true);\n                        });\n                    }\n\n                    selectedMode && piePiece.on('click', onSectorClick);\n\n                    data.setItemGraphicEl(idx, piePiece);\n\n                    group.add(piePiece);\n                })\n                .update(function (newIdx, oldIdx) {\n                    var piePiece = oldData.getItemGraphicEl(oldIdx);\n\n                    piePiece.updateData(data, newIdx);\n\n                    piePiece.off('click');\n                    selectedMode && piePiece.on('click', onSectorClick);\n                    group.add(piePiece);\n                    data.setItemGraphicEl(newIdx, piePiece);\n                })\n                .remove(function (idx) {\n                    var piePiece = oldData.getItemGraphicEl(idx);\n                    group.remove(piePiece);\n                })\n                .execute();\n\n            if (\n                hasAnimation && isFirstRender && data.count() > 0\n                // Default expansion animation\n                && animationType !== 'scale'\n            ) {\n                var shape = data.getItemLayout(0);\n                var r = Math.max(api.getWidth(), api.getHeight()) / 2;\n\n                var removeClipPath = zrUtil.bind(group.removeClipPath, group);\n                group.setClipPath(this._createClipPath(\n                    shape.cx, shape.cy, r, shape.startAngle, shape.clockwise, removeClipPath, seriesModel\n                ));\n            }\n\n            this._data = data;\n        },\n\n        dispose: function () {},\n\n        _createClipPath: function (\n            cx, cy, r, startAngle, clockwise, cb, seriesModel\n        ) {\n            var clipPath = new graphic.Sector({\n                shape: {\n                    cx: cx,\n                    cy: cy,\n                    r0: 0,\n                    r: r,\n                    startAngle: startAngle,\n                    endAngle: startAngle,\n                    clockwise: clockwise\n                }\n            });\n\n            graphic.initProps(clipPath, {\n                shape: {\n                    endAngle: startAngle + (clockwise ? 1 : -1) * Math.PI * 2\n                }\n            }, seriesModel, cb);\n\n            return clipPath;\n        },\n\n        /**\n         * @implement\n         */\n        containPoint: function (point, seriesModel) {\n            var data = seriesModel.getData();\n            var itemLayout = data.getItemLayout(0);\n            if (itemLayout) {\n                var dx = point[0] - itemLayout.cx;\n                var dy = point[1] - itemLayout.cy;\n                var radius = Math.sqrt(dx * dx + dy * dy);\n                return radius <= itemLayout.r && radius >= itemLayout.r0;\n            }\n        }\n\n    });\n\n    module.exports = Pie;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.echarts@3.5.4@echarts/lib/chart/pie/PieView.js\n// module id = 303\n// module chunks = 0","'use strict';\n// FIXME emphasis label position is not same with normal label position\n\n\n    var textContain = require('zrender/lib/contain/text');\n\n    function adjustSingleSide(list, cx, cy, r, dir, viewWidth, viewHeight) {\n        list.sort(function (a, b) {\n            return a.y - b.y;\n        });\n\n        // 压\n        function shiftDown(start, end, delta, dir) {\n            for (var j = start; j < end; j++) {\n                list[j].y += delta;\n                if (j > start\n                    && j + 1 < end\n                    && list[j + 1].y > list[j].y + list[j].height\n                ) {\n                    shiftUp(j, delta / 2);\n                    return;\n                }\n            }\n\n            shiftUp(end - 1, delta / 2);\n        }\n\n        // 弹\n        function shiftUp(end, delta) {\n            for (var j = end; j >= 0; j--) {\n                list[j].y -= delta;\n                if (j > 0\n                    && list[j].y > list[j - 1].y + list[j - 1].height\n                ) {\n                    break;\n                }\n            }\n        }\n\n        function changeX(list, isDownList, cx, cy, r, dir) {\n            var lastDeltaX = dir > 0\n                ? isDownList                // 右侧\n                    ? Number.MAX_VALUE      // 下\n                    : 0                     // 上\n                : isDownList                // 左侧\n                    ? Number.MAX_VALUE      // 下\n                    : 0;                    // 上\n\n            for (var i = 0, l = list.length; i < l; i++) {\n                // Not change x for center label\n                if (list[i].position === 'center') {\n                    continue;\n                }\n                var deltaY = Math.abs(list[i].y - cy);\n                var length = list[i].len;\n                var length2 = list[i].len2;\n                var deltaX = (deltaY < r + length)\n                    ? Math.sqrt(\n                          (r + length + length2) * (r + length + length2)\n                          - deltaY * deltaY\n                      )\n                    : Math.abs(list[i].x - cx);\n                if (isDownList && deltaX >= lastDeltaX) {\n                    // 右下，左下\n                    deltaX = lastDeltaX - 10;\n                }\n                if (!isDownList && deltaX <= lastDeltaX) {\n                    // 右上，左上\n                    deltaX = lastDeltaX + 10;\n                }\n\n                list[i].x = cx + deltaX * dir;\n                lastDeltaX = deltaX;\n            }\n        }\n\n        var lastY = 0;\n        var delta;\n        var len = list.length;\n        var upList = [];\n        var downList = [];\n        for (var i = 0; i < len; i++) {\n            delta = list[i].y - lastY;\n            if (delta < 0) {\n                shiftDown(i, len, -delta, dir);\n            }\n            lastY = list[i].y + list[i].height;\n        }\n        if (viewHeight - lastY < 0) {\n            shiftUp(len - 1, lastY - viewHeight);\n        }\n        for (var i = 0; i < len; i++) {\n            if (list[i].y >= cy) {\n                downList.push(list[i]);\n            }\n            else {\n                upList.push(list[i]);\n            }\n        }\n        changeX(upList, false, cx, cy, r, dir);\n        changeX(downList, true, cx, cy, r, dir);\n    }\n\n    function avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight) {\n        var leftList = [];\n        var rightList = [];\n        for (var i = 0; i < labelLayoutList.length; i++) {\n            if (labelLayoutList[i].x < cx) {\n                leftList.push(labelLayoutList[i]);\n            }\n            else {\n                rightList.push(labelLayoutList[i]);\n            }\n        }\n\n        adjustSingleSide(rightList, cx, cy, r, 1, viewWidth, viewHeight);\n        adjustSingleSide(leftList, cx, cy, r, -1, viewWidth, viewHeight);\n\n        for (var i = 0; i < labelLayoutList.length; i++) {\n            var linePoints = labelLayoutList[i].linePoints;\n            if (linePoints) {\n                var dist = linePoints[1][0] - linePoints[2][0];\n                if (labelLayoutList[i].x < cx) {\n                    linePoints[2][0] = labelLayoutList[i].x + 3;\n                }\n                else {\n                    linePoints[2][0] = labelLayoutList[i].x - 3;\n                }\n                linePoints[1][1] = linePoints[2][1] = labelLayoutList[i].y;\n                linePoints[1][0] = linePoints[2][0] + dist;\n            }\n        }\n    }\n\n    module.exports = function (seriesModel, r, viewWidth, viewHeight) {\n        var data = seriesModel.getData();\n        var labelLayoutList = [];\n        var cx;\n        var cy;\n        var hasLabelRotate = false;\n\n        data.each(function (idx) {\n            var layout = data.getItemLayout(idx);\n\n            var itemModel = data.getItemModel(idx);\n            var labelModel = itemModel.getModel('label.normal');\n            // Use position in normal or emphasis\n            var labelPosition = labelModel.get('position') || itemModel.get('label.emphasis.position');\n\n            var labelLineModel = itemModel.getModel('labelLine.normal');\n            var labelLineLen = labelLineModel.get('length');\n            var labelLineLen2 = labelLineModel.get('length2');\n\n            var midAngle = (layout.startAngle + layout.endAngle) / 2;\n            var dx = Math.cos(midAngle);\n            var dy = Math.sin(midAngle);\n\n            var textX;\n            var textY;\n            var linePoints;\n            var textAlign;\n\n            cx = layout.cx;\n            cy = layout.cy;\n\n            var isLabelInside = labelPosition === 'inside' || labelPosition === 'inner';\n            if (labelPosition === 'center') {\n                textX = layout.cx;\n                textY = layout.cy;\n                textAlign = 'center';\n            }\n            else {\n                var x1 = (isLabelInside ? (layout.r + layout.r0) / 2 * dx : layout.r * dx) + cx;\n                var y1 = (isLabelInside ? (layout.r + layout.r0) / 2 * dy : layout.r * dy) + cy;\n\n                textX = x1 + dx * 3;\n                textY = y1 + dy * 3;\n\n                if (!isLabelInside) {\n                    // For roseType\n                    var x2 = x1 + dx * (labelLineLen + r - layout.r);\n                    var y2 = y1 + dy * (labelLineLen + r - layout.r);\n                    var x3 = x2 + ((dx < 0 ? -1 : 1) * labelLineLen2);\n                    var y3 = y2;\n\n                    textX = x3 + (dx < 0 ? -5 : 5);\n                    textY = y3;\n                    linePoints = [[x1, y1], [x2, y2], [x3, y3]];\n                }\n\n                textAlign = isLabelInside ? 'center' : (dx > 0 ? 'left' : 'right');\n            }\n            var font = labelModel.getModel('textStyle').getFont();\n\n            var labelRotate = labelModel.get('rotate')\n                ? (dx < 0 ? -midAngle + Math.PI : -midAngle) : 0;\n            var text = seriesModel.getFormattedLabel(idx, 'normal')\n                        || data.getName(idx);\n            var textRect = textContain.getBoundingRect(\n                text, font, textAlign, 'top'\n            );\n            hasLabelRotate = !!labelRotate;\n            layout.label = {\n                x: textX,\n                y: textY,\n                position: labelPosition,\n                height: textRect.height,\n                len: labelLineLen,\n                len2: labelLineLen2,\n                linePoints: linePoints,\n                textAlign: textAlign,\n                verticalAlign: 'middle',\n                font: font,\n                rotation: labelRotate\n            };\n\n            // Not layout the inside label\n            if (!isLabelInside) {\n                labelLayoutList.push(layout.label);\n            }\n        });\n        if (!hasLabelRotate && seriesModel.get('avoidLabelOverlap')) {\n            avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.echarts@3.5.4@echarts/lib/chart/pie/labelLayout.js\n// module id = 304\n// module chunks = 0","// TODO minAngle\n\n\n\n    var numberUtil = require('../../util/number');\n    var parsePercent = numberUtil.parsePercent;\n    var labelLayout = require('./labelLayout');\n    var zrUtil = require('zrender/lib/core/util');\n\n    var PI2 = Math.PI * 2;\n    var RADIAN = Math.PI / 180;\n\n    module.exports = function (seriesType, ecModel, api, payload) {\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n            var center = seriesModel.get('center');\n            var radius = seriesModel.get('radius');\n\n            if (!zrUtil.isArray(radius)) {\n                radius = [0, radius];\n            }\n            if (!zrUtil.isArray(center)) {\n                center = [center, center];\n            }\n\n            var width = api.getWidth();\n            var height = api.getHeight();\n            var size = Math.min(width, height);\n            var cx = parsePercent(center[0], width);\n            var cy = parsePercent(center[1], height);\n            var r0 = parsePercent(radius[0], size / 2);\n            var r = parsePercent(radius[1], size / 2);\n\n            var data = seriesModel.getData();\n\n            var startAngle = -seriesModel.get('startAngle') * RADIAN;\n\n            var minAngle = seriesModel.get('minAngle') * RADIAN;\n\n            var sum = data.getSum('value');\n            // Sum may be 0\n            var unitRadian = Math.PI / (sum || data.count()) * 2;\n\n            var clockwise = seriesModel.get('clockwise');\n\n            var roseType = seriesModel.get('roseType');\n            var stillShowZeroSum = seriesModel.get('stillShowZeroSum');\n\n            // [0...max]\n            var extent = data.getDataExtent('value');\n            extent[0] = 0;\n\n            // In the case some sector angle is smaller than minAngle\n            var restAngle = PI2;\n            var valueSumLargerThanMinAngle = 0;\n\n            var currentAngle = startAngle;\n\n            var dir = clockwise ? 1 : -1;\n            data.each('value', function (value, idx) {\n                var angle;\n                if (isNaN(value)) {\n                    data.setItemLayout(idx, {\n                        angle: NaN,\n                        startAngle: NaN,\n                        endAngle: NaN,\n                        clockwise: clockwise,\n                        cx: cx,\n                        cy: cy,\n                        r0: r0,\n                        r: roseType\n                            ? NaN\n                            : r\n                    });\n                    return;\n                }\n\n                // FIXME 兼容 2.0 但是 roseType 是 area 的时候才是这样？\n                if (roseType !== 'area') {\n                    angle = (sum === 0 && stillShowZeroSum)\n                        ? unitRadian : (value * unitRadian);\n                }\n                else {\n                    angle = PI2 / (data.count() || 1);\n                }\n\n                if (angle < minAngle) {\n                    angle = minAngle;\n                    restAngle -= minAngle;\n                }\n                else {\n                    valueSumLargerThanMinAngle += value;\n                }\n\n                var endAngle = currentAngle + dir * angle;\n                data.setItemLayout(idx, {\n                    angle: angle,\n                    startAngle: currentAngle,\n                    endAngle: endAngle,\n                    clockwise: clockwise,\n                    cx: cx,\n                    cy: cy,\n                    r0: r0,\n                    r: roseType\n                        ? numberUtil.linearMap(value, extent, [r0, r])\n                        : r\n                });\n\n                currentAngle = endAngle;\n            }, true);\n\n            // Some sector is constrained by minAngle\n            // Rest sectors needs recalculate angle\n            if (restAngle < PI2) {\n                // Average the angle if rest angle is not enough after all angles is\n                // Constrained by minAngle\n                if (restAngle <= 1e-3) {\n                    var angle = PI2 / data.count();\n                    data.each(function (idx) {\n                        var layout = data.getItemLayout(idx);\n                        layout.startAngle = startAngle + dir * idx * angle;\n                        layout.endAngle = startAngle + dir * (idx + 1) * angle;\n                    });\n                }\n                else {\n                    unitRadian = restAngle / valueSumLargerThanMinAngle;\n                    currentAngle = startAngle;\n                    data.each('value', function (value, idx) {\n                        var layout = data.getItemLayout(idx);\n                        var angle = layout.angle === minAngle\n                            ? minAngle : value * unitRadian;\n                        layout.startAngle = currentAngle;\n                        layout.endAngle = currentAngle + dir * angle;\n                        currentAngle += dir * angle;\n                    });\n                }\n            }\n\n            labelLayout(seriesModel, r, width, height);\n        });\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.echarts@3.5.4@echarts/lib/chart/pie/pieLayout.js\n// module id = 305\n// module chunks = 0","'use strict';\n// TODO boundaryGap\n\n\n    require('../coord/cartesian/AxisModel');\n\n    require('./axis/CartesianAxisView');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.echarts@3.5.4@echarts/lib/component/axis.js\n// module id = 306\n// module chunks = 0","\n\n    var echarts = require('../echarts');\n    var axisPointerModelHelper = require('./axisPointer/modelHelper');\n    var axisTrigger = require('./axisPointer/axisTrigger');\n    var zrUtil = require('zrender/lib/core/util');\n\n    require('./axisPointer/AxisPointerModel');\n    require('./axisPointer/AxisPointerView');\n\n    // CartesianAxisPointer is not supposed to be required here. But consider\n    // echarts.simple.js and online build tooltip, which only require gridSimple,\n    // CartesianAxisPointer should be able to required somewhere.\n    require('./axisPointer/CartesianAxisPointer');\n\n    echarts.registerPreprocessor(function (option) {\n        // Always has a global axisPointerModel for default setting.\n        if (option) {\n            (!option.axisPointer || option.axisPointer.length === 0)\n                && (option.axisPointer = {});\n\n            var link = option.axisPointer.link;\n            // Normalize to array to avoid object mergin. But if link\n            // is not set, remain null/undefined, otherwise it will\n            // override existent link setting.\n            if (link && !zrUtil.isArray(link)) {\n                option.axisPointer.link = [link];\n            }\n        }\n    });\n\n    // This process should proformed after coordinate systems created\n    // and series data processed. So put it on statistic processing stage.\n    echarts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, function (ecModel, api) {\n        // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n        // allAxesInfo should be updated when setOption performed.\n        ecModel.getComponent('axisPointer').coordSysAxesInfo\n            = axisPointerModelHelper.collect(ecModel, api);\n    });\n\n    // Broadcast to all views.\n    echarts.registerAction({\n        type: 'updateAxisPointer',\n        event: 'updateAxisPointer',\n        update: ':updateAxisPointer'\n    }, function (payload, ecModel, api) {\n        var outputFinder = axisTrigger(\n            ecModel.getComponent('axisPointer').coordSysAxesInfo,\n            payload.currTrigger,\n            [payload.x, payload.y],\n            payload,\n            payload.dispatchAction || zrUtil.bind(api.dispatchAction, api),\n            ecModel,\n            api,\n            payload.tooltipOption,\n            payload.highDownKey\n        );\n\n        return outputFinder;\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.echarts@3.5.4@echarts/lib/component/axisPointer.js\n// module id = 307\n// module chunks = 0","\n\n    var echarts = require('../../echarts');\n\n    var AxisPointerModel = echarts.extendComponentModel({\n\n        type: 'axisPointer',\n\n        coordSysAxesInfo: null,\n\n        defaultOption: {\n            // 'auto' means that show when triggered by tooltip or handle.\n            show: 'auto',\n            // 'click' | 'mousemove' | 'none'\n            triggerOn: null, // set default in AxisPonterView.js\n\n            zlevel: 0,\n            z: 50,\n\n            type: 'line',\n            // axispointer triggered by tootip determine snap automatically,\n            // see `modelHelper`.\n            snap: false,\n            triggerTooltip: true,\n\n            value: null,\n            status: null, // Init value depends on whether handle is used.\n\n            // [group0, group1, ...]\n            // Each group can be: {\n            //      mapper: function () {},\n            //      singleTooltip: 'multiple',  // 'multiple' or 'single'\n            //      xAxisId: ...,\n            //      yAxisName: ...,\n            //      angleAxisIndex: ...\n            // }\n            // mapper: can be ignored.\n            //      input: {axisInfo, value}\n            //      output: {axisInfo, value}\n            link: [],\n\n            // Do not set 'auto' here, otherwise global animation: false\n            // will not effect at this axispointer.\n            animation: null,\n            animationDurationUpdate: 200,\n\n            lineStyle: {\n                color: '#aaa',\n                width: 1,\n                type: 'solid'\n            },\n\n            shadowStyle: {\n                color: 'rgba(150,150,150,0.3)'\n            },\n\n            label: {\n                show: true,\n                formatter: null, // string | Function\n                precision: 'auto', // Or a number like 0, 1, 2 ...\n                margin: 3,\n                textStyle: {\n                    color: '#fff'\n                },\n                padding: [5, 7, 5, 7],\n                backgroundColor: 'auto', // default: axis line color\n                borderColor: null,\n                borderWidth: 0,\n                shadowBlur: 3,\n                shadowColor: '#aaa'\n                // Considering applicability, common style should\n                // better not have shadowOffset.\n                // shadowOffsetX: 0,\n                // shadowOffsetY: 2\n            },\n\n            handle: {\n                show: false,\n                icon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7v-1.2h6.6z M13.3,22H6.7v-1.2h6.6z M13.3,19.6H6.7v-1.2h6.6z', // jshint ignore:line\n                size: 45,\n                // handle margin is from symbol center to axis, which is stable when circular move.\n                margin: 50,\n                // color: '#1b8bbd'\n                // color: '#2f4554'\n                color: '#333',\n                shadowBlur: 3,\n                shadowColor: '#aaa',\n                shadowOffsetX: 0,\n                shadowOffsetY: 2,\n\n                // For mobile performance\n                throttle: 40\n            }\n        }\n\n    });\n\n    module.exports = AxisPointerModel;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.echarts@3.5.4@echarts/lib/component/axisPointer/AxisPointerModel.js\n// module id = 308\n// module chunks = 0","\n\n    var globalListener = require('./globalListener');\n\n    var AxisPonterView = require('../../echarts').extendComponentView({\n\n        type: 'axisPointer',\n\n        render: function (globalAxisPointerModel, ecModel, api) {\n            var globalTooltipModel = ecModel.getComponent('tooltip');\n            var triggerOn = globalAxisPointerModel.get('triggerOn')\n                || (globalTooltipModel && globalTooltipModel.get('triggerOn') || 'mousemove|click');\n\n            // Register global listener in AxisPointerView to enable\n            // AxisPointerView to be independent to Tooltip.\n            globalListener.register(\n                'axisPointer',\n                api,\n                function (currTrigger, e, dispatchAction) {\n                    // If 'none', it is not controlled by mouse totally.\n                    if (triggerOn !== 'none'\n                        && (currTrigger === 'leave' || triggerOn.indexOf(currTrigger) >= 0)\n                    ) {\n                        dispatchAction({\n                            type: 'updateAxisPointer',\n                            currTrigger: currTrigger,\n                            x: e && e.offsetX,\n                            y: e && e.offsetY\n                        });\n                    }\n                }\n            );\n        },\n\n        /**\n         * @override\n         */\n        remove: function (ecModel, api) {\n            globalListener.disopse(api.getZr(), 'axisPointer');\n            AxisPonterView.superApply(this._model, 'remove', arguments);\n        },\n\n        /**\n         * @override\n         */\n        dispose: function (ecModel, api) {\n            globalListener.unregister('axisPointer', api);\n            AxisPonterView.superApply(this._model, 'dispose', arguments);\n        }\n\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.echarts@3.5.4@echarts/lib/component/axisPointer/AxisPointerView.js\n// module id = 309\n// module chunks = 0","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var clazzUtil = require('../../util/clazz');\n    var graphic = require('../../util/graphic');\n    var get = require('../../util/model').makeGetter();\n    var axisPointerModelHelper = require('./modelHelper');\n    var eventTool = require('zrender/lib/core/event');\n    var throttle = require('../../util/throttle');\n\n    var clone = zrUtil.clone;\n    var bind = zrUtil.bind;\n\n    /**\n     * Base axis pointer class in 2D.\n     * Implemenents {module:echarts/component/axis/IAxisPointer}.\n     */\n    function BaseAxisPointer () {\n    }\n\n    BaseAxisPointer.prototype = {\n\n        /**\n         * @private\n         */\n        _group: null,\n\n        /**\n         * @private\n         */\n        _lastGraphicKey: null,\n\n        /**\n         * @private\n         */\n        _handle: null,\n\n        /**\n         * @private\n         */\n        _dragging: false,\n\n        /**\n         * @private\n         */\n        _lastValue: null,\n\n        /**\n         * @private\n         */\n        _lastStatus: null,\n\n        /**\n         * @private\n         */\n        _payloadInfo: null,\n\n        /**\n         * In px, arbitrary value. Do not set too small,\n         * no animation is ok for most cases.\n         * @protected\n         */\n        animationThreshold: 15,\n\n        /**\n         * @implement\n         */\n        render: function (axisModel, axisPointerModel, api, forceRender) {\n            var value = axisPointerModel.get('value');\n            var status = axisPointerModel.get('status');\n\n            // Bind them to `this`, not in closure, otherwise they will not\n            // be replaced when user calling setOption in not merge mode.\n            this._axisModel = axisModel;\n            this._axisPointerModel = axisPointerModel;\n            this._api = api;\n\n            // Optimize: `render` will be called repeatly during mouse move.\n            // So it is power consuming if performing `render` each time,\n            // especially on mobile device.\n            if (!forceRender\n                && this._lastValue === value\n                && this._lastStatus === status\n            ) {\n                return;\n            }\n            this._lastValue = value;\n            this._lastStatus = status;\n\n            var group = this._group;\n            var handle = this._handle;\n\n            if (!status || status === 'hide') {\n                // Do not clear here, for animation better.\n                group && group.hide();\n                handle && handle.hide();\n                return;\n            }\n            group && group.show();\n            handle && handle.show();\n\n            // Otherwise status is 'show'\n            var elOption = {};\n            this.makeElOption(elOption, value, axisModel, axisPointerModel, api);\n\n            // Enable change axis pointer type.\n            var graphicKey = elOption.graphicKey;\n            if (graphicKey !== this._lastGraphicKey) {\n                this.clear(api);\n            }\n            this._lastGraphicKey = graphicKey;\n\n            var moveAnimation = this._moveAnimation =\n                this.determineAnimation(axisModel, axisPointerModel);\n\n            if (!group) {\n                group = this._group = new graphic.Group();\n                this.createPointerEl(group, elOption, axisModel, axisPointerModel);\n                this.createLabelEl(group, elOption, axisModel, axisPointerModel);\n                api.getZr().add(group);\n            }\n            else {\n                var doUpdateProps = zrUtil.curry(updateProps, axisPointerModel, moveAnimation);\n                this.updatePointerEl(group, elOption, doUpdateProps, axisPointerModel);\n                this.updateLabelEl(group, elOption, doUpdateProps, axisPointerModel);\n            }\n\n            updateMandatoryProps(group, axisPointerModel, true);\n\n            this._renderHandle(value);\n        },\n\n        /**\n         * @implement\n         */\n        remove: function (api) {\n            this.clear(api);\n        },\n\n        /**\n         * @implement\n         */\n        dispose: function (api) {\n            this.clear(api);\n        },\n\n        /**\n         * @protected\n         */\n        determineAnimation: function (axisModel, axisPointerModel) {\n            var animation = axisPointerModel.get('animation');\n            var axis = axisModel.axis;\n            var isCategoryAxis = axis.type === 'category';\n            var useSnap = axisPointerModel.get('snap');\n\n            // Value axis without snap always do not snap.\n            if (!useSnap && !isCategoryAxis) {\n                return false;\n            }\n\n            if (animation === 'auto' || animation == null) {\n                var animationThreshold = this.animationThreshold;\n                if (isCategoryAxis && axis.getBandWidth() > animationThreshold) {\n                    return true;\n                }\n\n                // It is important to auto animation when snap used. Consider if there is\n                // a dataZoom, animation will be disabled when too many points exist, while\n                // it will be enabled for better visual effect when little points exist.\n                if (useSnap) {\n                    var seriesDataCount = axisPointerModelHelper.getAxisInfo(axisModel).seriesDataCount;\n                    var axisExtent = axis.getExtent();\n                    // Approximate band width\n                    return Math.abs(axisExtent[0] - axisExtent[1]) / seriesDataCount > animationThreshold;\n                }\n\n                return false;\n            }\n\n            return animation === true;\n        },\n\n        /**\n         * add {pointer, label, graphicKey} to elOption\n         * @protected\n         */\n        makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n            // Shoule be implemenented by sub-class.\n        },\n\n        /**\n         * @protected\n         */\n        createPointerEl: function (group, elOption, axisModel, axisPointerModel) {\n            var pointerOption = elOption.pointer;\n            if (pointerOption) {\n                var pointerEl = get(group).pointerEl = new graphic[pointerOption.type](\n                    clone(elOption.pointer)\n                );\n                group.add(pointerEl);\n            }\n        },\n\n        /**\n         * @protected\n         */\n        createLabelEl: function (group, elOption, axisModel, axisPointerModel) {\n            if (elOption.label) {\n                var labelEl = get(group).labelEl = new graphic.Rect(\n                    clone(elOption.label)\n                );\n\n                group.add(labelEl);\n                updateLabelShowHide(labelEl, axisPointerModel);\n            }\n        },\n\n        /**\n         * @protected\n         */\n        updatePointerEl: function (group, elOption, updateProps) {\n            var pointerEl = get(group).pointerEl;\n            if (pointerEl) {\n                pointerEl.setStyle(elOption.pointer.style);\n                updateProps(pointerEl, {shape: elOption.pointer.shape});\n            }\n        },\n\n        /**\n         * @protected\n         */\n        updateLabelEl: function (group, elOption, updateProps, axisPointerModel) {\n            var labelEl = get(group).labelEl;\n            if (labelEl) {\n                labelEl.setStyle(elOption.label.style);\n                updateProps(labelEl, {\n                    // Consider text length change in vertical axis, animation should\n                    // be used on shape, otherwise the effect will be weird.\n                    shape: elOption.label.shape,\n                    position: elOption.label.position\n                });\n\n                updateLabelShowHide(labelEl, axisPointerModel);\n            }\n        },\n\n        /**\n         * @private\n         */\n        _renderHandle: function (value) {\n            if (this._dragging || !this.updateHandleTransform) {\n                return;\n            }\n\n            var axisPointerModel = this._axisPointerModel;\n            var zr = this._api.getZr();\n            var handle = this._handle;\n            var handleModel = axisPointerModel.getModel('handle');\n\n            var status = axisPointerModel.get('status');\n            if (!handleModel.get('show') || !status || status === 'hide') {\n                handle && zr.remove(handle);\n                this._handle = null;\n                return;\n            }\n\n            var isInit;\n            if (!this._handle) {\n                isInit = true;\n                handle = this._handle = createIcon(handleModel, {\n                    onmousemove: function (e) {\n                        // Fot mobile devicem, prevent screen slider on the button.\n                        eventTool.stop(e.event);\n                    },\n                    onmousedown: bind(this._onHandleDragMove, this, 0, 0),\n                    drift: bind(this._onHandleDragMove, this),\n                    ondragend: bind(this._onHandleDragEnd, this)\n                });\n                zr.add(handle);\n            }\n\n            updateMandatoryProps(handle, axisPointerModel, false);\n\n            // update style\n            var includeStyles = [\n                'color', 'borderColor', 'borderWidth', 'opacity',\n                'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY'\n            ];\n            handle.setStyle(handleModel.getItemStyle(null, includeStyles));\n\n            // update position\n            var handleSize = handleModel.get('size');\n            if (!zrUtil.isArray(handleSize)) {\n                handleSize = [handleSize, handleSize];\n            }\n            handle.attr('scale', [handleSize[0] / 2, handleSize[1] / 2]);\n\n            throttle.createOrUpdate(\n                this,\n                '_doDispatchAxisPointer',\n                handleModel.get('throttle') || 0,\n                'fixRate'\n            );\n\n            this._moveHandleToValue(value, isInit);\n        },\n\n        /**\n         * @private\n         */\n        _moveHandleToValue: function (value, isInit) {\n            updateProps(\n                this._axisPointerModel,\n                !isInit && this._moveAnimation,\n                this._handle,\n                getHandleTransProps(this.getHandleTransform(\n                    value, this._axisModel, this._axisPointerModel\n                ))\n            );\n        },\n\n        /**\n         * @private\n         */\n        _onHandleDragMove: function (dx, dy) {\n            var handle = this._handle;\n            if (!handle) {\n                return;\n            }\n\n            this._dragging = true;\n\n            // Persistent for throttle.\n            var trans = this.updateHandleTransform(\n                getHandleTransProps(handle),\n                [dx, dy],\n                this._axisModel,\n                this._axisPointerModel\n            );\n            this._payloadInfo = trans;\n\n            handle.stopAnimation();\n            handle.attr(getHandleTransProps(trans));\n            get(handle).lastProp = null;\n\n            this._doDispatchAxisPointer();\n        },\n\n        /**\n         * Throttled method.\n         * @private\n         */\n        _doDispatchAxisPointer: function () {\n            var handle = this._handle;\n            if (!handle) {\n                return;\n            }\n\n            var payloadInfo = this._payloadInfo;\n            var payload = {\n                type: 'updateAxisPointer',\n                x: payloadInfo.cursorPoint[0],\n                y: payloadInfo.cursorPoint[1],\n                tooltipOption: payloadInfo.tooltipOption,\n                highDownKey: 'axisPointerHandle'\n            };\n            var axis = this._axisModel.axis;\n            payload[axis.dim + 'AxisId'] = this._axisModel.id;\n            this._api.dispatchAction(payload);\n        },\n\n        /**\n         * @private\n         */\n        _onHandleDragEnd: function (moveAnimation) {\n            this._dragging = false;\n            var handle = this._handle;\n            if (!handle) {\n                return;\n            }\n\n            var value = this._axisPointerModel.get('value');\n            // Consider snap or categroy axis, handle may be not consistent with\n            // axisPointer. So move handle to align the exact value position when\n            // drag ended.\n            this._moveHandleToValue(value);\n\n            // For the effect: tooltip will be shown when finger holding on handle\n            // button, and will be hidden after finger left handle button.\n            this._api.dispatchAction({\n                type: 'hideTip'\n            });\n        },\n\n        /**\n         * Should be implemenented by sub-class if support `handle`.\n         * @protected\n         * @param {number} value\n         * @param {module:echarts/model/Model} axisModel\n         * @param {module:echarts/model/Model} axisPointerModel\n         * @return {Object} {position: [x, y], rotation: 0}\n         */\n        getHandleTransform: null,\n\n        /**\n         * * Should be implemenented by sub-class if support `handle`.\n         * @protected\n         * @param {Object} transform {position, rotation}\n         * @param {Array.<number>} delta [dx, dy]\n         * @param {module:echarts/model/Model} axisModel\n         * @param {module:echarts/model/Model} axisPointerModel\n         * @return {Object} {position: [x, y], rotation: 0, cursorPoint: [x, y]}\n         */\n        updateHandleTransform: null,\n\n        /**\n         * @private\n         */\n        clear: function (api) {\n            this._lastValue = null;\n            this._lastStatus = null;\n\n            var zr = api.getZr();\n            var group = this._group;\n            var handle = this._handle;\n            if (zr && group) {\n                this._lastGraphicKey = null;\n                group && zr.remove(group);\n                handle && zr.remove(handle);\n                this._group = null;\n                this._handle = null;\n                this._payloadInfo = null;\n            }\n        },\n\n        /**\n         * @protected\n         */\n        doClear: function () {\n            // Implemented by sub-class if necessary.\n        },\n\n        /**\n         * @protected\n         * @param {Array.<number>} xy\n         * @param {Array.<number>} wh\n         * @param {number} [xDimIndex=0] or 1\n         */\n        buildLabel: function (xy, wh, xDimIndex) {\n            xDimIndex = xDimIndex || 0;\n            return {\n                x: xy[xDimIndex],\n                y: xy[1 - xDimIndex],\n                width: wh[xDimIndex],\n                height: wh[1 - xDimIndex]\n            };\n        }\n    };\n\n    BaseAxisPointer.prototype.constructor = BaseAxisPointer;\n\n\n    function updateProps(animationModel, moveAnimation, el, props) {\n        // Animation optimize.\n        if (!propsEqual(get(el).lastProp, props)) {\n            get(el).lastProp = props;\n            moveAnimation\n                ? graphic.updateProps(el, props, animationModel)\n                : (el.stopAnimation(), el.attr(props));\n        }\n    }\n\n    function propsEqual(lastProps, newProps) {\n        if (zrUtil.isObject(lastProps) && zrUtil.isObject(newProps)) {\n            var equals = true;\n            zrUtil.each(newProps, function (item, key) {\n                equals &= propsEqual(lastProps[key], item);\n            });\n            return !!equals;\n        }\n        else {\n            return lastProps === newProps;\n        }\n    }\n\n    function updateLabelShowHide(labelEl, axisPointerModel) {\n        labelEl[axisPointerModel.get('label.show') ? 'show' : 'hide']();\n    }\n\n    function getHandleTransProps(trans) {\n        return {\n            position: trans.position.slice(),\n            rotation: trans.rotation || 0\n        };\n    }\n\n    function createIcon(handleModel, handlers) {\n        var iconStr = handleModel.get('icon');\n        var style = {\n            x: -1, y: -1, width: 2, height: 2\n        };\n        var opt = zrUtil.extend({\n            style: {\n                strokeNoScale: true\n            },\n            rectHover: true,\n            cursor: 'move',\n            draggable: true\n        }, handlers);\n\n        return iconStr.indexOf('image://') === 0\n            ? (\n                style.image = iconStr.slice(8),\n                opt.style = style,\n                new graphic.Image(opt)\n            )\n            : graphic.makePath(\n                iconStr.replace('path://', ''),\n                opt,\n                style,\n                'center'\n            );\n    }\n\n    function updateMandatoryProps(group, axisPointerModel, silent) {\n        var z = axisPointerModel.get('z');\n        var zlevel = axisPointerModel.get('zlevel');\n\n        group && group.traverse(function (el) {\n            if (el.type !== 'group') {\n                z != null && (el.z = z);\n                zlevel != null && (el.zlevel = zlevel);\n                el.silent = silent;\n            }\n        });\n    }\n\n    clazzUtil.enableClassExtend(BaseAxisPointer);\n\n    module.exports = BaseAxisPointer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.echarts@3.5.4@echarts/lib/component/axisPointer/BaseAxisPointer.js\n// module id = 310\n// module chunks = 0","'use strict';\n\n\n    var graphic = require('../../util/graphic');\n    var BaseAxisPointer = require('./BaseAxisPointer');\n    var viewHelper = require('./viewHelper');\n    var cartesianAxisHelper = require('../axis/cartesianAxisHelper');\n    var AxisView = require('../axis/AxisView');\n\n    var CartesianAxisPointer = BaseAxisPointer.extend({\n\n        /**\n         * @override\n         */\n        makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n            var axis = axisModel.axis;\n            var grid = axis.grid;\n            var axisPointerType = axisPointerModel.get('type');\n            var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n            var pixelValue = axis.toGlobalCoord(axis.dataToCoord(value, true));\n\n            if (axisPointerType && axisPointerType !== 'none') {\n                var elStyle = viewHelper.buildElStyle(axisPointerModel);\n                var pointerOption = pointerShapeBuilder[axisPointerType](\n                    axis, pixelValue, otherExtent, elStyle\n                );\n                pointerOption.style = elStyle;\n                elOption.graphicKey = pointerOption.type;\n                elOption.pointer = pointerOption;\n            }\n\n            var layoutInfo = cartesianAxisHelper.layout(grid.model, axisModel);\n            viewHelper.buildCartesianSingleLabelElOption(\n                value, elOption, layoutInfo, axisModel, axisPointerModel, api\n            );\n        },\n\n        /**\n         * @override\n         */\n        getHandleTransform: function (value, axisModel, axisPointerModel) {\n            var layoutInfo = cartesianAxisHelper.layout(axisModel.axis.grid.model, axisModel, {\n                labelInside: false\n            });\n            layoutInfo.labelMargin = axisPointerModel.get('handle.margin');\n            return {\n                position: viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n                rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\n            };\n        },\n\n        /**\n         * @override\n         */\n        updateHandleTransform: function (transform, delta, axisModel, axisPointerModel) {\n            var axis = axisModel.axis;\n            var grid = axis.grid;\n            var axisExtent = axis.getGlobalExtent(true);\n            var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n            var dimIndex = axis.dim === 'x' ? 0 : 1;\n\n            var currPosition = transform.position;\n            currPosition[dimIndex] += delta[dimIndex];\n            currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\n            currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\n\n            var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\n            var cursorPoint = [cursorOtherValue, cursorOtherValue];\n            cursorPoint[dimIndex] = currPosition[dimIndex];\n\n            // Make tooltip do not overlap axisPointer and in the middle of the grid.\n            var tooltipOptions = [{verticalAlign: 'middle'}, {align: 'center'}];\n\n            return {\n                position: currPosition,\n                rotation: transform.rotation,\n                cursorPoint: cursorPoint,\n                tooltipOption: tooltipOptions[dimIndex]\n            };\n        }\n\n    });\n\n    function getCartesian(grid, axis) {\n        var opt = {};\n        opt[axis.dim + 'AxisIndex'] = axis.index;\n        return grid.getCartesian(opt);\n    }\n\n    var pointerShapeBuilder = {\n\n        line: function (axis, pixelValue, otherExtent, elStyle) {\n            var targetShape = viewHelper.makeLineShape(\n                [pixelValue, otherExtent[0]],\n                [pixelValue, otherExtent[1]],\n                getAxisDimIndex(axis)\n            );\n            graphic.subPixelOptimizeLine({\n                shape: targetShape,\n                style: elStyle\n            });\n            return {\n                type: 'Line',\n                shape: targetShape\n            };\n        },\n\n        shadow: function (axis, pixelValue, otherExtent, elStyle) {\n            var bandWidth = axis.getBandWidth();\n            var span = otherExtent[1] - otherExtent[0];\n            return {\n                type: 'Rect',\n                shape: viewHelper.makeRectShape(\n                    [pixelValue - bandWidth / 2, otherExtent[0]],\n                    [bandWidth, span],\n                    getAxisDimIndex(axis)\n                )\n            };\n        }\n    };\n\n    function getAxisDimIndex(axis) {\n        return axis.dim === 'x' ? 0 : 1;\n    }\n\n    AxisView.registerAxisPointerClass('CartesianAxisPointer', CartesianAxisPointer);\n\n    module.exports = CartesianAxisPointer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.echarts@3.5.4@echarts/lib/component/axisPointer/CartesianAxisPointer.js\n// module id = 311\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../../util/model');\n    var modelHelper = require('./modelHelper');\n    var findPointFromSeries = require('./findPointFromSeries');\n\n    var each = zrUtil.each;\n    var curry = zrUtil.curry;\n    var get = modelUtil.makeGetter();\n\n    /**\n     * Basic logic: check all axis, if they do not demand show/highlight,\n     * then hide/downplay them.\n     *\n     * @param {Object} coordSysAxesInfo\n     * @param {string} [currTrigger] 'click' | 'mousemove' | 'leave'\n     * @param {Array.<number>} [point] x and y, which are mandatory, specify a point to\n     *              tigger axisPointer and tooltip.\n     * @param {Object} [finder] {xAxisId: ...[], yAxisName: ...[], angleAxisIndex: ...[]}\n     *              These properties, which are optional, restrict target axes.\n     * @param {Function} dispatchAction\n     * @param {module:echarts/ExtensionAPI} api\n     * @param {Object} [tooltipOption]\n     * @param {string} [highDownKey]\n     * @return {Object} content of event obj for echarts.connect.\n     */\n    function axisTrigger(\n        coordSysAxesInfo, currTrigger, point, finder, dispatchAction,\n        ecModel, api, tooltipOption, highDownKey\n    ) {\n        finder = finder || {};\n        if (!point || point[0] == null || point[1] == null) {\n            point = findPointFromSeries({\n                seriesIndex: finder.seriesIndex,\n                // Do not use dataIndexInside from other ec instance.\n                // FIXME: auto detect it?\n                dataIndex: finder.dataIndex\n            }, ecModel).point;\n        }\n\n        var axesInfo = coordSysAxesInfo.axesInfo;\n        var shouldHide = currTrigger === 'leave' || illegalPoint(point);\n        var outputFinder = {};\n\n        var showValueMap = {};\n        var dataByCoordSys = {list: [], map: {}};\n        var highlightBatch = [];\n        var updaters = {\n            showPointer: curry(showPointer, showValueMap),\n            showTooltip: curry(showTooltip, dataByCoordSys),\n            highlight: curry(highlight, highlightBatch)\n        };\n\n        // Process for triggered axes.\n        each(coordSysAxesInfo.coordSysMap, function (coordSys, coordSysKey) {\n            var coordSysContainsPoint = coordSys.containPoint(point);\n\n            each(coordSysAxesInfo.coordSysAxesInfo[coordSysKey], function (axisInfo, key) {\n                var axis = axisInfo.axis;\n                if (!shouldHide && coordSysContainsPoint && !notTargetAxis(finder, axis)) {\n                    processOnAxis(axisInfo, axis.pointToData(point), updaters, false, outputFinder);\n                }\n            });\n        });\n\n        // Process for linked axes.\n        var linkTriggers = {};\n        each(axesInfo, function (tarAxisInfo, tarKey) {\n            var linkGroup = tarAxisInfo.linkGroup;\n\n            // If axis has been triggered in the previous stage, it should not be triggered by link.\n            if (linkGroup && !showValueMap[tarKey]) {\n                each(linkGroup.axesInfo, function (srcAxisInfo, srcKey) {\n                    var srcValItem = showValueMap[srcKey];\n                    // If srcValItem exist, source axis is triggered, so link to target axis.\n                    if (srcAxisInfo !== tarAxisInfo && srcValItem) {\n                        var val = srcValItem.value;\n                        linkGroup.mapper && (val = tarAxisInfo.axis.scale.parse(linkGroup.mapper(\n                            val, makeMapperParam(srcAxisInfo), makeMapperParam(tarAxisInfo)\n                        )));\n                        linkTriggers[tarAxisInfo.key] = val;\n                    }\n                });\n            }\n        });\n        each(linkTriggers, function (val, tarKey) {\n            processOnAxis(axesInfo[tarKey], val, updaters, true, outputFinder);\n        });\n\n        updateModelActually(showValueMap, axesInfo);\n        dispatchTooltipActually(dataByCoordSys, point, tooltipOption, dispatchAction);\n        dispatchHighDownActually(highlightBatch, dispatchAction, api, highDownKey);\n\n        return outputFinder;\n    }\n\n    function processOnAxis(axisInfo, newValue, updaters, dontSnap, outputFinder) {\n        var axis = axisInfo.axis;\n\n        if (axis.scale.isBlank() || !axis.containData(newValue)) {\n            return;\n        }\n\n        if (!axisInfo.involveSeries) {\n            updaters.showPointer(axisInfo, newValue);\n            return;\n        }\n\n        // Heavy calculation. So put it after axis.containData checking.\n        var payloadInfo = buildPayloadsBySeries(newValue, axisInfo);\n        var payloadBatch = payloadInfo.payloadBatch;\n        var snapToValue = payloadInfo.snapToValue;\n\n        // Fill content of event obj for echarts.connect.\n        // By defualt use the first involved series data as a sample to connect.\n        if (payloadBatch[0] && outputFinder.seriesIndex == null) {\n            zrUtil.extend(outputFinder, payloadBatch[0]);\n        }\n\n        // If no linkSource input, this process is for collecting link\n        // target, where snap should not be accepted.\n        if (!dontSnap && axisInfo.snap) {\n            if (axis.containData(snapToValue) && snapToValue != null) {\n                newValue = snapToValue;\n            }\n        }\n\n        updaters.highlight('highlight', payloadBatch);\n        updaters.showPointer(axisInfo, newValue, payloadBatch);\n        // Tooltip should always be snapToValue, otherwise there will be\n        // incorrect \"axis value ~ series value\" mapping displayed in tooltip.\n        updaters.showTooltip(axisInfo, payloadInfo, snapToValue);\n    }\n\n    function buildPayloadsBySeries(value, axisInfo) {\n        var axis = axisInfo.axis;\n        var dim = axis.dim;\n        var snapToValue = value;\n        var payloadBatch = [];\n        var minDist = Number.MAX_VALUE;\n        var minDiff = -1;\n\n        each(axisInfo.seriesModels, function (series, idx) {\n            var dataDim = series.coordDimToDataDim(dim);\n            var seriesNestestValue;\n            var dataIndices;\n\n            if (series.getAxisTooltipData) {\n                var result = series.getAxisTooltipData(dataDim, value, axis);\n                dataIndices = result.dataIndices;\n                seriesNestestValue = result.nestestValue;\n            }\n            else {\n                dataIndices = series.getData().indicesOfNearest(\n                    dataDim[0],\n                    value,\n                    // Add a threshold to avoid find the wrong dataIndex\n                    // when data length is not same.\n                    false, axis.type === 'category' ? 0.5 : null\n                );\n                if (!dataIndices.length) {\n                    return;\n                }\n                seriesNestestValue = series.getData().get(dataDim[0], dataIndices[0]);\n            }\n\n            if (seriesNestestValue == null || !isFinite(seriesNestestValue)) {\n                return;\n            }\n\n            var diff = value - seriesNestestValue;\n            var dist = Math.abs(diff);\n            // Consider category case\n            if (dist <= minDist) {\n                if (dist < minDist || (diff >= 0 && minDiff < 0)) {\n                    minDist = dist;\n                    minDiff = diff;\n                    snapToValue = seriesNestestValue;\n                    payloadBatch.length = 0;\n                }\n                each(dataIndices, function (dataIndex) {\n                    payloadBatch.push({\n                        seriesIndex: series.seriesIndex,\n                        dataIndexInside: dataIndex,\n                        dataIndex: series.getData().getRawIndex(dataIndex)\n                    });\n                });\n            }\n        });\n\n        return {\n            payloadBatch: payloadBatch,\n            snapToValue: snapToValue\n        };\n    }\n\n    function showPointer(showValueMap, axisInfo, value, payloadBatch) {\n        showValueMap[axisInfo.key] = {value: value, payloadBatch: payloadBatch};\n    }\n\n    function showTooltip(dataByCoordSys, axisInfo, payloadInfo, value) {\n        var payloadBatch = payloadInfo.payloadBatch;\n        var axis = axisInfo.axis;\n        var axisModel = axis.model;\n        var axisPointerModel = axisInfo.axisPointerModel;\n\n        // If no data, do not create anything in dataByCoordSys,\n        // whose length will be used to judge whether dispatch action.\n        if (!axisInfo.triggerTooltip || !payloadBatch.length) {\n            return;\n        }\n\n        var coordSysModel = axisInfo.coordSys.model;\n        var coordSysKey = modelHelper.makeKey(coordSysModel);\n        var coordSysItem = dataByCoordSys.map[coordSysKey];\n        if (!coordSysItem) {\n            coordSysItem = dataByCoordSys.map[coordSysKey] = {\n                coordSysId: coordSysModel.id,\n                coordSysIndex: coordSysModel.componentIndex,\n                coordSysType: coordSysModel.type,\n                coordSysMainType: coordSysModel.mainType,\n                dataByAxis: []\n            };\n            dataByCoordSys.list.push(coordSysItem);\n        }\n\n        coordSysItem.dataByAxis.push({\n            axisDim: axis.dim,\n            axisIndex: axisModel.componentIndex,\n            axisType: axisModel.type,\n            axisId: axisModel.id,\n            value: value,\n            // Caustion: viewHelper.getValueLabel is actually on \"view stage\", which\n            // depends that all models have been updated. So it should not be performed\n            // here. Considering axisPointerModel used here is volatile, which is hard\n            // to be retrieve in TooltipView, we prepare parameters here.\n            valueLabelOpt: {\n                precision: axisPointerModel.get('label.precision'),\n                formatter: axisPointerModel.get('label.formatter')\n            },\n            seriesDataIndices: payloadBatch.slice()\n        });\n    }\n\n    function highlight(highlightBatch, actionType, batch) {\n        highlightBatch.push.apply(highlightBatch, batch);\n    }\n\n    function updateModelActually(showValueMap, axesInfo) {\n        // Basic logic: If no 'show' required, 'hide' this axisPointer.\n        each(axesInfo, function (axisInfo, key) {\n            var option = axisInfo.axisPointerModel.option;\n            var valItem = showValueMap[key];\n\n            if (valItem) {\n                !axisInfo.useHandle && (option.status = 'show');\n                option.value = valItem.value;\n                // For label formatter param.\n                option.seriesDataIndices = (valItem.payloadBatch || []).slice();\n            }\n            // When always show (e.g., handle used), remain\n            // original value and status.\n            else {\n                // If hide, value still need to be set, consider\n                // click legend to toggle axis blank.\n                !axisInfo.useHandle && (option.status = 'hide');\n            }\n        });\n    }\n\n    function dispatchTooltipActually(dataByCoordSys, point, tooltipOption, dispatchAction) {\n        // Basic logic: If no showTip required, hideTip will be dispatched.\n        if (illegalPoint(point) || !dataByCoordSys.list.length) {\n            dispatchAction({type: 'hideTip'});\n            return;\n        }\n\n        // In most case only one axis (or event one series is used). It is\n        // convinient to fetch payload.seriesIndex and payload.dataIndex\n        // dirtectly. So put the first seriesIndex and dataIndex of the first\n        // axis on the payload.\n        var sampleItem = ((dataByCoordSys.list[0].dataByAxis[0] || {}).seriesDataIndices || [])[0] || {};\n\n        dispatchAction({\n            type: 'showTip',\n            escapeConnect: true,\n            x: point[0],\n            y: point[1],\n            tooltipOption: tooltipOption,\n            dataIndexInside: sampleItem.dataIndexInside,\n            dataIndex: sampleItem.dataIndex,\n            seriesIndex: sampleItem.seriesIndex,\n            dataByCoordSys: dataByCoordSys.list\n        });\n    }\n\n    function dispatchHighDownActually(highlightBatch, dispatchAction, api, highDownKey) {\n        // Basic logic: If nothing highlighted, should downplay all highlighted items.\n        // This case will occur when mouse leave coordSys.\n\n        // FIXME\n        // (1) highlight status shoule be managemented in series.getData()?\n        // (2) If axisPointer A triggerOn 'handle' and axisPointer B triggerOn\n        // 'mousemove', items highlighted by A will be downplayed by B.\n        // It will not be fixed until someone requires this scenario.\n\n        // Consider items area hightlighted by 'handle', and globalListener may\n        // downplay all items (including just highlighted ones) when mousemove.\n        // So we use a highDownKey to separate them as a temporary solution.\n        var zr = api.getZr();\n        highDownKey = 'lastHighlights' + (highDownKey || '');\n        var lastHighlights = get(zr)[highDownKey] || {};\n        var newHighlights = get(zr)[highDownKey] = {};\n\n        // Build hash map and remove duplicate incidentally.\n        zrUtil.each(highlightBatch, function (batchItem) {\n            var key = batchItem.seriesIndex + ' | ' + batchItem.dataIndex;\n            newHighlights[key] = batchItem;\n        });\n\n        // Diff.\n        var toHighlight = [];\n        var toDownplay = [];\n        zrUtil.each(lastHighlights, function (batchItem, key) {\n            !newHighlights[key] && toDownplay.push(batchItem);\n        });\n        zrUtil.each(newHighlights, function (batchItem, key) {\n            !lastHighlights[key] && toHighlight.push(batchItem);\n        });\n\n        toDownplay.length && api.dispatchAction({\n            type: 'downplay', escapeConnect: true, batch: toDownplay\n        });\n        toHighlight.length && api.dispatchAction({\n            type: 'highlight', escapeConnect: true, batch: toHighlight\n        });\n    }\n\n    function notTargetAxis(finder, axis) {\n        var isTarget = 1;\n        // If none of xxxAxisId and xxxAxisName and xxxAxisIndex exists in finder,\n        // no axis is not target axis.\n        each(finder, function (value, propName) {\n            isTarget &= !(/^.+(AxisId|AxisName|AxisIndex)$/.test(propName));\n        });\n        !isTarget && each(\n            [['AxisId', 'id'], ['AxisIndex', 'componentIndex'], ['AxisName', 'name']],\n            function (prop) {\n                var vals = modelUtil.normalizeToArray(finder[axis.dim + prop[0]]);\n                isTarget |= zrUtil.indexOf(vals, axis.model[prop[1]]) >= 0;\n            }\n        );\n        return !isTarget;\n    }\n\n    function makeMapperParam(axisInfo) {\n        var axisModel = axisInfo.axis.model;\n        var item = {};\n        var dim = item.axisDim = axisInfo.axis.dim;\n        item.axisIndex = item[dim + 'AxisIndex'] = axisModel.componentIndex;\n        item.axisName = item[dim + 'AxisName'] = axisModel.name;\n        item.axisId = item[dim + 'AxisId'] = axisModel.id;\n        return item;\n    }\n\n    function illegalPoint(point) {\n        return point[0] == null || isNaN(point[0]) || point[1] == null || isNaN(point[1]);\n    }\n\n    module.exports = axisTrigger;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.echarts@3.5.4@echarts/lib/component/axisPointer/axisTrigger.js\n// module id = 312\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var graphic = require('../../util/graphic');\n    var AxisBuilder = require('./AxisBuilder');\n    var AxisView = require('./AxisView');\n    var cartesianAxisHelper = require('./cartesianAxisHelper');\n    var ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick;\n    var getInterval = AxisBuilder.getInterval;\n\n    var axisBuilderAttrs = [\n        'axisLine', 'axisLabel', 'axisTick', 'axisName'\n    ];\n    var selfBuilderAttrs = [\n        'splitArea', 'splitLine'\n    ];\n\n    // function getAlignWithLabel(model, axisModel) {\n    //     var alignWithLabel = model.get('alignWithLabel');\n    //     if (alignWithLabel === 'auto') {\n    //         alignWithLabel = axisModel.get('axisTick.alignWithLabel');\n    //     }\n    //     return alignWithLabel;\n    // }\n\n    var CartesianAxisView = AxisView.extend({\n\n        type: 'cartesianAxis',\n\n        axisPointerClass: 'CartesianAxisPointer',\n\n        /**\n         * @override\n         */\n        render: function (axisModel, ecModel, api, payload) {\n\n            this.group.removeAll();\n\n            var oldAxisGroup = this._axisGroup;\n            this._axisGroup = new graphic.Group();\n\n            this.group.add(this._axisGroup);\n\n            if (!axisModel.get('show')) {\n                return;\n            }\n\n            var gridModel = axisModel.getCoordSysModel();\n\n            var layout = cartesianAxisHelper.layout(gridModel, axisModel);\n\n            var axisBuilder = new AxisBuilder(axisModel, layout);\n\n            zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n\n            this._axisGroup.add(axisBuilder.getGroup());\n\n            zrUtil.each(selfBuilderAttrs, function (name) {\n                if (axisModel.get(name + '.show')) {\n                    this['_' + name](axisModel, gridModel, layout.labelInterval);\n                }\n            }, this);\n\n            graphic.groupTransition(oldAxisGroup, this._axisGroup, axisModel);\n\n            CartesianAxisView.superCall(this, 'render', axisModel, ecModel, api, payload);\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @param {number|Function} labelInterval\n         * @private\n         */\n        _splitLine: function (axisModel, gridModel, labelInterval) {\n            var axis = axisModel.axis;\n\n            if (axis.scale.isBlank()) {\n                return;\n            }\n\n            var splitLineModel = axisModel.getModel('splitLine');\n            var lineStyleModel = splitLineModel.getModel('lineStyle');\n            var lineColors = lineStyleModel.get('color');\n\n            var lineInterval = getInterval(splitLineModel, labelInterval);\n\n            lineColors = zrUtil.isArray(lineColors) ? lineColors : [lineColors];\n\n            var gridRect = gridModel.coordinateSystem.getRect();\n            var isHorizontal = axis.isHorizontal();\n\n            var lineCount = 0;\n\n            var ticksCoords = axis.getTicksCoords(\n                // splitLineModel.get('alignWithLabel')\n            );\n            var ticks = axis.scale.getTicks();\n\n            var p1 = [];\n            var p2 = [];\n            // Simple optimization\n            // Batching the lines if color are the same\n            var lineStyle = lineStyleModel.getLineStyle();\n            for (var i = 0; i < ticksCoords.length; i++) {\n                if (ifIgnoreOnTick(axis, i, lineInterval)) {\n                    continue;\n                }\n\n                var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n                if (isHorizontal) {\n                    p1[0] = tickCoord;\n                    p1[1] = gridRect.y;\n                    p2[0] = tickCoord;\n                    p2[1] = gridRect.y + gridRect.height;\n                }\n                else {\n                    p1[0] = gridRect.x;\n                    p1[1] = tickCoord;\n                    p2[0] = gridRect.x + gridRect.width;\n                    p2[1] = tickCoord;\n                }\n\n                var colorIndex = (lineCount++) % lineColors.length;\n                this._axisGroup.add(new graphic.Line(graphic.subPixelOptimizeLine({\n                    anid: 'line_' + ticks[i],\n\n                    shape: {\n                        x1: p1[0],\n                        y1: p1[1],\n                        x2: p2[0],\n                        y2: p2[1]\n                    },\n                    style: zrUtil.defaults({\n                        stroke: lineColors[colorIndex]\n                    }, lineStyle),\n                    silent: true\n                })));\n            }\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @param {number|Function} labelInterval\n         * @private\n         */\n        _splitArea: function (axisModel, gridModel, labelInterval) {\n            var axis = axisModel.axis;\n\n            if (axis.scale.isBlank()) {\n                return;\n            }\n\n            var splitAreaModel = axisModel.getModel('splitArea');\n            var areaStyleModel = splitAreaModel.getModel('areaStyle');\n            var areaColors = areaStyleModel.get('color');\n\n            var gridRect = gridModel.coordinateSystem.getRect();\n\n            var ticksCoords = axis.getTicksCoords(\n                // splitAreaModel.get('alignWithLabel')\n            );\n            var ticks = axis.scale.getTicks();\n\n            var prevX = axis.toGlobalCoord(ticksCoords[0]);\n            var prevY = axis.toGlobalCoord(ticksCoords[0]);\n\n            var count = 0;\n\n            var areaInterval = getInterval(splitAreaModel, labelInterval);\n\n            var areaStyle = areaStyleModel.getAreaStyle();\n            areaColors = zrUtil.isArray(areaColors) ? areaColors : [areaColors];\n\n            for (var i = 1; i < ticksCoords.length; i++) {\n                if (ifIgnoreOnTick(axis, i, areaInterval)) {\n                    continue;\n                }\n\n                var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n                var x;\n                var y;\n                var width;\n                var height;\n                if (axis.isHorizontal()) {\n                    x = prevX;\n                    y = gridRect.y;\n                    width = tickCoord - x;\n                    height = gridRect.height;\n                }\n                else {\n                    x = gridRect.x;\n                    y = prevY;\n                    width = gridRect.width;\n                    height = tickCoord - y;\n                }\n\n                var colorIndex = (count++) % areaColors.length;\n                this._axisGroup.add(new graphic.Rect({\n                    anid: 'area_' + ticks[i],\n\n                    shape: {\n                        x: x,\n                        y: y,\n                        width: width,\n                        height: height\n                    },\n                    style: zrUtil.defaults({\n                        fill: areaColors[colorIndex]\n                    }, areaStyle),\n                    silent: true\n                }));\n\n                prevX = x + width;\n                prevY = y + height;\n            }\n        }\n    });\n\n    CartesianAxisView.extend({\n        type: 'xAxis'\n    });\n    CartesianAxisView.extend({\n        type: 'yAxis'\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.echarts@3.5.4@echarts/lib/component/axis/CartesianAxisView.js\n// module id = 313\n// module chunks = 0","'use strict';\n\n\n    var graphic = require('../util/graphic');\n    var zrUtil = require('zrender/lib/core/util');\n    var echarts = require('../echarts');\n\n    require('../coord/cartesian/Grid');\n\n    require('./axis');\n\n    // Grid view\n    echarts.extendComponentView({\n\n        type: 'grid',\n\n        render: function (gridModel, ecModel) {\n            this.group.removeAll();\n            if (gridModel.get('show')) {\n                this.group.add(new graphic.Rect({\n                    shape: gridModel.coordinateSystem.getRect(),\n                    style: zrUtil.defaults({\n                        fill: gridModel.get('backgroundColor')\n                    }, gridModel.getItemStyle()),\n                    silent: true,\n                    z2: -1\n                }));\n            }\n        }\n\n    });\n\n    echarts.registerPreprocessor(function (option) {\n        // Only create grid when need\n        if (option.xAxis && option.yAxis && !option.grid) {\n            option.grid = {};\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.echarts@3.5.4@echarts/lib/component/gridSimple.js\n// module id = 314\n// module chunks = 0","\n    // List layout\n    var layout = require('../../util/layout');\n    var formatUtil = require('../../util/format');\n    var graphic = require('../../util/graphic');\n\n    function positionGroup(group, model, api) {\n        layout.positionElement(\n            group, model.getBoxLayoutParams(),\n            {\n                width: api.getWidth(),\n                height: api.getHeight()\n            },\n            model.get('padding')\n        );\n    }\n\n    module.exports = {\n        /**\n         * Layout list like component.\n         * It will box layout each items in group of component and then position the whole group in the viewport\n         * @param {module:zrender/group/Group} group\n         * @param {module:echarts/model/Component} componentModel\n         * @param {module:echarts/ExtensionAPI}\n         */\n        layout: function (group, componentModel, api) {\n            var rect = layout.getLayoutRect(componentModel.getBoxLayoutParams(), {\n                width: api.getWidth(),\n                height: api.getHeight()\n            }, componentModel.get('padding'));\n            layout.box(\n                componentModel.get('orient'),\n                group,\n                componentModel.get('itemGap'),\n                rect.width,\n                rect.height\n            );\n\n            positionGroup(group, componentModel, api);\n        },\n\n        addBackground: function (group, componentModel) {\n            var padding = formatUtil.normalizeCssArray(\n                componentModel.get('padding')\n            );\n            var boundingRect = group.getBoundingRect();\n            var style = componentModel.getItemStyle(['color', 'opacity']);\n            style.fill = componentModel.get('backgroundColor');\n            var rect = new graphic.Rect({\n                shape: {\n                    x: boundingRect.x - padding[3],\n                    y: boundingRect.y - padding[0],\n                    width: boundingRect.width + padding[1] + padding[3],\n                    height: boundingRect.height + padding[0] + padding[2]\n                },\n                style: style,\n                silent: true,\n                z2: -1\n            });\n            graphic.subPixelOptimizeRect(rect);\n\n            group.add(rect);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.echarts@3.5.4@echarts/lib/component/helper/listComponent.js\n// module id = 315\n// module chunks = 0","/**\n * Data selectable mixin for chart series.\n * To eanble data select, option of series must have `selectedMode`.\n * And each data item will use `selected` to toggle itself selected status\n *\n * @module echarts/chart/helper/DataSelectable\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    module.exports = {\n\n        updateSelectedMap: function (targetList) {\n            this._selectTargetMap = zrUtil.reduce(targetList || [], function (targetMap, target) {\n                targetMap[target.name] = target;\n                return targetMap;\n            }, {});\n        },\n        /**\n         * @param {string} name\n         */\n        // PENGING If selectedMode is null ?\n        select: function (name) {\n            var targetMap = this._selectTargetMap;\n            var target = targetMap[name];\n            var selectedMode = this.get('selectedMode');\n            if (selectedMode === 'single') {\n                zrUtil.each(targetMap, function (target) {\n                    target.selected = false;\n                });\n            }\n            target && (target.selected = true);\n        },\n\n        /**\n         * @param {string} name\n         */\n        unSelect: function (name) {\n            var target = this._selectTargetMap[name];\n            // var selectedMode = this.get('selectedMode');\n            // selectedMode !== 'single' && target && (target.selected = false);\n            target && (target.selected = false);\n        },\n\n        /**\n         * @param {string} name\n         */\n        toggleSelected: function (name) {\n            var target = this._selectTargetMap[name];\n            if (target != null) {\n                this[target.selected ? 'unSelect' : 'select'](name);\n                return target.selected;\n            }\n        },\n\n        /**\n         * @param {string} name\n         */\n        isSelected: function (name) {\n            var target = this._selectTargetMap[name];\n            return target && target.selected;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.echarts@3.5.4@echarts/lib/component/helper/selectableMixin.js\n// module id = 316\n// module chunks = 0","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Model = require('../../model/Model');\n\n    var LegendModel = require('../../echarts').extendComponentModel({\n\n        type: 'legend',\n\n        dependencies: ['series'],\n\n        layoutMode: {\n            type: 'box',\n            ignoreSize: true\n        },\n\n        init: function (option, parentModel, ecModel) {\n            this.mergeDefaultAndTheme(option, ecModel);\n\n            option.selected = option.selected || {};\n        },\n\n        mergeOption: function (option) {\n            LegendModel.superCall(this, 'mergeOption', option);\n        },\n\n        optionUpdated: function () {\n            this._updateData(this.ecModel);\n\n            var legendData = this._data;\n\n            // If selectedMode is single, try to select one\n            if (legendData[0] && this.get('selectedMode') === 'single') {\n                var hasSelected = false;\n                // If has any selected in option.selected\n                for (var i = 0; i < legendData.length; i++) {\n                    var name = legendData[i].get('name');\n                    if (this.isSelected(name)) {\n                        // Force to unselect others\n                        this.select(name);\n                        hasSelected = true;\n                        break;\n                    }\n                }\n                // Try select the first if selectedMode is single\n                !hasSelected && this.select(legendData[0].get('name'));\n            }\n        },\n\n        _updateData: function (ecModel) {\n            var legendData = zrUtil.map(this.get('data') || [], function (dataItem) {\n                // Can be string or number\n                if (typeof dataItem === 'string' || typeof dataItem === 'number') {\n                    dataItem = {\n                        name: dataItem\n                    };\n                }\n                return new Model(dataItem, this, this.ecModel);\n            }, this);\n            this._data = legendData;\n\n            var availableNames = zrUtil.map(ecModel.getSeries(), function (series) {\n                return series.name;\n            });\n            ecModel.eachSeries(function (seriesModel) {\n                if (seriesModel.legendDataProvider) {\n                    var data = seriesModel.legendDataProvider();\n                    availableNames = availableNames.concat(data.mapArray(data.getName));\n                }\n            });\n            /**\n             * @type {Array.<string>}\n             * @private\n             */\n            this._availableNames = availableNames;\n        },\n\n        /**\n         * @return {Array.<module:echarts/model/Model>}\n         */\n        getData: function () {\n            return this._data;\n        },\n\n        /**\n         * @param {string} name\n         */\n        select: function (name) {\n            var selected = this.option.selected;\n            var selectedMode = this.get('selectedMode');\n            if (selectedMode === 'single') {\n                var data = this._data;\n                zrUtil.each(data, function (dataItem) {\n                    selected[dataItem.get('name')] = false;\n                });\n            }\n            selected[name] = true;\n        },\n\n        /**\n         * @param {string} name\n         */\n        unSelect: function (name) {\n            if (this.get('selectedMode') !== 'single') {\n                this.option.selected[name] = false;\n            }\n        },\n\n        /**\n         * @param {string} name\n         */\n        toggleSelected: function (name) {\n            var selected = this.option.selected;\n            // Default is true\n            if (!selected.hasOwnProperty(name)) {\n                selected[name] = true;\n            }\n            this[selected[name] ? 'unSelect' : 'select'](name);\n        },\n\n        /**\n         * @param {string} name\n         */\n        isSelected: function (name) {\n            var selected = this.option.selected;\n            return !(selected.hasOwnProperty(name) && !selected[name])\n                && zrUtil.indexOf(this._availableNames, name) >= 0;\n        },\n\n        defaultOption: {\n            // 一级层叠\n            zlevel: 0,\n            // 二级层叠\n            z: 4,\n            show: true,\n\n            // 布局方式，默认为水平布局，可选为：\n            // 'horizontal' | 'vertical'\n            orient: 'horizontal',\n\n            left: 'center',\n            // right: 'center',\n\n            top: 'top',\n            // bottom: 'top',\n\n            // 水平对齐\n            // 'auto' | 'left' | 'right'\n            // 默认为 'auto', 根据 x 的位置判断是左对齐还是右对齐\n            align: 'auto',\n\n            backgroundColor: 'rgba(0,0,0,0)',\n            // 图例边框颜色\n            borderColor: '#ccc',\n            // 图例边框线宽，单位px，默认为0（无边框）\n            borderWidth: 0,\n            // 图例内边距，单位px，默认各方向内边距为5，\n            // 接受数组分别设定上右下左边距，同css\n            padding: 5,\n            // 各个item之间的间隔，单位px，默认为10，\n            // 横向布局时为水平间隔，纵向布局时为纵向间隔\n            itemGap: 10,\n            // 图例图形宽度\n            itemWidth: 25,\n            // 图例图形高度\n            itemHeight: 14,\n\n            // 图例关闭时候的颜色\n            inactiveColor: '#ccc',\n\n            textStyle: {\n                // 图例文字颜色\n                color: '#333'\n            },\n            // formatter: '',\n            // 选择模式，默认开启图例开关\n            selectedMode: true,\n            // 配置默认选中状态，可配合LEGEND.SELECTED事件做动态数据载入\n            // selected: null,\n            // 图例内容（详见legend.data，数组中每一项代表一个item\n            // data: [],\n\n            // Tooltip 相关配置\n            tooltip: {\n                show: false\n            }\n        }\n    });\n\n    module.exports = LegendModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.echarts@3.5.4@echarts/lib/component/legend/LegendModel.js\n// module id = 317\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var symbolCreator = require('../../util/symbol');\n    var graphic = require('../../util/graphic');\n    var listComponentHelper = require('../helper/listComponent');\n\n    var curry = zrUtil.curry;\n\n    function dispatchSelectAction(name, api) {\n        api.dispatchAction({\n            type: 'legendToggleSelect',\n            name: name\n        });\n    }\n\n    function dispatchHighlightAction(seriesModel, dataName, api) {\n        // If element hover will move to a hoverLayer.\n        var el = api.getZr().storage.getDisplayList()[0];\n        if (!(el && el.useHoverLayer)) {\n            seriesModel.get('legendHoverLink') && api.dispatchAction({\n                type: 'highlight',\n                seriesName: seriesModel.name,\n                name: dataName\n            });\n        }\n    }\n\n    function dispatchDownplayAction(seriesModel, dataName, api) {\n        // If element hover will move to a hoverLayer.\n        var el = api.getZr().storage.getDisplayList()[0];\n        if (!(el && el.useHoverLayer)) {\n            seriesModel.get('legendHoverLink') && api.dispatchAction({\n                type: 'downplay',\n                seriesName: seriesModel.name,\n                name: dataName\n            });\n        }\n    }\n\n    module.exports = require('../../echarts').extendComponentView({\n\n        type: 'legend',\n\n        init: function () {\n            this._symbolTypeStore = {};\n        },\n\n        render: function (legendModel, ecModel, api) {\n            var group = this.group;\n            group.removeAll();\n\n            if (!legendModel.get('show')) {\n                return;\n            }\n\n            var selectMode = legendModel.get('selectedMode');\n            var itemAlign = legendModel.get('align');\n\n            if (itemAlign === 'auto') {\n                itemAlign = (legendModel.get('left') === 'right'\n                    && legendModel.get('orient') === 'vertical')\n                    ? 'right' : 'left';\n            }\n\n            var legendDrawedMap = {};\n\n            zrUtil.each(legendModel.getData(), function (itemModel) {\n                var name = itemModel.get('name');\n\n                // Use empty string or \\n as a newline string\n                if (name === '' || name === '\\n') {\n                    group.add(new graphic.Group({\n                        newline: true\n                    }));\n                    return;\n                }\n\n                var seriesModel = ecModel.getSeriesByName(name)[0];\n\n                if (legendDrawedMap[name]) {\n                    // Have been drawed\n                    return;\n                }\n\n                // Series legend\n                if (seriesModel) {\n                    var data = seriesModel.getData();\n                    var color = data.getVisual('color');\n\n                    // If color is a callback function\n                    if (typeof color === 'function') {\n                        // Use the first data\n                        color = color(seriesModel.getDataParams(0));\n                    }\n\n                    // Using rect symbol defaultly\n                    var legendSymbolType = data.getVisual('legendSymbol') || 'roundRect';\n                    var symbolType = data.getVisual('symbol');\n\n                    var itemGroup = this._createItem(\n                        name, itemModel, legendModel,\n                        legendSymbolType, symbolType,\n                        itemAlign, color,\n                        selectMode\n                    );\n\n                    itemGroup.on('click', curry(dispatchSelectAction, name, api))\n                        .on('mouseover', curry(dispatchHighlightAction, seriesModel, null, api))\n                        .on('mouseout', curry(dispatchDownplayAction, seriesModel, null, api));\n\n                    legendDrawedMap[name] = true;\n                }\n                else {\n                    // Data legend of pie, funnel\n                    ecModel.eachRawSeries(function (seriesModel) {\n                        // In case multiple series has same data name\n                        if (legendDrawedMap[name]) {\n                            return;\n                        }\n                        if (seriesModel.legendDataProvider) {\n                            var data = seriesModel.legendDataProvider();\n                            var idx = data.indexOfName(name);\n                            if (idx < 0) {\n                                return;\n                            }\n\n                            var color = data.getItemVisual(idx, 'color');\n\n                            var legendSymbolType = 'roundRect';\n\n                            var itemGroup = this._createItem(\n                                name, itemModel, legendModel,\n                                legendSymbolType, null,\n                                itemAlign, color,\n                                selectMode\n                            );\n\n                            itemGroup.on('click', curry(dispatchSelectAction, name, api))\n                                // FIXME Should not specify the series name\n                                .on('mouseover', curry(dispatchHighlightAction, seriesModel, name, api))\n                                .on('mouseout', curry(dispatchDownplayAction, seriesModel, name, api));\n\n                            legendDrawedMap[name] = true;\n                        }\n                    }, this);\n                }\n\n                if (__DEV__) {\n                    if (!legendDrawedMap[name]) {\n                        console.warn(name + ' series not exists. Legend data should be same with series name or data name.');\n                    }\n                }\n            }, this);\n\n            listComponentHelper.layout(group, legendModel, api);\n            // Render background after group is layout\n            // FIXME\n            listComponentHelper.addBackground(group, legendModel);\n        },\n\n        _createItem: function (\n            name, itemModel, legendModel,\n            legendSymbolType, symbolType,\n            itemAlign, color, selectMode\n        ) {\n            var itemWidth = legendModel.get('itemWidth');\n            var itemHeight = legendModel.get('itemHeight');\n            var inactiveColor = legendModel.get('inactiveColor');\n\n            var isSelected = legendModel.isSelected(name);\n            var itemGroup = new graphic.Group();\n\n            var textStyleModel = itemModel.getModel('textStyle');\n\n            var itemIcon = itemModel.get('icon');\n\n            var tooltipModel = itemModel.getModel('tooltip');\n            var legendGlobalTooltipModel = tooltipModel.parentModel;\n\n            // Use user given icon first\n            legendSymbolType = itemIcon || legendSymbolType;\n            itemGroup.add(symbolCreator.createSymbol(\n                legendSymbolType, 0, 0, itemWidth, itemHeight, isSelected ? color : inactiveColor\n            ));\n\n            // Compose symbols\n            // PENDING\n            if (!itemIcon && symbolType\n                // At least show one symbol, can't be all none\n                && ((symbolType !== legendSymbolType) || symbolType == 'none')\n            ) {\n                var size = itemHeight * 0.8;\n                if (symbolType === 'none') {\n                    symbolType = 'circle';\n                }\n                // Put symbol in the center\n                itemGroup.add(symbolCreator.createSymbol(\n                    symbolType, (itemWidth - size) / 2, (itemHeight - size) / 2, size, size,\n                    isSelected ? color : inactiveColor\n                ));\n            }\n\n            // Text\n            var textX = itemAlign === 'left' ? itemWidth + 5 : -5;\n            var textAlign = itemAlign;\n\n            var formatter = legendModel.get('formatter');\n            var content = name;\n            if (typeof formatter === 'string' && formatter) {\n                content = formatter.replace('{name}', name != null ? name : '');\n            }\n            else if (typeof formatter === 'function') {\n                content = formatter(name);\n            }\n\n            var text = new graphic.Text({\n                style: {\n                    text: content,\n                    x: textX,\n                    y: itemHeight / 2,\n                    fill: isSelected ? textStyleModel.getTextColor() : inactiveColor,\n                    textFont: textStyleModel.getFont(),\n                    textAlign: textAlign,\n                    textVerticalAlign: 'middle'\n                }\n            });\n            itemGroup.add(text);\n\n            // Add a invisible rect to increase the area of mouse hover\n            var hitRect = new graphic.Rect({\n                shape: itemGroup.getBoundingRect(),\n                invisible: true,\n                tooltip: tooltipModel.get('show') ? zrUtil.extend({\n                    content: name,\n                    // Defaul formatter\n                    formatter: legendGlobalTooltipModel.get('formatter', true) || function () {\n                        return name;\n                    },\n                    formatterParams: {\n                        componentType: 'legend',\n                        legendIndex: legendModel.componentIndex,\n                        name: name,\n                        $vars: ['name']\n                    }\n                }, tooltipModel.option) : null\n            });\n            itemGroup.add(hitRect);\n\n            itemGroup.eachChild(function (child) {\n                child.silent = true;\n            });\n\n            hitRect.silent = !selectMode;\n\n\n\n            this.group.add(itemGroup);\n\n            graphic.setHoverStyle(itemGroup);\n\n            return itemGroup;\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.echarts@3.5.4@echarts/lib/component/legend/LegendView.js\n// module id = 318\n// module chunks = 0","/**\n * @file Legend action\n */\n\n\n    var echarts = require('../../echarts');\n    var zrUtil = require('zrender/lib/core/util');\n\n    function legendSelectActionHandler(methodName, payload, ecModel) {\n        var selectedMap = {};\n        var isToggleSelect = methodName === 'toggleSelected';\n        var isSelected;\n        // Update all legend components\n        ecModel.eachComponent('legend', function (legendModel) {\n            if (isToggleSelect && isSelected != null) {\n                // Force other legend has same selected status\n                // Or the first is toggled to true and other are toggled to false\n                // In the case one legend has some item unSelected in option. And if other legend\n                // doesn't has the item, they will assume it is selected.\n                legendModel[isSelected ? 'select' : 'unSelect'](payload.name);\n            }\n            else {\n                legendModel[methodName](payload.name);\n                isSelected = legendModel.isSelected(payload.name);\n            }\n            var legendData = legendModel.getData();\n            zrUtil.each(legendData, function (model) {\n                var name = model.get('name');\n                // Wrap element\n                if (name === '\\n' || name === '') {\n                    return;\n                }\n                var isItemSelected = legendModel.isSelected(name);\n                if (name in selectedMap) {\n                    // Unselected if any legend is unselected\n                    selectedMap[name] = selectedMap[name] && isItemSelected;\n                }\n                else {\n                    selectedMap[name] = isItemSelected;\n                }\n            });\n        });\n        // Return the event explicitly\n        return {\n            name: payload.name,\n            selected: selectedMap\n        };\n    }\n    /**\n     * @event legendToggleSelect\n     * @type {Object}\n     * @property {string} type 'legendToggleSelect'\n     * @property {string} [from]\n     * @property {string} name Series name or data item name\n     */\n    echarts.registerAction(\n        'legendToggleSelect', 'legendselectchanged',\n        zrUtil.curry(legendSelectActionHandler, 'toggleSelected')\n    );\n\n    /**\n     * @event legendSelect\n     * @type {Object}\n     * @property {string} type 'legendSelect'\n     * @property {string} name Series name or data item name\n     */\n    echarts.registerAction(\n        'legendSelect', 'legendselected',\n        zrUtil.curry(legendSelectActionHandler, 'select')\n    );\n\n    /**\n     * @event legendUnSelect\n     * @type {Object}\n     * @property {string} type 'legendUnSelect'\n     * @property {string} name Series name or data item name\n     */\n    echarts.registerAction(\n        'legendUnSelect', 'legendunselected',\n        zrUtil.curry(legendSelectActionHandler, 'unSelect')\n    );\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.echarts@3.5.4@echarts/lib/component/legend/legendAction.js\n// module id = 319\n// module chunks = 0","\n   module.exports = function (ecModel) {\n        var legendModels = ecModel.findComponents({\n            mainType: 'legend'\n        });\n        if (legendModels && legendModels.length) {\n            ecModel.filterSeries(function (series) {\n                // If in any legend component the status is not selected.\n                // Because in legend series is assumed selected when it is not in the legend data.\n                for (var i = 0; i < legendModels.length; i++) {\n                    if (!legendModels[i].isSelected(series.name)) {\n                        return false;\n                    }\n                }\n                return true;\n            });\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.echarts@3.5.4@echarts/lib/component/legend/legendFilter.js\n// module id = 320\n// module chunks = 0","/**\n * @module echarts/component/tooltip/TooltipContent\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var zrColor = require('zrender/lib/tool/color');\n    var eventUtil = require('zrender/lib/core/event');\n    var formatUtil = require('../../util/format');\n    var each = zrUtil.each;\n    var toCamelCase = formatUtil.toCamelCase;\n    var env = require('zrender/lib/core/env');\n\n    var vendors = ['', '-webkit-', '-moz-', '-o-'];\n\n    var gCssText = 'position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;';\n\n    /**\n     * @param {number} duration\n     * @return {string}\n     * @inner\n     */\n    function assembleTransition(duration) {\n        var transitionCurve = 'cubic-bezier(0.23, 1, 0.32, 1)';\n        var transitionText = 'left ' + duration + 's ' + transitionCurve + ','\n                            + 'top ' + duration + 's ' + transitionCurve;\n        return zrUtil.map(vendors, function (vendorPrefix) {\n            return vendorPrefix + 'transition:' + transitionText;\n        }).join(';');\n    }\n\n    /**\n     * @param {Object} textStyle\n     * @return {string}\n     * @inner\n     */\n    function assembleFont(textStyleModel) {\n        var cssText = [];\n\n        var fontSize = textStyleModel.get('fontSize');\n        var color = textStyleModel.getTextColor();\n\n        color && cssText.push('color:' + color);\n\n        cssText.push('font:' + textStyleModel.getFont());\n\n        fontSize &&\n            cssText.push('line-height:' + Math.round(fontSize * 3 / 2) + 'px');\n\n        each(['decoration', 'align'], function (name) {\n            var val = textStyleModel.get(name);\n            val && cssText.push('text-' + name + ':' + val);\n        });\n\n        return cssText.join(';');\n    }\n\n    /**\n     * @param {Object} tooltipModel\n     * @return {string}\n     * @inner\n     */\n    function assembleCssText(tooltipModel) {\n\n        var cssText = [];\n\n        var transitionDuration = tooltipModel.get('transitionDuration');\n        var backgroundColor = tooltipModel.get('backgroundColor');\n        var textStyleModel = tooltipModel.getModel('textStyle');\n        var padding = tooltipModel.get('padding');\n\n        // Animation transition. Do not animate when transitionDuration is 0.\n        transitionDuration &&\n            cssText.push(assembleTransition(transitionDuration));\n\n        if (backgroundColor) {\n            if (env.canvasSupported) {\n                cssText.push('background-Color:' + backgroundColor);\n            }\n            else {\n                // for ie\n                cssText.push(\n                    'background-Color:#' + zrColor.toHex(backgroundColor)\n                );\n                cssText.push('filter:alpha(opacity=70)');\n            }\n        }\n\n        // Border style\n        each(['width', 'color', 'radius'], function (name) {\n            var borderName = 'border-' + name;\n            var camelCase = toCamelCase(borderName);\n            var val = tooltipModel.get(camelCase);\n            val != null &&\n                cssText.push(borderName + ':' + val + (name === 'color' ? '' : 'px'));\n        });\n\n        // Text style\n        cssText.push(assembleFont(textStyleModel));\n\n        // Padding\n        if (padding != null) {\n            cssText.push('padding:' + formatUtil.normalizeCssArray(padding).join('px ') + 'px');\n        }\n\n        return cssText.join(';') + ';';\n    }\n\n    /**\n     * @alias module:echarts/component/tooltip/TooltipContent\n     * @constructor\n     */\n    function TooltipContent(container, api) {\n        var el = document.createElement('div');\n        var zr = this._zr = api.getZr();\n\n        this.el = el;\n\n        this._x = api.getWidth() / 2;\n        this._y = api.getHeight() / 2;\n\n        container.appendChild(el);\n\n        this._container = container;\n\n        this._show = false;\n\n        /**\n         * @private\n         */\n        this._hideTimeout;\n\n        var self = this;\n        el.onmouseenter = function () {\n            // clear the timeout in hideLater and keep showing tooltip\n            if (self._enterable) {\n                clearTimeout(self._hideTimeout);\n                self._show = true;\n            }\n            self._inContent = true;\n        };\n        el.onmousemove = function (e) {\n            e = e || window.event;\n            if (!self._enterable) {\n                // Try trigger zrender event to avoid mouse\n                // in and out shape too frequently\n                var handler = zr.handler;\n                eventUtil.normalizeEvent(container, e, true);\n                handler.dispatch('mousemove', e);\n            }\n        };\n        el.onmouseleave = function () {\n            if (self._enterable) {\n                if (self._show) {\n                    self.hideLater(self._hideDelay);\n                }\n            }\n            self._inContent = false;\n        };\n    }\n\n    TooltipContent.prototype = {\n\n        constructor: TooltipContent,\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _enterable: true,\n\n        /**\n         * Update when tooltip is rendered\n         */\n        update: function () {\n            // FIXME\n            // Move this logic to ec main?\n            var container = this._container;\n            var stl = container.currentStyle\n                || document.defaultView.getComputedStyle(container);\n            var domStyle = container.style;\n            if (domStyle.position !== 'absolute' && stl.position !== 'absolute') {\n                domStyle.position = 'relative';\n            }\n            // Hide the tooltip\n            // PENDING\n            // this.hide();\n        },\n\n        show: function (tooltipModel) {\n            clearTimeout(this._hideTimeout);\n            var el = this.el;\n\n            el.style.cssText = gCssText + assembleCssText(tooltipModel)\n                // http://stackoverflow.com/questions/21125587/css3-transition-not-working-in-chrome-anymore\n                + ';left:' + this._x + 'px;top:' + this._y + 'px;'\n                + (tooltipModel.get('extraCssText') || '');\n\n            el.style.display = el.innerHTML ?  'block' : 'none';\n\n            this._show = true;\n        },\n\n        setContent: function (content) {\n            this.el.innerHTML = content == null ? '' : content;\n        },\n\n        setEnterable: function (enterable) {\n            this._enterable = enterable;\n        },\n\n        getSize: function () {\n            var el = this.el;\n            return [el.clientWidth, el.clientHeight];\n        },\n\n        moveTo: function (x, y) {\n            // xy should be based on canvas root. But tooltipContent is\n            // the sibling of canvas root. So padding of ec container\n            // should be considered here.\n            var zr = this._zr;\n            var viewportRoot;\n            if (zr && zr.painter && (viewportRoot = zr.painter.getViewportRoot())) {\n                x += viewportRoot.offsetLeft || 0;\n                y += viewportRoot.offsetTop || 0;\n            }\n\n            var style = this.el.style;\n            style.left = x + 'px';\n            style.top = y + 'px';\n\n            this._x = x;\n            this._y = y;\n        },\n\n        hide: function () {\n            this.el.style.display = 'none';\n            this._show = false;\n        },\n\n        hideLater: function (time) {\n            if (this._show && !(this._inContent && this._enterable)) {\n                if (time) {\n                    this._hideDelay = time;\n                    // Set show false to avoid invoke hideLater mutiple times\n                    this._show = false;\n                    this._hideTimeout = setTimeout(zrUtil.bind(this.hide, this), time);\n                }\n                else {\n                    this.hide();\n                }\n            }\n        },\n\n        isShow: function () {\n            return this._show;\n        }\n    };\n\n    module.exports = TooltipContent;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.echarts@3.5.4@echarts/lib/component/tooltip/TooltipContent.js\n// module id = 321\n// module chunks = 0","\n\n    require('../../echarts').extendComponentModel({\n\n        type: 'tooltip',\n\n        dependencies: ['axisPointer'],\n\n        defaultOption: {\n            zlevel: 0,\n\n            z: 8,\n\n            show: true,\n\n            // tooltip主体内容\n            showContent: true,\n\n            // 'trigger' only works on coordinate system.\n            // 'item' | 'axis' | 'none'\n            trigger: 'item',\n\n            // 'click' | 'mousemove' | 'none'\n            triggerOn: 'mousemove|click',\n\n            alwaysShowContent: false,\n\n            displayMode: 'single', // 'single' | 'multipleByCoordSys'\n\n            // 位置 {Array} | {Function}\n            // position: null\n            // Consider triggered from axisPointer handle, verticalAlign should be 'middle'\n            // align: null,\n            // verticalAlign: null,\n\n            // 是否约束 content 在 viewRect 中。默认 false 是为了兼容以前版本。\n            confine: false,\n\n            // 内容格式器：{string}（Template） ¦ {Function}\n            // formatter: null\n\n            showDelay: 0,\n\n            // 隐藏延迟，单位ms\n            hideDelay: 100,\n\n            // 动画变换时间，单位s\n            transitionDuration: 0.4,\n\n            enterable: false,\n\n            // 提示背景颜色，默认为透明度为0.7的黑色\n            backgroundColor: 'rgba(50,50,50,0.7)',\n\n            // 提示边框颜色\n            borderColor: '#333',\n\n            // 提示边框圆角，单位px，默认为4\n            borderRadius: 4,\n\n            // 提示边框线宽，单位px，默认为0（无边框）\n            borderWidth: 0,\n\n            // 提示内边距，单位px，默认各方向内边距为5，\n            // 接受数组分别设定上右下左边距，同css\n            padding: 5,\n\n            // Extra css text\n            extraCssText: '',\n\n            // 坐标轴指示器，坐标轴触发有效\n            axisPointer: {\n                // 默认为直线\n                // 可选为：'line' | 'shadow' | 'cross'\n                type: 'line',\n\n                // type 为 line 的时候有效，指定 tooltip line 所在的轴，可选\n                // 可选 'x' | 'y' | 'angle' | 'radius' | 'auto'\n                // 默认 'auto'，会选择类型为 cateogry 的轴，对于双数值轴，笛卡尔坐标系会默认选择 x 轴\n                // 极坐标系会默认选择 angle 轴\n                axis: 'auto',\n\n                animation: 'auto',\n                animationDurationUpdate: 200,\n                animationEasingUpdate: 'exponentialOut',\n\n                crossStyle: {\n                    color: '#999',\n                    width: 1,\n                    type: 'dashed',\n\n                    // TODO formatter\n                    textStyle: {}\n                }\n\n                // lineStyle and shadowStyle should not be specified here,\n                // otherwise it will always override those styles on option.axisPointer.\n            },\n            textStyle: {\n                color: '#fff',\n                fontSize: 14\n            }\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.echarts@3.5.4@echarts/lib/component/tooltip/TooltipModel.js\n// module id = 322\n// module chunks = 0","\n\n    var TooltipContent = require('./TooltipContent');\n    var zrUtil = require('zrender/lib/core/util');\n    var formatUtil = require('../../util/format');\n    var numberUtil = require('../../util/number');\n    var graphic = require('../../util/graphic');\n    var findPointFromSeries = require('../axisPointer/findPointFromSeries');\n    var layoutUtil = require('../../util/layout');\n    var env = require('zrender/lib/core/env');\n    var Model = require('../../model/Model');\n    var globalListener = require('../axisPointer/globalListener');\n    var axisHelper = require('../../coord/axisHelper');\n    var axisPointerViewHelper = require('../axisPointer/viewHelper');\n\n    var bind = zrUtil.bind;\n    var each = zrUtil.each;\n    var parsePercent = numberUtil.parsePercent;\n\n\n    var proxyRect = new graphic.Rect({\n        shape: {x: -1, y: -1, width: 2, height: 2}\n    });\n\n    require('../../echarts').extendComponentView({\n\n        type: 'tooltip',\n\n        init: function (ecModel, api) {\n            if (env.node) {\n                return;\n            }\n            var tooltipContent = new TooltipContent(api.getDom(), api);\n            this._tooltipContent = tooltipContent;\n        },\n\n        render: function (tooltipModel, ecModel, api) {\n            if (env.node) {\n                return;\n            }\n\n            // Reset\n            this.group.removeAll();\n\n            /**\n             * @private\n             * @type {module:echarts/component/tooltip/TooltipModel}\n             */\n            this._tooltipModel = tooltipModel;\n\n            /**\n             * @private\n             * @type {module:echarts/model/Global}\n             */\n            this._ecModel = ecModel;\n\n            /**\n             * @private\n             * @type {module:echarts/ExtensionAPI}\n             */\n            this._api = api;\n\n            /**\n             * Should be cleaned when render.\n             * @private\n             * @type {Array.<Array.<Object>>}\n             */\n            this._lastDataByCoordSys = null;\n\n            /**\n             * @private\n             * @type {boolean}\n             */\n            this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n\n            var tooltipContent = this._tooltipContent;\n            tooltipContent.update();\n            tooltipContent.setEnterable(tooltipModel.get('enterable'));\n\n            this._initGlobalListener();\n\n            this._keepShow();\n        },\n\n        _initGlobalListener: function () {\n            var tooltipModel = this._tooltipModel;\n            var triggerOn = tooltipModel.get('triggerOn');\n\n            globalListener.register(\n                'itemTooltip',\n                this._api,\n                bind(function (currTrigger, e, dispatchAction) {\n                    // If 'none', it is not controlled by mouse totally.\n                    if (triggerOn !== 'none') {\n                        if (triggerOn.indexOf(currTrigger) >= 0) {\n                            this._tryShow(e, dispatchAction);\n                        }\n                        else if (currTrigger === 'leave') {\n                            this._hide(dispatchAction);\n                        }\n                    }\n                }, this)\n            );\n        },\n\n        _keepShow: function () {\n            var tooltipModel = this._tooltipModel;\n            var ecModel = this._ecModel;\n            var api = this._api;\n\n            // Try to keep the tooltip show when refreshing\n            if (this._lastX != null\n                && this._lastY != null\n                // When user is willing to control tooltip totally using API,\n                // self.manuallyShowTip({x, y}) might cause tooltip hide,\n                // which is not expected.\n                && tooltipModel.get('triggerOn') !== 'none'\n            ) {\n                var self = this;\n                clearTimeout(this._refreshUpdateTimeout);\n                this._refreshUpdateTimeout = setTimeout(function () {\n                    // Show tip next tick after other charts are rendered\n                    // In case highlight action has wrong result\n                    // FIXME\n                    self.manuallyShowTip(tooltipModel, ecModel, api, {\n                        x: self._lastX,\n                        y: self._lastY\n                    });\n                });\n            }\n        },\n\n        /**\n         * Show tip manually by\n         * dispatchAction({\n         *     type: 'showTip',\n         *     x: 10,\n         *     y: 10\n         * });\n         * Or\n         * dispatchAction({\n         *      type: 'showTip',\n         *      seriesIndex: 0,\n         *      dataIndex or dataIndexInside or name\n         * });\n         *\n         *  TODO Batch\n         */\n        manuallyShowTip: function (tooltipModel, ecModel, api, payload) {\n            if (payload.from === this.uid || env.node) {\n                return;\n            }\n\n            var dispatchAction = makeDispatchAction(payload, api);\n\n            // Reset ticket\n            this._ticket = '';\n\n            // When triggered from axisPointer.\n            var dataByCoordSys = payload.dataByCoordSys;\n\n            if (payload.tooltip && payload.x != null && payload.y != null) {\n                var el = proxyRect;\n                el.position = [payload.x, payload.y];\n                el.update();\n                el.tooltip = payload.tooltip;\n                // Manually show tooltip while view is not using zrender elements.\n                this._tryShow({\n                    offsetX: payload.x,\n                    offsetY: payload.y,\n                    target: el\n                }, dispatchAction);\n            }\n            else if (dataByCoordSys) {\n                this._tryShow({\n                    offsetX: payload.x,\n                    offsetY: payload.y,\n                    position: payload.position,\n                    event: {},\n                    dataByCoordSys: payload.dataByCoordSys,\n                    tooltipOption: payload.tooltipOption\n                }, dispatchAction);\n            }\n            else if (payload.seriesIndex != null) {\n\n                if (this._manuallyAxisShowTip(tooltipModel, ecModel, api, payload)) {\n                    return;\n                }\n\n                var pointInfo = findPointFromSeries(payload, ecModel);\n                var cx = pointInfo.point[0];\n                var cy = pointInfo.point[1];\n                if (cx != null && cy != null) {\n                    this._tryShow({\n                        offsetX: cx,\n                        offsetY: cy,\n                        position: payload.position,\n                        target: pointInfo.el,\n                        event: {}\n                    }, dispatchAction);\n                }\n            }\n            else if (payload.x != null && payload.y != null) {\n                // FIXME\n                // should wrap dispatchAction like `axisPointer/globalListener` ?\n                api.dispatchAction({\n                    type: 'updateAxisPointer',\n                    x: payload.x,\n                    y: payload.y\n                });\n\n                this._tryShow({\n                    offsetX: payload.x,\n                    offsetY: payload.y,\n                    position: payload.position,\n                    target: api.getZr().findHover(payload.x, payload.y).target,\n                    event: {}\n                }, dispatchAction);\n            }\n        },\n\n        manuallyHideTip: function (tooltipModel, ecModel, api, payload) {\n            var tooltipContent = this._tooltipContent;\n\n            if (!this._alwaysShowContent) {\n                tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n            }\n\n            this._lastX = this._lastY = null;\n\n            if (payload.from !== this.uid) {\n                this._hide(makeDispatchAction(payload, api));\n            }\n        },\n\n        // Be compatible with previous design, that is, when tooltip.type is 'axis' and\n        // dispatchAction 'showTip' with seriesIndex and dataIndex will trigger axis pointer\n        // and tooltip.\n        _manuallyAxisShowTip: function (tooltipModel, ecModel, api, payload) {\n            var seriesIndex = payload.seriesIndex;\n            var dataIndex = payload.dataIndex;\n            var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n            if (seriesIndex == null || dataIndex == null || coordSysAxesInfo == null) {\n                return;\n            }\n\n            var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n            if (!seriesModel) {\n                return;\n            }\n\n            var data = seriesModel.getData();\n            var tooltipModel = buildTooltipModel([\n                data.getItemModel(dataIndex),\n                seriesModel,\n                (seriesModel.coordinateSystem || {}).model,\n                tooltipModel\n            ]);\n\n            if (tooltipModel.get('trigger') !== 'axis') {\n                return;\n            }\n\n            api.dispatchAction({\n                type: 'updateAxisPointer',\n                seriesIndex: seriesIndex,\n                dataIndex: dataIndex\n            });\n\n            return true;\n        },\n\n        _tryShow: function (e, dispatchAction) {\n            var el = e.target;\n            var tooltipModel = this._tooltipModel;\n\n            if (!tooltipModel) {\n                return;\n            }\n\n            // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n            this._lastX = e.offsetX;\n            this._lastY = e.offsetY;\n\n            var dataByCoordSys = e.dataByCoordSys;\n            if (dataByCoordSys && dataByCoordSys.length) {\n                this._showAxisTooltip(dataByCoordSys, e);\n            }\n            // Always show item tooltip if mouse is on the element with dataIndex\n            else if (el && el.dataIndex != null) {\n                this._lastDataByCoordSys = null;\n                this._showSeriesItemTooltip(e, el, dispatchAction);\n            }\n            // Tooltip provided directly. Like legend.\n            else if (el && el.tooltip) {\n                this._lastDataByCoordSys = null;\n                this._showComponentItemTooltip(e, el, dispatchAction);\n            }\n            else {\n                this._lastDataByCoordSys = null;\n                this._hide(dispatchAction);\n            }\n        },\n\n        _showOrMove: function (tooltipModel, cb) {\n            // showDelay is used in this case: tooltip.enterable is set\n            // as true. User intent to move mouse into tooltip and click\n            // something. `showDelay` makes it easyer to enter the content\n            // but tooltip do not move immediately.\n            var delay = tooltipModel.get('showDelay');\n            cb = zrUtil.bind(cb, this);\n            clearTimeout(this._showTimout);\n            delay > 0\n                ? (this._showTimout = setTimeout(cb, delay))\n                : cb();\n        },\n\n        _showAxisTooltip: function (dataByCoordSys, e) {\n            var ecModel = this._ecModel;\n            var globalTooltipModel = this._tooltipModel;\n            var point = [e.offsetX, e.offsetY];\n            var singleDefaultHTML = [];\n            var singleParamsList = [];\n            var singleTooltipModel = buildTooltipModel([\n                e.tooltipOption,\n                globalTooltipModel\n            ]);\n\n            each(dataByCoordSys, function (itemCoordSys) {\n                // var coordParamList = [];\n                // var coordDefaultHTML = [];\n                // var coordTooltipModel = buildTooltipModel([\n                //     e.tooltipOption,\n                //     itemCoordSys.tooltipOption,\n                //     ecModel.getComponent(itemCoordSys.coordSysMainType, itemCoordSys.coordSysIndex),\n                //     globalTooltipModel\n                // ]);\n                // var displayMode = coordTooltipModel.get('displayMode');\n                // var paramsList = displayMode === 'single' ? singleParamsList : [];\n\n                each(itemCoordSys.dataByAxis, function (item) {\n                    var axisModel = ecModel.getComponent(item.axisDim + 'Axis', item.axisIndex);\n                    var axisValue = item.value;\n                    var seriesDefaultHTML = [];\n\n                    if (!axisModel || axisValue == null) {\n                        return;\n                    }\n\n                    var valueLabel = axisPointerViewHelper.getValueLabel(\n                        axisValue, axisModel.axis, ecModel,\n                        item.seriesDataIndices,\n                        item.valueLabelOpt\n                    );\n\n                    zrUtil.each(item.seriesDataIndices, function (idxItem) {\n                        var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n                        var dataIndex = idxItem.dataIndexInside;\n                        var dataParams = series && series.getDataParams(dataIndex);\n                        dataParams.axisDim = item.axisDim;\n                        dataParams.axisIndex = item.axisIndex;\n                        dataParams.axisType = item.axisType;\n                        dataParams.axisId = item.axisId;\n                        dataParams.axisValue = axisHelper.getAxisRawValue(axisModel.axis, axisValue);\n                        dataParams.axisValueLabel = valueLabel;\n\n                        if (dataParams) {\n                            singleParamsList.push(dataParams);\n                            seriesDefaultHTML.push(series.formatTooltip(dataIndex, true));\n                        }\n                    });\n\n                    // Default tooltip content\n                    // FIXME\n                    // (1) shold be the first data which has name?\n                    // (2) themeRiver, firstDataIndex is array, and first line is unnecessary.\n                    var firstLine = valueLabel;\n                    singleDefaultHTML.push(\n                        (firstLine ? formatUtil.encodeHTML(firstLine) + '<br />' : '')\n                        + seriesDefaultHTML.join('<br />')\n                    );\n                });\n            }, this);\n\n            // In most case, the second axis is shown upper than the first one.\n            singleDefaultHTML.reverse();\n            singleDefaultHTML = singleDefaultHTML.join('<br /><br />');\n\n            var positionExpr = e.position;\n            this._showOrMove(singleTooltipModel, function () {\n                if (this._updateContentNotChangedOnAxis(dataByCoordSys)) {\n                    this._updatePosition(\n                        singleTooltipModel,\n                        positionExpr,\n                        point[0], point[1],\n                        this._tooltipContent,\n                        singleParamsList\n                    );\n                }\n                else {\n                    this._showTooltipContent(\n                        singleTooltipModel, singleDefaultHTML, singleParamsList, Math.random(),\n                        point[0], point[1], positionExpr\n                    );\n                }\n            });\n\n            // Do not trigger events here, because this branch only be entered\n            // from dispatchAction.\n        },\n\n        _showSeriesItemTooltip: function (e, el, dispatchAction) {\n            var ecModel = this._ecModel;\n            // Use dataModel in element if possible\n            // Used when mouseover on a element like markPoint or edge\n            // In which case, the data is not main data in series.\n            var seriesIndex = el.seriesIndex;\n            var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n\n            // For example, graph link.\n            var dataModel = el.dataModel || seriesModel;\n            var dataIndex = el.dataIndex;\n            var dataType = el.dataType;\n            var data = dataModel.getData();\n\n            var tooltipModel = buildTooltipModel([\n                data.getItemModel(dataIndex),\n                dataModel,\n                seriesModel && (seriesModel.coordinateSystem || {}).model,\n                this._tooltipModel\n            ]);\n\n            var tooltipTrigger = tooltipModel.get('trigger');\n            if (tooltipTrigger != null && tooltipTrigger !== 'item') {\n                return;\n            }\n\n            var params = dataModel.getDataParams(dataIndex, dataType);\n            var defaultHtml = dataModel.formatTooltip(dataIndex, false, dataType);\n            var asyncTicket = 'item_' + dataModel.name + '_' + dataIndex;\n\n            this._showOrMove(tooltipModel, function () {\n                this._showTooltipContent(\n                    tooltipModel, defaultHtml, params, asyncTicket,\n                    e.offsetX, e.offsetY, e.position, e.target\n                );\n            });\n\n            // FIXME\n            // duplicated showtip if manuallyShowTip is called from dispatchAction.\n            dispatchAction({\n                type: 'showTip',\n                dataIndexInside: dataIndex,\n                dataIndex: data.getRawIndex(dataIndex),\n                seriesIndex: seriesIndex,\n                from: this.uid\n            });\n        },\n\n        _showComponentItemTooltip: function (e, el, dispatchAction) {\n            var tooltipOpt = el.tooltip;\n            if (typeof tooltipOpt === 'string') {\n                var content = tooltipOpt;\n                tooltipOpt = {\n                    content: content,\n                    // Fixed formatter\n                    formatter: content\n                };\n            }\n            var subTooltipModel = new Model(tooltipOpt, this._tooltipModel, this._ecModel);\n            var defaultHtml = subTooltipModel.get('content');\n            var asyncTicket = Math.random();\n\n            // Do not check whether `trigger` is 'none' here, because `trigger`\n            // only works on cooridinate system. In fact, we have not found case\n            // that requires setting `trigger` nothing on component yet.\n\n            this._showOrMove(subTooltipModel, function () {\n                this._showTooltipContent(\n                    subTooltipModel, defaultHtml, subTooltipModel.get('formatterParams') || {},\n                    asyncTicket, e.offsetX, e.offsetY, e.position, el\n                );\n            });\n\n            // If not dispatch showTip, tip may be hide triggered by axis.\n            dispatchAction({\n                type: 'showTip',\n                from: this.uid\n            });\n        },\n\n        _showTooltipContent: function (\n            tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, el\n        ) {\n            // Reset ticket\n            this._ticket = '';\n\n            if (!tooltipModel.get('showContent') || !tooltipModel.get('show')) {\n                return;\n            }\n\n            var tooltipContent = this._tooltipContent;\n\n            var formatter = tooltipModel.get('formatter');\n            positionExpr = positionExpr || tooltipModel.get('position');\n            var html = defaultHtml;\n\n            if (formatter && typeof formatter === 'string') {\n                html = formatUtil.formatTpl(formatter, params, true);\n            }\n            else if (typeof formatter === 'function') {\n                var callback = bind(function (cbTicket, html) {\n                    if (cbTicket === this._ticket) {\n                        tooltipContent.setContent(html);\n                        this._updatePosition(\n                            tooltipModel, positionExpr, x, y, tooltipContent, params, el\n                        );\n                    }\n                }, this);\n                this._ticket = asyncTicket;\n                html = formatter(params, asyncTicket, callback);\n            }\n\n            tooltipContent.setContent(html);\n            tooltipContent.show(tooltipModel);\n\n            this._updatePosition(\n                tooltipModel, positionExpr, x, y, tooltipContent, params, el\n            );\n        },\n\n        /**\n         * @param  {string|Function|Array.<number>} positionExpr\n         * @param  {number} x Mouse x\n         * @param  {number} y Mouse y\n         * @param  {boolean} confine Whether confine tooltip content in view rect.\n         * @param  {Object|<Array.<Object>} params\n         * @param  {module:zrender/Element} el target element\n         * @param  {module:echarts/ExtensionAPI} api\n         * @return {Array.<number>}\n         */\n        _updatePosition: function (tooltipModel, positionExpr, x, y, content, params, el) {\n            var viewWidth = this._api.getWidth();\n            var viewHeight = this._api.getHeight();\n            positionExpr = positionExpr || tooltipModel.get('position');\n\n            var contentSize = content.getSize();\n            var align = tooltipModel.get('align');\n            var vAlign = tooltipModel.get('verticalAlign');\n            var rect = el && el.getBoundingRect().clone();\n            el && rect.applyTransform(el.transform);\n\n            if (typeof positionExpr === 'function') {\n                // Callback of position can be an array or a string specify the position\n                positionExpr = positionExpr([x, y], params, content.el, rect, {\n                    viewSize: [viewWidth, viewHeight],\n                    contentSize: contentSize.slice()\n                });\n            }\n\n            if (zrUtil.isArray(positionExpr)) {\n                x = parsePercent(positionExpr[0], viewWidth);\n                y = parsePercent(positionExpr[1], viewHeight);\n            }\n            else if (zrUtil.isObject(positionExpr)) {\n                positionExpr.width = contentSize[0];\n                positionExpr.height = contentSize[1];\n                var layoutRect = layoutUtil.getLayoutRect(\n                    positionExpr, {width: viewWidth, height: viewHeight}\n                );\n                x = layoutRect.x;\n                y = layoutRect.y;\n                align = null;\n                // When positionExpr is left/top/right/bottom,\n                // align and verticalAlign will not work.\n                vAlign = null;\n            }\n            // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n            else if (typeof positionExpr === 'string' && el) {\n                var pos = calcTooltipPosition(\n                    positionExpr, rect, contentSize\n                );\n                x = pos[0];\n                y = pos[1];\n            }\n            else {\n                var pos = refixTooltipPosition(\n                    x, y, content.el, viewWidth, viewHeight, align ? null : 20, vAlign ? null : 20\n                );\n                x = pos[0];\n                y = pos[1];\n            }\n\n            align && (x -= isCenterAlign(align) ? contentSize[0] / 2 : align === 'right' ? contentSize[0] : 0);\n            vAlign && (y -= isCenterAlign(vAlign) ? contentSize[1] / 2 : vAlign === 'bottom' ? contentSize[1] : 0);\n\n            if (tooltipModel.get('confine')) {\n                var pos = confineTooltipPosition(\n                    x, y, content.el, viewWidth, viewHeight\n                );\n                x = pos[0];\n                y = pos[1];\n            }\n\n            content.moveTo(x, y);\n        },\n\n        // FIXME\n        // Should we remove this but leave this to user?\n        _updateContentNotChangedOnAxis: function (dataByCoordSys) {\n            var lastCoordSys = this._lastDataByCoordSys;\n            var contentNotChanged = !!lastCoordSys\n                && lastCoordSys.length === dataByCoordSys.length;\n\n            each(lastCoordSys, function (lastItemCoordSys, indexCoordSys) {\n                var lastDataByAxis = lastItemCoordSys.dataByAxis || {};\n                var thisItemCoordSys = dataByCoordSys[indexCoordSys] || {};\n                var thisDataByAxis = thisItemCoordSys.dataByAxis || [];\n                contentNotChanged &= lastDataByAxis.length === thisDataByAxis.length;\n\n                each(lastDataByAxis, function (lastItem, indexAxis) {\n                    var thisItem = thisDataByAxis[indexAxis] || {};\n                    var lastIndices = lastItem.seriesDataIndices || [];\n                    var newIndices = thisItem.seriesDataIndices || [];\n\n                    contentNotChanged &=\n                        lastItem.value === thisItem.value\n                        && lastItem.axisType === thisItem.axisType\n                        && lastItem.axisId === thisItem.axisId\n                        && lastIndices.length === newIndices.length;\n\n                    each(lastIndices, function (lastIdxItem, j) {\n                        var newIdxItem = newIndices[j];\n                        contentNotChanged &=\n                            lastIdxItem.seriesIndex === newIdxItem.seriesIndex\n                            && lastIdxItem.dataIndex === newIdxItem.dataIndex;\n                    });\n                });\n            });\n\n            this._lastDataByCoordSys = dataByCoordSys;\n\n            return !!contentNotChanged;\n        },\n\n        _hide: function (dispatchAction) {\n            // Do not directly hideLater here, because this behavior may be prevented\n            // in dispatchAction when showTip is dispatched.\n\n            // FIXME\n            // duplicated hideTip if manuallyHideTip is called from dispatchAction.\n            this._lastDataByCoordSys = null;\n            dispatchAction({\n                type: 'hideTip',\n                from: this.uid\n            });\n        },\n\n        dispose: function (ecModel, api) {\n            if (env.node) {\n                return;\n            }\n            this._tooltipContent.hide();\n            globalListener.unregister('itemTooltip', api);\n        }\n    });\n\n\n    /**\n     * @param {Array.<Object|module:echarts/model/Model>} modelCascade\n     * From top to bottom. (the last one should be globalTooltipModel);\n     */\n    function buildTooltipModel(modelCascade) {\n        var resultModel = modelCascade.pop();\n        while (modelCascade.length) {\n            var tooltipOpt = modelCascade.pop();\n            if (tooltipOpt) {\n                if (tooltipOpt instanceof Model) {\n                    tooltipOpt = tooltipOpt.get('tooltip', true);\n                }\n                // In each data item tooltip can be simply write:\n                // {\n                //  value: 10,\n                //  tooltip: 'Something you need to know'\n                // }\n                if (typeof tooltipOpt === 'string') {\n                    tooltipOpt = {formatter: tooltipOpt};\n                }\n                resultModel = new Model(tooltipOpt, resultModel, resultModel.ecModel);\n            }\n        }\n        return resultModel;\n    }\n\n    function makeDispatchAction(payload, api) {\n        return payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n    }\n\n    function refixTooltipPosition(x, y, el, viewWidth, viewHeight, gapH, gapV) {\n        var width = el.clientWidth;\n        var height = el.clientHeight;\n\n        if (gapH != null) {\n            if (x + width + gapH > viewWidth) {\n                x -= width + gapH;\n            }\n            else {\n                x += gapH;\n            }\n        }\n        if (gapV != null) {\n            if (y + height + gapV > viewHeight) {\n                y -= height + gapV;\n            }\n            else {\n                y += gapV;\n            }\n        }\n        return [x, y];\n    }\n\n    function confineTooltipPosition(x, y, el, viewWidth, viewHeight) {\n        var width = el.clientWidth;\n        var height = el.clientHeight;\n\n        x = Math.min(x + width, viewWidth) - width;\n        y = Math.min(y + height, viewHeight) - height;\n        x = Math.max(x, 0);\n        y = Math.max(y, 0);\n\n        return [x, y];\n    }\n\n    function calcTooltipPosition(position, rect, contentSize) {\n        var domWidth = contentSize[0];\n        var domHeight = contentSize[1];\n        var gap = 5;\n        var x = 0;\n        var y = 0;\n        var rectWidth = rect.width;\n        var rectHeight = rect.height;\n        switch (position) {\n            case 'inside':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n                break;\n            case 'top':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y - domHeight - gap;\n                break;\n            case 'bottom':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y + rectHeight + gap;\n                break;\n            case 'left':\n                x = rect.x - domWidth - gap;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n                break;\n            case 'right':\n                x = rect.x + rectWidth + gap;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n        }\n        return [x, y];\n    }\n\n    function isCenterAlign(align) {\n        return align === 'center' || align === 'middle';\n    }\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.echarts@3.5.4@echarts/lib/component/tooltip/TooltipView.js\n// module id = 323\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var defaultOption = {\n        show: true,\n        zlevel: 0,                  // 一级层叠\n        z: 0,                       // 二级层叠\n        // 反向坐标轴\n        inverse: false,\n\n        // 坐标轴名字，默认为空\n        name: '',\n        // 坐标轴名字位置，支持'start' | 'middle' | 'end'\n        nameLocation: 'end',\n        // 坐标轴名字旋转，degree。\n        nameRotate: null, // Adapt to axis rotate, when nameLocation is 'middle'.\n        nameTruncate: {\n            maxWidth: null,\n            ellipsis: '...',\n            placeholder: '.'\n        },\n        // 坐标轴文字样式，默认取全局样式\n        nameTextStyle: {},\n        // 文字与轴线距离\n        nameGap: 15,\n\n        silent: false, // Default false to support tooltip.\n        triggerEvent: false, // Default false to avoid legacy user event listener fail.\n\n        tooltip: {\n            show: false\n        },\n\n        axisPointer: {},\n\n        // 坐标轴线\n        axisLine: {\n            // 默认显示，属性show控制显示与否\n            show: true,\n            onZero: true,\n            // 属性lineStyle控制线条样式\n            lineStyle: {\n                color: '#333',\n                width: 1,\n                type: 'solid'\n            }\n        },\n        // 坐标轴小标记\n        axisTick: {\n            // 属性show控制显示与否，默认显示\n            show: true,\n            // 控制小标记是否在grid里\n            inside: false,\n            // 属性length控制线长\n            length: 5,\n            // 属性lineStyle控制线条样式\n            lineStyle: {\n                width: 1\n            }\n        },\n        // 坐标轴文本标签，详见axis.axisLabel\n        axisLabel: {\n            show: true,\n            // 控制文本标签是否在grid里\n            inside: false,\n            rotate: 0,\n            showMinLabel: null, // true | false | null (auto)\n            showMaxLabel: null, // true | false | null (auto)\n            margin: 8,\n            // formatter: null,\n            // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n            textStyle: {\n                fontSize: 12\n            }\n        },\n        // 分隔线\n        splitLine: {\n            // 默认显示，属性show控制显示与否\n            show: true,\n            // 属性lineStyle（详见lineStyle）控制线条样式\n            lineStyle: {\n                color: ['#ccc'],\n                width: 1,\n                type: 'solid'\n            }\n        },\n        // 分隔区域\n        splitArea: {\n            // 默认不显示，属性show控制显示与否\n            show: false,\n            // 属性areaStyle（详见areaStyle）控制区域样式\n            areaStyle: {\n                color: ['rgba(250,250,250,0.3)','rgba(200,200,200,0.3)']\n            }\n        }\n    };\n\n    var categoryAxis = zrUtil.merge({\n        // 类目起始和结束两端空白策略\n        boundaryGap: true,\n        // splitArea: {\n            // show: false\n        // },\n        splitLine: {\n            show: false\n        },\n        // 坐标轴小标记\n        axisTick: {\n            // If tick is align with label when boundaryGap is true\n            alignWithLabel: false,\n            interval: 'auto'\n        },\n        // 坐标轴文本标签，详见axis.axisLabel\n        axisLabel: {\n            interval: 'auto'\n        }\n    }, defaultOption);\n\n    var valueAxis = zrUtil.merge({\n        // 数值起始和结束两端空白策略\n        boundaryGap: [0, 0],\n        // 最小值, 设置成 'dataMin' 则从数据中计算最小值\n        // min: null,\n        // 最大值，设置成 'dataMax' 则从数据中计算最大值\n        // max: null,\n        // Readonly prop, specifies start value of the range when using data zoom.\n        // rangeStart: null\n        // Readonly prop, specifies end value of the range when using data zoom.\n        // rangeEnd: null\n        // 脱离0值比例，放大聚焦到最终_min，_max区间\n        // scale: false,\n        // 分割段数，默认为5\n        splitNumber: 5\n        // Minimum interval\n        // minInterval: null\n    }, defaultOption);\n\n    // FIXME\n    var timeAxis = zrUtil.defaults({\n        scale: true,\n        min: 'dataMin',\n        max: 'dataMax'\n    }, valueAxis);\n    var logAxis = zrUtil.defaults({\n        logBase: 10\n    }, valueAxis);\n    logAxis.scale = true;\n\n    module.exports = {\n        categoryAxis: categoryAxis,\n        valueAxis: valueAxis,\n        timeAxis: timeAxis,\n        logAxis: logAxis\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.echarts@3.5.4@echarts/lib/coord/axisDefault.js\n// module id = 324\n// module chunks = 0","\n\n    var axisDefault = require('./axisDefault');\n    var zrUtil = require('zrender/lib/core/util');\n    var ComponentModel = require('../model/Component');\n    var layout = require('../util/layout');\n\n    // FIXME axisType is fixed ?\n    var AXIS_TYPES = ['value', 'category', 'time', 'log'];\n\n    /**\n     * Generate sub axis model class\n     * @param {string} axisName 'x' 'y' 'radius' 'angle' 'parallel'\n     * @param {module:echarts/model/Component} BaseAxisModelClass\n     * @param {Function} axisTypeDefaulter\n     * @param {Object} [extraDefaultOption]\n     */\n    module.exports = function (axisName, BaseAxisModelClass, axisTypeDefaulter, extraDefaultOption) {\n\n        zrUtil.each(AXIS_TYPES, function (axisType) {\n\n            BaseAxisModelClass.extend({\n\n                type: axisName + 'Axis.' + axisType,\n\n                mergeDefaultAndTheme: function (option, ecModel) {\n                    var layoutMode = this.layoutMode;\n                    var inputPositionParams = layoutMode\n                        ? layout.getLayoutParams(option) : {};\n\n                    var themeModel = ecModel.getTheme();\n                    zrUtil.merge(option, themeModel.get(axisType + 'Axis'));\n                    zrUtil.merge(option, this.getDefaultOption());\n\n                    option.type = axisTypeDefaulter(axisName, option);\n\n                    if (layoutMode) {\n                        layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n                    }\n                },\n\n                defaultOption: zrUtil.mergeAll(\n                    [\n                        {},\n                        axisDefault[axisType + 'Axis'],\n                        extraDefaultOption\n                    ],\n                    true\n                )\n            });\n        });\n\n        ComponentModel.registerSubTypeDefaulter(\n            axisName + 'Axis',\n            zrUtil.curry(axisTypeDefaulter, axisName)\n        );\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.echarts@3.5.4@echarts/lib/coord/axisModelCreator.js\n// module id = 325\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Axis = require('../Axis');\n    var axisLabelInterval = require('./axisLabelInterval');\n\n    /**\n     * Extend axis 2d\n     * @constructor module:echarts/coord/cartesian/Axis2D\n     * @extends {module:echarts/coord/cartesian/Axis}\n     * @param {string} dim\n     * @param {*} scale\n     * @param {Array.<number>} coordExtent\n     * @param {string} axisType\n     * @param {string} position\n     */\n    var Axis2D = function (dim, scale, coordExtent, axisType, position) {\n        Axis.call(this, dim, scale, coordExtent);\n        /**\n         * Axis type\n         *  - 'category'\n         *  - 'value'\n         *  - 'time'\n         *  - 'log'\n         * @type {string}\n         */\n        this.type = axisType || 'value';\n\n        /**\n         * Axis position\n         *  - 'top'\n         *  - 'bottom'\n         *  - 'left'\n         *  - 'right'\n         */\n        this.position = position || 'bottom';\n    };\n\n    Axis2D.prototype = {\n\n        constructor: Axis2D,\n\n        /**\n         * Index of axis, can be used as key\n         */\n        index: 0,\n        /**\n         * If axis is on the zero position of the other axis\n         * @type {boolean}\n         */\n        onZero: false,\n\n        /**\n         * Axis model\n         * @param {module:echarts/coord/cartesian/AxisModel}\n         */\n        model: null,\n\n        isHorizontal: function () {\n            var position = this.position;\n            return position === 'top' || position === 'bottom';\n        },\n\n        /**\n         * Each item cooresponds to this.getExtent(), which\n         * means globalExtent[0] may greater than globalExtent[1],\n         * unless `asc` is input.\n         *\n         * @param {boolean} [asc]\n         * @return {Array.<number>}\n         */\n        getGlobalExtent: function (asc) {\n            var ret = this.getExtent();\n            ret[0] = this.toGlobalCoord(ret[0]);\n            ret[1] = this.toGlobalCoord(ret[1]);\n            asc && ret[0] > ret[1] && ret.reverse();\n            return ret;\n        },\n\n        getOtherAxis: function () {\n            this.grid.getOtherAxis();\n        },\n\n        /**\n         * @return {number}\n         */\n        getLabelInterval: function () {\n            var labelInterval = this._labelInterval;\n            if (!labelInterval) {\n                labelInterval = this._labelInterval = axisLabelInterval(this);\n            }\n            return labelInterval;\n        },\n\n        /**\n         * If label is ignored.\n         * Automatically used when axis is category and label can not be all shown\n         * @param  {number}  idx\n         * @return {boolean}\n         */\n        isLabelIgnored: function (idx) {\n            if (this.type === 'category') {\n                var labelInterval = this.getLabelInterval();\n                return ((typeof labelInterval === 'function')\n                    && !labelInterval(idx, this.scale.getLabel(idx)))\n                    || idx % (labelInterval + 1);\n            }\n        },\n\n        /**\n         * @override\n         */\n        pointToData: function (point, clamp) {\n            return this.coordToData(this.toLocalCoord(point[this.dim === 'x' ? 0 : 1]), clamp);\n        },\n\n        /**\n         * Transform global coord to local coord,\n         * i.e. var localCoord = axis.toLocalCoord(80);\n         * designate by module:echarts/coord/cartesian/Grid.\n         * @type {Function}\n         */\n        toLocalCoord: null,\n\n        /**\n         * Transform global coord to local coord,\n         * i.e. var globalCoord = axis.toLocalCoord(40);\n         * designate by module:echarts/coord/cartesian/Grid.\n         * @type {Function}\n         */\n        toGlobalCoord: null\n\n    };\n    zrUtil.inherits(Axis2D, Axis);\n\n    module.exports = Axis2D;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.echarts@3.5.4@echarts/lib/coord/cartesian/Axis2D.js\n// module id = 326\n// module chunks = 0","'use strict';\n/**\n * Cartesian coordinate system\n * @module  echarts/coord/Cartesian\n *\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    function dimAxisMapper(dim) {\n        return this._axes[dim];\n    }\n\n    /**\n     * @alias module:echarts/coord/Cartesian\n     * @constructor\n     */\n    var Cartesian = function (name) {\n        this._axes = {};\n\n        this._dimList = [];\n\n        /**\n         * @type {string}\n         */\n        this.name = name || '';\n    };\n\n    Cartesian.prototype = {\n\n        constructor: Cartesian,\n\n        type: 'cartesian',\n\n        /**\n         * Get axis\n         * @param  {number|string} dim\n         * @return {module:echarts/coord/Cartesian~Axis}\n         */\n        getAxis: function (dim) {\n            return this._axes[dim];\n        },\n\n        /**\n         * Get axes list\n         * @return {Array.<module:echarts/coord/Cartesian~Axis>}\n         */\n        getAxes: function () {\n            return zrUtil.map(this._dimList, dimAxisMapper, this);\n        },\n\n        /**\n         * Get axes list by given scale type\n         */\n        getAxesByScale: function (scaleType) {\n            scaleType = scaleType.toLowerCase();\n            return zrUtil.filter(\n                this.getAxes(),\n                function (axis) {\n                    return axis.scale.type === scaleType;\n                }\n            );\n        },\n\n        /**\n         * Add axis\n         * @param {module:echarts/coord/Cartesian.Axis}\n         */\n        addAxis: function (axis) {\n            var dim = axis.dim;\n\n            this._axes[dim] = axis;\n\n            this._dimList.push(dim);\n        },\n\n        /**\n         * Convert data to coord in nd space\n         * @param {Array.<number>|Object.<string, number>} val\n         * @return {Array.<number>|Object.<string, number>}\n         */\n        dataToCoord: function (val) {\n            return this._dataCoordConvert(val, 'dataToCoord');\n        },\n\n        /**\n         * Convert coord in nd space to data\n         * @param  {Array.<number>|Object.<string, number>} val\n         * @return {Array.<number>|Object.<string, number>}\n         */\n        coordToData: function (val) {\n            return this._dataCoordConvert(val, 'coordToData');\n        },\n\n        _dataCoordConvert: function (input, method) {\n            var dimList = this._dimList;\n\n            var output = input instanceof Array ? [] : {};\n\n            for (var i = 0; i < dimList.length; i++) {\n                var dim = dimList[i];\n                var axis = this._axes[dim];\n\n                output[dim] = axis[method](input[dim]);\n            }\n\n            return output;\n        }\n    };\n\n    module.exports = Cartesian;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.echarts@3.5.4@echarts/lib/coord/cartesian/Cartesian.js\n// module id = 327\n// module chunks = 0","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Cartesian = require('./Cartesian');\n\n    function Cartesian2D(name) {\n\n        Cartesian.call(this, name);\n    }\n\n    Cartesian2D.prototype = {\n\n        constructor: Cartesian2D,\n\n        type: 'cartesian2d',\n\n        /**\n         * @type {Array.<string>}\n         * @readOnly\n         */\n        dimensions: ['x', 'y'],\n\n        /**\n         * Base axis will be used on stacking.\n         *\n         * @return {module:echarts/coord/cartesian/Axis2D}\n         */\n        getBaseAxis: function () {\n            return this.getAxesByScale('ordinal')[0]\n                || this.getAxesByScale('time')[0]\n                || this.getAxis('x');\n        },\n\n        /**\n         * If contain point\n         * @param {Array.<number>} point\n         * @return {boolean}\n         */\n        containPoint: function (point) {\n            var axisX = this.getAxis('x');\n            var axisY = this.getAxis('y');\n            return axisX.contain(axisX.toLocalCoord(point[0]))\n                && axisY.contain(axisY.toLocalCoord(point[1]));\n        },\n\n        /**\n         * If contain data\n         * @param {Array.<number>} data\n         * @return {boolean}\n         */\n        containData: function (data) {\n            return this.getAxis('x').containData(data[0])\n                && this.getAxis('y').containData(data[1]);\n        },\n\n        /**\n         * Convert series data to an array of points\n         * @param {module:echarts/data/List} data\n         * @param {boolean} stack\n         * @return {Array}\n         *  Return array of points. For example:\n         *  `[[10, 10], [20, 20], [30, 30]]`\n         */\n        dataToPoints: function (data, stack) {\n            return data.mapArray(['x', 'y'], function (x, y) {\n                return this.dataToPoint([x, y]);\n            }, stack, this);\n        },\n\n        /**\n         * @param {Array.<number>} data\n         * @param {boolean} [clamp=false]\n         * @return {Array.<number>}\n         */\n        dataToPoint: function (data, clamp) {\n            var xAxis = this.getAxis('x');\n            var yAxis = this.getAxis('y');\n            return [\n                xAxis.toGlobalCoord(xAxis.dataToCoord(data[0], clamp)),\n                yAxis.toGlobalCoord(yAxis.dataToCoord(data[1], clamp))\n            ];\n        },\n\n        /**\n         * @param {Array.<number>} point\n         * @param {boolean} [clamp=false]\n         * @return {Array.<number>}\n         */\n        pointToData: function (point, clamp) {\n            var xAxis = this.getAxis('x');\n            var yAxis = this.getAxis('y');\n            return [\n                xAxis.coordToData(xAxis.toLocalCoord(point[0]), clamp),\n                yAxis.coordToData(yAxis.toLocalCoord(point[1]), clamp)\n            ];\n        },\n\n        /**\n         * Get other axis\n         * @param {module:echarts/coord/cartesian/Axis2D} axis\n         */\n        getOtherAxis: function (axis) {\n            return this.getAxis(axis.dim === 'x' ? 'y' : 'x');\n        }\n    };\n\n    zrUtil.inherits(Cartesian2D, Cartesian);\n\n    module.exports = Cartesian2D;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.echarts@3.5.4@echarts/lib/coord/cartesian/Cartesian2D.js\n// module id = 328\n// module chunks = 0","'use strict';\n// Grid 是在有直角坐标系的时候必须要存在的\n// 所以这里也要被 Cartesian2D 依赖\n\n\n    require('./AxisModel');\n\n    var ComponentModel = require('../../model/Component');\n\n    module.exports = ComponentModel.extend({\n\n        type: 'grid',\n\n        dependencies: ['xAxis', 'yAxis'],\n\n        layoutMode: 'box',\n\n        /**\n         * @type {module:echarts/coord/cartesian/Grid}\n         */\n        coordinateSystem: null,\n\n        defaultOption: {\n            show: false,\n            zlevel: 0,\n            z: 0,\n            left: '10%',\n            top: 60,\n            right: '10%',\n            bottom: 60,\n            // If grid size contain label\n            containLabel: false,\n            // width: {totalWidth} - left - right,\n            // height: {totalHeight} - top - bottom,\n            backgroundColor: 'rgba(0,0,0,0)',\n            borderWidth: 1,\n            borderColor: '#ccc'\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.echarts@3.5.4@echarts/lib/coord/cartesian/GridModel.js\n// module id = 329\n// module chunks = 0","'use strict';\n/**\n * Helper function for axisLabelInterval calculation\n */\n\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var axisHelper = require('../axisHelper');\n\n    module.exports = function (axis) {\n        var axisModel = axis.model;\n        var labelModel = axisModel.getModel('axisLabel');\n        var labelInterval = labelModel.get('interval');\n        if (!(axis.type === 'category' && labelInterval === 'auto')) {\n            return labelInterval === 'auto' ? 0 : labelInterval;\n        }\n\n        return axisHelper.getAxisLabelInterval(\n            zrUtil.map(axis.scale.getTicks(), axis.dataToCoord, axis),\n            axisModel.getFormattedLabels(),\n            labelModel.getModel('textStyle').getFont(),\n            axis.isHorizontal()\n        );\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.echarts@3.5.4@echarts/lib/coord/cartesian/axisLabelInterval.js\n// module id = 330\n// module chunks = 0","'use strict';\n\n\n    function defaultKeyGetter(item) {\n        return item;\n    }\n\n    function DataDiffer(oldArr, newArr, oldKeyGetter, newKeyGetter) {\n        this._old = oldArr;\n        this._new = newArr;\n\n        this._oldKeyGetter = oldKeyGetter || defaultKeyGetter;\n        this._newKeyGetter = newKeyGetter || defaultKeyGetter;\n    }\n\n    DataDiffer.prototype = {\n\n        constructor: DataDiffer,\n\n        /**\n         * Callback function when add a data\n         */\n        add: function (func) {\n            this._add = func;\n            return this;\n        },\n\n        /**\n         * Callback function when update a data\n         */\n        update: function (func) {\n            this._update = func;\n            return this;\n        },\n\n        /**\n         * Callback function when remove a data\n         */\n        remove: function (func) {\n            this._remove = func;\n            return this;\n        },\n\n        execute: function () {\n            var oldArr = this._old;\n            var newArr = this._new;\n            var oldKeyGetter = this._oldKeyGetter;\n            var newKeyGetter = this._newKeyGetter;\n\n            var oldDataIndexMap = {};\n            var newDataIndexMap = {};\n            var oldDataKeyArr = [];\n            var newDataKeyArr = [];\n            var i;\n\n            initIndexMap(oldArr, oldDataIndexMap, oldDataKeyArr, oldKeyGetter);\n            initIndexMap(newArr, newDataIndexMap, newDataKeyArr, newKeyGetter);\n\n            // Travel by inverted order to make sure order consistency\n            // when duplicate keys exists (consider newDataIndex.pop() below).\n            // For performance consideration, these code below do not look neat.\n            for (i = 0; i < oldArr.length; i++) {\n                var key = oldDataKeyArr[i];\n                var idx = newDataIndexMap[key];\n\n                // idx can never be empty array here. see 'set null' logic below.\n                if (idx != null) {\n                    // Consider there is duplicate key (for example, use dataItem.name as key).\n                    // We should make sure every item in newArr and oldArr can be visited.\n                    var len = idx.length;\n                    if (len) {\n                        len === 1 && (newDataIndexMap[key] = null);\n                        idx = idx.unshift();\n                    }\n                    else {\n                        newDataIndexMap[key] = null;\n                    }\n                    this._update && this._update(idx, i);\n                }\n                else {\n                    this._remove && this._remove(i);\n                }\n            }\n\n            for (var i = 0; i < newDataKeyArr.length; i++) {\n                var key = newDataKeyArr[i];\n                if (newDataIndexMap.hasOwnProperty(key)) {\n                    var idx = newDataIndexMap[key];\n                    if (idx == null) {\n                        continue;\n                    }\n                    // idx can never be empty array here. see 'set null' logic above.\n                    if (!idx.length) {\n                        this._add && this._add(idx);\n                    }\n                    else {\n                        for (var j = 0, len = idx.length; j < len; j++) {\n                            this._add && this._add(idx[j]);\n                        }\n                    }\n                }\n            }\n        }\n    };\n\n    function initIndexMap(arr, map, keyArr, keyGetter) {\n        for (var i = 0; i < arr.length; i++) {\n            var key = keyGetter(arr[i], i);\n            var existence = map[key];\n            if (existence == null) {\n                keyArr.push(key);\n                map[key] = i;\n            }\n            else {\n                if (!existence.length) {\n                    map[key] = existence = [existence];\n                }\n                existence.push(i);\n            }\n        }\n    }\n\n    module.exports = DataDiffer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.echarts@3.5.4@echarts/lib/data/DataDiffer.js\n// module id = 331\n// module chunks = 0","\n\n    var createListFromArray = require('./chart/helper/createListFromArray');\n    var symbolUtil = require('./util/symbol');\n    var axisHelper = require('./coord/axisHelper');\n    var axisModelCommonMixin = require('./coord/axisModelCommonMixin');\n    var Model = require('./model/Model');\n    var util = require('zrender/lib/core/util');\n\n    module.exports = {\n        /**\n         * Create a muti dimension List structure from seriesModel.\n         * @param  {module:echarts/model/Model} seriesModel\n         * @return {module:echarts/data/List} list\n         */\n        createList: function (seriesModel) {\n            var data = seriesModel.get('data');\n            return createListFromArray(data, seriesModel, seriesModel.ecModel);\n        },\n\n        /**\n         * Complete the dimensions array guessed from the data structure.\n         * @param  {Array.<string>} dimensions Necessary dimensions, like ['x', 'y']\n         * @param  {Array} data Data list. [[1, 2, 3], [2, 3, 4]]\n         * @param  {Object} [opt]\n         * @param  {Array.<string>} [opt.defaultNames] Default names to fill not necessary dimensions, like ['value']\n         * @param  {string} [opt.extraPrefix] Prefix of name when filling the left dimensions.\n         * @param  {number} [opt.dimCount] If not specified, guess by the first data item.\n         * @return {Array.<string>}\n         */\n        completeDimensions: require('./data/helper/completeDimensions'),\n\n        /**\n         * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n         * @see http://echarts.baidu.com/option.html#series-scatter.symbol\n         * @param {string} symbolDesc\n         * @param {number} x\n         * @param {number} y\n         * @param {number} w\n         * @param {number} h\n         * @param {string} color\n         */\n        createSymbol: symbolUtil.createSymbol,\n\n        /**\n         * Create scale\n         * @param {Array.<number>} dataExtent\n         * @param {Object|module:echarts/Model} option\n         */\n        createScale: function (dataExtent, option) {\n            var axisModel = option;\n            if (!(option instanceof Model)) {\n                axisModel = new Model(option);\n                util.mixin(axisModel, axisModelCommonMixin);\n            }\n\n            var scale = axisHelper.createScaleByModel(axisModel);\n            scale.setExtent(dataExtent[0], dataExtent[1]);\n\n            axisHelper.niceScaleExtent(scale, axisModel);\n            return scale;\n        },\n\n        /**\n         * Mixin common methods to axis model,\n         *\n         * Inlcude methods\n         * `getFormattedLabels() => Array.<string>`\n         * `getCategories() => Array.<string>`\n         * `getMin(origin: boolean) => number`\n         * `getMax(origin: boolean) => number`\n         * `getNeedCrossZero() => boolean`\n         * `setRange(start: number, end: number)`\n         * `resetRange()`\n         */\n        mixinAxisModelCommonMethods: function (Model) {\n            util.mixin(Model, axisModelCommonMixin);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.echarts@3.5.4@echarts/lib/helper.js\n// module id = 332\n// module chunks = 0","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var numberUtil = require('../util/number');\n    var parsePercent = numberUtil.parsePercent;\n\n    function getSeriesStackId(seriesModel) {\n        return seriesModel.get('stack') || '__ec_stack_' + seriesModel.seriesIndex;\n    }\n\n    function getAxisKey(axis) {\n        return axis.dim + axis.index;\n    }\n\n    function calBarWidthAndOffset(barSeries, api) {\n        // Columns info on each category axis. Key is cartesian name\n        var columnsMap = {};\n\n        zrUtil.each(barSeries, function (seriesModel, idx) {\n            var data = seriesModel.getData();\n            var cartesian = seriesModel.coordinateSystem;\n\n            var baseAxis = cartesian.getBaseAxis();\n            var axisExtent = baseAxis.getExtent();\n            var bandWidth = baseAxis.type === 'category'\n                ? baseAxis.getBandWidth()\n                : (Math.abs(axisExtent[1] - axisExtent[0]) / data.count());\n\n            var columnsOnAxis = columnsMap[getAxisKey(baseAxis)] || {\n                bandWidth: bandWidth,\n                remainedWidth: bandWidth,\n                autoWidthCount: 0,\n                categoryGap: '20%',\n                gap: '30%',\n                stacks: {}\n            };\n            var stacks = columnsOnAxis.stacks;\n            columnsMap[getAxisKey(baseAxis)] = columnsOnAxis;\n\n            var stackId = getSeriesStackId(seriesModel);\n\n            if (!stacks[stackId]) {\n                columnsOnAxis.autoWidthCount++;\n            }\n            stacks[stackId] = stacks[stackId] || {\n                width: 0,\n                maxWidth: 0\n            };\n\n            var barWidth = parsePercent(\n                seriesModel.get('barWidth'), bandWidth\n            );\n            var barMaxWidth = parsePercent(\n                seriesModel.get('barMaxWidth'), bandWidth\n            );\n            var barGap = seriesModel.get('barGap');\n            var barCategoryGap = seriesModel.get('barCategoryGap');\n\n            // Caution: In a single coordinate system, these barGrid attributes\n            // will be shared by series. Consider that they have default values,\n            // only the attributes set on the last series will work.\n            // Do not change this fact unless there will be a break change.\n\n            // TODO\n            if (barWidth && !stacks[stackId].width) {\n                barWidth = Math.min(columnsOnAxis.remainedWidth, barWidth);\n                stacks[stackId].width = barWidth;\n                columnsOnAxis.remainedWidth -= barWidth;\n            }\n\n            barMaxWidth && (stacks[stackId].maxWidth = barMaxWidth);\n            (barGap != null) && (columnsOnAxis.gap = barGap);\n            (barCategoryGap != null) && (columnsOnAxis.categoryGap = barCategoryGap);\n        });\n\n        var result = {};\n\n        zrUtil.each(columnsMap, function (columnsOnAxis, coordSysName) {\n\n            result[coordSysName] = {};\n\n            var stacks = columnsOnAxis.stacks;\n            var bandWidth = columnsOnAxis.bandWidth;\n            var categoryGap = parsePercent(columnsOnAxis.categoryGap, bandWidth);\n            var barGapPercent = parsePercent(columnsOnAxis.gap, 1);\n\n            var remainedWidth = columnsOnAxis.remainedWidth;\n            var autoWidthCount = columnsOnAxis.autoWidthCount;\n            var autoWidth = (remainedWidth - categoryGap)\n                / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n            autoWidth = Math.max(autoWidth, 0);\n\n            // Find if any auto calculated bar exceeded maxBarWidth\n            zrUtil.each(stacks, function (column, stack) {\n                var maxWidth = column.maxWidth;\n                if (maxWidth && maxWidth < autoWidth) {\n                    maxWidth = Math.min(maxWidth, remainedWidth);\n                    if (column.width) {\n                        maxWidth = Math.min(maxWidth, column.width);\n                    }\n                    remainedWidth -= maxWidth;\n                    column.width = maxWidth;\n                    autoWidthCount--;\n                }\n            });\n\n            // Recalculate width again\n            autoWidth = (remainedWidth - categoryGap)\n                / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n            autoWidth = Math.max(autoWidth, 0);\n\n            var widthSum = 0;\n            var lastColumn;\n            zrUtil.each(stacks, function (column, idx) {\n                if (!column.width) {\n                    column.width = autoWidth;\n                }\n                lastColumn = column;\n                widthSum += column.width * (1 + barGapPercent);\n            });\n            if (lastColumn) {\n                widthSum -= lastColumn.width * barGapPercent;\n            }\n\n            var offset = -widthSum / 2;\n            zrUtil.each(stacks, function (column, stackId) {\n                result[coordSysName][stackId] = result[coordSysName][stackId] || {\n                    offset: offset,\n                    width: column.width\n                };\n\n                offset += column.width * (1 + barGapPercent);\n            });\n        });\n\n        return result;\n    }\n\n    /**\n     * @param {string} seriesType\n     * @param {module:echarts/model/Global} ecModel\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    function barLayoutGrid(seriesType, ecModel, api) {\n\n        var barWidthAndOffset = calBarWidthAndOffset(\n            zrUtil.filter(\n                ecModel.getSeriesByType(seriesType),\n                function (seriesModel) {\n                    return !ecModel.isSeriesFiltered(seriesModel)\n                        && seriesModel.coordinateSystem\n                        && seriesModel.coordinateSystem.type === 'cartesian2d';\n                }\n            )\n        );\n\n        var lastStackCoords = {};\n        var lastStackCoordsOrigin = {};\n\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n\n            var data = seriesModel.getData();\n            var cartesian = seriesModel.coordinateSystem;\n            var baseAxis = cartesian.getBaseAxis();\n\n            var stackId = getSeriesStackId(seriesModel);\n            var columnLayoutInfo = barWidthAndOffset[getAxisKey(baseAxis)][stackId];\n            var columnOffset = columnLayoutInfo.offset;\n            var columnWidth = columnLayoutInfo.width;\n            var valueAxis = cartesian.getOtherAxis(baseAxis);\n\n            var barMinHeight = seriesModel.get('barMinHeight') || 0;\n\n            var valueAxisStart = baseAxis.onZero\n                ? valueAxis.toGlobalCoord(valueAxis.dataToCoord(0))\n                : valueAxis.getGlobalExtent()[0];\n\n            var coords = cartesian.dataToPoints(data, true);\n            lastStackCoords[stackId] = lastStackCoords[stackId] || [];\n            lastStackCoordsOrigin[stackId] = lastStackCoordsOrigin[stackId] || []; // Fix #4243\n\n            data.setLayout({\n                offset: columnOffset,\n                size: columnWidth\n            });\n\n            data.each(valueAxis.dim, function (value, idx) {\n                if (isNaN(value)) {\n                    return;\n                }\n\n                if (!lastStackCoords[stackId][idx]) {\n                    lastStackCoords[stackId][idx] = {\n                        p: valueAxisStart, // Positive stack\n                        n: valueAxisStart  // Negative stack\n                    };\n                    lastStackCoordsOrigin[stackId][idx] = {\n                        p: valueAxisStart, // Positive stack\n                        n: valueAxisStart  // Negative stack\n                    };\n                }\n                var sign = value >= 0 ? 'p' : 'n';\n                var coord = coords[idx];\n                var lastCoord = lastStackCoords[stackId][idx][sign];\n                var lastCoordOrigin = lastStackCoordsOrigin[stackId][idx][sign];\n                var x;\n                var y;\n                var width;\n                var height;\n\n                if (valueAxis.isHorizontal()) {\n                    x = lastCoord;\n                    y = coord[1] + columnOffset;\n                    width = coord[0] - lastCoordOrigin;\n                    height = columnWidth;\n\n                    lastStackCoordsOrigin[stackId][idx][sign] += width;\n                    if (Math.abs(width) < barMinHeight) {\n                        width = (width < 0 ? -1 : 1) * barMinHeight;\n                    }\n                    lastStackCoords[stackId][idx][sign] += width;\n                }\n                else {\n                    x = coord[0] + columnOffset;\n                    y = lastCoord;\n                    width = columnWidth;\n                    height = coord[1] - lastCoordOrigin;\n\n                    lastStackCoordsOrigin[stackId][idx][sign] += height;\n                    if (Math.abs(height) < barMinHeight) {\n                        // Include zero to has a positive bar\n                        height = (height <= 0 ? -1 : 1) * barMinHeight;\n                    }\n                    lastStackCoords[stackId][idx][sign] += height;\n                }\n\n                data.setItemLayout(idx, {\n                    x: x,\n                    y: y,\n                    width: width,\n                    height: height\n                });\n            }, true);\n\n        }, this);\n    }\n\n    module.exports = barLayoutGrid;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.echarts@3.5.4@echarts/lib/layout/barGrid.js\n// module id = 333\n// module chunks = 0","\n\n    var graphic = require('../util/graphic');\n    var zrUtil = require('zrender/lib/core/util');\n    var PI = Math.PI;\n    /**\n     * @param {module:echarts/ExtensionAPI} api\n     * @param {Object} [opts]\n     * @param {string} [opts.text]\n     * @param {string} [opts.color]\n     * @param {string} [opts.textColor]\n     * @return {module:zrender/Element}\n     */\n    module.exports = function (api, opts) {\n        opts = opts || {};\n        zrUtil.defaults(opts, {\n            text: 'loading',\n            color: '#c23531',\n            textColor: '#000',\n            maskColor: 'rgba(255, 255, 255, 0.8)',\n            zlevel: 0\n        });\n        var mask = new graphic.Rect({\n            style: {\n                fill: opts.maskColor\n            },\n            zlevel: opts.zlevel,\n            z: 10000\n        });\n        var arc = new graphic.Arc({\n            shape: {\n                startAngle: -PI / 2,\n                endAngle: -PI / 2 + 0.1,\n                r: 10\n            },\n            style: {\n                stroke: opts.color,\n                lineCap: 'round',\n                lineWidth: 5\n            },\n            zlevel: opts.zlevel,\n            z: 10001\n        });\n        var labelRect = new graphic.Rect({\n            style: {\n                fill: 'none',\n                text: opts.text,\n                textPosition: 'right',\n                textDistance: 10,\n                textFill: opts.textColor\n            },\n            zlevel: opts.zlevel,\n            z: 10001\n        });\n\n        arc.animateShape(true)\n            .when(1000, {\n                endAngle: PI * 3 / 2\n            })\n            .start('circularInOut');\n        arc.animateShape(true)\n            .when(1000, {\n                startAngle: PI * 3 / 2\n            })\n            .delay(300)\n            .start('circularInOut');\n\n        var group = new graphic.Group();\n        group.add(arc);\n        group.add(labelRect);\n        group.add(mask);\n        // Inject resize\n        group.resize = function () {\n            var cx = api.getWidth() / 2;\n            var cy = api.getHeight() / 2;\n            arc.setShape({\n                cx: cx,\n                cy: cy\n            });\n            var r = arc.shape.r;\n            labelRect.setShape({\n                x: cx - r,\n                y: cy - r,\n                width: r * 2,\n                height: r * 2\n            });\n\n            mask.setShape({\n                x: 0,\n                y: 0,\n                width: api.getWidth(),\n                height: api.getHeight()\n            });\n        };\n        group.resize();\n        return group;\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.echarts@3.5.4@echarts/lib/loading/default.js\n// module id = 334\n// module chunks = 0","/**\n * ECharts global model\n *\n * @module {echarts/model/Global}\n */\n\n\n\n    /**\n     * Caution: If the mechanism should be changed some day, these cases\n     * should be considered:\n     *\n     * (1) In `merge option` mode, if using the same option to call `setOption`\n     * many times, the result should be the same (try our best to ensure that).\n     * (2) In `merge option` mode, if a component has no id/name specified, it\n     * will be merged by index, and the result sequence of the components is\n     * consistent to the original sequence.\n     * (3) `reset` feature (in toolbox). Find detailed info in comments about\n     * `mergeOption` in module:echarts/model/OptionManager.\n     */\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../util/model');\n    var Model = require('./Model');\n    var each = zrUtil.each;\n    var filter = zrUtil.filter;\n    var map = zrUtil.map;\n    var isArray = zrUtil.isArray;\n    var indexOf = zrUtil.indexOf;\n    var isObject = zrUtil.isObject;\n\n    var ComponentModel = require('./Component');\n\n    var globalDefault = require('./globalDefault');\n\n    var OPTION_INNER_KEY = '\\0_ec_inner';\n\n    /**\n     * @alias module:echarts/model/Global\n     *\n     * @param {Object} option\n     * @param {module:echarts/model/Model} parentModel\n     * @param {Object} theme\n     */\n    var GlobalModel = Model.extend({\n\n        constructor: GlobalModel,\n\n        init: function (option, parentModel, theme, optionManager) {\n            theme = theme || {};\n\n            this.option = null; // Mark as not initialized.\n\n            /**\n             * @type {module:echarts/model/Model}\n             * @private\n             */\n            this._theme = new Model(theme);\n\n            /**\n             * @type {module:echarts/model/OptionManager}\n             */\n            this._optionManager = optionManager;\n        },\n\n        setOption: function (option, optionPreprocessorFuncs, onlyGraphic) {\n            zrUtil.assert(\n                !(OPTION_INNER_KEY in option),\n                'please use chart.getOption()'\n            );\n\n            this._optionManager.setOption(option, optionPreprocessorFuncs);\n\n            this.resetOption(null, onlyGraphic);\n        },\n\n        /**\n         * @param {string} type null/undefined: reset all.\n         *                      'recreate': force recreate all.\n         *                      'timeline': only reset timeline option\n         *                      'media': only reset media query option\n         * @return {boolean} Whether option changed.\n         */\n        resetOption: function (type, onlyGraphic) {\n            var optionChanged = false;\n            var optionManager = this._optionManager;\n\n            if (!type || type === 'recreate') {\n                var baseOption = optionManager.mountOption(type === 'recreate');\n\n                if (!this.option || type === 'recreate') {\n                    initBase.call(this, baseOption);\n                }\n                else {\n                    // If only graphic, other series and component will not\n                    // go through update process, data should not be restored.\n                    // Otherwise grphic els mounted on data will be eliminated\n                    // and downplay will not work.\n                    !onlyGraphic && this.restoreData();\n                    this.mergeOption(baseOption);\n                }\n                optionChanged = true;\n            }\n\n            if (type === 'timeline' || type === 'media') {\n                this.restoreData();\n            }\n\n            if (!type || type === 'recreate' || type === 'timeline') {\n                var timelineOption = optionManager.getTimelineOption(this);\n                timelineOption && (this.mergeOption(timelineOption), optionChanged = true);\n            }\n\n            if (!type || type === 'recreate' || type === 'media') {\n                var mediaOptions = optionManager.getMediaOption(this, this._api);\n                if (mediaOptions.length) {\n                    each(mediaOptions, function (mediaOption) {\n                        this.mergeOption(mediaOption, optionChanged = true);\n                    }, this);\n                }\n            }\n\n            return optionChanged;\n        },\n\n        /**\n         * @protected\n         */\n        mergeOption: function (newOption) {\n            var option = this.option;\n            var componentsMap = this._componentsMap;\n            var newCptTypes = [];\n\n            // 如果不存在对应的 component model 则直接 merge\n            each(newOption, function (componentOption, mainType) {\n                if (componentOption == null) {\n                    return;\n                }\n\n                if (!ComponentModel.hasClass(mainType)) {\n                    option[mainType] = option[mainType] == null\n                        ? zrUtil.clone(componentOption)\n                        : zrUtil.merge(option[mainType], componentOption, true);\n                }\n                else {\n                    newCptTypes.push(mainType);\n                }\n            });\n\n            // FIXME OPTION 同步是否要改回原来的\n            ComponentModel.topologicalTravel(\n                newCptTypes, ComponentModel.getAllClassMainTypes(), visitComponent, this\n            );\n\n            this._seriesIndices = this._seriesIndices || [];\n\n            function visitComponent(mainType, dependencies) {\n                var newCptOptionList = modelUtil.normalizeToArray(newOption[mainType]);\n\n                var mapResult = modelUtil.mappingToExists(\n                    componentsMap[mainType], newCptOptionList\n                );\n\n                modelUtil.makeIdAndName(mapResult);\n\n                // Set mainType and complete subType.\n                each(mapResult, function (item, index) {\n                    var opt = item.option;\n                    if (isObject(opt)) {\n                        item.keyInfo.mainType = mainType;\n                        item.keyInfo.subType = determineSubType(mainType, opt, item.exist);\n                    }\n                });\n\n                var dependentModels = getComponentsByTypes(\n                    componentsMap, dependencies\n                );\n\n                option[mainType] = [];\n                componentsMap[mainType] = [];\n\n                each(mapResult, function (resultItem, index) {\n                    var componentModel = resultItem.exist;\n                    var newCptOption = resultItem.option;\n\n                    zrUtil.assert(\n                        isObject(newCptOption) || componentModel,\n                        'Empty component definition'\n                    );\n\n                    // Consider where is no new option and should be merged using {},\n                    // see removeEdgeAndAdd in topologicalTravel and\n                    // ComponentModel.getAllClassMainTypes.\n                    if (!newCptOption) {\n                        componentModel.mergeOption({}, this);\n                        componentModel.optionUpdated({}, false);\n                    }\n                    else {\n                        var ComponentModelClass = ComponentModel.getClass(\n                            mainType, resultItem.keyInfo.subType, true\n                        );\n\n                        if (componentModel && componentModel instanceof ComponentModelClass) {\n                            componentModel.name = resultItem.keyInfo.name;\n                            componentModel.mergeOption(newCptOption, this);\n                            componentModel.optionUpdated(newCptOption, false);\n                        }\n                        else {\n                            // PENDING Global as parent ?\n                            var extraOpt = zrUtil.extend(\n                                {\n                                    dependentModels: dependentModels,\n                                    componentIndex: index\n                                },\n                                resultItem.keyInfo\n                            );\n                            componentModel = new ComponentModelClass(\n                                newCptOption, this, this, extraOpt\n                            );\n                            zrUtil.extend(componentModel, extraOpt);\n                            componentModel.init(newCptOption, this, this, extraOpt);\n                            // Call optionUpdated after init.\n                            // newCptOption has been used as componentModel.option\n                            // and may be merged with theme and default, so pass null\n                            // to avoid confusion.\n                            componentModel.optionUpdated(null, true);\n                        }\n                    }\n\n                    componentsMap[mainType][index] = componentModel;\n                    option[mainType][index] = componentModel.option;\n                }, this);\n\n                // Backup series for filtering.\n                if (mainType === 'series') {\n                    this._seriesIndices = createSeriesIndices(componentsMap.series);\n                }\n            }\n        },\n\n        /**\n         * Get option for output (cloned option and inner info removed)\n         * @public\n         * @return {Object}\n         */\n        getOption: function () {\n            var option = zrUtil.clone(this.option);\n\n            each(option, function (opts, mainType) {\n                if (ComponentModel.hasClass(mainType)) {\n                    var opts = modelUtil.normalizeToArray(opts);\n                    for (var i = opts.length - 1; i >= 0; i--) {\n                        // Remove options with inner id.\n                        if (modelUtil.isIdInner(opts[i])) {\n                            opts.splice(i, 1);\n                        }\n                    }\n                    option[mainType] = opts;\n                }\n            });\n\n            delete option[OPTION_INNER_KEY];\n\n            return option;\n        },\n\n        /**\n         * @return {module:echarts/model/Model}\n         */\n        getTheme: function () {\n            return this._theme;\n        },\n\n        /**\n         * @param {string} mainType\n         * @param {number} [idx=0]\n         * @return {module:echarts/model/Component}\n         */\n        getComponent: function (mainType, idx) {\n            var list = this._componentsMap[mainType];\n            if (list) {\n                return list[idx || 0];\n            }\n        },\n\n        /**\n         * If none of index and id and name used, return all components with mainType.\n         * @param {Object} condition\n         * @param {string} condition.mainType\n         * @param {string} [condition.subType] If ignore, only query by mainType\n         * @param {number|Array.<number>} [condition.index] Either input index or id or name.\n         * @param {string|Array.<string>} [condition.id] Either input index or id or name.\n         * @param {string|Array.<string>} [condition.name] Either input index or id or name.\n         * @return {Array.<module:echarts/model/Component>}\n         */\n        queryComponents: function (condition) {\n            var mainType = condition.mainType;\n            if (!mainType) {\n                return [];\n            }\n\n            var index = condition.index;\n            var id = condition.id;\n            var name = condition.name;\n\n            var cpts = this._componentsMap[mainType];\n\n            if (!cpts || !cpts.length) {\n                return [];\n            }\n\n            var result;\n\n            if (index != null) {\n                if (!isArray(index)) {\n                    index = [index];\n                }\n                result = filter(map(index, function (idx) {\n                    return cpts[idx];\n                }), function (val) {\n                    return !!val;\n                });\n            }\n            else if (id != null) {\n                var isIdArray = isArray(id);\n                result = filter(cpts, function (cpt) {\n                    return (isIdArray && indexOf(id, cpt.id) >= 0)\n                        || (!isIdArray && cpt.id === id);\n                });\n            }\n            else if (name != null) {\n                var isNameArray = isArray(name);\n                result = filter(cpts, function (cpt) {\n                    return (isNameArray && indexOf(name, cpt.name) >= 0)\n                        || (!isNameArray && cpt.name === name);\n                });\n            }\n            else {\n                // Return all components with mainType\n                result = cpts.slice();\n            }\n\n            return filterBySubType(result, condition);\n        },\n\n        /**\n         * The interface is different from queryComponents,\n         * which is convenient for inner usage.\n         *\n         * @usage\n         * var result = findComponents(\n         *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}}\n         * );\n         * var result = findComponents(\n         *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}}\n         * );\n         * var result = findComponents(\n         *     {mainType: 'series'},\n         *     function (model, index) {...}\n         * );\n         * // result like [component0, componnet1, ...]\n         *\n         * @param {Object} condition\n         * @param {string} condition.mainType Mandatory.\n         * @param {string} [condition.subType] Optional.\n         * @param {Object} [condition.query] like {xxxIndex, xxxId, xxxName},\n         *        where xxx is mainType.\n         *        If query attribute is null/undefined or has no index/id/name,\n         *        do not filtering by query conditions, which is convenient for\n         *        no-payload situations or when target of action is global.\n         * @param {Function} [condition.filter] parameter: component, return boolean.\n         * @return {Array.<module:echarts/model/Component>}\n         */\n        findComponents: function (condition) {\n            var query = condition.query;\n            var mainType = condition.mainType;\n\n            var queryCond = getQueryCond(query);\n            var result = queryCond\n                ? this.queryComponents(queryCond)\n                : this._componentsMap[mainType];\n\n            return doFilter(filterBySubType(result, condition));\n\n            function getQueryCond(q) {\n                var indexAttr = mainType + 'Index';\n                var idAttr = mainType + 'Id';\n                var nameAttr = mainType + 'Name';\n                return q && (\n                        q[indexAttr] != null\n                        || q[idAttr] != null\n                        || q[nameAttr] != null\n                    )\n                    ? {\n                        mainType: mainType,\n                        // subType will be filtered finally.\n                        index: q[indexAttr],\n                        id: q[idAttr],\n                        name: q[nameAttr]\n                    }\n                    : null;\n            }\n\n            function doFilter(res) {\n                return condition.filter\n                     ? filter(res, condition.filter)\n                     : res;\n            }\n        },\n\n        /**\n         * @usage\n         * eachComponent('legend', function (legendModel, index) {\n         *     ...\n         * });\n         * eachComponent(function (componentType, model, index) {\n         *     // componentType does not include subType\n         *     // (componentType is 'xxx' but not 'xxx.aa')\n         * });\n         * eachComponent(\n         *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}},\n         *     function (model, index) {...}\n         * );\n         * eachComponent(\n         *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}},\n         *     function (model, index) {...}\n         * );\n         *\n         * @param {string|Object=} mainType When mainType is object, the definition\n         *                                  is the same as the method 'findComponents'.\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachComponent: function (mainType, cb, context) {\n            var componentsMap = this._componentsMap;\n\n            if (typeof mainType === 'function') {\n                context = cb;\n                cb = mainType;\n                each(componentsMap, function (components, componentType) {\n                    each(components, function (component, index) {\n                        cb.call(context, componentType, component, index);\n                    });\n                });\n            }\n            else if (zrUtil.isString(mainType)) {\n                each(componentsMap[mainType], cb, context);\n            }\n            else if (isObject(mainType)) {\n                var queryResult = this.findComponents(mainType);\n                each(queryResult, cb, context);\n            }\n        },\n\n        /**\n         * @param {string} name\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeriesByName: function (name) {\n            var series = this._componentsMap.series;\n            return filter(series, function (oneSeries) {\n                return oneSeries.name === name;\n            });\n        },\n\n        /**\n         * @param {number} seriesIndex\n         * @return {module:echarts/model/Series}\n         */\n        getSeriesByIndex: function (seriesIndex) {\n            return this._componentsMap.series[seriesIndex];\n        },\n\n        /**\n         * @param {string} subType\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeriesByType: function (subType) {\n            var series = this._componentsMap.series;\n            return filter(series, function (oneSeries) {\n                return oneSeries.subType === subType;\n            });\n        },\n\n        /**\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeries: function () {\n            return this._componentsMap.series.slice();\n        },\n\n        /**\n         * After filtering, series may be different\n         * frome raw series.\n         *\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachSeries: function (cb, context) {\n            assertSeriesInitialized(this);\n            each(this._seriesIndices, function (rawSeriesIndex) {\n                var series = this._componentsMap.series[rawSeriesIndex];\n                cb.call(context, series, rawSeriesIndex);\n            }, this);\n        },\n\n        /**\n         * Iterate raw series before filtered.\n         *\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachRawSeries: function (cb, context) {\n            each(this._componentsMap.series, cb, context);\n        },\n\n        /**\n         * After filtering, series may be different.\n         * frome raw series.\n         *\n         * @parma {string} subType\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachSeriesByType: function (subType, cb, context) {\n            assertSeriesInitialized(this);\n            each(this._seriesIndices, function (rawSeriesIndex) {\n                var series = this._componentsMap.series[rawSeriesIndex];\n                if (series.subType === subType) {\n                    cb.call(context, series, rawSeriesIndex);\n                }\n            }, this);\n        },\n\n        /**\n         * Iterate raw series before filtered of given type.\n         *\n         * @parma {string} subType\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachRawSeriesByType: function (subType, cb, context) {\n            return each(this.getSeriesByType(subType), cb, context);\n        },\n\n        /**\n         * @param {module:echarts/model/Series} seriesModel\n         */\n        isSeriesFiltered: function (seriesModel) {\n            assertSeriesInitialized(this);\n            return zrUtil.indexOf(this._seriesIndices, seriesModel.componentIndex) < 0;\n        },\n\n        /**\n         * @param {Function} cb\n         * @param {*} context\n         */\n        filterSeries: function (cb, context) {\n            assertSeriesInitialized(this);\n            var filteredSeries = filter(\n                this._componentsMap.series, cb, context\n            );\n            this._seriesIndices = createSeriesIndices(filteredSeries);\n        },\n\n        restoreData: function () {\n            var componentsMap = this._componentsMap;\n\n            this._seriesIndices = createSeriesIndices(componentsMap.series);\n\n            var componentTypes = [];\n            each(componentsMap, function (components, componentType) {\n                componentTypes.push(componentType);\n            });\n\n            ComponentModel.topologicalTravel(\n                componentTypes,\n                ComponentModel.getAllClassMainTypes(),\n                function (componentType, dependencies) {\n                    each(componentsMap[componentType], function (component) {\n                        component.restoreData();\n                    });\n                }\n            );\n        }\n\n    });\n\n    /**\n     * @inner\n     */\n    function mergeTheme(option, theme) {\n        zrUtil.each(theme, function (themeItem, name) {\n            // 如果有 component model 则把具体的 merge 逻辑交给该 model 处理\n            if (!ComponentModel.hasClass(name)) {\n                if (typeof themeItem === 'object') {\n                    option[name] = !option[name]\n                        ? zrUtil.clone(themeItem)\n                        : zrUtil.merge(option[name], themeItem, false);\n                }\n                else {\n                    if (option[name] == null) {\n                        option[name] = themeItem;\n                    }\n                }\n            }\n        });\n    }\n\n    function initBase(baseOption) {\n        baseOption = baseOption;\n\n        // Using OPTION_INNER_KEY to mark that this option can not be used outside,\n        // i.e. `chart.setOption(chart.getModel().option);` is forbiden.\n        this.option = {};\n        this.option[OPTION_INNER_KEY] = 1;\n\n        /**\n         * Init with series: [], in case of calling findSeries method\n         * before series initialized.\n         * @type {Object.<string, Array.<module:echarts/model/Model>>}\n         * @private\n         */\n        this._componentsMap = {series: []};\n\n        /**\n         * Mapping between filtered series list and raw series list.\n         * key: filtered series indices, value: raw series indices.\n         * @type {Array.<nubmer>}\n         * @private\n         */\n        this._seriesIndices = null;\n\n        mergeTheme(baseOption, this._theme.option);\n\n        // TODO Needs clone when merging to the unexisted property\n        zrUtil.merge(baseOption, globalDefault, false);\n\n        this.mergeOption(baseOption);\n    }\n\n    /**\n     * @inner\n     * @param {Array.<string>|string} types model types\n     * @return {Object} key: {string} type, value: {Array.<Object>} models\n     */\n    function getComponentsByTypes(componentsMap, types) {\n        if (!zrUtil.isArray(types)) {\n            types = types ? [types] : [];\n        }\n\n        var ret = {};\n        each(types, function (type) {\n            ret[type] = (componentsMap[type] || []).slice();\n        });\n\n        return ret;\n    }\n\n    /**\n     * @inner\n     */\n    function determineSubType(mainType, newCptOption, existComponent) {\n        var subType = newCptOption.type\n            ? newCptOption.type\n            : existComponent\n            ? existComponent.subType\n            // Use determineSubType only when there is no existComponent.\n            : ComponentModel.determineSubType(mainType, newCptOption);\n\n        // tooltip, markline, markpoint may always has no subType\n        return subType;\n    }\n\n    /**\n     * @inner\n     */\n    function createSeriesIndices(seriesModels) {\n        return map(seriesModels, function (series) {\n            return series.componentIndex;\n        }) || [];\n    }\n\n    /**\n     * @inner\n     */\n    function filterBySubType(components, condition) {\n        // Using hasOwnProperty for restrict. Consider\n        // subType is undefined in user payload.\n        return condition.hasOwnProperty('subType')\n            ? filter(components, function (cpt) {\n                return cpt.subType === condition.subType;\n            })\n            : components;\n    }\n\n    /**\n     * @inner\n     */\n    function assertSeriesInitialized(ecModel) {\n        // Components that use _seriesIndices should depends on series component,\n        // which make sure that their initialization is after series.\n        if (__DEV__) {\n            if (!ecModel._seriesIndices) {\n                throw new Error('Series has not been initialized yet.');\n            }\n        }\n    }\n\n    zrUtil.mixin(GlobalModel, require('./mixin/colorPalette'));\n\n    module.exports = GlobalModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.echarts@3.5.4@echarts/lib/model/Global.js\n// module id = 335\n// module chunks = 0","/**\n * ECharts option manager\n *\n * @module {echarts/model/OptionManager}\n */\n\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../util/model');\n    var ComponentModel = require('./Component');\n    var each = zrUtil.each;\n    var clone = zrUtil.clone;\n    var map = zrUtil.map;\n    var merge = zrUtil.merge;\n\n    var QUERY_REG = /^(min|max)?(.+)$/;\n\n    /**\n     * TERM EXPLANATIONS:\n     *\n     * [option]:\n     *\n     *     An object that contains definitions of components. For example:\n     *     var option = {\n     *         title: {...},\n     *         legend: {...},\n     *         visualMap: {...},\n     *         series: [\n     *             {data: [...]},\n     *             {data: [...]},\n     *             ...\n     *         ]\n     *     };\n     *\n     * [rawOption]:\n     *\n     *     An object input to echarts.setOption. 'rawOption' may be an\n     *     'option', or may be an object contains multi-options. For example:\n     *     var option = {\n     *         baseOption: {\n     *             title: {...},\n     *             legend: {...},\n     *             series: [\n     *                 {data: [...]},\n     *                 {data: [...]},\n     *                 ...\n     *             ]\n     *         },\n     *         timeline: {...},\n     *         options: [\n     *             {title: {...}, series: {data: [...]}},\n     *             {title: {...}, series: {data: [...]}},\n     *             ...\n     *         ],\n     *         media: [\n     *             {\n     *                 query: {maxWidth: 320},\n     *                 option: {series: {x: 20}, visualMap: {show: false}}\n     *             },\n     *             {\n     *                 query: {minWidth: 320, maxWidth: 720},\n     *                 option: {series: {x: 500}, visualMap: {show: true}}\n     *             },\n     *             {\n     *                 option: {series: {x: 1200}, visualMap: {show: true}}\n     *             }\n     *         ]\n     *     };\n     *\n     * @alias module:echarts/model/OptionManager\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    function OptionManager(api) {\n\n        /**\n         * @private\n         * @type {module:echarts/ExtensionAPI}\n         */\n        this._api = api;\n\n        /**\n         * @private\n         * @type {Array.<number>}\n         */\n        this._timelineOptions = [];\n\n        /**\n         * @private\n         * @type {Array.<Object>}\n         */\n        this._mediaList = [];\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._mediaDefault;\n\n        /**\n         * -1, means default.\n         * empty means no media.\n         * @private\n         * @type {Array.<number>}\n         */\n        this._currentMediaIndices = [];\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._optionBackup;\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._newBaseOption;\n    }\n\n    // timeline.notMerge is not supported in ec3. Firstly there is rearly\n    // case that notMerge is needed. Secondly supporting 'notMerge' requires\n    // rawOption cloned and backuped when timeline changed, which does no\n    // good to performance. What's more, that both timeline and setOption\n    // method supply 'notMerge' brings complex and some problems.\n    // Consider this case:\n    // (step1) chart.setOption({timeline: {notMerge: false}, ...}, false);\n    // (step2) chart.setOption({timeline: {notMerge: true}, ...}, false);\n\n    OptionManager.prototype = {\n\n        constructor: OptionManager,\n\n        /**\n         * @public\n         * @param {Object} rawOption Raw option.\n         * @param {module:echarts/model/Global} ecModel\n         * @param {Array.<Function>} optionPreprocessorFuncs\n         * @return {Object} Init option\n         */\n        setOption: function (rawOption, optionPreprocessorFuncs) {\n            rawOption = clone(rawOption, true);\n\n            // FIXME\n            // 如果 timeline options 或者 media 中设置了某个属性，而baseOption中没有设置，则进行警告。\n\n            var oldOptionBackup = this._optionBackup;\n            var newParsedOption = parseRawOption.call(\n                this, rawOption, optionPreprocessorFuncs, !oldOptionBackup\n            );\n            this._newBaseOption = newParsedOption.baseOption;\n\n            // For setOption at second time (using merge mode);\n            if (oldOptionBackup) {\n                // Only baseOption can be merged.\n                mergeOption(oldOptionBackup.baseOption, newParsedOption.baseOption);\n\n                // For simplicity, timeline options and media options do not support merge,\n                // that is, if you `setOption` twice and both has timeline options, the latter\n                // timeline opitons will not be merged to the formers, but just substitude them.\n                if (newParsedOption.timelineOptions.length) {\n                    oldOptionBackup.timelineOptions = newParsedOption.timelineOptions;\n                }\n                if (newParsedOption.mediaList.length) {\n                    oldOptionBackup.mediaList = newParsedOption.mediaList;\n                }\n                if (newParsedOption.mediaDefault) {\n                    oldOptionBackup.mediaDefault = newParsedOption.mediaDefault;\n                }\n            }\n            else {\n                this._optionBackup = newParsedOption;\n            }\n        },\n\n        /**\n         * @param {boolean} isRecreate\n         * @return {Object}\n         */\n        mountOption: function (isRecreate) {\n            var optionBackup = this._optionBackup;\n\n            // TODO\n            // 如果没有reset功能则不clone。\n\n            this._timelineOptions = map(optionBackup.timelineOptions, clone);\n            this._mediaList = map(optionBackup.mediaList, clone);\n            this._mediaDefault = clone(optionBackup.mediaDefault);\n            this._currentMediaIndices = [];\n\n            return clone(isRecreate\n                // this._optionBackup.baseOption, which is created at the first `setOption`\n                // called, and is merged into every new option by inner method `mergeOption`\n                // each time `setOption` called, can be only used in `isRecreate`, because\n                // its reliability is under suspicion. In other cases option merge is\n                // performed by `model.mergeOption`.\n                ? optionBackup.baseOption : this._newBaseOption\n            );\n        },\n\n        /**\n         * @param {module:echarts/model/Global} ecModel\n         * @return {Object}\n         */\n        getTimelineOption: function (ecModel) {\n            var option;\n            var timelineOptions = this._timelineOptions;\n\n            if (timelineOptions.length) {\n                // getTimelineOption can only be called after ecModel inited,\n                // so we can get currentIndex from timelineModel.\n                var timelineModel = ecModel.getComponent('timeline');\n                if (timelineModel) {\n                    option = clone(\n                        timelineOptions[timelineModel.getCurrentIndex()],\n                        true\n                    );\n                }\n            }\n\n            return option;\n        },\n\n        /**\n         * @param {module:echarts/model/Global} ecModel\n         * @return {Array.<Object>}\n         */\n        getMediaOption: function (ecModel) {\n            var ecWidth = this._api.getWidth();\n            var ecHeight = this._api.getHeight();\n            var mediaList = this._mediaList;\n            var mediaDefault = this._mediaDefault;\n            var indices = [];\n            var result = [];\n\n            // No media defined.\n            if (!mediaList.length && !mediaDefault) {\n                return result;\n            }\n\n            // Multi media may be applied, the latter defined media has higher priority.\n            for (var i = 0, len = mediaList.length; i < len; i++) {\n                if (applyMediaQuery(mediaList[i].query, ecWidth, ecHeight)) {\n                    indices.push(i);\n                }\n            }\n\n            // FIXME\n            // 是否mediaDefault应该强制用户设置，否则可能修改不能回归。\n            if (!indices.length && mediaDefault) {\n                indices = [-1];\n            }\n\n            if (indices.length && !indicesEquals(indices, this._currentMediaIndices)) {\n                result = map(indices, function (index) {\n                    return clone(\n                        index === -1 ? mediaDefault.option : mediaList[index].option\n                    );\n                });\n            }\n            // Otherwise return nothing.\n\n            this._currentMediaIndices = indices;\n\n            return result;\n        }\n    };\n\n    function parseRawOption(rawOption, optionPreprocessorFuncs, isNew) {\n        var timelineOptions = [];\n        var mediaList = [];\n        var mediaDefault;\n        var baseOption;\n\n        // Compatible with ec2.\n        var timelineOpt = rawOption.timeline;\n\n        if (rawOption.baseOption) {\n            baseOption = rawOption.baseOption;\n        }\n\n        // For timeline\n        if (timelineOpt || rawOption.options) {\n            baseOption = baseOption || {};\n            timelineOptions = (rawOption.options || []).slice();\n        }\n\n        // For media query\n        if (rawOption.media) {\n            baseOption = baseOption || {};\n            var media = rawOption.media;\n            each(media, function (singleMedia) {\n                if (singleMedia && singleMedia.option) {\n                    if (singleMedia.query) {\n                        mediaList.push(singleMedia);\n                    }\n                    else if (!mediaDefault) {\n                        // Use the first media default.\n                        mediaDefault = singleMedia;\n                    }\n                }\n            });\n        }\n\n        // For normal option\n        if (!baseOption) {\n            baseOption = rawOption;\n        }\n\n        // Set timelineOpt to baseOption in ec3,\n        // which is convenient for merge option.\n        if (!baseOption.timeline) {\n            baseOption.timeline = timelineOpt;\n        }\n\n        // Preprocess.\n        each([baseOption].concat(timelineOptions)\n            .concat(zrUtil.map(mediaList, function (media) {\n                return media.option;\n            })),\n            function (option) {\n                each(optionPreprocessorFuncs, function (preProcess) {\n                    preProcess(option, isNew);\n                });\n            }\n        );\n\n        return {\n            baseOption: baseOption,\n            timelineOptions: timelineOptions,\n            mediaDefault: mediaDefault,\n            mediaList: mediaList\n        };\n    }\n\n    /**\n     * @see <http://www.w3.org/TR/css3-mediaqueries/#media1>\n     * Support: width, height, aspectRatio\n     * Can use max or min as prefix.\n     */\n    function applyMediaQuery(query, ecWidth, ecHeight) {\n        var realMap = {\n            width: ecWidth,\n            height: ecHeight,\n            aspectratio: ecWidth / ecHeight // lowser case for convenientce.\n        };\n\n        var applicatable = true;\n\n        zrUtil.each(query, function (value, attr) {\n            var matched = attr.match(QUERY_REG);\n\n            if (!matched || !matched[1] || !matched[2]) {\n                return;\n            }\n\n            var operator = matched[1];\n            var realAttr = matched[2].toLowerCase();\n\n            if (!compare(realMap[realAttr], value, operator)) {\n                applicatable = false;\n            }\n        });\n\n        return applicatable;\n    }\n\n    function compare(real, expect, operator) {\n        if (operator === 'min') {\n            return real >= expect;\n        }\n        else if (operator === 'max') {\n            return real <= expect;\n        }\n        else { // Equals\n            return real === expect;\n        }\n    }\n\n    function indicesEquals(indices1, indices2) {\n        // indices is always order by asc and has only finite number.\n        return indices1.join(',') === indices2.join(',');\n    }\n\n    /**\n     * Consider case:\n     * `chart.setOption(opt1);`\n     * Then user do some interaction like dataZoom, dataView changing.\n     * `chart.setOption(opt2);`\n     * Then user press 'reset button' in toolbox.\n     *\n     * After doing that all of the interaction effects should be reset, the\n     * chart should be the same as the result of invoke\n     * `chart.setOption(opt1); chart.setOption(opt2);`.\n     *\n     * Although it is not able ensure that\n     * `chart.setOption(opt1); chart.setOption(opt2);` is equivalents to\n     * `chart.setOption(merge(opt1, opt2));` exactly,\n     * this might be the only simple way to implement that feature.\n     *\n     * MEMO: We've considered some other approaches:\n     * 1. Each model handle its self restoration but not uniform treatment.\n     *     (Too complex in logic and error-prone)\n     * 2. Use a shadow ecModel. (Performace expensive)\n     */\n    function mergeOption(oldOption, newOption) {\n        newOption = newOption || {};\n\n        each(newOption, function (newCptOpt, mainType) {\n            if (newCptOpt == null) {\n                return;\n            }\n\n            var oldCptOpt = oldOption[mainType];\n\n            if (!ComponentModel.hasClass(mainType)) {\n                oldOption[mainType] = merge(oldCptOpt, newCptOpt, true);\n            }\n            else {\n                newCptOpt = modelUtil.normalizeToArray(newCptOpt);\n                oldCptOpt = modelUtil.normalizeToArray(oldCptOpt);\n\n                var mapResult = modelUtil.mappingToExists(oldCptOpt, newCptOpt);\n\n                oldOption[mainType] = map(mapResult, function (item) {\n                    return (item.option && item.exist)\n                        ? merge(item.exist, item.option, true)\n                        : (item.exist || item.option);\n                });\n            }\n        });\n    }\n\n    module.exports = OptionManager;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.echarts@3.5.4@echarts/lib/model/OptionManager.js\n// module id = 336\n// module chunks = 0","\n    var platform = '';\n    // Navigator not exists in node\n    if (typeof navigator !== 'undefined') {\n        platform = navigator.platform || '';\n    }\n    module.exports = {\n        // 全图默认背景\n        // backgroundColor: 'rgba(0,0,0,0)',\n\n        // https://dribbble.com/shots/1065960-Infographic-Pie-chart-visualization\n        // color: ['#5793f3', '#d14a61', '#fd9c35', '#675bba', '#fec42c', '#dd4444', '#d4df5a', '#cd4870'],\n        // 浅色\n        // color: ['#bcd3bb', '#e88f70', '#edc1a5', '#9dc5c8', '#e1e8c8', '#7b7c68', '#e5b5b5', '#f0b489', '#928ea8', '#bda29a'],\n        // color: ['#cc5664', '#9bd6ec', '#ea946e', '#8acaaa', '#f1ec64', '#ee8686', '#a48dc1', '#5da6bc', '#b9dcae'],\n        // 深色\n        color: ['#c23531','#2f4554', '#61a0a8', '#d48265', '#91c7ae','#749f83',  '#ca8622', '#bda29a','#6e7074', '#546570', '#c4ccd3'],\n\n        // 默认需要 Grid 配置项\n        // grid: {},\n        // 主题，主题\n        textStyle: {\n            // color: '#000',\n            // decoration: 'none',\n            // PENDING\n            fontFamily: platform.match(/^Win/) ? 'Microsoft YaHei' : 'sans-serif',\n            // fontFamily: 'Arial, Verdana, sans-serif',\n            fontSize: 12,\n            fontStyle: 'normal',\n            fontWeight: 'normal'\n        },\n\n        // http://blogs.adobe.com/webplatform/2014/02/24/using-blend-modes-in-html-canvas/\n        // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n        // Default is source-over\n        blendMode: null,\n\n        animation: 'auto',\n        animationDuration: 1000,\n        animationDurationUpdate: 300,\n        animationEasing: 'exponentialOut',\n        animationEasingUpdate: 'cubicOut',\n\n        animationThreshold: 2000,\n        // Configuration for progressive/incremental rendering\n        progressiveThreshold: 3000,\n        progressive: 400,\n\n        // Threshold of if use single hover layer to optimize.\n        // It is recommended that `hoverLayerThreshold` is equivalent to or less than\n        // `progressiveThreshold`, otherwise hover will cause restart of progressive,\n        // which is unexpected.\n        // see example <echarts/test/heatmap-large.html>.\n        hoverLayerThreshold: 3000,\n\n        // See: module:echarts/scale/Time\n        useUTC: false\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.echarts@3.5.4@echarts/lib/model/globalDefault.js\n// module id = 337\n// module chunks = 0","\n    module.exports = {\n        getAreaStyle: require('./makeStyleMapper')(\n            [\n                ['fill', 'color'],\n                ['shadowBlur'],\n                ['shadowOffsetX'],\n                ['shadowOffsetY'],\n                ['opacity'],\n                ['shadowColor']\n            ]\n        )\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.echarts@3.5.4@echarts/lib/model/mixin/areaStyle.js\n// module id = 338\n// module chunks = 0","\n\n    module.exports = {\n        getBoxLayoutParams: function () {\n            return {\n                left: this.get('left'),\n                top: this.get('top'),\n                right: this.get('right'),\n                bottom: this.get('bottom'),\n                width: this.get('width'),\n                height: this.get('height')\n            };\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.echarts@3.5.4@echarts/lib/model/mixin/boxLayout.js\n// module id = 339\n// module chunks = 0","\n    var getItemStyle = require('./makeStyleMapper')(\n        [\n            ['fill', 'color'],\n            ['stroke', 'borderColor'],\n            ['lineWidth', 'borderWidth'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor'],\n            ['textPosition'],\n            ['textAlign']\n        ]\n    );\n    module.exports = {\n        getItemStyle: function (excludes, includes) {\n            var style = getItemStyle.call(this, excludes, includes);\n            var lineDash = this.getBorderLineDash();\n            lineDash && (style.lineDash = lineDash);\n            return style;\n        },\n\n        getBorderLineDash: function () {\n            var lineType = this.get('borderType');\n            return (lineType === 'solid' || lineType == null) ? null\n                : (lineType === 'dashed' ? [5, 5] : [1, 1]);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.echarts@3.5.4@echarts/lib/model/mixin/itemStyle.js\n// module id = 340\n// module chunks = 0","\n    var getLineStyle = require('./makeStyleMapper')(\n        [\n            ['lineWidth', 'width'],\n            ['stroke', 'color'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor']\n        ]\n    );\n    module.exports = {\n        getLineStyle: function (excludes) {\n            var style = getLineStyle.call(this, excludes);\n            var lineDash = this.getLineDash(style.lineWidth);\n            lineDash && (style.lineDash = lineDash);\n            return style;\n        },\n\n        getLineDash: function (lineWidth) {\n            if (lineWidth == null) {\n                lineWidth = 1;\n            }\n            var lineType = this.get('type');\n            var dotSize = Math.max(lineWidth, 2);\n            var dashSize = lineWidth * 4;\n            return (lineType === 'solid' || lineType == null) ? null\n                : (lineType === 'dashed' ? [dashSize, dashSize] : [dotSize, dotSize]);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.echarts@3.5.4@echarts/lib/model/mixin/lineStyle.js\n// module id = 341\n// module chunks = 0","\n\n    var textContain = require('zrender/lib/contain/text');\n\n    function getShallow(model, path) {\n        return model && model.getShallow(path);\n    }\n\n    module.exports = {\n        /**\n         * Get color property or get color from option.textStyle.color\n         * @return {string}\n         */\n        getTextColor: function () {\n            var ecModel = this.ecModel;\n            return this.getShallow('color')\n                || (ecModel && ecModel.get('textStyle.color'));\n        },\n\n        /**\n         * Create font string from fontStyle, fontWeight, fontSize, fontFamily\n         * @return {string}\n         */\n        getFont: function () {\n            var ecModel = this.ecModel;\n            var gTextStyleModel = ecModel && ecModel.getModel('textStyle');\n            return [\n                // FIXME in node-canvas fontWeight is before fontStyle\n                this.getShallow('fontStyle') || getShallow(gTextStyleModel, 'fontStyle'),\n                this.getShallow('fontWeight') || getShallow(gTextStyleModel, 'fontWeight'),\n                (this.getShallow('fontSize') || getShallow(gTextStyleModel, 'fontSize') || 12) + 'px',\n                this.getShallow('fontFamily') || getShallow(gTextStyleModel, 'fontFamily') || 'sans-serif'\n            ].join(' ');\n        },\n\n        getTextRect: function (text) {\n            return textContain.getBoundingRect(\n                text,\n                this.getFont(),\n                this.getShallow('align'),\n                this.getShallow('baseline')\n            );\n        },\n\n        truncateText: function (text, containerWidth, ellipsis, options) {\n            return textContain.truncateText(\n                text, containerWidth, this.getFont(), ellipsis, options\n            );\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.echarts@3.5.4@echarts/lib/model/mixin/textStyle.js\n// module id = 342\n// module chunks = 0","// Compatitable with 2.0\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var compatStyle = require('./helper/compatStyle');\n\n    function get(opt, path) {\n        path = path.split(',');\n        var obj = opt;\n        for (var i = 0; i < path.length; i++) {\n            obj = obj && obj[path[i]];\n            if (obj == null) {\n                break;\n            }\n        }\n        return obj;\n    }\n\n    function set(opt, path, val, overwrite) {\n        path = path.split(',');\n        var obj = opt;\n        var key;\n        for (var i = 0; i < path.length - 1; i++) {\n            key = path[i];\n            if (obj[key] == null) {\n                obj[key] = {};\n            }\n            obj = obj[key];\n        }\n        if (overwrite || obj[path[i]] == null) {\n            obj[path[i]] = val;\n        }\n    }\n\n    function compatLayoutProperties(option) {\n        each(LAYOUT_PROPERTIES, function (prop) {\n            if (prop[0] in option && !(prop[1] in option)) {\n                option[prop[1]] = option[prop[0]];\n            }\n        });\n    }\n\n    var LAYOUT_PROPERTIES = [\n        ['x', 'left'], ['y', 'top'], ['x2', 'right'], ['y2', 'bottom']\n    ];\n\n    var COMPATITABLE_COMPONENTS = [\n        'grid', 'geo', 'parallel', 'legend', 'toolbox', 'title', 'visualMap', 'dataZoom', 'timeline'\n    ];\n\n    var COMPATITABLE_SERIES = [\n        'bar', 'boxplot', 'candlestick', 'chord', 'effectScatter',\n        'funnel', 'gauge', 'lines', 'graph', 'heatmap', 'line', 'map', 'parallel',\n        'pie', 'radar', 'sankey', 'scatter', 'treemap'\n    ];\n\n    var each = zrUtil.each;\n\n    module.exports = function (option) {\n        each(option.series, function (seriesOpt) {\n            if (!zrUtil.isObject(seriesOpt)) {\n                return;\n            }\n\n            var seriesType = seriesOpt.type;\n\n            compatStyle(seriesOpt);\n\n            if (seriesType === 'pie' || seriesType === 'gauge') {\n                if (seriesOpt.clockWise != null) {\n                    seriesOpt.clockwise = seriesOpt.clockWise;\n                }\n            }\n            if (seriesType === 'gauge') {\n                var pointerColor = get(seriesOpt, 'pointer.color');\n                pointerColor != null\n                    && set(seriesOpt, 'itemStyle.normal.color', pointerColor);\n            }\n\n            for (var i = 0; i < COMPATITABLE_SERIES.length; i++) {\n                if (COMPATITABLE_SERIES[i] === seriesOpt.type) {\n                    compatLayoutProperties(seriesOpt);\n                    break;\n                }\n            }\n        });\n\n        // dataRange has changed to visualMap\n        if (option.dataRange) {\n            option.visualMap = option.dataRange;\n        }\n\n        each(COMPATITABLE_COMPONENTS, function (componentName) {\n            var options = option[componentName];\n            if (options) {\n                if (!zrUtil.isArray(options)) {\n                    options = [options];\n                }\n                each(options, function (option) {\n                    compatLayoutProperties(option);\n                });\n            }\n        });\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.echarts@3.5.4@echarts/lib/preprocessor/backwardCompat.js\n// module id = 343\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var POSSIBLE_STYLES = [\n        'areaStyle', 'lineStyle', 'nodeStyle', 'linkStyle',\n        'chordStyle', 'label', 'labelLine'\n    ];\n\n    function compatItemStyle(opt) {\n        var itemStyleOpt = opt && opt.itemStyle;\n        if (itemStyleOpt) {\n            zrUtil.each(POSSIBLE_STYLES, function (styleName) {\n                var normalItemStyleOpt = itemStyleOpt.normal;\n                var emphasisItemStyleOpt = itemStyleOpt.emphasis;\n                if (normalItemStyleOpt && normalItemStyleOpt[styleName]) {\n                    opt[styleName] = opt[styleName] || {};\n                    if (!opt[styleName].normal) {\n                        opt[styleName].normal = normalItemStyleOpt[styleName];\n                    }\n                    else {\n                        zrUtil.merge(opt[styleName].normal, normalItemStyleOpt[styleName]);\n                    }\n                    normalItemStyleOpt[styleName] = null;\n                }\n                if (emphasisItemStyleOpt && emphasisItemStyleOpt[styleName]) {\n                    opt[styleName] = opt[styleName] || {};\n                    if (!opt[styleName].emphasis) {\n                        opt[styleName].emphasis = emphasisItemStyleOpt[styleName];\n                    }\n                    else {\n                        zrUtil.merge(opt[styleName].emphasis, emphasisItemStyleOpt[styleName]);\n                    }\n                    emphasisItemStyleOpt[styleName] = null;\n                }\n            });\n        }\n    }\n\n    module.exports = function (seriesOpt) {\n        if (!seriesOpt) {\n            return;\n        }\n        compatItemStyle(seriesOpt);\n        compatItemStyle(seriesOpt.markPoint);\n        compatItemStyle(seriesOpt.markLine);\n        var data = seriesOpt.data;\n        if (data) {\n            for (var i = 0; i < data.length; i++) {\n                compatItemStyle(data[i]);\n            }\n            // mark point data\n            var markPoint = seriesOpt.markPoint;\n            if (markPoint && markPoint.data) {\n                var mpData = markPoint.data;\n                for (var i = 0; i < mpData.length; i++) {\n                    compatItemStyle(mpData[i]);\n                }\n            }\n            // mark line data\n            var markLine = seriesOpt.markLine;\n            if (markLine && markLine.data) {\n                var mlData = markLine.data;\n                for (var i = 0; i < mlData.length; i++) {\n                    if (zrUtil.isArray(mlData[i])) {\n                        compatItemStyle(mlData[i][0]);\n                        compatItemStyle(mlData[i][1]);\n                    }\n                    else {\n                        compatItemStyle(mlData[i]);\n                    }\n                }\n            }\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.echarts@3.5.4@echarts/lib/preprocessor/helper/compatStyle.js\n// module id = 344\n// module chunks = 0","\n    module.exports = function (seriesType, ecModel) {\n        var legendModels = ecModel.findComponents({\n            mainType: 'legend'\n        });\n        if (!legendModels || !legendModels.length) {\n            return;\n        }\n        ecModel.eachSeriesByType(seriesType, function (series) {\n            var data = series.getData();\n            data.filterSelf(function (idx) {\n                var name = data.getName(idx);\n                // If in any legend component the status is not selected.\n                for (var i = 0; i < legendModels.length; i++) {\n                    if (!legendModels[i].isSelected(name)) {\n                        return false;\n                    }\n                }\n                return true;\n            }, this);\n        }, this);\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.echarts@3.5.4@echarts/lib/processor/dataFilter.js\n// module id = 345\n// module chunks = 0","/**\n * Log scale\n * @module echarts/scale/Log\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Scale = require('./Scale');\n    var numberUtil = require('../util/number');\n\n    // Use some method of IntervalScale\n    var IntervalScale = require('./Interval');\n\n    var scaleProto = Scale.prototype;\n    var intervalScaleProto = IntervalScale.prototype;\n\n    var getPrecisionSafe = numberUtil.getPrecisionSafe;\n    var roundingErrorFix = numberUtil.round;\n\n    var mathFloor = Math.floor;\n    var mathCeil = Math.ceil;\n    var mathPow = Math.pow;\n\n    var mathLog = Math.log;\n\n    var LogScale = Scale.extend({\n\n        type: 'log',\n\n        base: 10,\n\n        $constructor: function () {\n            Scale.apply(this, arguments);\n            this._originalScale = new IntervalScale();\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicks: function () {\n            var originalScale = this._originalScale;\n            var extent = this._extent;\n            var originalExtent = originalScale.getExtent();\n\n            return zrUtil.map(intervalScaleProto.getTicks.call(this), function (val) {\n                var powVal = numberUtil.round(mathPow(this.base, val));\n\n                // Fix #4158\n                powVal = (val === extent[0] && originalScale.__fixMin)\n                    ? fixRoundingError(powVal, originalExtent[0])\n                    : powVal;\n                powVal = (val === extent[1] && originalScale.__fixMax)\n                    ? fixRoundingError(powVal, originalExtent[1])\n                    : powVal;\n\n                return powVal;\n            }, this);\n        },\n\n        /**\n         * @param {number} val\n         * @return {string}\n         */\n        getLabel: intervalScaleProto.getLabel,\n\n        /**\n         * @param  {number} val\n         * @return {number}\n         */\n        scale: function (val) {\n            val = scaleProto.scale.call(this, val);\n            return mathPow(this.base, val);\n        },\n\n        /**\n         * @param {number} start\n         * @param {number} end\n         */\n        setExtent: function (start, end) {\n            var base = this.base;\n            start = mathLog(start) / mathLog(base);\n            end = mathLog(end) / mathLog(base);\n            intervalScaleProto.setExtent.call(this, start, end);\n        },\n\n        /**\n         * @return {number} end\n         */\n        getExtent: function () {\n            var base = this.base;\n            var extent = scaleProto.getExtent.call(this);\n            extent[0] = mathPow(base, extent[0]);\n            extent[1] = mathPow(base, extent[1]);\n\n            // Fix #4158\n            var originalScale = this._originalScale;\n            var originalExtent = originalScale.getExtent();\n            originalScale.__fixMin && (extent[0] = fixRoundingError(extent[0], originalExtent[0]));\n            originalScale.__fixMax && (extent[1] = fixRoundingError(extent[1], originalExtent[1]));\n\n            return extent;\n        },\n\n        /**\n         * @param  {Array.<number>} extent\n         */\n        unionExtent: function (extent) {\n            this._originalScale.unionExtent(extent);\n\n            var base = this.base;\n            extent[0] = mathLog(extent[0]) / mathLog(base);\n            extent[1] = mathLog(extent[1]) / mathLog(base);\n            scaleProto.unionExtent.call(this, extent);\n        },\n\n        /**\n         * @override\n         */\n        unionExtentFromData: function (data, dim) {\n            this.unionExtent(data.getDataExtent(dim, true, function (val) {\n                return val > 0;\n            }));\n        },\n\n        /**\n         * Update interval and extent of intervals for nice ticks\n         * @param  {number} [approxTickNum = 10] Given approx tick number\n         */\n        niceTicks: function (approxTickNum) {\n            approxTickNum = approxTickNum || 10;\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            if (span === Infinity || span <= 0) {\n                return;\n            }\n\n            var interval = numberUtil.quantity(span);\n            var err = approxTickNum / span * interval;\n\n            // Filter ticks to get closer to the desired count.\n            if (err <= 0.5) {\n                interval *= 10;\n            }\n\n            // Interval should be integer\n            while (!isNaN(interval) && Math.abs(interval) < 1 && Math.abs(interval) > 0) {\n                interval *= 10;\n            }\n\n            var niceExtent = [\n                numberUtil.round(mathCeil(extent[0] / interval) * interval),\n                numberUtil.round(mathFloor(extent[1] / interval) * interval)\n            ];\n\n            this._interval = interval;\n            this._niceExtent = niceExtent;\n        },\n\n        /**\n         * Nice extent.\n         * @param {number} [approxTickNum = 10] Given approx tick number\n         * @param {boolean} [fixMin=false]\n         * @param {boolean} [fixMax=false]\n         */\n        niceExtent: function (splitNumber, fixMin, fixMax) {\n            intervalScaleProto.niceExtent.call(this, splitNumber, fixMin, fixMax);\n\n            var originalScale = this._originalScale;\n            originalScale.__fixMin = fixMin;\n            originalScale.__fixMax = fixMax;\n        }\n\n    });\n\n    zrUtil.each(['contain', 'normalize'], function (methodName) {\n        LogScale.prototype[methodName] = function (val) {\n            val = mathLog(val) / mathLog(this.base);\n            return scaleProto[methodName].call(this, val);\n        };\n    });\n\n    LogScale.create = function () {\n        return new LogScale();\n    };\n\n    function fixRoundingError(val, originalVal) {\n        return roundingErrorFix(val, getPrecisionSafe(originalVal));\n    }\n\n    module.exports = LogScale;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.echarts@3.5.4@echarts/lib/scale/Log.js\n// module id = 346\n// module chunks = 0","/**\n * Linear continuous scale\n * @module echarts/coord/scale/Ordinal\n *\n * http://en.wikipedia.org/wiki/Level_of_measurement\n */\n\n// FIXME only one data\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Scale = require('./Scale');\n\n    var scaleProto = Scale.prototype;\n\n    var OrdinalScale = Scale.extend({\n\n        type: 'ordinal',\n\n        init: function (data, extent) {\n            this._data = data;\n            this._extent = extent || [0, data.length - 1];\n        },\n\n        parse: function (val) {\n            return typeof val === 'string'\n                ? zrUtil.indexOf(this._data, val)\n                // val might be float.\n                : Math.round(val);\n        },\n\n        contain: function (rank) {\n            rank = this.parse(rank);\n            return scaleProto.contain.call(this, rank)\n                && this._data[rank] != null;\n        },\n\n        /**\n         * Normalize given rank or name to linear [0, 1]\n         * @param {number|string} [val]\n         * @return {number}\n         */\n        normalize: function (val) {\n            return scaleProto.normalize.call(this, this.parse(val));\n        },\n\n        scale: function (val) {\n            return Math.round(scaleProto.scale.call(this, val));\n        },\n\n        /**\n         * @return {Array}\n         */\n        getTicks: function () {\n            var ticks = [];\n            var extent = this._extent;\n            var rank = extent[0];\n\n            while (rank <= extent[1]) {\n                ticks.push(rank);\n                rank++;\n            }\n\n            return ticks;\n        },\n\n        /**\n         * Get item on rank n\n         * @param {number} n\n         * @return {string}\n         */\n        getLabel: function (n) {\n            return this._data[n];\n        },\n\n        /**\n         * @return {number}\n         */\n        count: function () {\n            return this._extent[1] - this._extent[0] + 1;\n        },\n\n        /**\n         * @override\n         */\n        unionExtentFromData: function (data, dim) {\n            this.unionExtent(data.getDataExtent(dim, false));\n        },\n\n        niceTicks: zrUtil.noop,\n        niceExtent: zrUtil.noop\n    });\n\n    /**\n     * @return {module:echarts/scale/Time}\n     */\n    OrdinalScale.create = function () {\n        return new OrdinalScale();\n    };\n\n    module.exports = OrdinalScale;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.echarts@3.5.4@echarts/lib/scale/Ordinal.js\n// module id = 347\n// module chunks = 0","/**\n * Interval scale\n * @module echarts/coord/scale/Time\n */\n\n\n\n    // [About UTC and local time zone]:\n    // In most cases, `number.parseDate` will treat input data string as local time\n    // (except time zone is specified in time string). And `format.formateTime` returns\n    // local time by default. option.useUTC is false by default. This design have\n    // concidered these common case:\n    // (1) Time that is persistent in server is in UTC, but it is needed to be diplayed\n    // in local time by default.\n    // (2) By default, the input data string (e.g., '2011-01-02') should be displayed\n    // as its original time, without any time difference.\n\n    var zrUtil = require('zrender/lib/core/util');\n    var numberUtil = require('../util/number');\n    var formatUtil = require('../util/format');\n    var scaleHelper = require('./helper');\n\n    var IntervalScale = require('./Interval');\n\n    var intervalScaleProto = IntervalScale.prototype;\n\n    var mathCeil = Math.ceil;\n    var mathFloor = Math.floor;\n    var ONE_SECOND = 1000;\n    var ONE_MINUTE = ONE_SECOND * 60;\n    var ONE_HOUR = ONE_MINUTE * 60;\n    var ONE_DAY = ONE_HOUR * 24;\n\n    // FIXME 公用？\n    var bisect = function (a, x, lo, hi) {\n        while (lo < hi) {\n            var mid = lo + hi >>> 1;\n            if (a[mid][2] < x) {\n                lo = mid + 1;\n            }\n            else {\n                hi  = mid;\n            }\n        }\n        return lo;\n    };\n\n    /**\n     * @alias module:echarts/coord/scale/Time\n     * @constructor\n     */\n    var TimeScale = IntervalScale.extend({\n        type: 'time',\n\n        // Overwrite\n        getLabel: function (val) {\n            var stepLvl = this._stepLvl;\n\n            var date = new Date(val);\n\n            return formatUtil.formatTime(stepLvl[0], date, this.getSetting('useUTC'));\n        },\n\n        // Overwrite\n        niceExtent: function (approxTickNum, fixMin, fixMax) {\n            var extent = this._extent;\n            // If extent start and end are same, expand them\n            if (extent[0] === extent[1]) {\n                // Expand extent\n                extent[0] -= ONE_DAY;\n                extent[1] += ONE_DAY;\n            }\n            // If there are no data and extent are [Infinity, -Infinity]\n            if (extent[1] === -Infinity && extent[0] === Infinity) {\n                var d = new Date();\n                extent[1] = new Date(d.getFullYear(), d.getMonth(), d.getDate());\n                extent[0] = extent[1] - ONE_DAY;\n            }\n\n            this.niceTicks(approxTickNum);\n\n            // var extent = this._extent;\n            var interval = this._interval;\n\n            if (!fixMin) {\n                extent[0] = numberUtil.round(mathFloor(extent[0] / interval) * interval);\n            }\n            if (!fixMax) {\n                extent[1] = numberUtil.round(mathCeil(extent[1] / interval) * interval);\n            }\n        },\n\n        // Overwrite\n        niceTicks: function (approxTickNum) {\n            var timezoneOffset = this.getSetting('useUTC')\n                ? 0 : numberUtil.getTimezoneOffset() * 60 * 1000;\n            approxTickNum = approxTickNum || 10;\n\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            var approxInterval = span / approxTickNum;\n            var scaleLevelsLen = scaleLevels.length;\n            var idx = bisect(scaleLevels, approxInterval, 0, scaleLevelsLen);\n\n            var level = scaleLevels[Math.min(idx, scaleLevelsLen - 1)];\n            var interval = level[2];\n            // Same with interval scale if span is much larger than 1 year\n            if (level[0] === 'year') {\n                var yearSpan = span / interval;\n\n                // From \"Nice Numbers for Graph Labels\" of Graphic Gems\n                // var niceYearSpan = numberUtil.nice(yearSpan, false);\n                var yearStep = numberUtil.nice(yearSpan / approxTickNum, true);\n\n                interval *= yearStep;\n            }\n\n            var niceExtent = [\n                Math.round(mathCeil((extent[0] - timezoneOffset) / interval) * interval + timezoneOffset),\n                Math.round(mathFloor((extent[1] - timezoneOffset)/ interval) * interval + timezoneOffset)\n            ];\n\n            scaleHelper.fixExtent(niceExtent, extent);\n\n            this._stepLvl = level;\n            // Interval will be used in getTicks\n            this._interval = interval;\n            this._niceExtent = niceExtent;\n        },\n\n        parse: function (val) {\n            // val might be float.\n            return +numberUtil.parseDate(val);\n        }\n    });\n\n    zrUtil.each(['contain', 'normalize'], function (methodName) {\n        TimeScale.prototype[methodName] = function (val) {\n            return intervalScaleProto[methodName].call(this, this.parse(val));\n        };\n    });\n\n    // Steps from d3\n    var scaleLevels = [\n        // Format       step    interval\n        ['hh:mm:ss',    1,      ONE_SECOND],           // 1s\n        ['hh:mm:ss',    5,      ONE_SECOND * 5],       // 5s\n        ['hh:mm:ss',    10,     ONE_SECOND * 10],      // 10s\n        ['hh:mm:ss',    15,     ONE_SECOND * 15],      // 15s\n        ['hh:mm:ss',    30,     ONE_SECOND * 30],      // 30s\n        ['hh:mm\\nMM-dd',1,      ONE_MINUTE],          // 1m\n        ['hh:mm\\nMM-dd',5,      ONE_MINUTE * 5],      // 5m\n        ['hh:mm\\nMM-dd',10,     ONE_MINUTE * 10],     // 10m\n        ['hh:mm\\nMM-dd',15,     ONE_MINUTE * 15],     // 15m\n        ['hh:mm\\nMM-dd',30,     ONE_MINUTE * 30],     // 30m\n        ['hh:mm\\nMM-dd',1,      ONE_HOUR],        // 1h\n        ['hh:mm\\nMM-dd',2,      ONE_HOUR * 2],    // 2h\n        ['hh:mm\\nMM-dd',6,      ONE_HOUR * 6],    // 6h\n        ['hh:mm\\nMM-dd',12,     ONE_HOUR * 12],   // 12h\n        ['MM-dd\\nyyyy', 1,      ONE_DAY],   // 1d\n        ['week',        7,      ONE_DAY * 7],        // 7d\n        ['month',       1,      ONE_DAY * 31],       // 1M\n        ['quarter',     3,      ONE_DAY * 380 / 4],  // 3M\n        ['half-year',   6,      ONE_DAY * 380 / 2],  // 6M\n        ['year',        1,      ONE_DAY * 380]       // 1Y\n    ];\n\n    /**\n     * @param {module:echarts/model/Model}\n     * @return {module:echarts/scale/Time}\n     */\n    TimeScale.create = function (model) {\n        return new TimeScale({useUTC: model.ecModel.get('useUTC')});\n    };\n\n    module.exports = TimeScale;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.echarts@3.5.4@echarts/lib/scale/Time.js\n// module id = 348\n// module chunks = 0","\n\n    var Group = require('zrender/lib/container/Group');\n    var componentUtil = require('../util/component');\n    var clazzUtil = require('../util/clazz');\n\n    var Component = function () {\n        /**\n         * @type {module:zrender/container/Group}\n         * @readOnly\n         */\n        this.group = new Group();\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        this.uid = componentUtil.getUID('viewComponent');\n    };\n\n    Component.prototype = {\n\n        constructor: Component,\n\n        init: function (ecModel, api) {},\n\n        render: function (componentModel, ecModel, api, payload) {},\n\n        dispose: function () {}\n\n    };\n\n    var componentProto = Component.prototype;\n    componentProto.updateView\n        = componentProto.updateLayout\n        = componentProto.updateVisual\n        = function (seriesModel, ecModel, api, payload) {\n            // Do nothing;\n        };\n    // Enable Component.extend.\n    clazzUtil.enableClassExtend(Component);\n\n    // Enable capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(Component, {registerWhenExtend: true});\n\n    module.exports = Component;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.echarts@3.5.4@echarts/lib/view/Component.js\n// module id = 349\n// module chunks = 0","// Pick color from palette for each data item.\n// Applicable for charts that require applying color palette\n// in data level (like pie, funnel, chord).\n\n\n    module.exports = function (seriesType, ecModel) {\n        // Pie and funnel may use diferrent scope\n        var paletteScope = {};\n        ecModel.eachRawSeriesByType(seriesType, function (seriesModel) {\n            var dataAll = seriesModel.getRawData();\n            var idxMap = {};\n            if (!ecModel.isSeriesFiltered(seriesModel)) {\n                var data = seriesModel.getData();\n                data.each(function (idx) {\n                    var rawIdx = data.getRawIndex(idx);\n                    idxMap[rawIdx] = idx;\n                });\n                dataAll.each(function (rawIdx) {\n                    var filteredIdx = idxMap[rawIdx];\n\n                    // If series.itemStyle.normal.color is a function. itemVisual may be encoded\n                    var singleDataColor = filteredIdx != null\n                        && data.getItemVisual(filteredIdx, 'color', true);\n\n                    if (!singleDataColor) {\n                        // FIXME Performance\n                        var itemModel = dataAll.getItemModel(rawIdx);\n                        var color = itemModel.get('itemStyle.normal.color')\n                            || seriesModel.getColorFromPalette(dataAll.getName(rawIdx), paletteScope);\n                        // Legend may use the visual info in data before processed\n                        dataAll.setItemVisual(rawIdx, 'color', color);\n\n                        // Data is not filtered\n                        if (filteredIdx != null) {\n                            data.setItemVisual(filteredIdx, 'color', color);\n                        }\n                    }\n                    else {\n                        // Set data all color for legend\n                        dataAll.setItemVisual(rawIdx, 'color', singleDataColor);\n                    }\n                });\n            }\n        });\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.echarts@3.5.4@echarts/lib/visual/dataColor.js\n// module id = 350\n// module chunks = 0","\n    var Gradient = require('zrender/lib/graphic/Gradient');\n    module.exports = function (ecModel) {\n        function encodeColor(seriesModel) {\n            var colorAccessPath = (seriesModel.visualColorAccessPath || 'itemStyle.normal.color').split('.');\n            var data = seriesModel.getData();\n            var color = seriesModel.get(colorAccessPath) // Set in itemStyle\n                || seriesModel.getColorFromPalette(seriesModel.get('name'));  // Default color\n\n            // FIXME Set color function or use the platte color\n            data.setVisual('color', color);\n\n            // Only visible series has each data be visual encoded\n            if (!ecModel.isSeriesFiltered(seriesModel)) {\n                if (typeof color === 'function' && !(color instanceof Gradient)) {\n                    data.each(function (idx) {\n                        data.setItemVisual(\n                            idx, 'color', color(seriesModel.getDataParams(idx))\n                        );\n                    });\n                }\n\n                // itemStyle in each data item\n                data.each(function (idx) {\n                    var itemModel = data.getItemModel(idx);\n                    var color = itemModel.get(colorAccessPath, true);\n                    if (color != null) {\n                        data.setItemVisual(idx, 'color', color);\n                    }\n                });\n            }\n        }\n        ecModel.eachRawSeries(encodeColor);\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.echarts@3.5.4@echarts/lib/visual/seriesColor.js\n// module id = 351\n// module chunks = 0","/**\n * Resize detection strategy that injects objects to elements in order to detect resize events.\n * Heavily inspired by: http://www.backalleycoder.com/2013/03/18/cross-browser-event-based-element-resize-detection/\n */\n\n\"use strict\";\n\nvar browserDetector = require(\"../browser-detector\");\n\nmodule.exports = function(options) {\n    options             = options || {};\n    var reporter        = options.reporter;\n    var batchProcessor  = options.batchProcessor;\n    var getState        = options.stateHandler.getState;\n\n    if(!reporter) {\n        throw new Error(\"Missing required dependency: reporter.\");\n    }\n\n    /**\n     * Adds a resize event listener to the element.\n     * @public\n     * @param {element} element The element that should have the listener added.\n     * @param {function} listener The listener callback to be called for each resize event of the element. The element will be given as a parameter to the listener callback.\n     */\n    function addListener(element, listener) {\n        if(!getObject(element)) {\n            throw new Error(\"Element is not detectable by this strategy.\");\n        }\n\n        function listenerProxy() {\n            listener(element);\n        }\n\n        if(browserDetector.isIE(8)) {\n            //IE 8 does not support object, but supports the resize event directly on elements.\n            getState(element).object = {\n                proxy: listenerProxy\n            };\n            element.attachEvent(\"onresize\", listenerProxy);\n        } else {\n            var object = getObject(element);\n            object.contentDocument.defaultView.addEventListener(\"resize\", listenerProxy);\n        }\n    }\n\n    /**\n     * Makes an element detectable and ready to be listened for resize events. Will call the callback when the element is ready to be listened for resize changes.\n     * @private\n     * @param {object} options Optional options object.\n     * @param {element} element The element to make detectable\n     * @param {function} callback The callback to be called when the element is ready to be listened for resize changes. Will be called with the element as first parameter.\n     */\n    function makeDetectable(options, element, callback) {\n        if (!callback) {\n            callback = element;\n            element = options;\n            options = null;\n        }\n\n        options = options || {};\n        var debug = options.debug;\n\n        function injectObject(element, callback) {\n            var OBJECT_STYLE = \"display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; border: none; padding: 0; margin: 0; opacity: 0; z-index: -1000; pointer-events: none;\";\n\n            //The target element needs to be positioned (everything except static) so the absolute positioned object will be positioned relative to the target element.\n\n            // Position altering may be performed directly or on object load, depending on if style resolution is possible directly or not.\n            var positionCheckPerformed = false;\n\n            // The element may not yet be attached to the DOM, and therefore the style object may be empty in some browsers.\n            // Since the style object is a reference, it will be updated as soon as the element is attached to the DOM.\n            var style = window.getComputedStyle(element);\n            var width = element.offsetWidth;\n            var height = element.offsetHeight;\n\n            getState(element).startSize = {\n                width: width,\n                height: height\n            };\n\n            function mutateDom() {\n                function alterPositionStyles() {\n                    if(style.position === \"static\") {\n                        element.style.position = \"relative\";\n\n                        var removeRelativeStyles = function(reporter, element, style, property) {\n                            function getNumericalValue(value) {\n                                return value.replace(/[^-\\d\\.]/g, \"\");\n                            }\n\n                            var value = style[property];\n\n                            if(value !== \"auto\" && getNumericalValue(value) !== \"0\") {\n                                reporter.warn(\"An element that is positioned static has style.\" + property + \"=\" + value + \" which is ignored due to the static positioning. The element will need to be positioned relative, so the style.\" + property + \" will be set to 0. Element: \", element);\n                                element.style[property] = 0;\n                            }\n                        };\n\n                        //Check so that there are no accidental styles that will make the element styled differently now that is is relative.\n                        //If there are any, set them to 0 (this should be okay with the user since the style properties did nothing before [since the element was positioned static] anyway).\n                        removeRelativeStyles(reporter, element, style, \"top\");\n                        removeRelativeStyles(reporter, element, style, \"right\");\n                        removeRelativeStyles(reporter, element, style, \"bottom\");\n                        removeRelativeStyles(reporter, element, style, \"left\");\n                    }\n                }\n\n                function onObjectLoad() {\n                    // The object has been loaded, which means that the element now is guaranteed to be attached to the DOM.\n                    if (!positionCheckPerformed) {\n                        alterPositionStyles();\n                    }\n\n                    /*jshint validthis: true */\n\n                    function getDocument(element, callback) {\n                        //Opera 12 seem to call the object.onload before the actual document has been created.\n                        //So if it is not present, poll it with an timeout until it is present.\n                        //TODO: Could maybe be handled better with object.onreadystatechange or similar.\n                        if(!element.contentDocument) {\n                            setTimeout(function checkForObjectDocument() {\n                                getDocument(element, callback);\n                            }, 100);\n\n                            return;\n                        }\n\n                        callback(element.contentDocument);\n                    }\n\n                    //Mutating the object element here seems to fire another load event.\n                    //Mutating the inner document of the object element is fine though.\n                    var objectElement = this;\n\n                    //Create the style element to be added to the object.\n                    getDocument(objectElement, function onObjectDocumentReady(objectDocument) {\n                        //Notify that the element is ready to be listened to.\n                        callback(element);\n                    });\n                }\n\n                // The element may be detached from the DOM, and some browsers does not support style resolving of detached elements.\n                // The alterPositionStyles needs to be delayed until we know the element has been attached to the DOM (which we are sure of when the onObjectLoad has been fired), if style resolution is not possible.\n                if (style.position !== \"\") {\n                    alterPositionStyles(style);\n                    positionCheckPerformed = true;\n                }\n\n                //Add an object element as a child to the target element that will be listened to for resize events.\n                var object = document.createElement(\"object\");\n                object.style.cssText = OBJECT_STYLE;\n                object.tabIndex = -1;\n                object.type = \"text/html\";\n                object.onload = onObjectLoad;\n\n                //Safari: This must occur before adding the object to the DOM.\n                //IE: Does not like that this happens before, even if it is also added after.\n                if(!browserDetector.isIE()) {\n                    object.data = \"about:blank\";\n                }\n\n                element.appendChild(object);\n                getState(element).object = object;\n\n                //IE: This must occur after adding the object to the DOM.\n                if(browserDetector.isIE()) {\n                    object.data = \"about:blank\";\n                }\n            }\n\n            if(batchProcessor) {\n                batchProcessor.add(mutateDom);\n            } else {\n                mutateDom();\n            }\n        }\n\n        if(browserDetector.isIE(8)) {\n            //IE 8 does not support objects properly. Luckily they do support the resize event.\n            //So do not inject the object and notify that the element is already ready to be listened to.\n            //The event handler for the resize event is attached in the utils.addListener instead.\n            callback(element);\n        } else {\n            injectObject(element, callback);\n        }\n    }\n\n    /**\n     * Returns the child object of the target element.\n     * @private\n     * @param {element} element The target element.\n     * @returns The object element of the target.\n     */\n    function getObject(element) {\n        return getState(element).object;\n    }\n\n    function uninstall(element) {\n        if(browserDetector.isIE(8)) {\n            element.detachEvent(\"onresize\", getState(element).object.proxy);\n        } else {\n            element.removeChild(getObject(element));\n        }\n        delete getState(element).object;\n    }\n\n    return {\n        makeDetectable: makeDetectable,\n        addListener: addListener,\n        uninstall: uninstall\n    };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.element-resize-detector@1.1.12@element-resize-detector/src/detection-strategy/object.js\n// module id = 352\n// module chunks = 0","/**\n * Resize detection strategy that injects divs to elements in order to detect resize events on scroll events.\n * Heavily inspired by: https://github.com/marcj/css-element-queries/blob/master/src/ResizeSensor.js\n */\n\n\"use strict\";\n\nvar forEach = require(\"../collection-utils\").forEach;\n\nmodule.exports = function(options) {\n    options             = options || {};\n    var reporter        = options.reporter;\n    var batchProcessor  = options.batchProcessor;\n    var getState        = options.stateHandler.getState;\n    var hasState        = options.stateHandler.hasState;\n    var idHandler       = options.idHandler;\n\n    if (!batchProcessor) {\n        throw new Error(\"Missing required dependency: batchProcessor\");\n    }\n\n    if (!reporter) {\n        throw new Error(\"Missing required dependency: reporter.\");\n    }\n\n    //TODO: Could this perhaps be done at installation time?\n    var scrollbarSizes = getScrollbarSizes();\n\n    // Inject the scrollbar styling that prevents them from appearing sometimes in Chrome.\n    // The injected container needs to have a class, so that it may be styled with CSS (pseudo elements).\n    var styleId = \"erd_scroll_detection_scrollbar_style\";\n    var detectionContainerClass = \"erd_scroll_detection_container\";\n    injectScrollStyle(styleId, detectionContainerClass);\n\n    function getScrollbarSizes() {\n        var width = 500;\n        var height = 500;\n\n        var child = document.createElement(\"div\");\n        child.style.cssText = \"position: absolute; width: \" + width*2 + \"px; height: \" + height*2 + \"px; visibility: hidden; margin: 0; padding: 0;\";\n\n        var container = document.createElement(\"div\");\n        container.style.cssText = \"position: absolute; width: \" + width + \"px; height: \" + height + \"px; overflow: scroll; visibility: none; top: \" + -width*3 + \"px; left: \" + -height*3 + \"px; visibility: hidden; margin: 0; padding: 0;\";\n\n        container.appendChild(child);\n\n        document.body.insertBefore(container, document.body.firstChild);\n\n        var widthSize = width - container.clientWidth;\n        var heightSize = height - container.clientHeight;\n\n        document.body.removeChild(container);\n\n        return {\n            width: widthSize,\n            height: heightSize\n        };\n    }\n\n    function injectScrollStyle(styleId, containerClass) {\n        function injectStyle(style, method) {\n            method = method || function (element) {\n                document.head.appendChild(element);\n            };\n\n            var styleElement = document.createElement(\"style\");\n            styleElement.innerHTML = style;\n            styleElement.id = styleId;\n            method(styleElement);\n            return styleElement;\n        }\n\n        if (!document.getElementById(styleId)) {\n            var containerAnimationClass = containerClass + \"_animation\";\n            var containerAnimationActiveClass = containerClass + \"_animation_active\";\n            var style = \"/* Created by the element-resize-detector library. */\\n\";\n            style += \".\" + containerClass + \" > div::-webkit-scrollbar { display: none; }\\n\\n\";\n            style += \".\" + containerAnimationActiveClass + \" { -webkit-animation-duration: 0.1s; animation-duration: 0.1s; -webkit-animation-name: \" + containerAnimationClass + \"; animation-name: \" + containerAnimationClass + \"; }\\n\";\n            style += \"@-webkit-keyframes \" + containerAnimationClass +  \" { 0% { opacity: 1; } 50% { opacity: 0; } 100% { opacity: 1; } }\\n\";\n            style += \"@keyframes \" + containerAnimationClass +          \" { 0% { opacity: 1; } 50% { opacity: 0; } 100% { opacity: 1; } }\";\n            injectStyle(style);\n        }\n    }\n\n    function addAnimationClass(element) {\n        element.className += \" \" + detectionContainerClass + \"_animation_active\";\n    }\n\n    function addEvent(el, name, cb) {\n        if (el.addEventListener) {\n            el.addEventListener(name, cb);\n        } else if(el.attachEvent) {\n            el.attachEvent(\"on\" + name, cb);\n        } else {\n            return reporter.error(\"[scroll] Don't know how to add event listeners.\");\n        }\n    }\n\n    function removeEvent(el, name, cb) {\n        if (el.removeEventListener) {\n            el.removeEventListener(name, cb);\n        } else if(el.detachEvent) {\n            el.detachEvent(\"on\" + name, cb);\n        } else {\n            return reporter.error(\"[scroll] Don't know how to remove event listeners.\");\n        }\n    }\n\n    function getExpandElement(element) {\n        return getState(element).container.childNodes[0].childNodes[0].childNodes[0];\n    }\n\n    function getShrinkElement(element) {\n        return getState(element).container.childNodes[0].childNodes[0].childNodes[1];\n    }\n\n    /**\n     * Adds a resize event listener to the element.\n     * @public\n     * @param {element} element The element that should have the listener added.\n     * @param {function} listener The listener callback to be called for each resize event of the element. The element will be given as a parameter to the listener callback.\n     */\n    function addListener(element, listener) {\n        var listeners = getState(element).listeners;\n\n        if (!listeners.push) {\n            throw new Error(\"Cannot add listener to an element that is not detectable.\");\n        }\n\n        getState(element).listeners.push(listener);\n    }\n\n    /**\n     * Makes an element detectable and ready to be listened for resize events. Will call the callback when the element is ready to be listened for resize changes.\n     * @private\n     * @param {object} options Optional options object.\n     * @param {element} element The element to make detectable\n     * @param {function} callback The callback to be called when the element is ready to be listened for resize changes. Will be called with the element as first parameter.\n     */\n    function makeDetectable(options, element, callback) {\n        if (!callback) {\n            callback = element;\n            element = options;\n            options = null;\n        }\n\n        options = options || {};\n\n        function debug() {\n            if (options.debug) {\n                var args = Array.prototype.slice.call(arguments);\n                args.unshift(idHandler.get(element), \"Scroll: \");\n                if (reporter.log.apply) {\n                    reporter.log.apply(null, args);\n                } else {\n                    for (var i = 0; i < args.length; i++) {\n                        reporter.log(args[i]);\n                    }\n                }\n            }\n        }\n\n        function isDetached(element) {\n            function isInDocument(element) {\n                return element === element.ownerDocument.body || element.ownerDocument.body.contains(element);\n            }\n\n            if (!isInDocument(element)) {\n                return true;\n            }\n\n            // FireFox returns null style in hidden iframes. See https://github.com/wnr/element-resize-detector/issues/68 and https://bugzilla.mozilla.org/show_bug.cgi?id=795520\n            if (getComputedStyle(element) === null) {\n                return true;\n            }\n\n            return false;\n        }\n\n        function isUnrendered(element) {\n            // Check the absolute positioned container since the top level container is display: inline.\n            var container = getState(element).container.childNodes[0];\n            var style = getComputedStyle(container);\n            return !style.width || style.width.indexOf(\"px\") === -1; //Can only compute pixel value when rendered.\n        }\n\n        function getStyle() {\n            // Some browsers only force layouts when actually reading the style properties of the style object, so make sure that they are all read here,\n            // so that the user of the function can be sure that it will perform the layout here, instead of later (important for batching).\n            var elementStyle            = getComputedStyle(element);\n            var style                   = {};\n            style.position              = elementStyle.position;\n            style.width                 = element.offsetWidth;\n            style.height                = element.offsetHeight;\n            style.top                   = elementStyle.top;\n            style.right                 = elementStyle.right;\n            style.bottom                = elementStyle.bottom;\n            style.left                  = elementStyle.left;\n            style.widthCSS              = elementStyle.width;\n            style.heightCSS             = elementStyle.height;\n            return style;\n        }\n\n        function storeStartSize() {\n            var style = getStyle();\n            getState(element).startSize = {\n                width: style.width,\n                height: style.height\n            };\n            debug(\"Element start size\", getState(element).startSize);\n        }\n\n        function initListeners() {\n            getState(element).listeners = [];\n        }\n\n        function storeStyle() {\n            debug(\"storeStyle invoked.\");\n            if (!getState(element)) {\n                debug(\"Aborting because element has been uninstalled\");\n                return;\n            }\n\n            var style = getStyle();\n            getState(element).style = style;\n        }\n\n        function storeCurrentSize(element, width, height) {\n            getState(element).lastWidth = width;\n            getState(element).lastHeight  = height;\n        }\n\n        function getExpandChildElement(element) {\n            return getExpandElement(element).childNodes[0];\n        }\n\n        function getWidthOffset() {\n            return 2 * scrollbarSizes.width + 1;\n        }\n\n        function getHeightOffset() {\n            return 2 * scrollbarSizes.height + 1;\n        }\n\n        function getExpandWidth(width) {\n            return width + 10 + getWidthOffset();\n        }\n\n        function getExpandHeight(height) {\n            return height + 10 + getHeightOffset();\n        }\n\n        function getShrinkWidth(width) {\n            return width * 2 + getWidthOffset();\n        }\n\n        function getShrinkHeight(height) {\n            return height * 2 + getHeightOffset();\n        }\n\n        function positionScrollbars(element, width, height) {\n            var expand          = getExpandElement(element);\n            var shrink          = getShrinkElement(element);\n            var expandWidth     = getExpandWidth(width);\n            var expandHeight    = getExpandHeight(height);\n            var shrinkWidth     = getShrinkWidth(width);\n            var shrinkHeight    = getShrinkHeight(height);\n            expand.scrollLeft   = expandWidth;\n            expand.scrollTop    = expandHeight;\n            shrink.scrollLeft   = shrinkWidth;\n            shrink.scrollTop    = shrinkHeight;\n        }\n\n        function injectContainerElement() {\n            var container = getState(element).container;\n\n            if (!container) {\n                container                   = document.createElement(\"div\");\n                container.className         = detectionContainerClass;\n                container.style.cssText     = \"visibility: hidden; display: inline; width: 0px; height: 0px; z-index: -1; overflow: hidden; margin: 0; padding: 0;\";\n                getState(element).container = container;\n                addAnimationClass(container);\n                element.appendChild(container);\n\n                var onAnimationStart = function () {\n                    getState(element).onRendered && getState(element).onRendered();\n                };\n\n                addEvent(container, \"animationstart\", onAnimationStart);\n\n                // Store the event handler here so that they may be removed when uninstall is called.\n                // See uninstall function for an explanation why it is needed.\n                getState(element).onAnimationStart = onAnimationStart;\n            }\n\n            return container;\n        }\n\n        function injectScrollElements() {\n            function alterPositionStyles() {\n                var style = getState(element).style;\n\n                if(style.position === \"static\") {\n                    element.style.position = \"relative\";\n\n                    var removeRelativeStyles = function(reporter, element, style, property) {\n                        function getNumericalValue(value) {\n                            return value.replace(/[^-\\d\\.]/g, \"\");\n                        }\n\n                        var value = style[property];\n\n                        if(value !== \"auto\" && getNumericalValue(value) !== \"0\") {\n                            reporter.warn(\"An element that is positioned static has style.\" + property + \"=\" + value + \" which is ignored due to the static positioning. The element will need to be positioned relative, so the style.\" + property + \" will be set to 0. Element: \", element);\n                            element.style[property] = 0;\n                        }\n                    };\n\n                    //Check so that there are no accidental styles that will make the element styled differently now that is is relative.\n                    //If there are any, set them to 0 (this should be okay with the user since the style properties did nothing before [since the element was positioned static] anyway).\n                    removeRelativeStyles(reporter, element, style, \"top\");\n                    removeRelativeStyles(reporter, element, style, \"right\");\n                    removeRelativeStyles(reporter, element, style, \"bottom\");\n                    removeRelativeStyles(reporter, element, style, \"left\");\n                }\n            }\n\n            function getLeftTopBottomRightCssText(left, top, bottom, right) {\n                left = (!left ? \"0\" : (left + \"px\"));\n                top = (!top ? \"0\" : (top + \"px\"));\n                bottom = (!bottom ? \"0\" : (bottom + \"px\"));\n                right = (!right ? \"0\" : (right + \"px\"));\n\n                return \"left: \" + left + \"; top: \" + top + \"; right: \" + right + \"; bottom: \" + bottom + \";\";\n            }\n\n            debug(\"Injecting elements\");\n\n            if (!getState(element)) {\n                debug(\"Aborting because element has been uninstalled\");\n                return;\n            }\n\n            alterPositionStyles();\n\n            var rootContainer = getState(element).container;\n\n            if (!rootContainer) {\n                rootContainer = injectContainerElement();\n            }\n\n            // Due to this WebKit bug https://bugs.webkit.org/show_bug.cgi?id=80808 (currently fixed in Blink, but still present in WebKit browsers such as Safari),\n            // we need to inject two containers, one that is width/height 100% and another that is left/top -1px so that the final container always is 1x1 pixels bigger than\n            // the targeted element.\n            // When the bug is resolved, \"containerContainer\" may be removed.\n\n            // The outer container can occasionally be less wide than the targeted when inside inline elements element in WebKit (see https://bugs.webkit.org/show_bug.cgi?id=152980).\n            // This should be no problem since the inner container either way makes sure the injected scroll elements are at least 1x1 px.\n\n            var scrollbarWidth          = scrollbarSizes.width;\n            var scrollbarHeight         = scrollbarSizes.height;\n            var containerContainerStyle = \"position: absolute; flex: none; overflow: hidden; z-index: -1; visibility: hidden; width: 100%; height: 100%; left: 0px; top: 0px;\";\n            var containerStyle          = \"position: absolute; flex: none; overflow: hidden; z-index: -1; visibility: hidden; \" + getLeftTopBottomRightCssText(-(1 + scrollbarWidth), -(1 + scrollbarHeight), -scrollbarHeight, -scrollbarWidth);\n            var expandStyle             = \"position: absolute; flex: none; overflow: scroll; z-index: -1; visibility: hidden; width: 100%; height: 100%;\";\n            var shrinkStyle             = \"position: absolute; flex: none; overflow: scroll; z-index: -1; visibility: hidden; width: 100%; height: 100%;\";\n            var expandChildStyle        = \"position: absolute; left: 0; top: 0;\";\n            var shrinkChildStyle        = \"position: absolute; width: 200%; height: 200%;\";\n\n            var containerContainer      = document.createElement(\"div\");\n            var container               = document.createElement(\"div\");\n            var expand                  = document.createElement(\"div\");\n            var expandChild             = document.createElement(\"div\");\n            var shrink                  = document.createElement(\"div\");\n            var shrinkChild             = document.createElement(\"div\");\n\n            // Some browsers choke on the resize system being rtl, so force it to ltr. https://github.com/wnr/element-resize-detector/issues/56\n            // However, dir should not be set on the top level container as it alters the dimensions of the target element in some browsers.\n            containerContainer.dir              = \"ltr\";\n\n            containerContainer.style.cssText    = containerContainerStyle;\n            containerContainer.className        = detectionContainerClass;\n            container.className                 = detectionContainerClass;\n            container.style.cssText             = containerStyle;\n            expand.style.cssText                = expandStyle;\n            expandChild.style.cssText           = expandChildStyle;\n            shrink.style.cssText                = shrinkStyle;\n            shrinkChild.style.cssText           = shrinkChildStyle;\n\n            expand.appendChild(expandChild);\n            shrink.appendChild(shrinkChild);\n            container.appendChild(expand);\n            container.appendChild(shrink);\n            containerContainer.appendChild(container);\n            rootContainer.appendChild(containerContainer);\n\n            function onExpandScroll() {\n                getState(element).onExpand && getState(element).onExpand();\n            }\n\n            function onShrinkScroll() {\n                getState(element).onShrink && getState(element).onShrink();\n            }\n\n            addEvent(expand, \"scroll\", onExpandScroll);\n            addEvent(shrink, \"scroll\", onShrinkScroll);\n\n            // Store the event handlers here so that they may be removed when uninstall is called.\n            // See uninstall function for an explanation why it is needed.\n            getState(element).onExpandScroll = onExpandScroll;\n            getState(element).onShrinkScroll = onShrinkScroll;\n        }\n\n        function registerListenersAndPositionElements() {\n            function updateChildSizes(element, width, height) {\n                var expandChild             = getExpandChildElement(element);\n                var expandWidth             = getExpandWidth(width);\n                var expandHeight            = getExpandHeight(height);\n                expandChild.style.width     = expandWidth + \"px\";\n                expandChild.style.height    = expandHeight + \"px\";\n            }\n\n            function updateDetectorElements(done) {\n                var width           = element.offsetWidth;\n                var height          = element.offsetHeight;\n\n                debug(\"Storing current size\", width, height);\n\n                // Store the size of the element sync here, so that multiple scroll events may be ignored in the event listeners.\n                // Otherwise the if-check in handleScroll is useless.\n                storeCurrentSize(element, width, height);\n\n                // Since we delay the processing of the batch, there is a risk that uninstall has been called before the batch gets to execute.\n                // Since there is no way to cancel the fn executions, we need to add an uninstall guard to all fns of the batch.\n\n                batchProcessor.add(0, function performUpdateChildSizes() {\n                    if (!getState(element)) {\n                        debug(\"Aborting because element has been uninstalled\");\n                        return;\n                    }\n\n                    if (!areElementsInjected()) {\n                        debug(\"Aborting because element container has not been initialized\");\n                        return;\n                    }\n\n                    if (options.debug) {\n                        var w = element.offsetWidth;\n                        var h = element.offsetHeight;\n\n                        if (w !== width || h !== height) {\n                            reporter.warn(idHandler.get(element), \"Scroll: Size changed before updating detector elements.\");\n                        }\n                    }\n\n                    updateChildSizes(element, width, height);\n                });\n\n                batchProcessor.add(1, function updateScrollbars() {\n                    if (!getState(element)) {\n                        debug(\"Aborting because element has been uninstalled\");\n                        return;\n                    }\n\n                    if (!areElementsInjected()) {\n                        debug(\"Aborting because element container has not been initialized\");\n                        return;\n                    }\n\n                    positionScrollbars(element, width, height);\n                });\n\n                if (done) {\n                    batchProcessor.add(2, function () {\n                        if (!getState(element)) {\n                            debug(\"Aborting because element has been uninstalled\");\n                            return;\n                        }\n\n                        if (!areElementsInjected()) {\n                          debug(\"Aborting because element container has not been initialized\");\n                          return;\n                        }\n\n                        done();\n                    });\n                }\n            }\n\n            function areElementsInjected() {\n                return !!getState(element).container;\n            }\n\n            function notifyListenersIfNeeded() {\n                function isFirstNotify() {\n                    return getState(element).lastNotifiedWidth === undefined;\n                }\n\n                debug(\"notifyListenersIfNeeded invoked\");\n\n                var state = getState(element);\n\n                // Don't notify the if the current size is the start size, and this is the first notification.\n                if (isFirstNotify() && state.lastWidth === state.startSize.width && state.lastHeight === state.startSize.height) {\n                    return debug(\"Not notifying: Size is the same as the start size, and there has been no notification yet.\");\n                }\n\n                // Don't notify if the size already has been notified.\n                if (state.lastWidth === state.lastNotifiedWidth && state.lastHeight === state.lastNotifiedHeight) {\n                    return debug(\"Not notifying: Size already notified\");\n                }\n\n\n                debug(\"Current size not notified, notifying...\");\n                state.lastNotifiedWidth = state.lastWidth;\n                state.lastNotifiedHeight = state.lastHeight;\n                forEach(getState(element).listeners, function (listener) {\n                    listener(element);\n                });\n            }\n\n            function handleRender() {\n                debug(\"startanimation triggered.\");\n\n                if (isUnrendered(element)) {\n                    debug(\"Ignoring since element is still unrendered...\");\n                    return;\n                }\n\n                debug(\"Element rendered.\");\n                var expand = getExpandElement(element);\n                var shrink = getShrinkElement(element);\n                if (expand.scrollLeft === 0 || expand.scrollTop === 0 || shrink.scrollLeft === 0 || shrink.scrollTop === 0) {\n                    debug(\"Scrollbars out of sync. Updating detector elements...\");\n                    updateDetectorElements(notifyListenersIfNeeded);\n                }\n            }\n\n            function handleScroll() {\n                debug(\"Scroll detected.\");\n\n                if (isUnrendered(element)) {\n                    // Element is still unrendered. Skip this scroll event.\n                    debug(\"Scroll event fired while unrendered. Ignoring...\");\n                    return;\n                }\n\n                var width = element.offsetWidth;\n                var height = element.offsetHeight;\n\n                if (width !== element.lastWidth || height !== element.lastHeight) {\n                    debug(\"Element size changed.\");\n                    updateDetectorElements(notifyListenersIfNeeded);\n                } else {\n                    debug(\"Element size has not changed (\" + width + \"x\" + height + \").\");\n                }\n            }\n\n            debug(\"registerListenersAndPositionElements invoked.\");\n\n            if (!getState(element)) {\n                debug(\"Aborting because element has been uninstalled\");\n                return;\n            }\n\n            getState(element).onRendered = handleRender;\n            getState(element).onExpand = handleScroll;\n            getState(element).onShrink = handleScroll;\n\n            var style = getState(element).style;\n            updateChildSizes(element, style.width, style.height);\n        }\n\n        function finalizeDomMutation() {\n            debug(\"finalizeDomMutation invoked.\");\n\n            if (!getState(element)) {\n                debug(\"Aborting because element has been uninstalled\");\n                return;\n            }\n\n            var style = getState(element).style;\n            storeCurrentSize(element, style.width, style.height);\n            positionScrollbars(element, style.width, style.height);\n        }\n\n        function ready() {\n            callback(element);\n        }\n\n        function install() {\n            debug(\"Installing...\");\n            initListeners();\n            storeStartSize();\n\n            batchProcessor.add(0, storeStyle);\n            batchProcessor.add(1, injectScrollElements);\n            batchProcessor.add(2, registerListenersAndPositionElements);\n            batchProcessor.add(3, finalizeDomMutation);\n            batchProcessor.add(4, ready);\n        }\n\n        debug(\"Making detectable...\");\n\n        if (isDetached(element)) {\n            debug(\"Element is detached\");\n\n            injectContainerElement();\n\n            debug(\"Waiting until element is attached...\");\n\n            getState(element).onRendered = function () {\n                debug(\"Element is now attached\");\n                install();\n            };\n        } else {\n            install();\n        }\n    }\n\n    function uninstall(element) {\n        var state = getState(element);\n\n        if (!state) {\n            // Uninstall has been called on a non-erd element.\n            return;\n        }\n\n        // Uninstall may have been called in the following scenarios:\n        // (1) Right between the sync code and async batch (here state.busy = true, but nothing have been registered or injected).\n        // (2) In the ready callback of the last level of the batch by another element (here, state.busy = true, but all the stuff has been injected).\n        // (3) After the installation process (here, state.busy = false and all the stuff has been injected).\n        // So to be on the safe side, let's check for each thing before removing.\n\n        // We need to remove the event listeners, because otherwise the event might fire on an uninstall element which results in an error when trying to get the state of the element.\n        state.onExpandScroll && removeEvent(getExpandElement(element), \"scroll\", state.onExpandScroll);\n        state.onShrinkScroll && removeEvent(getShrinkElement(element), \"scroll\", state.onShrinkScroll);\n        state.onAnimationStart && removeEvent(state.container, \"animationstart\", state.onAnimationStart);\n\n        state.container && element.removeChild(state.container);\n    }\n\n    return {\n        makeDetectable: makeDetectable,\n        addListener: addListener,\n        uninstall: uninstall\n    };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.element-resize-detector@1.1.12@element-resize-detector/src/detection-strategy/scroll.js\n// module id = 353\n// module chunks = 0","\"use strict\";\n\nvar forEach                 = require(\"./collection-utils\").forEach;\nvar elementUtilsMaker       = require(\"./element-utils\");\nvar listenerHandlerMaker    = require(\"./listener-handler\");\nvar idGeneratorMaker        = require(\"./id-generator\");\nvar idHandlerMaker          = require(\"./id-handler\");\nvar reporterMaker           = require(\"./reporter\");\nvar browserDetector         = require(\"./browser-detector\");\nvar batchProcessorMaker     = require(\"batch-processor\");\nvar stateHandler            = require(\"./state-handler\");\n\n//Detection strategies.\nvar objectStrategyMaker     = require(\"./detection-strategy/object.js\");\nvar scrollStrategyMaker     = require(\"./detection-strategy/scroll.js\");\n\nfunction isCollection(obj) {\n    return Array.isArray(obj) || obj.length !== undefined;\n}\n\nfunction toArray(collection) {\n    if (!Array.isArray(collection)) {\n        var array = [];\n        forEach(collection, function (obj) {\n            array.push(obj);\n        });\n        return array;\n    } else {\n        return collection;\n    }\n}\n\nfunction isElement(obj) {\n    return obj && obj.nodeType === 1;\n}\n\n/**\n * @typedef idHandler\n * @type {object}\n * @property {function} get Gets the resize detector id of the element.\n * @property {function} set Generate and sets the resize detector id of the element.\n */\n\n/**\n * @typedef Options\n * @type {object}\n * @property {boolean} callOnAdd    Determines if listeners should be called when they are getting added.\n                                    Default is true. If true, the listener is guaranteed to be called when it has been added.\n                                    If false, the listener will not be guarenteed to be called when it has been added (does not prevent it from being called).\n * @property {idHandler} idHandler  A custom id handler that is responsible for generating, setting and retrieving id's for elements.\n                                    If not provided, a default id handler will be used.\n * @property {reporter} reporter    A custom reporter that handles reporting logs, warnings and errors.\n                                    If not provided, a default id handler will be used.\n                                    If set to false, then nothing will be reported.\n * @property {boolean} debug        If set to true, the the system will report debug messages as default for the listenTo method.\n */\n\n/**\n * Creates an element resize detector instance.\n * @public\n * @param {Options?} options Optional global options object that will decide how this instance will work.\n */\nmodule.exports = function(options) {\n    options = options || {};\n\n    //idHandler is currently not an option to the listenTo function, so it should not be added to globalOptions.\n    var idHandler;\n\n    if (options.idHandler) {\n        // To maintain compatability with idHandler.get(element, readonly), make sure to wrap the given idHandler\n        // so that readonly flag always is true when it's used here. This may be removed next major version bump.\n        idHandler = {\n            get: function (element) { return options.idHandler.get(element, true); },\n            set: options.idHandler.set\n        };\n    } else {\n        var idGenerator = idGeneratorMaker();\n        var defaultIdHandler = idHandlerMaker({\n            idGenerator: idGenerator,\n            stateHandler: stateHandler\n        });\n        idHandler = defaultIdHandler;\n    }\n\n    //reporter is currently not an option to the listenTo function, so it should not be added to globalOptions.\n    var reporter = options.reporter;\n\n    if(!reporter) {\n        //If options.reporter is false, then the reporter should be quiet.\n        var quiet = reporter === false;\n        reporter = reporterMaker(quiet);\n    }\n\n    //batchProcessor is currently not an option to the listenTo function, so it should not be added to globalOptions.\n    var batchProcessor = getOption(options, \"batchProcessor\", batchProcessorMaker({ reporter: reporter }));\n\n    //Options to be used as default for the listenTo function.\n    var globalOptions = {};\n    globalOptions.callOnAdd     = !!getOption(options, \"callOnAdd\", true);\n    globalOptions.debug         = !!getOption(options, \"debug\", false);\n\n    var eventListenerHandler    = listenerHandlerMaker(idHandler);\n    var elementUtils            = elementUtilsMaker({\n        stateHandler: stateHandler\n    });\n\n    //The detection strategy to be used.\n    var detectionStrategy;\n    var desiredStrategy = getOption(options, \"strategy\", \"object\");\n    var strategyOptions = {\n        reporter: reporter,\n        batchProcessor: batchProcessor,\n        stateHandler: stateHandler,\n        idHandler: idHandler\n    };\n\n    if(desiredStrategy === \"scroll\") {\n        if (browserDetector.isLegacyOpera()) {\n            reporter.warn(\"Scroll strategy is not supported on legacy Opera. Changing to object strategy.\");\n            desiredStrategy = \"object\";\n        } else if (browserDetector.isIE(9)) {\n            reporter.warn(\"Scroll strategy is not supported on IE9. Changing to object strategy.\");\n            desiredStrategy = \"object\";\n        }\n    }\n\n    if(desiredStrategy === \"scroll\") {\n        detectionStrategy = scrollStrategyMaker(strategyOptions);\n    } else if(desiredStrategy === \"object\") {\n        detectionStrategy = objectStrategyMaker(strategyOptions);\n    } else {\n        throw new Error(\"Invalid strategy name: \" + desiredStrategy);\n    }\n\n    //Calls can be made to listenTo with elements that are still being installed.\n    //Also, same elements can occur in the elements list in the listenTo function.\n    //With this map, the ready callbacks can be synchronized between the calls\n    //so that the ready callback can always be called when an element is ready - even if\n    //it wasn't installed from the function itself.\n    var onReadyCallbacks = {};\n\n    /**\n     * Makes the given elements resize-detectable and starts listening to resize events on the elements. Calls the event callback for each event for each element.\n     * @public\n     * @param {Options?} options Optional options object. These options will override the global options. Some options may not be overriden, such as idHandler.\n     * @param {element[]|element} elements The given array of elements to detect resize events of. Single element is also valid.\n     * @param {function} listener The callback to be executed for each resize event for each element.\n     */\n    function listenTo(options, elements, listener) {\n        function onResizeCallback(element) {\n            var listeners = eventListenerHandler.get(element);\n            forEach(listeners, function callListenerProxy(listener) {\n                listener(element);\n            });\n        }\n\n        function addListener(callOnAdd, element, listener) {\n            eventListenerHandler.add(element, listener);\n\n            if(callOnAdd) {\n                listener(element);\n            }\n        }\n\n        //Options object may be omitted.\n        if(!listener) {\n            listener = elements;\n            elements = options;\n            options = {};\n        }\n\n        if(!elements) {\n            throw new Error(\"At least one element required.\");\n        }\n\n        if(!listener) {\n            throw new Error(\"Listener required.\");\n        }\n\n        if (isElement(elements)) {\n            // A single element has been passed in.\n            elements = [elements];\n        } else if (isCollection(elements)) {\n            // Convert collection to array for plugins.\n            // TODO: May want to check so that all the elements in the collection are valid elements.\n            elements = toArray(elements);\n        } else {\n            return reporter.error(\"Invalid arguments. Must be a DOM element or a collection of DOM elements.\");\n        }\n\n        var elementsReady = 0;\n\n        var callOnAdd = getOption(options, \"callOnAdd\", globalOptions.callOnAdd);\n        var onReadyCallback = getOption(options, \"onReady\", function noop() {});\n        var debug = getOption(options, \"debug\", globalOptions.debug);\n\n        forEach(elements, function attachListenerToElement(element) {\n            if (!stateHandler.getState(element)) {\n                stateHandler.initState(element);\n                idHandler.set(element);\n            }\n\n            var id = idHandler.get(element);\n\n            debug && reporter.log(\"Attaching listener to element\", id, element);\n\n            if(!elementUtils.isDetectable(element)) {\n                debug && reporter.log(id, \"Not detectable.\");\n                if(elementUtils.isBusy(element)) {\n                    debug && reporter.log(id, \"System busy making it detectable\");\n\n                    //The element is being prepared to be detectable. Do not make it detectable.\n                    //Just add the listener, because the element will soon be detectable.\n                    addListener(callOnAdd, element, listener);\n                    onReadyCallbacks[id] = onReadyCallbacks[id] || [];\n                    onReadyCallbacks[id].push(function onReady() {\n                        elementsReady++;\n\n                        if(elementsReady === elements.length) {\n                            onReadyCallback();\n                        }\n                    });\n                    return;\n                }\n\n                debug && reporter.log(id, \"Making detectable...\");\n                //The element is not prepared to be detectable, so do prepare it and add a listener to it.\n                elementUtils.markBusy(element, true);\n                return detectionStrategy.makeDetectable({ debug: debug }, element, function onElementDetectable(element) {\n                    debug && reporter.log(id, \"onElementDetectable\");\n\n                    if (stateHandler.getState(element)) {\n                        elementUtils.markAsDetectable(element);\n                        elementUtils.markBusy(element, false);\n                        detectionStrategy.addListener(element, onResizeCallback);\n                        addListener(callOnAdd, element, listener);\n\n                        // Since the element size might have changed since the call to \"listenTo\", we need to check for this change,\n                        // so that a resize event may be emitted.\n                        // Having the startSize object is optional (since it does not make sense in some cases such as unrendered elements), so check for its existance before.\n                        // Also, check the state existance before since the element may have been uninstalled in the installation process.\n                        var state = stateHandler.getState(element);\n                        if (state && state.startSize) {\n                            var width = element.offsetWidth;\n                            var height = element.offsetHeight;\n                            if (state.startSize.width !== width || state.startSize.height !== height) {\n                                onResizeCallback(element);\n                            }\n                        }\n\n                        if(onReadyCallbacks[id]) {\n                            forEach(onReadyCallbacks[id], function(callback) {\n                                callback();\n                            });\n                        }\n                    } else {\n                        // The element has been unisntalled before being detectable.\n                        debug && reporter.log(id, \"Element uninstalled before being detectable.\");\n                    }\n\n                    delete onReadyCallbacks[id];\n\n                    elementsReady++;\n                    if(elementsReady === elements.length) {\n                        onReadyCallback();\n                    }\n                });\n            }\n\n            debug && reporter.log(id, \"Already detecable, adding listener.\");\n\n            //The element has been prepared to be detectable and is ready to be listened to.\n            addListener(callOnAdd, element, listener);\n            elementsReady++;\n        });\n\n        if(elementsReady === elements.length) {\n            onReadyCallback();\n        }\n    }\n\n    function uninstall(elements) {\n        if(!elements) {\n            return reporter.error(\"At least one element is required.\");\n        }\n\n        if (isElement(elements)) {\n            // A single element has been passed in.\n            elements = [elements];\n        } else if (isCollection(elements)) {\n            // Convert collection to array for plugins.\n            // TODO: May want to check so that all the elements in the collection are valid elements.\n            elements = toArray(elements);\n        } else {\n            return reporter.error(\"Invalid arguments. Must be a DOM element or a collection of DOM elements.\");\n        }\n\n        forEach(elements, function (element) {\n            eventListenerHandler.removeAllListeners(element);\n            detectionStrategy.uninstall(element);\n            stateHandler.cleanState(element);\n        });\n    }\n\n    return {\n        listenTo: listenTo,\n        removeListener: eventListenerHandler.removeListener,\n        removeAllListeners: eventListenerHandler.removeAllListeners,\n        uninstall: uninstall\n    };\n};\n\nfunction getOption(options, name, defaultValue) {\n    var value = options[name];\n\n    if((value === undefined || value === null) && defaultValue !== undefined) {\n        return defaultValue;\n    }\n\n    return value;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.element-resize-detector@1.1.12@element-resize-detector/src/element-resize-detector.js\n// module id = 354\n// module chunks = 0","\"use strict\";\n\nmodule.exports = function(options) {\n    var getState = options.stateHandler.getState;\n\n    /**\n     * Tells if the element has been made detectable and ready to be listened for resize events.\n     * @public\n     * @param {element} The element to check.\n     * @returns {boolean} True or false depending on if the element is detectable or not.\n     */\n    function isDetectable(element) {\n        var state = getState(element);\n        return state && !!state.isDetectable;\n    }\n\n    /**\n     * Marks the element that it has been made detectable and ready to be listened for resize events.\n     * @public\n     * @param {element} The element to mark.\n     */\n    function markAsDetectable(element) {\n        getState(element).isDetectable = true;\n    }\n\n    /**\n     * Tells if the element is busy or not.\n     * @public\n     * @param {element} The element to check.\n     * @returns {boolean} True or false depending on if the element is busy or not.\n     */\n    function isBusy(element) {\n        return !!getState(element).busy;\n    }\n\n    /**\n     * Marks the object is busy and should not be made detectable.\n     * @public\n     * @param {element} element The element to mark.\n     * @param {boolean} busy If the element is busy or not.\n     */\n    function markBusy(element, busy) {\n        getState(element).busy = !!busy;\n    }\n\n    return {\n        isDetectable: isDetectable,\n        markAsDetectable: markAsDetectable,\n        isBusy: isBusy,\n        markBusy: markBusy\n    };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.element-resize-detector@1.1.12@element-resize-detector/src/element-utils.js\n// module id = 355\n// module chunks = 0","\"use strict\";\n\nmodule.exports = function() {\n    var idCount = 1;\n\n    /**\n     * Generates a new unique id in the context.\n     * @public\n     * @returns {number} A unique id in the context.\n     */\n    function generate() {\n        return idCount++;\n    }\n\n    return {\n        generate: generate\n    };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.element-resize-detector@1.1.12@element-resize-detector/src/id-generator.js\n// module id = 356\n// module chunks = 0","\"use strict\";\n\nmodule.exports = function(options) {\n    var idGenerator     = options.idGenerator;\n    var getState        = options.stateHandler.getState;\n\n    /**\n     * Gets the resize detector id of the element.\n     * @public\n     * @param {element} element The target element to get the id of.\n     * @returns {string|number|null} The id of the element. Null if it has no id.\n     */\n    function getId(element) {\n        var state = getState(element);\n\n        if (state && state.id !== undefined) {\n            return state.id;\n        }\n\n        return null;\n    }\n\n    /**\n     * Sets the resize detector id of the element. Requires the element to have a resize detector state initialized.\n     * @public\n     * @param {element} element The target element to set the id of.\n     * @returns {string|number|null} The id of the element.\n     */\n    function setId(element) {\n        var state = getState(element);\n\n        if (!state) {\n            throw new Error(\"setId required the element to have a resize detection state.\");\n        }\n\n        var id = idGenerator.generate();\n\n        state.id = id;\n\n        return id;\n    }\n\n    return {\n        get: getId,\n        set: setId\n    };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.element-resize-detector@1.1.12@element-resize-detector/src/id-handler.js\n// module id = 357\n// module chunks = 0","\"use strict\";\n\nmodule.exports = function(idHandler) {\n    var eventListeners = {};\n\n    /**\n     * Gets all listeners for the given element.\n     * @public\n     * @param {element} element The element to get all listeners for.\n     * @returns All listeners for the given element.\n     */\n    function getListeners(element) {\n        var id = idHandler.get(element);\n\n        if (id === undefined) {\n            return [];\n        }\n\n        return eventListeners[id] || [];\n    }\n\n    /**\n     * Stores the given listener for the given element. Will not actually add the listener to the element.\n     * @public\n     * @param {element} element The element that should have the listener added.\n     * @param {function} listener The callback that the element has added.\n     */\n    function addListener(element, listener) {\n        var id = idHandler.get(element);\n\n        if(!eventListeners[id]) {\n            eventListeners[id] = [];\n        }\n\n        eventListeners[id].push(listener);\n    }\n\n    function removeListener(element, listener) {\n        var listeners = getListeners(element);\n        for (var i = 0, len = listeners.length; i < len; ++i) {\n            if (listeners[i] === listener) {\n              listeners.splice(i, 1);\n              break;\n            }\n        }\n    }\n\n    function removeAllListeners(element) {\n      var listeners = getListeners(element);\n      if (!listeners) { return; }\n      listeners.length = 0;\n    }\n\n    return {\n        get: getListeners,\n        add: addListener,\n        removeListener: removeListener,\n        removeAllListeners: removeAllListeners\n    };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.element-resize-detector@1.1.12@element-resize-detector/src/listener-handler.js\n// module id = 358\n// module chunks = 0","\"use strict\";\n\n/* global console: false */\n\n/**\n * Reporter that handles the reporting of logs, warnings and errors.\n * @public\n * @param {boolean} quiet Tells if the reporter should be quiet or not.\n */\nmodule.exports = function(quiet) {\n    function noop() {\n        //Does nothing.\n    }\n\n    var reporter = {\n        log: noop,\n        warn: noop,\n        error: noop\n    };\n\n    if(!quiet && window.console) {\n        var attachFunction = function(reporter, name) {\n            //The proxy is needed to be able to call the method with the console context,\n            //since we cannot use bind.\n            reporter[name] = function reporterProxy() {\n                var f = console[name];\n                if (f.apply) { //IE9 does not support console.log.apply :)\n                    f.apply(console, arguments);\n                } else {\n                    for (var i = 0; i < arguments.length; i++) {\n                        f(arguments[i]);\n                    }\n                }\n            };\n        };\n\n        attachFunction(reporter, \"log\");\n        attachFunction(reporter, \"warn\");\n        attachFunction(reporter, \"error\");\n    }\n\n    return reporter;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.element-resize-detector@1.1.12@element-resize-detector/src/reporter.js\n// module id = 359\n// module chunks = 0","\"use strict\";\n\nvar prop = \"_erd\";\n\nfunction initState(element) {\n    element[prop] = {};\n    return getState(element);\n}\n\nfunction getState(element) {\n    return element[prop];\n}\n\nfunction cleanState(element) {\n    delete element[prop];\n}\n\nmodule.exports = {\n    initState: initState,\n    getState: getState,\n    cleanState: cleanState\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.element-resize-detector@1.1.12@element-resize-detector/src/state-handler.js\n// module id = 360\n// module chunks = 0","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../node_modules/.css-loader@0.28.1@css-loader/index.js?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../../node_modules/.vue-loader@11.3.4@vue-loader/lib/style-compiler/index.js?{\\\"id\\\":\\\"data-v-1108af1c\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../../node_modules/.vue-loader@11.3.4@vue-loader/lib/selector.js?type=styles&index=0!./RegionChart.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../../../node_modules/.vue-style-loader@2.0.5@vue-style-loader/lib/addStylesClient.js\")(\"24f3ff41\", content, true);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.extract-text-webpack-plugin@2.1.0@extract-text-webpack-plugin/loader.js?{\"omit\":1,\"remove\":true}!./~/.vue-style-loader@2.0.5@vue-style-loader!./~/.css-loader@0.28.1@css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/.vue-loader@11.3.4@vue-loader/lib/style-compiler?{\"id\":\"data-v-1108af1c\",\"scoped\":true,\"hasInlineConfig\":false}!./~/.vue-loader@11.3.4@vue-loader/lib/selector.js?type=styles&index=0!./src/pages/Dashboard/components/RegionChart.vue\n// module id = 362\n// module chunks = 0","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/.css-loader@0.28.1@css-loader/index.js?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../node_modules/.vue-loader@11.3.4@vue-loader/lib/style-compiler/index.js?{\\\"id\\\":\\\"data-v-17dfc345\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/.vue-loader@11.3.4@vue-loader/lib/selector.js?type=styles&index=0!./LoadingMarker.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../../node_modules/.vue-style-loader@2.0.5@vue-style-loader/lib/addStylesClient.js\")(\"4afb3c5a\", content, true);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.extract-text-webpack-plugin@2.1.0@extract-text-webpack-plugin/loader.js?{\"omit\":1,\"remove\":true}!./~/.vue-style-loader@2.0.5@vue-style-loader!./~/.css-loader@0.28.1@css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/.vue-loader@11.3.4@vue-loader/lib/style-compiler?{\"id\":\"data-v-17dfc345\",\"scoped\":true,\"hasInlineConfig\":false}!./~/.vue-loader@11.3.4@vue-loader/lib/selector.js?type=styles&index=0!./src/pages/Dashboard/LoadingMarker.vue\n// module id = 363\n// module chunks = 0","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../node_modules/.css-loader@0.28.1@css-loader/index.js?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../../node_modules/.vue-loader@11.3.4@vue-loader/lib/style-compiler/index.js?{\\\"id\\\":\\\"data-v-2f29b3a2\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../../node_modules/.vue-loader@11.3.4@vue-loader/lib/selector.js?type=styles&index=0!./OSChart.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../../../node_modules/.vue-style-loader@2.0.5@vue-style-loader/lib/addStylesClient.js\")(\"54c74433\", content, true);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.extract-text-webpack-plugin@2.1.0@extract-text-webpack-plugin/loader.js?{\"omit\":1,\"remove\":true}!./~/.vue-style-loader@2.0.5@vue-style-loader!./~/.css-loader@0.28.1@css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/.vue-loader@11.3.4@vue-loader/lib/style-compiler?{\"id\":\"data-v-2f29b3a2\",\"scoped\":true,\"hasInlineConfig\":false}!./~/.vue-loader@11.3.4@vue-loader/lib/selector.js?type=styles&index=0!./src/pages/Dashboard/components/OSChart.vue\n// module id = 364\n// module chunks = 0","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../node_modules/.css-loader@0.28.1@css-loader/index.js?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../../node_modules/.vue-loader@11.3.4@vue-loader/lib/style-compiler/index.js?{\\\"id\\\":\\\"data-v-443ef9a7\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../../node_modules/.vue-loader@11.3.4@vue-loader/lib/selector.js?type=styles&index=0!./AgeChart.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../../../node_modules/.vue-style-loader@2.0.5@vue-style-loader/lib/addStylesClient.js\")(\"5670c3b4\", content, true);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.extract-text-webpack-plugin@2.1.0@extract-text-webpack-plugin/loader.js?{\"omit\":1,\"remove\":true}!./~/.vue-style-loader@2.0.5@vue-style-loader!./~/.css-loader@0.28.1@css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/.vue-loader@11.3.4@vue-loader/lib/style-compiler?{\"id\":\"data-v-443ef9a7\",\"scoped\":true,\"hasInlineConfig\":false}!./~/.vue-loader@11.3.4@vue-loader/lib/selector.js?type=styles&index=0!./src/pages/Dashboard/components/AgeChart.vue\n// module id = 365\n// module chunks = 0","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/.css-loader@0.28.1@css-loader/index.js?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../node_modules/.vue-loader@11.3.4@vue-loader/lib/style-compiler/index.js?{\\\"id\\\":\\\"data-v-61c0d0a1\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/.vue-loader@11.3.4@vue-loader/lib/selector.js?type=styles&index=0!./index.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../../node_modules/.vue-style-loader@2.0.5@vue-style-loader/lib/addStylesClient.js\")(\"372c4849\", content, true);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.extract-text-webpack-plugin@2.1.0@extract-text-webpack-plugin/loader.js?{\"omit\":1,\"remove\":true}!./~/.vue-style-loader@2.0.5@vue-style-loader!./~/.css-loader@0.28.1@css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/.vue-loader@11.3.4@vue-loader/lib/style-compiler?{\"id\":\"data-v-61c0d0a1\",\"scoped\":true,\"hasInlineConfig\":false}!./~/.vue-loader@11.3.4@vue-loader/lib/selector.js?type=styles&index=0!./src/pages/Dashboard/index.vue\n// module id = 366\n// module chunks = 0","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../node_modules/.css-loader@0.28.1@css-loader/index.js?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../../node_modules/.vue-loader@11.3.4@vue-loader/lib/style-compiler/index.js?{\\\"id\\\":\\\"data-v-6840e881\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../../node_modules/.vue-loader@11.3.4@vue-loader/lib/selector.js?type=styles&index=0!./NumberCard.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../../../node_modules/.vue-style-loader@2.0.5@vue-style-loader/lib/addStylesClient.js\")(\"5d6a339b\", content, true);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.extract-text-webpack-plugin@2.1.0@extract-text-webpack-plugin/loader.js?{\"omit\":1,\"remove\":true}!./~/.vue-style-loader@2.0.5@vue-style-loader!./~/.css-loader@0.28.1@css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/.vue-loader@11.3.4@vue-loader/lib/style-compiler?{\"id\":\"data-v-6840e881\",\"scoped\":true,\"hasInlineConfig\":false}!./~/.vue-loader@11.3.4@vue-loader/lib/selector.js?type=styles&index=0!./src/pages/Dashboard/components/NumberCard.vue\n// module id = 367\n// module chunks = 0","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../.css-loader@0.28.1@css-loader/index.js?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../.vue-loader@11.3.4@vue-loader/lib/style-compiler/index.js?{\\\"id\\\":\\\"data-v-897bed0c\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../.vue-loader@11.3.4@vue-loader/lib/selector.js?type=styles&index=0!./lite.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../.vue-style-loader@2.0.5@vue-style-loader/lib/addStylesClient.js\")(\"85dca9ca\", content, true);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.extract-text-webpack-plugin@2.1.0@extract-text-webpack-plugin/loader.js?{\"omit\":1,\"remove\":true}!./~/.vue-style-loader@2.0.5@vue-style-loader!./~/.css-loader@0.28.1@css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/.vue-loader@11.3.4@vue-loader/lib/style-compiler?{\"id\":\"data-v-897bed0c\",\"scoped\":true,\"hasInlineConfig\":false}!./~/.vue-loader@11.3.4@vue-loader/lib/selector.js?type=styles&index=0!./~/.vue-echarts-v3@1.0.4@vue-echarts-v3/src/lite.vue\n// module id = 369\n// module chunks = 0","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        result = wait - timeSinceLastCall;\n\n    return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = debounce;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.lodash.debounce@4.0.8@lodash.debounce/index.js\n// module id = 377\n// module chunks = 0","!function(t,e){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define(\"CountTo\",[],e):\"object\"==typeof exports?exports.CountTo=e():t.CountTo=e()}(this,function(){return function(t){function e(n){if(i[n])return i[n].exports;var a=i[n]={i:n,l:!1,exports:{}};return t[n].call(a.exports,a,a.exports,e),a.l=!0,a.exports}var i={};return e.m=t,e.c=i,e.i=function(t){return t},e.d=function(t,i,n){e.o(t,i)||Object.defineProperty(t,i,{configurable:!1,enumerable:!0,get:n})},e.n=function(t){var i=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(i,\"a\",i),i},e.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},e.p=\"/dist/\",e(e.s=5)}([function(t,e,i){var n=i(3)(i(1),i(4),null,null);t.exports=n.exports},function(t,e,i){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0});var n=i(2);e.default={props:{startVal:{type:Number,required:!1,default:0},endVal:{type:Number,required:!1,default:2017},duration:{type:Number,required:!1,default:3e3},autoplay:{type:Boolean,required:!1,default:!0},decimals:{type:Number,required:!1,default:0,validator:function(t){return t>=0}},decimal:{type:String,required:!1,default:\".\"},separator:{type:String,required:!1,default:\",\"},prefix:{type:String,required:!1,default:\"\"},suffix:{type:String,required:!1,default:\"\"},useEasing:{type:Boolean,required:!1,default:!0},easingFn:{type:Function,default:function(t,e,i,n){return i*(1-Math.pow(2,-10*t/n))*1024/1023+e}}},data:function(){return{localStartVal:this.startVal,displayValue:this.formatNumber(this.startVal),printVal:null,paused:!1,localDuration:this.duration,startTime:null,timestamp:null,remaining:null,rAF:null}},computed:{countDown:function(){return this.startVal>this.endVal}},mounted:function(){this.autoplay&&this.start(),this.$emit(\"mountedCallback\")},methods:{start:function(){this.localStartVal=this.startVal,this.startTime=null,this.localDuration=this.duration,this.paused=!1,this.rAF=(0,n.requestAnimationFrame)(this.count)},pauseResume:function(){this.paused?(this.resume(),this.paused=!1):(this.pause(),this.paused=!0)},pause:function(){(0,n.cancelAnimationFrame)(this.rAF)},resume:function(){this.startTime=null,this.localDuration=+this.remaining,this.localStartVal=+this.printVal,(0,n.requestAnimationFrame)(this.count)},reset:function(){this.startTime=null,(0,n.cancelAnimationFrame)(this.rAF),this.displayValue=this.formatNumber(this.startVal)},count:function(t){this.startTime||(this.startTime=t),this.timestamp=t;var e=t-this.startTime;this.remaining=this.localDuration-e,this.useEasing?this.countDown?this.printVal=this.localStartVal-this.easingFn(e,0,this.localStartVal-this.endVal,this.localDuration):this.printVal=this.easingFn(e,this.localStartVal,this.endVal-this.localStartVal,this.localDuration):this.countDown?this.printVal=this.localStartVal-(this.localStartVal-this.endVal)*(e/this.localDuration):this.printVal=this.localStartVal+(this.localStartVal-this.startVal)*(e/this.localDuration),this.countDown?this.printVal=this.printVal<this.endVal?this.endVal:this.printVal:this.printVal=this.printVal>this.endVal?this.endVal:this.printVal,this.displayValue=this.formatNumber(this.printVal),e<this.localDuration?this.rAF=(0,n.requestAnimationFrame)(this.count):this.$emit(\"callback\")},isNumber:function(t){return!isNaN(parseFloat(t))},formatNumber:function(t){t=t.toFixed(this.decimals),t+=\"\";var e=t.split(\".\"),i=e[0],n=e.length>1?this.decimal+e[1]:\"\",a=/(\\d+)(\\d{3})/;if(this.separator&&!this.isNumber(this.separator))for(;a.test(i);)i=i.replace(a,\"$1\"+this.separator+\"$2\");return this.prefix+i+n+this.suffix}},destroyed:function(){(0,n.cancelAnimationFrame)(this.rAF)}}},function(t,e,i){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0});for(var n=0,a=\"webkit moz ms o\".split(\" \"),r=window.requestAnimationFrame,s=window.cancelAnimationFrame,o=void 0,u=0;u<a.length&&(!r||!s);u++)o=a[u],e.requestAnimationFrame=r=r||window[o+\"RequestAnimationFrame\"],e.cancelAnimationFrame=s=s||window[o+\"CancelAnimationFrame\"]||window[o+\"CancelRequestAnimationFrame\"];r&&s||(e.requestAnimationFrame=r=function(t){var e=(new Date).getTime(),i=Math.max(0,16-(e-n)),a=window.setTimeout(function(){t(e+i)},i);return n=e+i,a},e.cancelAnimationFrame=s=function(t){window.clearTimeout(t)}),e.requestAnimationFrame=r,e.cancelAnimationFrame=s},function(t,e){t.exports=function(t,e,i,n){var a,r=t=t||{},s=typeof t.default;\"object\"!==s&&\"function\"!==s||(a=t,r=t.default);var o=\"function\"==typeof r?r.options:r;if(e&&(o.render=e.render,o.staticRenderFns=e.staticRenderFns),i&&(o._scopeId=i),n){var u=Object.create(o.computed||null);Object.keys(n).forEach(function(t){var e=n[t];u[t]=function(){return e}}),o.computed=u}return{esModule:a,exports:r,options:o}}},function(t,e){t.exports={render:function(){var t=this,e=t.$createElement;return(t._self._c||e)(\"span\",[t._v(\"\\n  \"+t._s(t.displayValue)+\"\\n\")])},staticRenderFns:[]}},function(t,e,i){\"use strict\";function n(t){return t&&t.__esModule?t:{default:t}}Object.defineProperty(e,\"__esModule\",{value:!0});var a=i(0),r=n(a);e.default=r.default,\"undefined\"!=typeof window&&window.Vue&&window.Vue.component(\"count-to\",r.default)}])});\n//# sourceMappingURL=vue-count-to.min.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.vue-count-to@1.0.5@vue-count-to/dist/vue-count-to.min.js\n// module id = 378\n// module chunks = 0","'use strict';\n\nvar ECHARTS_EVENTS = [\n  'click',\n  'dblclick',\n  'mouseover',\n  'mouseout',\n  'mousedown',\n  'mouseup',\n  'globalout',\n  'legendselectchanged',\n  'legendselected',\n  'legendunselected',\n  'datazoom',\n  'datarangeselected',\n  'timelinechanged',\n  'timelineplaychanged',\n  'restore',\n  'dataviewchanged',\n  'magictypechanged',\n  'geoselectchanged',\n  'geoselected',\n  'geounselected',\n  'pieselectchanged',\n  'pieselected',\n  'pieunselected',\n  'mapselectchanged',\n  'mapselected',\n  'mapunselected',\n  'axisareaselected',\n  'brush',\n  'brushselected'\n];\n\nexports = module.exports = function wrapECharts(ECharts, Resize, Debounce) {\n  return {\n    name: 'IEcharts',\n    props: {\n      className: {\n        type: String,\n        required: false,\n        default: 'vue-echarts'\n      },\n      theme: {\n        type: String,\n        required: false\n      },\n      group: {\n        type: String,\n        required: false\n      },\n      option: {\n        type: Object,\n        required: true\n      },\n      initOpts: {\n        type: Object,\n        required: false\n      },\n      notMerge: {\n        type: Boolean,\n        required: false,\n        default: false\n      },\n      lazyUpdate: {\n        type: Boolean,\n        required: false,\n        default: false\n      },\n      loading: {\n        type: Boolean,\n        required: false,\n        default: false\n      },\n      loadingOpts: {\n        type: Object,\n        required: false\n      },\n      resizable: {\n        type: Boolean,\n        required: false,\n        default: false\n      }\n    },\n    data: function data() {\n      return {\n        fnResize: null,\n        insResize: null,\n        instance: null,\n        watches: {\n          loading: null,\n          option: null,\n          group: null\n        }\n      };\n    },\n    computed: {\n      width: {\n        cache: false,\n        get: function get() {\n          return this.instance.getWidth();\n        }\n      },\n      height: {\n        cache: false,\n        get: function get() {\n          return this.instance.getHeight();\n        }\n      },\n      isDisposed: {\n        cache: false,\n        get: function get() {\n          return this.instance.isDisposed();\n        }\n      }\n    },\n    watch: {\n      loading: {\n        handler: function handler(loading) {\n          var that = this;\n          that.ifLoading(loading);\n        },\n        deep: false\n      },\n      option: {\n        handler: function handler(option) {\n          var that = this;\n          that.instance.setOption(option, that.notMerge, that.lazyUpdate);\n        },\n        deep: true\n      },\n      group: {\n        handler: function handler(group) {\n          var that = this;\n          that.instance.group = group;\n        },\n        deep: false\n      }\n    },\n    methods: {\n      initResize: function initResize(dom) {\n        var that = this;\n        if (that.resizable && typeof Resize === 'function') {\n          // Resize(dom, that.resize);\n          that.insResize = that.insResize || Resize({\n            strategy: 'scroll' // <- For ultra performance.\n          });\n          that.fnResize = that.fnResize || Debounce(that.resize, 250, {\n            'leading': true,\n            'trailing': true\n          });\n          that.insResize.listenTo(dom, function(element) {\n            // that.resize();\n            that.fnResize();\n          });\n        }\n      },\n      init: function init() {\n        var that = this;\n        if (!that.instance) {\n          var dom = that.$el;\n          var instance = ECharts.getInstanceByDom(dom);\n          if (!instance) {\n            instance = ECharts.init(dom, that.theme, that.initOpts);\n          }\n          instance.group = that.group;\n          that.instance = instance;\n          that.$emit('ready', instance, ECharts);\n          that.$nextTick(function() {\n            that.ifLoading(that.loading);\n            that.update();\n            // that.watch();\n            that.bind();\n            that.initResize(dom);\n          });\n        }\n      },\n      bind: function bind() {\n        var that = this;\n        var _on = function _on(name) {\n          that.instance.on(name, function(event) {\n            that.$emit(name, event, that.instance, ECharts);\n          });\n        };\n\n        if (that._events) {\n          for (var e in that._events) {\n            if (Object.prototype.hasOwnProperty.call(that._events, e)) {\n              var name = e.toLowerCase();\n              if (ECHARTS_EVENTS.indexOf(name) > -1) {\n                _on(name);\n              }\n            }\n          }\n        } else {\n          for (var i = 0, len = ECHARTS_EVENTS.length; i < len; i++) {\n            _on(ECHARTS_EVENTS[i]);\n          }\n        }\n      },\n      unbind: function unbind() {\n        var that = this;\n        if (that._events) {\n          for (var e in that._events) {\n            if (Object.prototype.hasOwnProperty.call(that._events, e)) {\n              var name = e.toLowerCase();\n              if (ECHARTS_EVENTS.indexOf(name) > -1) {\n                that.instance.off(name);\n              }\n            }\n          }\n        } else {\n          for (var i = 0, len = ECHARTS_EVENTS.length; i < len; i++) {\n            that.instance.off(ECHARTS_EVENTS[i]);\n          }\n        }\n      },\n      ifLoading: function ifLoading(loading) {\n        var that = this;\n        if (loading) {\n          that.showLoading();\n        } else {\n          that.hideLoading();\n        }\n      },\n      watch: function watch() {\n        var that = this;\n        that.watches.loading = that.$watch('loading', function(loading) {\n          that.ifLoading(loading);\n        });\n        that.watches.option = that.$watch('option', function(option) {\n          that.instance.setOption(option, that.notMerge, that.lazyUpdate);\n        }, {\n          deep: true\n        });\n        that.watches.group = that.$watch('group', function(group) {\n          that.instance.group = group;\n        });\n      },\n      unwatch: function unwatch() {\n        var that = this;\n        if (that.watches.loading) {\n          that.watches.loading();\n          that.watches.loading = null;\n        }\n        if (that.watches.option) {\n          that.watches.option();\n          that.watches.option = null;\n        }\n        if (that.watches.group) {\n          that.watches.group();\n          that.watches.group = null;\n        }\n      },\n      resize: function resize(opts) {\n        var that = this;\n        if (that.instance) {\n          that.instance.resize(opts);\n        }\n      },\n      update: function update() {\n        var that = this;\n        if (that.instance) {\n          that.instance.setOption(that.option, that.notMerge, that.lazyUpdate);\n          that.resize();\n        }\n      },\n      mergeOption: function mergeOption(opts) {\n        var that = this;\n        if (that.instance) {\n          that.instance.setOption(opts, false, that.lazyUpdate);\n          that.resize();\n        }\n      },\n      dispatchAction: function dispatchAction(payload) {\n        var that = this;\n        if (that.instance) {\n          that.instance.dispatchAction(payload);\n        }\n      },\n      convertToPixel: function convertToPixel(finder, value) {\n        var that = this;\n        return that.instance.convertToPixel(finder, value);\n      },\n      convertFromPixel: function convertFromPixel(finder, value) {\n        var that = this;\n        return that.instance.convertFromPixel(finder, value);\n      },\n      containPixel: function containPixel(finder, value) {\n        var that = this;\n        return that.instance.containPixel(finder, value);\n      },\n      showLoading: function showLoading() {\n        var that = this;\n        if (that.instance) {\n          that.instance.showLoading('default', that.loadingOpts);\n        }\n      },\n      hideLoading: function hideLoading() {\n        var that = this;\n        if (that.instance) {\n          that.instance.hideLoading();\n        }\n      },\n      getDataURL: function getDataURL(opts) {\n        var that = this;\n        return that.instance.getDataURL(opts);\n      },\n      getConnectedDataURL: function getConnectedDataURL(opts) {\n        var that = this;\n        return that.instance.getConnectedDataURL(opts);\n      },\n      clear: function clear() {\n        var that = this;\n        if (that.instance) {\n          that.instance.clear();\n        }\n      },\n      uninitResize: function uninitResize() {\n        var that = this;\n        if (that.insResize && that.insResize.uninstall) {\n          that.insResize.uninstall(that.$el);\n          that.insResize = null;\n        }\n        if (that.fnResize && that.fnResize.cancel) {\n          that.fnResize.cancel();\n          that.fnResize = null;\n        }\n      },\n      uninit: function uninit() {\n        var that = this;\n        if (that.instance) {\n          that.unbind();\n          // that.unwatch();\n          that.uninitResize();\n          that.instance.dispose();\n          that.instance = null;\n        }\n      }\n    },\n    // beforeCreate: function beforeCreate() {\n      // var that = this;\n      // console.log('beforeCreate');\n    // },\n    // created: function created() {\n      // var that = this;\n      // console.log('created');\n    // },\n    // beforeMount: function beforeMount() {\n      // var that = this;\n      // console.log('beforeMount');\n    // },\n    mounted: function mounted() {\n      var that = this;\n      // console.log('mounted');\n      that.init();\n    },\n    // beforeUpdate: function beforeUpdate() {\n      // var that = this;\n      // console.log('beforeUpdate');\n    // },\n    // updated: function updated() {\n      // var that = this;\n      // console.log('updated');\n    // },\n    // activated: function activated() {\n      // var that = this;\n      // console.log('activated');\n    // },\n    // deactivated: function deactivated() {\n      // var that = this;\n      // console.log('deactivated');\n    // },\n    beforeDestroy: function beforeDestroy() {\n      var that = this;\n      // console.log('beforeDestroy');\n      that.uninit();\n    },\n    // destroyed: function destroyed() {\n      // var that = this;\n      // console.log('destroyed');\n    // },\n    connect: function connect(group) {\n      return ECharts.connect(group);\n    },\n    disConnect: function disConnect(group) {\n      return ECharts.disConnect(group);\n    },\n    dispose: function dispose(target) {\n      return ECharts.dispose(target);\n    },\n    getInstanceByDom: function getInstanceByDom(target) {\n      return ECharts.getInstanceByDom(target);\n    },\n    registerMap: function registerMap(mapName, geoJson, specialAreas) {\n      return ECharts.registerMap(mapName, geoJson, specialAreas);\n    },\n    getMap: function getMap(mapName) {\n      return ECharts.getMap(mapName);\n    },\n    registerTheme: function registerTheme(themeName, theme) {\n      return ECharts.registerTheme(themeName, theme);\n    }\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.vue-echarts-v3@1.0.4@vue-echarts-v3/src/wrapper.js\n// module id = 379\n// module chunks = 0","\n/* styles */\nrequire(\"!!../../../node_modules/.extract-text-webpack-plugin@2.1.0@extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../node_modules/.vue-loader@11.3.4@vue-loader/lib/style-compiler/index?{\\\"id\\\":\\\"data-v-17dfc345\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/.vue-loader@11.3.4@vue-loader/lib/selector?type=styles&index=0!./LoadingMarker.vue\")\n\nvar Component = require(\"!../../../node_modules/.vue-loader@11.3.4@vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../../node_modules/.vue-loader@11.3.4@vue-loader/lib/selector?type=script&index=0!./LoadingMarker.vue\"),\n  /* template */\n  require(\"!!../../../node_modules/.vue-loader@11.3.4@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-17dfc345\\\"}!../../../node_modules/.vue-loader@11.3.4@vue-loader/lib/selector?type=template&index=0!./LoadingMarker.vue\"),\n  /* scopeId */\n  \"data-v-17dfc345\",\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/pages/Dashboard/LoadingMarker.vue\n// module id = 382\n// module chunks = 0","\n/* styles */\nrequire(\"!!../../../../node_modules/.extract-text-webpack-plugin@2.1.0@extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../../node_modules/.vue-loader@11.3.4@vue-loader/lib/style-compiler/index?{\\\"id\\\":\\\"data-v-443ef9a7\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../../node_modules/.vue-loader@11.3.4@vue-loader/lib/selector?type=styles&index=0!./AgeChart.vue\")\n\nvar Component = require(\"!../../../../node_modules/.vue-loader@11.3.4@vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../../../node_modules/.vue-loader@11.3.4@vue-loader/lib/selector?type=script&index=0!./AgeChart.vue\"),\n  /* template */\n  require(\"!!../../../../node_modules/.vue-loader@11.3.4@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-443ef9a7\\\"}!../../../../node_modules/.vue-loader@11.3.4@vue-loader/lib/selector?type=template&index=0!./AgeChart.vue\"),\n  /* scopeId */\n  \"data-v-443ef9a7\",\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/pages/Dashboard/components/AgeChart.vue\n// module id = 383\n// module chunks = 0","\n/* styles */\nrequire(\"!!../../../../node_modules/.extract-text-webpack-plugin@2.1.0@extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../../node_modules/.vue-loader@11.3.4@vue-loader/lib/style-compiler/index?{\\\"id\\\":\\\"data-v-6840e881\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../../node_modules/.vue-loader@11.3.4@vue-loader/lib/selector?type=styles&index=0!./NumberCard.vue\")\n\nvar Component = require(\"!../../../../node_modules/.vue-loader@11.3.4@vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../../../node_modules/.vue-loader@11.3.4@vue-loader/lib/selector?type=script&index=0!./NumberCard.vue\"),\n  /* template */\n  require(\"!!../../../../node_modules/.vue-loader@11.3.4@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-6840e881\\\"}!../../../../node_modules/.vue-loader@11.3.4@vue-loader/lib/selector?type=template&index=0!./NumberCard.vue\"),\n  /* scopeId */\n  \"data-v-6840e881\",\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/pages/Dashboard/components/NumberCard.vue\n// module id = 384\n// module chunks = 0","\n/* styles */\nrequire(\"!!../../../../node_modules/.extract-text-webpack-plugin@2.1.0@extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../../node_modules/.vue-loader@11.3.4@vue-loader/lib/style-compiler/index?{\\\"id\\\":\\\"data-v-2f29b3a2\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../../node_modules/.vue-loader@11.3.4@vue-loader/lib/selector?type=styles&index=0!./OSChart.vue\")\n\nvar Component = require(\"!../../../../node_modules/.vue-loader@11.3.4@vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../../../node_modules/.vue-loader@11.3.4@vue-loader/lib/selector?type=script&index=0!./OSChart.vue\"),\n  /* template */\n  require(\"!!../../../../node_modules/.vue-loader@11.3.4@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-2f29b3a2\\\"}!../../../../node_modules/.vue-loader@11.3.4@vue-loader/lib/selector?type=template&index=0!./OSChart.vue\"),\n  /* scopeId */\n  \"data-v-2f29b3a2\",\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/pages/Dashboard/components/OSChart.vue\n// module id = 385\n// module chunks = 0","\n/* styles */\nrequire(\"!!../../../../node_modules/.extract-text-webpack-plugin@2.1.0@extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../../node_modules/.vue-loader@11.3.4@vue-loader/lib/style-compiler/index?{\\\"id\\\":\\\"data-v-1108af1c\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../../node_modules/.vue-loader@11.3.4@vue-loader/lib/selector?type=styles&index=0!./RegionChart.vue\")\n\nvar Component = require(\"!../../../../node_modules/.vue-loader@11.3.4@vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../../../node_modules/.vue-loader@11.3.4@vue-loader/lib/selector?type=script&index=0!./RegionChart.vue\"),\n  /* template */\n  require(\"!!../../../../node_modules/.vue-loader@11.3.4@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-1108af1c\\\"}!../../../../node_modules/.vue-loader@11.3.4@vue-loader/lib/selector?type=template&index=0!./RegionChart.vue\"),\n  /* scopeId */\n  \"data-v-1108af1c\",\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/pages/Dashboard/components/RegionChart.vue\n// module id = 386\n// module chunks = 0","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"chart-box\"\n  }, [_c('chart', {\n    attrs: {\n      \"option\": _vm.bar,\n      \"resizable\": \"\"\n    }\n  })], 1)\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.vue-loader@11.3.4@vue-loader/lib/template-compiler?{\"id\":\"data-v-1108af1c\"}!./~/.vue-loader@11.3.4@vue-loader/lib/selector.js?type=template&index=0!./src/pages/Dashboard/components/RegionChart.vue\n// module id = 388\n// module chunks = 0","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('Row', {\n    staticClass: \"dashboard-grid\",\n    attrs: {\n      \"gutter\": 16\n    }\n  }, [_vm._l(([1, 2, 3, 4]), function(num, index) {\n    return _c('Col', {\n      key: index,\n      attrs: {\n        \"md\": 6,\n        \"sm\": 12\n      }\n    }, [_c('Card', {\n      staticStyle: {\n        \"height\": \"88px\"\n      }\n    })], 1)\n  }), _vm._v(\" \"), _c('Col', {\n    attrs: {\n      \"md\": 14,\n      \"sm\": 24\n    }\n  }, [_c('Card', {\n    staticStyle: {\n      \"height\": \"284px\"\n    }\n  })], 1), _vm._v(\" \"), _c('Col', {\n    attrs: {\n      \"md\": 10,\n      \"sm\": 24\n    }\n  }, [_c('Card', {\n    staticStyle: {\n      \"height\": \"284px\"\n    }\n  })], 1), _vm._v(\" \"), _c('Col', {\n    attrs: {\n      \"md\": 10,\n      \"sm\": 24\n    }\n  }, [_c('Card', {\n    staticStyle: {\n      \"height\": \"284px\"\n    }\n  })], 1), _vm._v(\" \"), _c('Col', {\n    attrs: {\n      \"md\": 14,\n      \"sm\": 24\n    }\n  }, [_c('Card', {\n    staticStyle: {\n      \"height\": \"284px\"\n    }\n  })], 1)], 2)\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.vue-loader@11.3.4@vue-loader/lib/template-compiler?{\"id\":\"data-v-17dfc345\"}!./~/.vue-loader@11.3.4@vue-loader/lib/selector.js?type=template&index=0!./src/pages/Dashboard/LoadingMarker.vue\n// module id = 389\n// module chunks = 0","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"chart-box\"\n  }, [_c('chart', {\n    attrs: {\n      \"option\": _vm.chartOpts,\n      \"resizable\": \"\"\n    }\n  })], 1)\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.vue-loader@11.3.4@vue-loader/lib/template-compiler?{\"id\":\"data-v-2f29b3a2\"}!./~/.vue-loader@11.3.4@vue-loader/lib/selector.js?type=template&index=0!./src/pages/Dashboard/components/OSChart.vue\n// module id = 390\n// module chunks = 0","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"chart-box\"\n  }, [_c('chart', {\n    attrs: {\n      \"option\": _vm.bar,\n      \"resizable\": \"\"\n    }\n  })], 1)\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.vue-loader@11.3.4@vue-loader/lib/template-compiler?{\"id\":\"data-v-443ef9a7\"}!./~/.vue-loader@11.3.4@vue-loader/lib/selector.js?type=template&index=0!./src/pages/Dashboard/components/AgeChart.vue\n// module id = 391\n// module chunks = 0","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', [_c('transition', {\n    attrs: {\n      \"name\": \"fade\"\n    }\n  }, [(!_vm.loading) ? _c('Row', {\n    staticClass: \"dashboard-grid\",\n    attrs: {\n      \"gutter\": 16\n    }\n  }, [_vm._l((_vm.numbers), function(num) {\n    return _c('Col', {\n      key: num.key,\n      attrs: {\n        \"md\": 6,\n        \"sm\": 12\n      }\n    }, [_c('NumberCard', {\n      attrs: {\n        \"title\": num.title,\n        \"color\": num.color,\n        \"number\": num.number,\n        \"icon\": num.icon\n      }\n    })], 1)\n  }), _vm._v(\" \"), _c('Col', {\n    attrs: {\n      \"md\": 14,\n      \"sm\": 24\n    }\n  }, [_c('Card', [_c('RegionChart', {\n    attrs: {\n      \"title\": _vm.region.title,\n      \"data\": _vm.region.data\n    }\n  })], 1)], 1), _vm._v(\" \"), _c('Col', {\n    attrs: {\n      \"md\": 10,\n      \"sm\": 24\n    }\n  }, [_c('Card', [_c('OSChart', {\n    attrs: {\n      \"title\": _vm.os.title,\n      \"data\": _vm.os.data\n    }\n  })], 1)], 1), _vm._v(\" \"), _c('Col', {\n    attrs: {\n      \"md\": 10,\n      \"sm\": 24\n    }\n  }, [_c('Card', [_c('OSChart', {\n    attrs: {\n      \"title\": _vm.terminal.title,\n      \"data\": _vm.terminal.data\n    }\n  })], 1)], 1), _vm._v(\" \"), _c('Col', {\n    attrs: {\n      \"md\": 14,\n      \"sm\": 24\n    }\n  }, [_c('Card', [_c('AgeChart', {\n    attrs: {\n      \"title\": _vm.age.title,\n      \"data\": _vm.age.data\n    }\n  })], 1)], 1)], 2) : _vm._e()], 1), _vm._v(\" \"), (_vm.loading) ? _c('LoadingMarker') : _vm._e()], 1)\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.vue-loader@11.3.4@vue-loader/lib/template-compiler?{\"id\":\"data-v-61c0d0a1\"}!./~/.vue-loader@11.3.4@vue-loader/lib/selector.js?type=template&index=0!./src/pages/Dashboard/index.vue\n// module id = 392\n// module chunks = 0","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('Card', {\n    staticClass: \"number-card\"\n  }, [_c('Icon', {\n    staticClass: \"icon\",\n    attrs: {\n      \"type\": _vm.icon,\n      \"color\": _vm.color\n    }\n  }), _vm._v(\" \"), _c('div', {\n    staticClass: \"content\"\n  }, [_c('h3', {\n    staticClass: \"title\"\n  }, [_vm._v(_vm._s(_vm.title))]), _vm._v(\" \"), _c('p', {\n    staticClass: \"number\"\n  }, [_c('countTo', {\n    attrs: {\n      \"endVal\": _vm.number,\n      \"duration\": 1000\n    }\n  })], 1)])], 1)\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.vue-loader@11.3.4@vue-loader/lib/template-compiler?{\"id\":\"data-v-6840e881\"}!./~/.vue-loader@11.3.4@vue-loader/lib/selector.js?type=template&index=0!./src/pages/Dashboard/components/NumberCard.vue\n// module id = 393\n// module chunks = 0","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    class: _vm.className\n  })\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.vue-loader@11.3.4@vue-loader/lib/template-compiler?{\"id\":\"data-v-897bed0c\"}!./~/.vue-loader@11.3.4@vue-loader/lib/selector.js?type=template&index=0!./~/.vue-echarts-v3@1.0.4@vue-echarts-v3/src/lite.vue\n// module id = 395\n// module chunks = 0","'use strict';\n/**\n * Handler\n * @module zrender/Handler\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (shenyi.914@gmail.com)\n */\n\n\n    var util = require('./core/util');\n    var Draggable = require('./mixin/Draggable');\n\n    var Eventful = require('./mixin/Eventful');\n\n    var SILENT = 'silent';\n\n    function makeEventPacket(eveType, targetInfo, event) {\n        return {\n            type: eveType,\n            event: event,\n            // target can only be an element that is not silent.\n            target: targetInfo.target,\n            // topTarget can be a silent element.\n            topTarget: targetInfo.topTarget,\n            cancelBubble: false,\n            offsetX: event.zrX,\n            offsetY: event.zrY,\n            gestureEvent: event.gestureEvent,\n            pinchX: event.pinchX,\n            pinchY: event.pinchY,\n            pinchScale: event.pinchScale,\n            wheelDelta: event.zrDelta,\n            zrByTouch: event.zrByTouch\n        };\n    }\n\n    function EmptyProxy () {}\n    EmptyProxy.prototype.dispose = function () {};\n\n    var handlerNames = [\n        'click', 'dblclick', 'mousewheel', 'mouseout',\n        'mouseup', 'mousedown', 'mousemove', 'contextmenu'\n    ];\n    /**\n     * @alias module:zrender/Handler\n     * @constructor\n     * @extends module:zrender/mixin/Eventful\n     * @param {module:zrender/Storage} storage Storage instance.\n     * @param {module:zrender/Painter} painter Painter instance.\n     * @param {module:zrender/dom/HandlerProxy} proxy HandlerProxy instance.\n     * @param {HTMLElement} painterRoot painter.root (not painter.getViewportRoot()).\n     */\n    var Handler = function(storage, painter, proxy, painterRoot) {\n        Eventful.call(this);\n\n        this.storage = storage;\n\n        this.painter = painter;\n\n        this.painterRoot = painterRoot;\n\n        proxy = proxy || new EmptyProxy();\n\n        /**\n         * Proxy of event. can be Dom, WebGLSurface, etc.\n         */\n        this.proxy = proxy;\n\n        // Attach handler\n        proxy.handler = this;\n\n        /**\n         * {target, topTarget}\n         * @private\n         * @type {Object}\n         */\n        this._hovered = {};\n\n        /**\n         * @private\n         * @type {Date}\n         */\n        this._lastTouchMoment;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._lastX;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._lastY;\n\n\n        Draggable.call(this);\n\n        util.each(handlerNames, function (name) {\n            proxy.on && proxy.on(name, this[name], this);\n        }, this);\n    };\n\n    Handler.prototype = {\n\n        constructor: Handler,\n\n        mousemove: function (event) {\n            var x = event.zrX;\n            var y = event.zrY;\n\n            var lastHovered = this._hovered;\n            var hovered = this._hovered = this.findHover(x, y);\n            var hoveredTarget = hovered.target;\n            var lastHoveredTarget = lastHovered.target;\n\n            var proxy = this.proxy;\n            proxy.setCursor && proxy.setCursor(hoveredTarget ? hoveredTarget.cursor : 'default');\n\n            // Mouse out on previous hovered element\n            if (lastHoveredTarget && hoveredTarget !== lastHoveredTarget && lastHoveredTarget.__zr) {\n                this.dispatchToElement(lastHovered, 'mouseout', event);\n            }\n\n            // Mouse moving on one element\n            this.dispatchToElement(hovered, 'mousemove', event);\n\n            // Mouse over on a new element\n            if (hoveredTarget && hoveredTarget !== lastHoveredTarget) {\n                this.dispatchToElement(hovered, 'mouseover', event);\n            }\n        },\n\n        mouseout: function (event) {\n            this.dispatchToElement(this._hovered, 'mouseout', event);\n\n            // There might be some doms created by upper layer application\n            // at the same level of painter.getViewportRoot() (e.g., tooltip\n            // dom created by echarts), where 'globalout' event should not\n            // be triggered when mouse enters these doms. (But 'mouseout'\n            // should be triggered at the original hovered element as usual).\n            var element = event.toElement || event.relatedTarget;\n            var innerDom;\n            do {\n                element = element && element.parentNode;\n            }\n            while (element && element.nodeType != 9 && !(\n                innerDom = element === this.painterRoot\n            ));\n\n            !innerDom && this.trigger('globalout', {event: event});\n        },\n\n        /**\n         * Resize\n         */\n        resize: function (event) {\n            this._hovered = {};\n        },\n\n        /**\n         * Dispatch event\n         * @param {string} eventName\n         * @param {event=} eventArgs\n         */\n        dispatch: function (eventName, eventArgs) {\n            var handler = this[eventName];\n            handler && handler.call(this, eventArgs);\n        },\n\n        /**\n         * Dispose\n         */\n        dispose: function () {\n\n            this.proxy.dispose();\n\n            this.storage =\n            this.proxy =\n            this.painter = null;\n        },\n\n        /**\n         * 设置默认的cursor style\n         * @param {string} [cursorStyle='default'] 例如 crosshair\n         */\n        setCursorStyle: function (cursorStyle) {\n            var proxy = this.proxy;\n            proxy.setCursor && proxy.setCursor(cursorStyle);\n        },\n\n        /**\n         * 事件分发代理\n         *\n         * @private\n         * @param {Object} targetInfo {target, topTarget} 目标图形元素\n         * @param {string} eventName 事件名称\n         * @param {Object} event 事件对象\n         */\n        dispatchToElement: function (targetInfo, eventName, event) {\n            targetInfo = targetInfo || {};\n            var eventHandler = 'on' + eventName;\n            var eventPacket = makeEventPacket(eventName, targetInfo, event);\n\n            var el = targetInfo.target;\n            while (el) {\n                el[eventHandler]\n                    && (eventPacket.cancelBubble = el[eventHandler].call(el, eventPacket));\n\n                el.trigger(eventName, eventPacket);\n\n                el = el.parent;\n\n                if (eventPacket.cancelBubble) {\n                    break;\n                }\n            }\n\n            if (!eventPacket.cancelBubble) {\n                // 冒泡到顶级 zrender 对象\n                this.trigger(eventName, eventPacket);\n                // 分发事件到用户自定义层\n                // 用户有可能在全局 click 事件中 dispose，所以需要判断下 painter 是否存在\n                this.painter && this.painter.eachOtherLayer(function (layer) {\n                    if (typeof(layer[eventHandler]) == 'function') {\n                        layer[eventHandler].call(layer, eventPacket);\n                    }\n                    if (layer.trigger) {\n                        layer.trigger(eventName, eventPacket);\n                    }\n                });\n            }\n        },\n\n        /**\n         * @private\n         * @param {number} x\n         * @param {number} y\n         * @param {module:zrender/graphic/Displayable} exclude\n         * @return {model:zrender/Element}\n         * @method\n         */\n        findHover: function(x, y, exclude) {\n            var list = this.storage.getDisplayList();\n            var out = {};\n\n            for (var i = list.length - 1; i >= 0 ; i--) {\n                var hoverCheckResult;\n                if (list[i] !== exclude\n                    // getDisplayList may include ignored item in VML mode\n                    && !list[i].ignore\n                    && (hoverCheckResult = isHover(list[i], x, y))\n                ) {\n                    !out.topTarget && (out.topTarget = list[i]);\n                    if (hoverCheckResult !== SILENT) {\n                        out.target = list[i];\n                        break;\n                    }\n                }\n            }\n\n            return out;\n        }\n    };\n\n    // Common handlers\n    util.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n        Handler.prototype[name] = function (event) {\n            // Find hover again to avoid click event is dispatched manually. Or click is triggered without mouseover\n            var hovered = this.findHover(event.zrX, event.zrY);\n            var hoveredTarget = hovered.target;\n\n            if (name === 'mousedown') {\n                this._downel = hoveredTarget;\n                // In case click triggered before mouseup\n                this._upel = hoveredTarget;\n            }\n            else if (name === 'mosueup') {\n                this._upel = hoveredTarget;\n            }\n            else if (name === 'click') {\n                if (this._downel !== this._upel) {\n                    return;\n                }\n            }\n\n            this.dispatchToElement(hovered, name, event);\n        };\n    });\n\n    function isHover(displayable, x, y) {\n        if (displayable[displayable.rectHover ? 'rectContain' : 'contain'](x, y)) {\n            var el = displayable;\n            var isSilent;\n            while (el) {\n                // If clipped by ancestor.\n                if (el.clipPath && !el.clipPath.contain(x, y))  {\n                    return false;\n                }\n                if (el.silent) {\n                    isSilent = true;\n                }\n                el = el.parent;\n            }\n            return isSilent ? SILENT : true;\n        }\n\n        return false;\n    }\n\n    util.mixin(Handler, Eventful);\n    util.mixin(Handler, Draggable);\n\n    module.exports = Handler;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.zrender@3.4.4@zrender/lib/Handler.js\n// module id = 401\n// module chunks = 0","/**\n * @module zrender/Layer\n * @author pissang(https://www.github.com/pissang)\n */\n\n\n    var util = require('./core/util');\n    var config = require('./config');\n    var Style = require('./graphic/Style');\n    var Pattern = require('./graphic/Pattern');\n\n    function returnFalse() {\n        return false;\n    }\n\n    /**\n     * 创建dom\n     *\n     * @inner\n     * @param {string} id dom id 待用\n     * @param {string} type dom type，such as canvas, div etc.\n     * @param {Painter} painter painter instance\n     * @param {number} number\n     */\n    function createDom(id, type, painter, dpr) {\n        var newDom = document.createElement(type);\n        var width = painter.getWidth();\n        var height = painter.getHeight();\n\n        var newDomStyle = newDom.style;\n        // 没append呢，请原谅我这样写，清晰~\n        newDomStyle.position = 'absolute';\n        newDomStyle.left = 0;\n        newDomStyle.top = 0;\n        newDomStyle.width = width + 'px';\n        newDomStyle.height = height + 'px';\n        newDom.width = width * dpr;\n        newDom.height = height * dpr;\n\n        // id不作为索引用，避免可能造成的重名，定义为私有属性\n        newDom.setAttribute('data-zr-dom-id', id);\n        return newDom;\n    }\n\n    /**\n     * @alias module:zrender/Layer\n     * @constructor\n     * @extends module:zrender/mixin/Transformable\n     * @param {string} id\n     * @param {module:zrender/Painter} painter\n     * @param {number} [dpr]\n     */\n    var Layer = function(id, painter, dpr) {\n        var dom;\n        dpr = dpr || config.devicePixelRatio;\n        if (typeof id === 'string') {\n            dom = createDom(id, 'canvas', painter, dpr);\n        }\n        // Not using isDom because in node it will return false\n        else if (util.isObject(id)) {\n            dom = id;\n            id = dom.id;\n        }\n        this.id = id;\n        this.dom = dom;\n\n        var domStyle = dom.style;\n        if (domStyle) { // Not in node\n            dom.onselectstart = returnFalse; // 避免页面选中的尴尬\n            domStyle['-webkit-user-select'] = 'none';\n            domStyle['user-select'] = 'none';\n            domStyle['-webkit-touch-callout'] = 'none';\n            domStyle['-webkit-tap-highlight-color'] = 'rgba(0,0,0,0)';\n            domStyle['padding'] = 0;\n            domStyle['margin'] = 0;\n            domStyle['border-width'] = 0;\n        }\n\n        this.domBack = null;\n        this.ctxBack = null;\n\n        this.painter = painter;\n\n        this.config = null;\n\n        // Configs\n        /**\n         * 每次清空画布的颜色\n         * @type {string}\n         * @default 0\n         */\n        this.clearColor = 0;\n        /**\n         * 是否开启动态模糊\n         * @type {boolean}\n         * @default false\n         */\n        this.motionBlur = false;\n        /**\n         * 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n         * @type {number}\n         * @default 0.7\n         */\n        this.lastFrameAlpha = 0.7;\n\n        /**\n         * Layer dpr\n         * @type {number}\n         */\n        this.dpr = dpr;\n    };\n\n    Layer.prototype = {\n\n        constructor: Layer,\n\n        elCount: 0,\n\n        __dirty: true,\n\n        initContext: function () {\n            this.ctx = this.dom.getContext('2d');\n\n            this.ctx.dpr = this.dpr;\n        },\n\n        createBackBuffer: function () {\n            var dpr = this.dpr;\n\n            this.domBack = createDom('back-' + this.id, 'canvas', this.painter, dpr);\n            this.ctxBack = this.domBack.getContext('2d');\n\n            if (dpr != 1) {\n                this.ctxBack.scale(dpr, dpr);\n            }\n        },\n\n        /**\n         * @param  {number} width\n         * @param  {number} height\n         */\n        resize: function (width, height) {\n            var dpr = this.dpr;\n\n            var dom = this.dom;\n            var domStyle = dom.style;\n            var domBack = this.domBack;\n\n            domStyle.width = width + 'px';\n            domStyle.height = height + 'px';\n\n            dom.width = width * dpr;\n            dom.height = height * dpr;\n\n            if (domBack) {\n                domBack.width = width * dpr;\n                domBack.height = height * dpr;\n\n                if (dpr != 1) {\n                    this.ctxBack.scale(dpr, dpr);\n                }\n            }\n        },\n\n        /**\n         * 清空该层画布\n         * @param {boolean} clearAll Clear all with out motion blur\n         */\n        clear: function (clearAll) {\n            var dom = this.dom;\n            var ctx = this.ctx;\n            var width = dom.width;\n            var height = dom.height;\n\n            var clearColor = this.clearColor;\n            var haveMotionBLur = this.motionBlur && !clearAll;\n            var lastFrameAlpha = this.lastFrameAlpha;\n\n            var dpr = this.dpr;\n\n            if (haveMotionBLur) {\n                if (!this.domBack) {\n                    this.createBackBuffer();\n                }\n\n                this.ctxBack.globalCompositeOperation = 'copy';\n                this.ctxBack.drawImage(\n                    dom, 0, 0,\n                    width / dpr,\n                    height / dpr\n                );\n            }\n\n            ctx.clearRect(0, 0, width, height);\n            if (clearColor) {\n                var clearColorGradientOrPattern;\n                // Gradient\n                if (clearColor.colorStops) {\n                    // Cache canvas gradient\n                    clearColorGradientOrPattern = clearColor.__canvasGradient || Style.getGradient(ctx, clearColor, {\n                        x: 0,\n                        y: 0,\n                        width: width,\n                        height: height\n                    });\n\n                    clearColor.__canvasGradient = clearColorGradientOrPattern;\n                }\n                // Pattern\n                else if (clearColor.image) {\n                    clearColorGradientOrPattern = Pattern.prototype.getCanvasPattern.call(clearColor, ctx);\n                }\n                ctx.save();\n                ctx.fillStyle = clearColorGradientOrPattern || clearColor;\n                ctx.fillRect(0, 0, width, height);\n                ctx.restore();\n            }\n\n            if (haveMotionBLur) {\n                var domBack = this.domBack;\n                ctx.save();\n                ctx.globalAlpha = lastFrameAlpha;\n                ctx.drawImage(domBack, 0, 0, width, height);\n                ctx.restore();\n            }\n        }\n    };\n\n    module.exports = Layer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.zrender@3.4.4@zrender/lib/Layer.js\n// module id = 402\n// module chunks = 0","'use strict';\n/**\n * Default canvas painter\n * @module zrender/Painter\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\n \n\n    var config = require('./config');\n    var util = require('./core/util');\n    var log = require('./core/log');\n    var BoundingRect = require('./core/BoundingRect');\n    var timsort = require('./core/timsort');\n\n    var Layer = require('./Layer');\n\n    var requestAnimationFrame = require('./animation/requestAnimationFrame');\n\n    // PENDIGN\n    // Layer exceeds MAX_PROGRESSIVE_LAYER_NUMBER may have some problem when flush directly second time.\n    //\n    // Maximum progressive layer. When exceeding this number. All elements will be drawed in the last layer.\n    var MAX_PROGRESSIVE_LAYER_NUMBER = 5;\n\n    function parseInt10(val) {\n        return parseInt(val, 10);\n    }\n\n    function isLayerValid(layer) {\n        if (!layer) {\n            return false;\n        }\n\n        if (layer.__builtin__) {\n            return true;\n        }\n\n        if (typeof(layer.resize) !== 'function'\n            || typeof(layer.refresh) !== 'function'\n        ) {\n            return false;\n        }\n\n        return true;\n    }\n\n    function preProcessLayer(layer) {\n        layer.__unusedCount++;\n    }\n\n    function postProcessLayer(layer) {\n        if (layer.__unusedCount == 1) {\n            layer.clear();\n        }\n    }\n\n    var tmpRect = new BoundingRect(0, 0, 0, 0);\n    var viewRect = new BoundingRect(0, 0, 0, 0);\n    function isDisplayableCulled(el, width, height) {\n        tmpRect.copy(el.getBoundingRect());\n        if (el.transform) {\n            tmpRect.applyTransform(el.transform);\n        }\n        viewRect.width = width;\n        viewRect.height = height;\n        return !tmpRect.intersect(viewRect);\n    }\n\n    function isClipPathChanged(clipPaths, prevClipPaths) {\n        if (clipPaths == prevClipPaths) { // Can both be null or undefined\n            return false;\n        }\n\n        if (!clipPaths || !prevClipPaths || (clipPaths.length !== prevClipPaths.length)) {\n            return true;\n        }\n        for (var i = 0; i < clipPaths.length; i++) {\n            if (clipPaths[i] !== prevClipPaths[i]) {\n                return true;\n            }\n        }\n    }\n\n    function doClip(clipPaths, ctx) {\n        for (var i = 0; i < clipPaths.length; i++) {\n            var clipPath = clipPaths[i];\n\n            clipPath.setTransform(ctx);\n            ctx.beginPath();\n            clipPath.buildPath(ctx, clipPath.shape);\n            ctx.clip();\n            // Transform back\n            clipPath.restoreTransform(ctx);\n        }\n    }\n\n    function createRoot(width, height) {\n        var domRoot = document.createElement('div');\n\n        // domRoot.onselectstart = returnFalse; // 避免页面选中的尴尬\n        domRoot.style.cssText = [\n            'position:relative',\n            'overflow:hidden',\n            'width:' + width + 'px',\n            'height:' + height + 'px',\n            'padding:0',\n            'margin:0',\n            'border-width:0'\n        ].join(';') + ';';\n\n        return domRoot;\n    }\n\n    /**\n     * @alias module:zrender/Painter\n     * @constructor\n     * @param {HTMLElement} root 绘图容器\n     * @param {module:zrender/Storage} storage\n     * @param {Ojbect} opts\n     */\n    var Painter = function (root, storage, opts) {\n        // In node environment using node-canvas\n        var singleCanvas = !root.nodeName // In node ?\n            || root.nodeName.toUpperCase() === 'CANVAS';\n\n        this._opts = opts = util.extend({}, opts || {});\n\n        /**\n         * @type {number}\n         */\n        this.dpr = opts.devicePixelRatio || config.devicePixelRatio;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this._singleCanvas = singleCanvas;\n        /**\n         * 绘图容器\n         * @type {HTMLElement}\n         */\n        this.root = root;\n\n        var rootStyle = root.style;\n\n        if (rootStyle) {\n            rootStyle['-webkit-tap-highlight-color'] = 'transparent';\n            rootStyle['-webkit-user-select'] =\n            rootStyle['user-select'] =\n            rootStyle['-webkit-touch-callout'] = 'none';\n\n            root.innerHTML = '';\n        }\n\n        /**\n         * @type {module:zrender/Storage}\n         */\n        this.storage = storage;\n\n        /**\n         * @type {Array.<number>}\n         * @private\n         */\n        var zlevelList = this._zlevelList = [];\n\n        /**\n         * @type {Object.<string, module:zrender/Layer>}\n         * @private\n         */\n        var layers = this._layers = {};\n\n        /**\n         * @type {Object.<string, Object>}\n         * @type {private}\n         */\n        this._layerConfig = {};\n\n        if (!singleCanvas) {\n            this._width = this._getSize(0);\n            this._height = this._getSize(1);\n\n            var domRoot = this._domRoot = createRoot(\n                this._width, this._height\n            );\n            root.appendChild(domRoot);\n        }\n        else {\n            if (opts.width != null) {\n                root.width = opts.width;\n            }\n            if (opts.height != null) {\n                root.height = opts.height;\n            }\n            // Use canvas width and height directly\n            var width = root.width;\n            var height = root.height;\n            this._width = width;\n            this._height = height;\n\n            // Create layer if only one given canvas\n            // Device pixel ratio is fixed to 1 because given canvas has its specified width and height\n            var mainLayer = new Layer(root, this, 1);\n            mainLayer.initContext();\n            // FIXME Use canvas width and height\n            // mainLayer.resize(width, height);\n            layers[0] = mainLayer;\n            zlevelList.push(0);\n\n            this._domRoot = root;\n        }\n\n        // Layers for progressive rendering\n        this._progressiveLayers = [];\n\n        /**\n         * @type {module:zrender/Layer}\n         * @private\n         */\n        this._hoverlayer;\n\n        this._hoverElements = [];\n    };\n\n    Painter.prototype = {\n\n        constructor: Painter,\n\n        /**\n         * If painter use a single canvas\n         * @return {boolean}\n         */\n        isSingleCanvas: function () {\n            return this._singleCanvas;\n        },\n        /**\n         * @return {HTMLDivElement}\n         */\n        getViewportRoot: function () {\n            return this._domRoot;\n        },\n\n        /**\n         * 刷新\n         * @param {boolean} [paintAll=false] 强制绘制所有displayable\n         */\n        refresh: function (paintAll) {\n\n            var list = this.storage.getDisplayList(true);\n\n            var zlevelList = this._zlevelList;\n\n            this._paintList(list, paintAll);\n\n            // Paint custum layers\n            for (var i = 0; i < zlevelList.length; i++) {\n                var z = zlevelList[i];\n                var layer = this._layers[z];\n                if (!layer.__builtin__ && layer.refresh) {\n                    layer.refresh();\n                }\n            }\n\n            this.refreshHover();\n\n            if (this._progressiveLayers.length) {\n                this._startProgessive();\n            }\n\n            return this;\n        },\n\n        addHover: function (el, hoverStyle) {\n            if (el.__hoverMir) {\n                return;\n            }\n            var elMirror = new el.constructor({\n                style: el.style,\n                shape: el.shape\n            });\n            elMirror.__from = el;\n            el.__hoverMir = elMirror;\n            elMirror.setStyle(hoverStyle);\n            this._hoverElements.push(elMirror);\n        },\n\n        removeHover: function (el) {\n            var elMirror = el.__hoverMir;\n            var hoverElements = this._hoverElements;\n            var idx = util.indexOf(hoverElements, elMirror);\n            if (idx >= 0) {\n                hoverElements.splice(idx, 1);\n            }\n            el.__hoverMir = null;\n        },\n\n        clearHover: function (el) {\n            var hoverElements = this._hoverElements;\n            for (var i = 0; i < hoverElements.length; i++) {\n                var from = hoverElements[i].__from;\n                if (from) {\n                    from.__hoverMir = null;\n                }\n            }\n            hoverElements.length = 0;\n        },\n\n        refreshHover: function () {\n            var hoverElements = this._hoverElements;\n            var len = hoverElements.length;\n            var hoverLayer = this._hoverlayer;\n            hoverLayer && hoverLayer.clear();\n\n            if (!len) {\n                return;\n            }\n            timsort(hoverElements, this.storage.displayableSortFunc);\n\n            // Use a extream large zlevel\n            // FIXME?\n            if (!hoverLayer) {\n                hoverLayer = this._hoverlayer = this.getLayer(1e5);\n            }\n\n            var scope = {};\n            hoverLayer.ctx.save();\n            for (var i = 0; i < len;) {\n                var el = hoverElements[i];\n                var originalEl = el.__from;\n                // Original el is removed\n                // PENDING\n                if (!(originalEl && originalEl.__zr)) {\n                    hoverElements.splice(i, 1);\n                    originalEl.__hoverMir = null;\n                    len--;\n                    continue;\n                }\n                i++;\n\n                // Use transform\n                // FIXME style and shape ?\n                if (!originalEl.invisible) {\n                    el.transform = originalEl.transform;\n                    el.invTransform = originalEl.invTransform;\n                    el.__clipPaths = originalEl.__clipPaths;\n                    // el.\n                    this._doPaintEl(el, hoverLayer, true, scope);\n                }\n            }\n            hoverLayer.ctx.restore();\n        },\n\n        _startProgessive: function () {\n            var self = this;\n\n            if (!self._furtherProgressive) {\n                return;\n            }\n\n            // Use a token to stop progress steps triggered by\n            // previous zr.refresh calling.\n            var token = self._progressiveToken = +new Date();\n\n            self._progress++;\n            requestAnimationFrame(step);\n\n            function step() {\n                // In case refreshed or disposed\n                if (token === self._progressiveToken && self.storage) {\n\n                    self._doPaintList(self.storage.getDisplayList());\n\n                    if (self._furtherProgressive) {\n                        self._progress++;\n                        requestAnimationFrame(step);\n                    }\n                    else {\n                        self._progressiveToken = -1;\n                    }\n                }\n            }\n        },\n\n        _clearProgressive: function () {\n            this._progressiveToken = -1;\n            this._progress = 0;\n            util.each(this._progressiveLayers, function (layer) {\n                layer.__dirty && layer.clear();\n            });\n        },\n\n        _paintList: function (list, paintAll) {\n\n            if (paintAll == null) {\n                paintAll = false;\n            }\n\n            this._updateLayerStatus(list);\n\n            this._clearProgressive();\n\n            this.eachBuiltinLayer(preProcessLayer);\n\n            this._doPaintList(list, paintAll);\n\n            this.eachBuiltinLayer(postProcessLayer);\n        },\n\n        _doPaintList: function (list, paintAll) {\n            var currentLayer;\n            var currentZLevel;\n            var ctx;\n\n            // var invTransform = [];\n            var scope;\n\n            var progressiveLayerIdx = 0;\n            var currentProgressiveLayer;\n\n            var width = this._width;\n            var height = this._height;\n            var layerProgress;\n            var frame = this._progress;\n            function flushProgressiveLayer(layer) {\n                var dpr = ctx.dpr || 1;\n                ctx.save();\n                ctx.globalAlpha = 1;\n                ctx.shadowBlur = 0;\n                // Avoid layer don't clear in next progressive frame\n                currentLayer.__dirty = true;\n                ctx.setTransform(1, 0, 0, 1, 0, 0);\n                ctx.drawImage(layer.dom, 0, 0, width * dpr, height * dpr);\n                ctx.restore();\n            }\n\n            for (var i = 0, l = list.length; i < l; i++) {\n                var el = list[i];\n                var elZLevel = this._singleCanvas ? 0 : el.zlevel;\n\n                var elFrame = el.__frame;\n\n                // Flush at current context\n                // PENDING\n                if (elFrame < 0 && currentProgressiveLayer) {\n                    flushProgressiveLayer(currentProgressiveLayer);\n                    currentProgressiveLayer = null;\n                }\n\n                // Change draw layer\n                if (currentZLevel !== elZLevel) {\n                    if (ctx) {\n                        ctx.restore();\n                    }\n\n                    // Reset scope\n                    scope = {};\n\n                    // Only 0 zlevel if only has one canvas\n                    currentZLevel = elZLevel;\n                    currentLayer = this.getLayer(currentZLevel);\n\n                    if (!currentLayer.__builtin__) {\n                        log(\n                            'ZLevel ' + currentZLevel\n                            + ' has been used by unkown layer ' + currentLayer.id\n                        );\n                    }\n\n                    ctx = currentLayer.ctx;\n                    ctx.save();\n\n                    // Reset the count\n                    currentLayer.__unusedCount = 0;\n\n                    if (currentLayer.__dirty || paintAll) {\n                        currentLayer.clear();\n                    }\n                }\n\n                if (!(currentLayer.__dirty || paintAll)) {\n                    continue;\n                }\n\n                if (elFrame >= 0) {\n                    // Progressive layer changed\n                    if (!currentProgressiveLayer) {\n                        currentProgressiveLayer = this._progressiveLayers[\n                            Math.min(progressiveLayerIdx++, MAX_PROGRESSIVE_LAYER_NUMBER - 1)\n                        ];\n\n                        currentProgressiveLayer.ctx.save();\n                        currentProgressiveLayer.renderScope = {};\n\n                        if (currentProgressiveLayer\n                            && (currentProgressiveLayer.__progress > currentProgressiveLayer.__maxProgress)\n                        ) {\n                            // flushProgressiveLayer(currentProgressiveLayer);\n                            // Quick jump all progressive elements\n                            // All progressive element are not dirty, jump over and flush directly\n                            i = currentProgressiveLayer.__nextIdxNotProg - 1;\n                            // currentProgressiveLayer = null;\n                            continue;\n                        }\n\n                        layerProgress = currentProgressiveLayer.__progress;\n\n                        if (!currentProgressiveLayer.__dirty) {\n                            // Keep rendering\n                            frame = layerProgress;\n                        }\n\n                        currentProgressiveLayer.__progress = frame + 1;\n                    }\n\n                    if (elFrame === frame) {\n                        this._doPaintEl(el, currentProgressiveLayer, true, currentProgressiveLayer.renderScope);\n                    }\n                }\n                else {\n                    this._doPaintEl(el, currentLayer, paintAll, scope);\n                }\n\n                el.__dirty = false;\n            }\n\n            if (currentProgressiveLayer) {\n                flushProgressiveLayer(currentProgressiveLayer);\n            }\n\n            // Restore the lastLayer ctx\n            ctx && ctx.restore();\n            // If still has clipping state\n            // if (scope.prevElClipPaths) {\n            //     ctx.restore();\n            // }\n\n            this._furtherProgressive = false;\n            util.each(this._progressiveLayers, function (layer) {\n                if (layer.__maxProgress >= layer.__progress) {\n                    this._furtherProgressive = true;\n                }\n            }, this);\n        },\n\n        _doPaintEl: function (el, currentLayer, forcePaint, scope) {\n            var ctx = currentLayer.ctx;\n            var m = el.transform;\n            if (\n                (currentLayer.__dirty || forcePaint)\n                // Ignore invisible element\n                && !el.invisible\n                // Ignore transparent element\n                && el.style.opacity !== 0\n                // Ignore scale 0 element, in some environment like node-canvas\n                // Draw a scale 0 element can cause all following draw wrong\n                // And setTransform with scale 0 will cause set back transform failed.\n                && !(m && !m[0] && !m[3])\n                // Ignore culled element\n                && !(el.culling && isDisplayableCulled(el, this._width, this._height))\n            ) {\n\n                var clipPaths = el.__clipPaths;\n\n                // Optimize when clipping on group with several elements\n                if (scope.prevClipLayer !== currentLayer\n                    || isClipPathChanged(clipPaths, scope.prevElClipPaths)\n                ) {\n                    // If has previous clipping state, restore from it\n                    if (scope.prevElClipPaths) {\n                        scope.prevClipLayer.ctx.restore();\n                        scope.prevClipLayer = scope.prevElClipPaths = null;\n\n                        // Reset prevEl since context has been restored\n                        scope.prevEl = null;\n                    }\n                    // New clipping state\n                    if (clipPaths) {\n                        ctx.save();\n                        doClip(clipPaths, ctx);\n                        scope.prevClipLayer = currentLayer;\n                        scope.prevElClipPaths = clipPaths;\n                    }\n                }\n                el.beforeBrush && el.beforeBrush(ctx);\n\n                el.brush(ctx, scope.prevEl || null);\n                scope.prevEl = el;\n\n                el.afterBrush && el.afterBrush(ctx);\n            }\n        },\n\n        /**\n         * 获取 zlevel 所在层，如果不存在则会创建一个新的层\n         * @param {number} zlevel\n         * @return {module:zrender/Layer}\n         */\n        getLayer: function (zlevel) {\n            if (this._singleCanvas) {\n                return this._layers[0];\n            }\n\n            var layer = this._layers[zlevel];\n            if (!layer) {\n                // Create a new layer\n                layer = new Layer('zr_' + zlevel, this, this.dpr);\n                layer.__builtin__ = true;\n\n                if (this._layerConfig[zlevel]) {\n                    util.merge(layer, this._layerConfig[zlevel], true);\n                }\n\n                this.insertLayer(zlevel, layer);\n\n                // Context is created after dom inserted to document\n                // Or excanvas will get 0px clientWidth and clientHeight\n                layer.initContext();\n            }\n\n            return layer;\n        },\n\n        insertLayer: function (zlevel, layer) {\n\n            var layersMap = this._layers;\n            var zlevelList = this._zlevelList;\n            var len = zlevelList.length;\n            var prevLayer = null;\n            var i = -1;\n            var domRoot = this._domRoot;\n\n            if (layersMap[zlevel]) {\n                log('ZLevel ' + zlevel + ' has been used already');\n                return;\n            }\n            // Check if is a valid layer\n            if (!isLayerValid(layer)) {\n                log('Layer of zlevel ' + zlevel + ' is not valid');\n                return;\n            }\n\n            if (len > 0 && zlevel > zlevelList[0]) {\n                for (i = 0; i < len - 1; i++) {\n                    if (\n                        zlevelList[i] < zlevel\n                        && zlevelList[i + 1] > zlevel\n                    ) {\n                        break;\n                    }\n                }\n                prevLayer = layersMap[zlevelList[i]];\n            }\n            zlevelList.splice(i + 1, 0, zlevel);\n\n            layersMap[zlevel] = layer;\n\n            // Vitual layer will not directly show on the screen.\n            // (It can be a WebGL layer and assigned to a ZImage element)\n            // But it still under management of zrender.\n            if (!layer.virtual) {\n                if (prevLayer) {\n                    var prevDom = prevLayer.dom;\n                    if (prevDom.nextSibling) {\n                        domRoot.insertBefore(\n                            layer.dom,\n                            prevDom.nextSibling\n                        );\n                    }\n                    else {\n                        domRoot.appendChild(layer.dom);\n                    }\n                }\n                else {\n                    if (domRoot.firstChild) {\n                        domRoot.insertBefore(layer.dom, domRoot.firstChild);\n                    }\n                    else {\n                        domRoot.appendChild(layer.dom);\n                    }\n                }\n            }\n        },\n\n        // Iterate each layer\n        eachLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                cb.call(context, this._layers[z], z);\n            }\n        },\n\n        // Iterate each buildin layer\n        eachBuiltinLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var layer;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                layer = this._layers[z];\n                if (layer.__builtin__) {\n                    cb.call(context, layer, z);\n                }\n            }\n        },\n\n        // Iterate each other layer except buildin layer\n        eachOtherLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var layer;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                layer = this._layers[z];\n                if (!layer.__builtin__) {\n                    cb.call(context, layer, z);\n                }\n            }\n        },\n\n        /**\n         * 获取所有已创建的层\n         * @param {Array.<module:zrender/Layer>} [prevLayer]\n         */\n        getLayers: function () {\n            return this._layers;\n        },\n\n        _updateLayerStatus: function (list) {\n\n            var layers = this._layers;\n            var progressiveLayers = this._progressiveLayers;\n\n            var elCountsLastFrame = {};\n            var progressiveElCountsLastFrame = {};\n\n            this.eachBuiltinLayer(function (layer, z) {\n                elCountsLastFrame[z] = layer.elCount;\n                layer.elCount = 0;\n                layer.__dirty = false;\n            });\n\n            util.each(progressiveLayers, function (layer, idx) {\n                progressiveElCountsLastFrame[idx] = layer.elCount;\n                layer.elCount = 0;\n                layer.__dirty = false;\n            });\n\n            var progressiveLayerCount = 0;\n            var currentProgressiveLayer;\n            var lastProgressiveKey;\n            var frameCount = 0;\n            for (var i = 0, l = list.length; i < l; i++) {\n                var el = list[i];\n                var zlevel = this._singleCanvas ? 0 : el.zlevel;\n                var layer = layers[zlevel];\n                var elProgress = el.progressive;\n                if (layer) {\n                    layer.elCount++;\n                    layer.__dirty = layer.__dirty || el.__dirty;\n                }\n\n                /////// Update progressive\n                if (elProgress >= 0) {\n                    // Fix wrong progressive sequence problem.\n                    if (lastProgressiveKey !== elProgress) {\n                        lastProgressiveKey = elProgress;\n                        frameCount++;\n                    }\n                    var elFrame = el.__frame = frameCount - 1;\n                    if (!currentProgressiveLayer) {\n                        var idx = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER - 1);\n                        currentProgressiveLayer = progressiveLayers[idx];\n                        if (!currentProgressiveLayer) {\n                            currentProgressiveLayer = progressiveLayers[idx] = new Layer(\n                                'progressive', this, this.dpr\n                            );\n                            currentProgressiveLayer.initContext();\n                        }\n                        currentProgressiveLayer.__maxProgress = 0;\n                    }\n                    currentProgressiveLayer.__dirty = currentProgressiveLayer.__dirty || el.__dirty;\n                    currentProgressiveLayer.elCount++;\n\n                    currentProgressiveLayer.__maxProgress = Math.max(\n                        currentProgressiveLayer.__maxProgress, elFrame\n                    );\n\n                    if (currentProgressiveLayer.__maxProgress >= currentProgressiveLayer.__progress) {\n                        // Should keep rendering this  layer because progressive rendering is not finished yet\n                        layer.__dirty = true;\n                    }\n                }\n                else {\n                    el.__frame = -1;\n\n                    if (currentProgressiveLayer) {\n                        currentProgressiveLayer.__nextIdxNotProg = i;\n                        progressiveLayerCount++;\n                        currentProgressiveLayer = null;\n                    }\n                }\n            }\n\n            if (currentProgressiveLayer) {\n                progressiveLayerCount++;\n                currentProgressiveLayer.__nextIdxNotProg = i;\n            }\n\n            // 层中的元素数量有发生变化\n            this.eachBuiltinLayer(function (layer, z) {\n                if (elCountsLastFrame[z] !== layer.elCount) {\n                    layer.__dirty = true;\n                }\n            });\n\n            progressiveLayers.length = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER);\n            util.each(progressiveLayers, function (layer, idx) {\n                if (progressiveElCountsLastFrame[idx] !== layer.elCount) {\n                    el.__dirty = true;\n                }\n                if (layer.__dirty) {\n                    layer.__progress = 0;\n                }\n            });\n        },\n\n        /**\n         * 清除hover层外所有内容\n         */\n        clear: function () {\n            this.eachBuiltinLayer(this._clearLayer);\n            return this;\n        },\n\n        _clearLayer: function (layer) {\n            layer.clear();\n        },\n\n        /**\n         * 修改指定zlevel的绘制参数\n         *\n         * @param {string} zlevel\n         * @param {Object} config 配置对象\n         * @param {string} [config.clearColor=0] 每次清空画布的颜色\n         * @param {string} [config.motionBlur=false] 是否开启动态模糊\n         * @param {number} [config.lastFrameAlpha=0.7]\n         *                 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n         */\n        configLayer: function (zlevel, config) {\n            if (config) {\n                var layerConfig = this._layerConfig;\n                if (!layerConfig[zlevel]) {\n                    layerConfig[zlevel] = config;\n                }\n                else {\n                    util.merge(layerConfig[zlevel], config, true);\n                }\n\n                var layer = this._layers[zlevel];\n\n                if (layer) {\n                    util.merge(layer, layerConfig[zlevel], true);\n                }\n            }\n        },\n\n        /**\n         * 删除指定层\n         * @param {number} zlevel 层所在的zlevel\n         */\n        delLayer: function (zlevel) {\n            var layers = this._layers;\n            var zlevelList = this._zlevelList;\n            var layer = layers[zlevel];\n            if (!layer) {\n                return;\n            }\n            layer.dom.parentNode.removeChild(layer.dom);\n            delete layers[zlevel];\n\n            zlevelList.splice(util.indexOf(zlevelList, zlevel), 1);\n        },\n\n        /**\n         * 区域大小变化后重绘\n         */\n        resize: function (width, height) {\n            var domRoot = this._domRoot;\n            // FIXME Why ?\n            domRoot.style.display = 'none';\n\n            // Save input w/h\n            var opts = this._opts;\n            width != null && (opts.width = width);\n            height != null && (opts.height = height);\n\n            width = this._getSize(0);\n            height = this._getSize(1);\n\n            domRoot.style.display = '';\n\n            // 优化没有实际改变的resize\n            if (this._width != width || height != this._height) {\n                domRoot.style.width = width + 'px';\n                domRoot.style.height = height + 'px';\n\n                for (var id in this._layers) {\n                    if (this._layers.hasOwnProperty(id)) {\n                        this._layers[id].resize(width, height);\n                    }\n                }\n                util.each(this._progressiveLayers, function (layer) {\n                    layer.resize(width, height);\n                });\n\n                this.refresh(true);\n            }\n\n            this._width = width;\n            this._height = height;\n\n            return this;\n        },\n\n        /**\n         * 清除单独的一个层\n         * @param {number} zlevel\n         */\n        clearLayer: function (zlevel) {\n            var layer = this._layers[zlevel];\n            if (layer) {\n                layer.clear();\n            }\n        },\n\n        /**\n         * 释放\n         */\n        dispose: function () {\n            this.root.innerHTML = '';\n\n            this.root =\n            this.storage =\n\n            this._domRoot =\n            this._layers = null;\n        },\n\n        /**\n         * Get canvas which has all thing rendered\n         * @param {Object} opts\n         * @param {string} [opts.backgroundColor]\n         */\n        getRenderedCanvas: function (opts) {\n            opts = opts || {};\n            if (this._singleCanvas) {\n                return this._layers[0].dom;\n            }\n\n            var imageLayer = new Layer('image', this, opts.pixelRatio || this.dpr);\n            imageLayer.initContext();\n\n            imageLayer.clearColor = opts.backgroundColor;\n            imageLayer.clear();\n\n            var displayList = this.storage.getDisplayList(true);\n\n            var scope = {};\n            for (var i = 0; i < displayList.length; i++) {\n                var el = displayList[i];\n                this._doPaintEl(el, imageLayer, true, scope);\n            }\n\n            return imageLayer.dom;\n        },\n        /**\n         * 获取绘图区域宽度\n         */\n        getWidth: function () {\n            return this._width;\n        },\n\n        /**\n         * 获取绘图区域高度\n         */\n        getHeight: function () {\n            return this._height;\n        },\n\n        _getSize: function (whIdx) {\n            var opts = this._opts;\n            var wh = ['width', 'height'][whIdx];\n            var cwh = ['clientWidth', 'clientHeight'][whIdx];\n            var plt = ['paddingLeft', 'paddingTop'][whIdx];\n            var prb = ['paddingRight', 'paddingBottom'][whIdx];\n\n            if (opts[wh] != null && opts[wh] !== 'auto') {\n                return parseFloat(opts[wh]);\n            }\n\n            var root = this.root;\n            var stl = document.defaultView.getComputedStyle(root);\n\n            return (\n                (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh]))\n                - (parseInt10(stl[plt]) || 0)\n                - (parseInt10(stl[prb]) || 0)\n            ) | 0;\n        },\n\n        pathToImage: function (path, dpr) {\n            dpr = dpr || this.dpr;\n\n            var canvas = document.createElement('canvas');\n            var ctx = canvas.getContext('2d');\n            var rect = path.getBoundingRect();\n            var style = path.style;\n            var shadowBlurSize = style.shadowBlur;\n            var shadowOffsetX = style.shadowOffsetX;\n            var shadowOffsetY = style.shadowOffsetY;\n            var lineWidth = style.hasStroke() ? style.lineWidth : 0;\n\n            var leftMargin = Math.max(lineWidth / 2, -shadowOffsetX + shadowBlurSize);\n            var rightMargin = Math.max(lineWidth / 2, shadowOffsetX + shadowBlurSize);\n            var topMargin = Math.max(lineWidth / 2, -shadowOffsetY + shadowBlurSize);\n            var bottomMargin = Math.max(lineWidth / 2, shadowOffsetY + shadowBlurSize);\n            var width = rect.width + leftMargin + rightMargin;\n            var height = rect.height + topMargin + bottomMargin;\n\n            canvas.width = width * dpr;\n            canvas.height = height * dpr;\n\n            ctx.scale(dpr, dpr);\n            ctx.clearRect(0, 0, width, height);\n            ctx.dpr = dpr;\n\n            var pathTransform = {\n                position: path.position,\n                rotation: path.rotation,\n                scale: path.scale\n            };\n            path.position = [leftMargin - rect.x, topMargin - rect.y];\n            path.rotation = 0;\n            path.scale = [1, 1];\n            path.updateTransform();\n            if (path) {\n                path.brush(ctx);\n            }\n\n            var ImageShape = require('./graphic/Image');\n            var imgShape = new ImageShape({\n                style: {\n                    x: 0,\n                    y: 0,\n                    image: canvas\n                }\n            });\n\n            if (pathTransform.position != null) {\n                imgShape.position = path.position = pathTransform.position;\n            }\n\n            if (pathTransform.rotation != null) {\n                imgShape.rotation = path.rotation = pathTransform.rotation;\n            }\n\n            if (pathTransform.scale != null) {\n                imgShape.scale = path.scale = pathTransform.scale;\n            }\n\n            return imgShape;\n        }\n    };\n\n    module.exports = Painter;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.zrender@3.4.4@zrender/lib/Painter.js\n// module id = 403\n// module chunks = 0","'use strict';\n/**\n * Storage内容仓库模块\n * @module zrender/Storage\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n * @author errorrik (errorrik@gmail.com)\n * @author pissang (https://github.com/pissang/)\n */\n\n\n    var util = require('./core/util');\n    var env = require('./core/env');\n\n    var Group = require('./container/Group');\n\n    // Use timsort because in most case elements are partially sorted\n    // https://jsfiddle.net/pissang/jr4x7mdm/8/\n    var timsort = require('./core/timsort');\n\n    function shapeCompareFunc(a, b) {\n        if (a.zlevel === b.zlevel) {\n            if (a.z === b.z) {\n                // if (a.z2 === b.z2) {\n                //     // FIXME Slow has renderidx compare\n                //     // http://stackoverflow.com/questions/20883421/sorting-in-javascript-should-every-compare-function-have-a-return-0-statement\n                //     // https://github.com/v8/v8/blob/47cce544a31ed5577ffe2963f67acb4144ee0232/src/js/array.js#L1012\n                //     return a.__renderidx - b.__renderidx;\n                // }\n                return a.z2 - b.z2;\n            }\n            return a.z - b.z;\n        }\n        return a.zlevel - b.zlevel;\n    }\n    /**\n     * 内容仓库 (M)\n     * @alias module:zrender/Storage\n     * @constructor\n     */\n    var Storage = function () {\n        this._roots = [];\n\n        this._displayList = [];\n\n        this._displayListLen = 0;\n    };\n\n    Storage.prototype = {\n\n        constructor: Storage,\n\n        /**\n         * @param  {Function} cb\n         *\n         */\n        traverse: function (cb, context) {\n            for (var i = 0; i < this._roots.length; i++) {\n                this._roots[i].traverse(cb, context);\n            }\n        },\n\n        /**\n         * 返回所有图形的绘制队列\n         * @param {boolean} [update=false] 是否在返回前更新该数组\n         * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组, 在 update 为 true 的时候有效\n         *\n         * 详见{@link module:zrender/graphic/Displayable.prototype.updateDisplayList}\n         * @return {Array.<module:zrender/graphic/Displayable>}\n         */\n        getDisplayList: function (update, includeIgnore) {\n            includeIgnore = includeIgnore || false;\n            if (update) {\n                this.updateDisplayList(includeIgnore);\n            }\n            return this._displayList;\n        },\n\n        /**\n         * 更新图形的绘制队列。\n         * 每次绘制前都会调用，该方法会先深度优先遍历整个树，更新所有Group和Shape的变换并且把所有可见的Shape保存到数组中，\n         * 最后根据绘制的优先级（zlevel > z > 插入顺序）排序得到绘制队列\n         * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组\n         */\n        updateDisplayList: function (includeIgnore) {\n            this._displayListLen = 0;\n            var roots = this._roots;\n            var displayList = this._displayList;\n            for (var i = 0, len = roots.length; i < len; i++) {\n                this._updateAndAddDisplayable(roots[i], null, includeIgnore);\n            }\n            displayList.length = this._displayListLen;\n\n            // for (var i = 0, len = displayList.length; i < len; i++) {\n            //     displayList[i].__renderidx = i;\n            // }\n\n            // displayList.sort(shapeCompareFunc);\n            env.canvasSupported && timsort(displayList, shapeCompareFunc);\n        },\n\n        _updateAndAddDisplayable: function (el, clipPaths, includeIgnore) {\n\n            if (el.ignore && !includeIgnore) {\n                return;\n            }\n\n            el.beforeUpdate();\n\n            if (el.__dirty) {\n\n                el.update();\n\n            }\n\n            el.afterUpdate();\n\n            var userSetClipPath = el.clipPath;\n            if (userSetClipPath) {\n\n                // FIXME 效率影响\n                if (clipPaths) {\n                    clipPaths = clipPaths.slice();\n                }\n                else {\n                    clipPaths = [];\n                }\n\n                var currentClipPath = userSetClipPath;\n                var parentClipPath = el;\n                // Recursively add clip path\n                while (currentClipPath) {\n                    // clipPath 的变换是基于使用这个 clipPath 的元素\n                    currentClipPath.parent = parentClipPath;\n                    currentClipPath.updateTransform();\n\n                    clipPaths.push(currentClipPath);\n\n                    parentClipPath = currentClipPath;\n                    currentClipPath = currentClipPath.clipPath;\n                }\n            }\n\n            if (el.isGroup) {\n                var children = el._children;\n\n                for (var i = 0; i < children.length; i++) {\n                    var child = children[i];\n\n                    // Force to mark as dirty if group is dirty\n                    // FIXME __dirtyPath ?\n                    if (el.__dirty) {\n                        child.__dirty = true;\n                    }\n\n                    this._updateAndAddDisplayable(child, clipPaths, includeIgnore);\n                }\n\n                // Mark group clean here\n                el.__dirty = false;\n\n            }\n            else {\n                el.__clipPaths = clipPaths;\n\n                this._displayList[this._displayListLen++] = el;\n            }\n        },\n\n        /**\n         * 添加图形(Shape)或者组(Group)到根节点\n         * @param {module:zrender/Element} el\n         */\n        addRoot: function (el) {\n            if (el.__storage === this) {\n                return;\n            }\n\n            if (el instanceof Group) {\n                el.addChildrenToStorage(this);\n            }\n\n            this.addToStorage(el);\n            this._roots.push(el);\n        },\n\n        /**\n         * 删除指定的图形(Shape)或者组(Group)\n         * @param {string|Array.<string>} [el] 如果为空清空整个Storage\n         */\n        delRoot: function (el) {\n            if (el == null) {\n                // 不指定el清空\n                for (var i = 0; i < this._roots.length; i++) {\n                    var root = this._roots[i];\n                    if (root instanceof Group) {\n                        root.delChildrenFromStorage(this);\n                    }\n                }\n\n                this._roots = [];\n                this._displayList = [];\n                this._displayListLen = 0;\n\n                return;\n            }\n\n            if (el instanceof Array) {\n                for (var i = 0, l = el.length; i < l; i++) {\n                    this.delRoot(el[i]);\n                }\n                return;\n            }\n\n\n            var idx = util.indexOf(this._roots, el);\n            if (idx >= 0) {\n                this.delFromStorage(el);\n                this._roots.splice(idx, 1);\n                if (el instanceof Group) {\n                    el.delChildrenFromStorage(this);\n                }\n            }\n        },\n\n        addToStorage: function (el) {\n            el.__storage = this;\n            el.dirty(false);\n\n            return this;\n        },\n\n        delFromStorage: function (el) {\n            if (el) {\n                el.__storage = null;\n            }\n\n            return this;\n        },\n\n        /**\n         * 清空并且释放Storage\n         */\n        dispose: function () {\n            this._renderList =\n            this._roots = null;\n        },\n\n        displayableSortFunc: shapeCompareFunc\n    };\n\n    module.exports = Storage;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.zrender@3.4.4@zrender/lib/Storage.js\n// module id = 404\n// module chunks = 0","'use strict';\n/**\n * 动画主类, 调度和管理所有动画控制器\n *\n * @module zrender/animation/Animation\n * @author pissang(https://github.com/pissang)\n */\n// TODO Additive animation\n// http://iosoteric.com/additive-animations-animatewithduration-in-ios-8/\n// https://developer.apple.com/videos/wwdc2014/#236\n\n\n    var util = require('../core/util');\n    var Dispatcher = require('../core/event').Dispatcher;\n\n    var requestAnimationFrame = require('./requestAnimationFrame');\n\n    var Animator = require('./Animator');\n    /**\n     * @typedef {Object} IZRenderStage\n     * @property {Function} update\n     */\n\n    /**\n     * @alias module:zrender/animation/Animation\n     * @constructor\n     * @param {Object} [options]\n     * @param {Function} [options.onframe]\n     * @param {IZRenderStage} [options.stage]\n     * @example\n     *     var animation = new Animation();\n     *     var obj = {\n     *         x: 100,\n     *         y: 100\n     *     };\n     *     animation.animate(node.position)\n     *         .when(1000, {\n     *             x: 500,\n     *             y: 500\n     *         })\n     *         .when(2000, {\n     *             x: 100,\n     *             y: 100\n     *         })\n     *         .start('spline');\n     */\n    var Animation = function (options) {\n\n        options = options || {};\n\n        this.stage = options.stage || {};\n\n        this.onframe = options.onframe || function() {};\n\n        // private properties\n        this._clips = [];\n\n        this._running = false;\n\n        this._time;\n\n        this._pausedTime;\n\n        this._pauseStart;\n\n        this._paused = false;\n\n        Dispatcher.call(this);\n    };\n\n    Animation.prototype = {\n\n        constructor: Animation,\n        /**\n         * 添加 clip\n         * @param {module:zrender/animation/Clip} clip\n         */\n        addClip: function (clip) {\n            this._clips.push(clip);\n        },\n        /**\n         * 添加 animator\n         * @param {module:zrender/animation/Animator} animator\n         */\n        addAnimator: function (animator) {\n            animator.animation = this;\n            var clips = animator.getClips();\n            for (var i = 0; i < clips.length; i++) {\n                this.addClip(clips[i]);\n            }\n        },\n        /**\n         * 删除动画片段\n         * @param {module:zrender/animation/Clip} clip\n         */\n        removeClip: function(clip) {\n            var idx = util.indexOf(this._clips, clip);\n            if (idx >= 0) {\n                this._clips.splice(idx, 1);\n            }\n        },\n\n        /**\n         * 删除动画片段\n         * @param {module:zrender/animation/Animator} animator\n         */\n        removeAnimator: function (animator) {\n            var clips = animator.getClips();\n            for (var i = 0; i < clips.length; i++) {\n                this.removeClip(clips[i]);\n            }\n            animator.animation = null;\n        },\n\n        _update: function() {\n\n            var time = new Date().getTime() - this._pausedTime;\n            var delta = time - this._time;\n            var clips = this._clips;\n            var len = clips.length;\n\n            var deferredEvents = [];\n            var deferredClips = [];\n            for (var i = 0; i < len; i++) {\n                var clip = clips[i];\n                var e = clip.step(time, delta);\n                // Throw out the events need to be called after\n                // stage.update, like destroy\n                if (e) {\n                    deferredEvents.push(e);\n                    deferredClips.push(clip);\n                }\n            }\n\n            // Remove the finished clip\n            for (var i = 0; i < len;) {\n                if (clips[i]._needsRemove) {\n                    clips[i] = clips[len - 1];\n                    clips.pop();\n                    len--;\n                }\n                else {\n                    i++;\n                }\n            }\n\n            len = deferredEvents.length;\n            for (var i = 0; i < len; i++) {\n                deferredClips[i].fire(deferredEvents[i]);\n            }\n\n            this._time = time;\n\n            this.onframe(delta);\n\n            this.trigger('frame', delta);\n\n            if (this.stage.update) {\n                this.stage.update();\n            }\n        },\n\n        _startLoop: function () {\n            var self = this;\n\n            this._running = true;\n\n            function step() {\n                if (self._running) {\n\n                    requestAnimationFrame(step);\n\n                    !self._paused && self._update();\n                }\n            }\n\n            requestAnimationFrame(step);\n        },\n\n        /**\n         * 开始运行动画\n         */\n        start: function () {\n\n            this._time = new Date().getTime();\n            this._pausedTime = 0;\n\n            this._startLoop();\n        },\n        /**\n         * 停止运行动画\n         */\n        stop: function () {\n            this._running = false;\n        },\n\n        /**\n         * Pause\n         */\n        pause: function () {\n            if (!this._paused) {\n                this._pauseStart = new Date().getTime();\n                this._paused = true;\n            }\n        },\n\n        /**\n         * Resume\n         */\n        resume: function () {\n            if (this._paused) {\n                this._pausedTime += (new Date().getTime()) - this._pauseStart;\n                this._paused = false;\n            }\n        },\n\n        /**\n         * 清除所有动画片段\n         */\n        clear: function () {\n            this._clips = [];\n        },\n        /**\n         * 对一个目标创建一个animator对象，可以指定目标中的属性使用动画\n         * @param  {Object} target\n         * @param  {Object} options\n         * @param  {boolean} [options.loop=false] 是否循环播放动画\n         * @param  {Function} [options.getter=null]\n         *         如果指定getter函数，会通过getter函数取属性值\n         * @param  {Function} [options.setter=null]\n         *         如果指定setter函数，会通过setter函数设置属性值\n         * @return {module:zrender/animation/Animation~Animator}\n         */\n        // TODO Gap\n        animate: function (target, options) {\n            options = options || {};\n\n            var animator = new Animator(\n                target,\n                options.loop,\n                options.getter,\n                options.setter\n            );\n\n            this.addAnimator(animator);\n\n            return animator;\n        }\n    };\n\n    util.mixin(Animation, Dispatcher);\n\n    module.exports = Animation;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.zrender@3.4.4@zrender/lib/animation/Animation.js\n// module id = 405\n// module chunks = 0","/**\n * 动画主控制器\n * @config target 动画对象，可以是数组，如果是数组的话会批量分发onframe等事件\n * @config life(1000) 动画时长\n * @config delay(0) 动画延迟时间\n * @config loop(true)\n * @config gap(0) 循环的间隔时间\n * @config onframe\n * @config easing(optional)\n * @config ondestroy(optional)\n * @config onrestart(optional)\n *\n * TODO pause\n */\n\n\n    var easingFuncs = require('./easing');\n\n    function Clip(options) {\n\n        this._target = options.target;\n\n        // 生命周期\n        this._life = options.life || 1000;\n        // 延时\n        this._delay = options.delay || 0;\n        // 开始时间\n        // this._startTime = new Date().getTime() + this._delay;// 单位毫秒\n        this._initialized = false;\n\n        // 是否循环\n        this.loop = options.loop == null ? false : options.loop;\n\n        this.gap = options.gap || 0;\n\n        this.easing = options.easing || 'Linear';\n\n        this.onframe = options.onframe;\n        this.ondestroy = options.ondestroy;\n        this.onrestart = options.onrestart;\n\n        this._pausedTime = 0;\n        this._paused = false;\n    }\n\n    Clip.prototype = {\n\n        constructor: Clip,\n\n        step: function (globalTime, deltaTime) {\n            // Set startTime on first step, or _startTime may has milleseconds different between clips\n            // PENDING\n            if (!this._initialized) {\n                this._startTime = globalTime + this._delay;\n                this._initialized = true;\n            }\n\n            if (this._paused) {\n                this._pausedTime += deltaTime;\n                return;\n            }\n\n            var percent = (globalTime - this._startTime - this._pausedTime) / this._life;\n\n            // 还没开始\n            if (percent < 0) {\n                return;\n            }\n\n            percent = Math.min(percent, 1);\n\n            var easing = this.easing;\n            var easingFunc = typeof easing == 'string' ? easingFuncs[easing] : easing;\n            var schedule = typeof easingFunc === 'function'\n                ? easingFunc(percent)\n                : percent;\n\n            this.fire('frame', schedule);\n\n            // 结束\n            if (percent == 1) {\n                if (this.loop) {\n                    this.restart (globalTime);\n                    // 重新开始周期\n                    // 抛出而不是直接调用事件直到 stage.update 后再统一调用这些事件\n                    return 'restart';\n                }\n\n                // 动画完成将这个控制器标识为待删除\n                // 在Animation.update中进行批量删除\n                this._needsRemove = true;\n                return 'destroy';\n            }\n\n            return null;\n        },\n\n        restart: function (globalTime) {\n            var remainder = (globalTime - this._startTime - this._pausedTime) % this._life;\n            this._startTime = globalTime - remainder + this.gap;\n            this._pausedTime = 0;\n\n            this._needsRemove = false;\n        },\n\n        fire: function (eventType, arg) {\n            eventType = 'on' + eventType;\n            if (this[eventType]) {\n                this[eventType](this._target, arg);\n            }\n        },\n\n        pause: function () {\n            this._paused = true;\n        },\n\n        resume: function () {\n            this._paused = false;\n        }\n    };\n\n    module.exports = Clip;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.zrender@3.4.4@zrender/lib/animation/Clip.js\n// module id = 406\n// module chunks = 0","/**\n * 缓动代码来自 https://github.com/sole/tween.js/blob/master/src/Tween.js\n * @see http://sole.github.io/tween.js/examples/03_graphs.html\n * @exports zrender/animation/easing\n */\n\n    var easing = {\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        linear: function (k) {\n            return k;\n        },\n\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticIn: function (k) {\n            return k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticOut: function (k) {\n            return k * (2 - k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k;\n            }\n            return -0.5 * (--k * (k - 2) - 1);\n        },\n\n        // 三次方的缓动（t^3）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicIn: function (k) {\n            return k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicOut: function (k) {\n            return --k * k * k + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k;\n            }\n            return 0.5 * ((k -= 2) * k * k + 2);\n        },\n\n        // 四次方的缓动（t^4）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticIn: function (k) {\n            return k * k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticOut: function (k) {\n            return 1 - (--k * k * k * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k * k;\n            }\n            return -0.5 * ((k -= 2) * k * k * k - 2);\n        },\n\n        // 五次方的缓动（t^5）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticIn: function (k) {\n            return k * k * k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticOut: function (k) {\n            return --k * k * k * k * k + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k * k * k;\n            }\n            return 0.5 * ((k -= 2) * k * k * k * k + 2);\n        },\n\n        // 正弦曲线的缓动（sin(t)）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalIn: function (k) {\n            return 1 - Math.cos(k * Math.PI / 2);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalOut: function (k) {\n            return Math.sin(k * Math.PI / 2);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalInOut: function (k) {\n            return 0.5 * (1 - Math.cos(Math.PI * k));\n        },\n\n        // 指数曲线的缓动（2^t）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialIn: function (k) {\n            return k === 0 ? 0 : Math.pow(1024, k - 1);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialOut: function (k) {\n            return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialInOut: function (k) {\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if ((k *= 2) < 1) {\n                return 0.5 * Math.pow(1024, k - 1);\n            }\n            return 0.5 * (-Math.pow(2, -10 * (k - 1)) + 2);\n        },\n\n        // 圆形曲线的缓动（sqrt(1-t^2)）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularIn: function (k) {\n            return 1 - Math.sqrt(1 - k * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularOut: function (k) {\n            return Math.sqrt(1 - (--k * k));\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return -0.5 * (Math.sqrt(1 - k * k) - 1);\n            }\n            return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n        },\n\n        // 创建类似于弹簧在停止前来回振荡的动画\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticIn: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            return -(a * Math.pow(2, 10 * (k -= 1)) *\n                        Math.sin((k - s) * (2 * Math.PI) / p));\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticOut: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            return (a * Math.pow(2, -10 * k) *\n                    Math.sin((k - s) * (2 * Math.PI) / p) + 1);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticInOut: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            if ((k *= 2) < 1) {\n                return -0.5 * (a * Math.pow(2, 10 * (k -= 1))\n                    * Math.sin((k - s) * (2 * Math.PI) / p));\n            }\n            return a * Math.pow(2, -10 * (k -= 1))\n                    * Math.sin((k - s) * (2 * Math.PI) / p) * 0.5 + 1;\n\n        },\n\n        // 在某一动画开始沿指示的路径进行动画处理前稍稍收回该动画的移动\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backIn: function (k) {\n            var s = 1.70158;\n            return k * k * ((s + 1) * k - s);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backOut: function (k) {\n            var s = 1.70158;\n            return --k * k * ((s + 1) * k + s) + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backInOut: function (k) {\n            var s = 1.70158 * 1.525;\n            if ((k *= 2) < 1) {\n                return 0.5 * (k * k * ((s + 1) * k - s));\n            }\n            return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n        },\n\n        // 创建弹跳效果\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceIn: function (k) {\n            return 1 - easing.bounceOut(1 - k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceOut: function (k) {\n            if (k < (1 / 2.75)) {\n                return 7.5625 * k * k;\n            }\n            else if (k < (2 / 2.75)) {\n                return 7.5625 * (k -= (1.5 / 2.75)) * k + 0.75;\n            }\n            else if (k < (2.5 / 2.75)) {\n                return 7.5625 * (k -= (2.25 / 2.75)) * k + 0.9375;\n            }\n            else {\n                return 7.5625 * (k -= (2.625 / 2.75)) * k + 0.984375;\n            }\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceInOut: function (k) {\n            if (k < 0.5) {\n                return easing.bounceIn(k * 2) * 0.5;\n            }\n            return easing.bounceOut(k * 2 - 1) * 0.5 + 0.5;\n        }\n    };\n\n    module.exports = easing;\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.zrender@3.4.4@zrender/lib/animation/easing.js\n// module id = 407\n// module chunks = 0","\n\n    var normalizeRadian = require('./util').normalizeRadian;\n    var PI2 = Math.PI * 2;\n\n    module.exports = {\n        /**\n         * 圆弧描边包含判断\n         * @param  {number}  cx\n         * @param  {number}  cy\n         * @param  {number}  r\n         * @param  {number}  startAngle\n         * @param  {number}  endAngle\n         * @param  {boolean}  anticlockwise\n         * @param  {number} lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {Boolean}\n         */\n        containStroke: function (\n            cx, cy, r, startAngle, endAngle, anticlockwise,\n            lineWidth, x, y\n        ) {\n\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n\n            x -= cx;\n            y -= cy;\n            var d = Math.sqrt(x * x + y * y);\n\n            if ((d - _l > r) || (d + _l < r)) {\n                return false;\n            }\n            if (Math.abs(startAngle - endAngle) % PI2 < 1e-4) {\n                // Is a circle\n                return true;\n            }\n            if (anticlockwise) {\n                var tmp = startAngle;\n                startAngle = normalizeRadian(endAngle);\n                endAngle = normalizeRadian(tmp);\n            } else {\n                startAngle = normalizeRadian(startAngle);\n                endAngle = normalizeRadian(endAngle);\n            }\n            if (startAngle > endAngle) {\n                endAngle += PI2;\n            }\n\n            var angle = Math.atan2(y, x);\n            if (angle < 0) {\n                angle += PI2;\n            }\n            return (angle >= startAngle && angle <= endAngle)\n                || (angle + PI2 >= startAngle && angle + PI2 <= endAngle);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.zrender@3.4.4@zrender/lib/contain/arc.js\n// module id = 408\n// module chunks = 0","\n\n    var curve = require('../core/curve');\n\n    module.exports = {\n        /**\n         * 三次贝塞尔曲线描边包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  x2\n         * @param  {number}  y2\n         * @param  {number}  x3\n         * @param  {number}  y3\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function(x0, y0, x1, y1, x2, y2, x3, y3, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l && y > y2 + _l && y > y3 + _l)\n                || (y < y0 - _l && y < y1 - _l && y < y2 - _l && y < y3 - _l)\n                || (x > x0 + _l && x > x1 + _l && x > x2 + _l && x > x3 + _l)\n                || (x < x0 - _l && x < x1 - _l && x < x2 - _l && x < x3 - _l)\n            ) {\n                return false;\n            }\n            var d = curve.cubicProjectPoint(\n                x0, y0, x1, y1, x2, y2, x3, y3,\n                x, y, null\n            );\n            return d <= _l / 2;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.zrender@3.4.4@zrender/lib/contain/cubic.js\n// module id = 409\n// module chunks = 0","\n    module.exports = {\n        /**\n         * 线段包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function (x0, y0, x1, y1, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            var _a = 0;\n            var _b = x0;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l)\n                || (y < y0 - _l && y < y1 - _l)\n                || (x > x0 + _l && x > x1 + _l)\n                || (x < x0 - _l && x < x1 - _l)\n            ) {\n                return false;\n            }\n\n            if (x0 !== x1) {\n                _a = (y0 - y1) / (x0 - x1);\n                _b = (x0 * y1 - x1 * y0) / (x0 - x1) ;\n            }\n            else {\n                return Math.abs(x - x0) <= _l / 2;\n            }\n            var tmp = _a * x - y + _b;\n            var _s = tmp * tmp / (_a * _a + 1);\n            return _s <= _l / 2 * _l / 2;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.zrender@3.4.4@zrender/lib/contain/line.js\n// module id = 410\n// module chunks = 0","'use strict';\n\n\n    var CMD = require('../core/PathProxy').CMD;\n    var line = require('./line');\n    var cubic = require('./cubic');\n    var quadratic = require('./quadratic');\n    var arc = require('./arc');\n    var normalizeRadian = require('./util').normalizeRadian;\n    var curve = require('../core/curve');\n\n    var windingLine = require('./windingLine');\n\n    var containStroke = line.containStroke;\n\n    var PI2 = Math.PI * 2;\n\n    var EPSILON = 1e-4;\n\n    function isAroundEqual(a, b) {\n        return Math.abs(a - b) < EPSILON;\n    }\n\n    // 临时数组\n    var roots = [-1, -1, -1];\n    var extrema = [-1, -1];\n\n    function swapExtrema() {\n        var tmp = extrema[0];\n        extrema[0] = extrema[1];\n        extrema[1] = tmp;\n    }\n\n    function windingCubic(x0, y0, x1, y1, x2, y2, x3, y3, x, y) {\n        // Quick reject\n        if (\n            (y > y0 && y > y1 && y > y2 && y > y3)\n            || (y < y0 && y < y1 && y < y2 && y < y3)\n        ) {\n            return 0;\n        }\n        var nRoots = curve.cubicRootAt(y0, y1, y2, y3, y, roots);\n        if (nRoots === 0) {\n            return 0;\n        }\n        else {\n            var w = 0;\n            var nExtrema = -1;\n            var y0_, y1_;\n            for (var i = 0; i < nRoots; i++) {\n                var t = roots[i];\n\n                // Avoid winding error when intersection point is the connect point of two line of polygon\n                var unit = (t === 0 || t === 1) ? 0.5 : 1;\n\n                var x_ = curve.cubicAt(x0, x1, x2, x3, t);\n                if (x_ < x) { // Quick reject\n                    continue;\n                }\n                if (nExtrema < 0) {\n                    nExtrema = curve.cubicExtrema(y0, y1, y2, y3, extrema);\n                    if (extrema[1] < extrema[0] && nExtrema > 1) {\n                        swapExtrema();\n                    }\n                    y0_ = curve.cubicAt(y0, y1, y2, y3, extrema[0]);\n                    if (nExtrema > 1) {\n                        y1_ = curve.cubicAt(y0, y1, y2, y3, extrema[1]);\n                    }\n                }\n                if (nExtrema == 2) {\n                    // 分成三段单调函数\n                    if (t < extrema[0]) {\n                        w += y0_ < y0 ? unit : -unit;\n                    }\n                    else if (t < extrema[1]) {\n                        w += y1_ < y0_ ? unit : -unit;\n                    }\n                    else {\n                        w += y3 < y1_ ? unit : -unit;\n                    }\n                }\n                else {\n                    // 分成两段单调函数\n                    if (t < extrema[0]) {\n                        w += y0_ < y0 ? unit : -unit;\n                    }\n                    else {\n                        w += y3 < y0_ ? unit : -unit;\n                    }\n                }\n            }\n            return w;\n        }\n    }\n\n    function windingQuadratic(x0, y0, x1, y1, x2, y2, x, y) {\n        // Quick reject\n        if (\n            (y > y0 && y > y1 && y > y2)\n            || (y < y0 && y < y1 && y < y2)\n        ) {\n            return 0;\n        }\n        var nRoots = curve.quadraticRootAt(y0, y1, y2, y, roots);\n        if (nRoots === 0) {\n            return 0;\n        }\n        else {\n            var t = curve.quadraticExtremum(y0, y1, y2);\n            if (t >= 0 && t <= 1) {\n                var w = 0;\n                var y_ = curve.quadraticAt(y0, y1, y2, t);\n                for (var i = 0; i < nRoots; i++) {\n                    // Remove one endpoint.\n                    var unit = (roots[i] === 0 || roots[i] === 1) ? 0.5 : 1;\n\n                    var x_ = curve.quadraticAt(x0, x1, x2, roots[i]);\n                    if (x_ < x) {   // Quick reject\n                        continue;\n                    }\n                    if (roots[i] < t) {\n                        w += y_ < y0 ? unit : -unit;\n                    }\n                    else {\n                        w += y2 < y_ ? unit : -unit;\n                    }\n                }\n                return w;\n            }\n            else {\n                // Remove one endpoint.\n                var unit = (roots[0] === 0 || roots[0] === 1) ? 0.5 : 1;\n\n                var x_ = curve.quadraticAt(x0, x1, x2, roots[0]);\n                if (x_ < x) {   // Quick reject\n                    return 0;\n                }\n                return y2 < y0 ? unit : -unit;\n            }\n        }\n    }\n\n    // TODO\n    // Arc 旋转\n    function windingArc(\n        cx, cy, r, startAngle, endAngle, anticlockwise, x, y\n    ) {\n        y -= cy;\n        if (y > r || y < -r) {\n            return 0;\n        }\n        var tmp = Math.sqrt(r * r - y * y);\n        roots[0] = -tmp;\n        roots[1] = tmp;\n\n        var diff = Math.abs(startAngle - endAngle);\n        if (diff < 1e-4) {\n            return 0;\n        }\n        if (diff % PI2 < 1e-4) {\n            // Is a circle\n            startAngle = 0;\n            endAngle = PI2;\n            var dir = anticlockwise ? 1 : -1;\n            if (x >= roots[0] + cx && x <= roots[1] + cx) {\n                return dir;\n            } else {\n                return 0;\n            }\n        }\n\n        if (anticlockwise) {\n            var tmp = startAngle;\n            startAngle = normalizeRadian(endAngle);\n            endAngle = normalizeRadian(tmp);\n        }\n        else {\n            startAngle = normalizeRadian(startAngle);\n            endAngle = normalizeRadian(endAngle);\n        }\n        if (startAngle > endAngle) {\n            endAngle += PI2;\n        }\n\n        var w = 0;\n        for (var i = 0; i < 2; i++) {\n            var x_ = roots[i];\n            if (x_ + cx > x) {\n                var angle = Math.atan2(y, x_);\n                var dir = anticlockwise ? 1 : -1;\n                if (angle < 0) {\n                    angle = PI2 + angle;\n                }\n                if (\n                    (angle >= startAngle && angle <= endAngle)\n                    || (angle + PI2 >= startAngle && angle + PI2 <= endAngle)\n                ) {\n                    if (angle > Math.PI / 2 && angle < Math.PI * 1.5) {\n                        dir = -dir;\n                    }\n                    w += dir;\n                }\n            }\n        }\n        return w;\n    }\n\n    function containPath(data, lineWidth, isStroke, x, y) {\n        var w = 0;\n        var xi = 0;\n        var yi = 0;\n        var x0 = 0;\n        var y0 = 0;\n\n        for (var i = 0; i < data.length;) {\n            var cmd = data[i++];\n            // Begin a new subpath\n            if (cmd === CMD.M && i > 1) {\n                // Close previous subpath\n                if (!isStroke) {\n                    w += windingLine(xi, yi, x0, y0, x, y);\n                }\n                // 如果被任何一个 subpath 包含\n                // if (w !== 0) {\n                //     return true;\n                // }\n            }\n\n            if (i == 1) {\n                // 如果第一个命令是 L, C, Q\n                // 则 previous point 同绘制命令的第一个 point\n                //\n                // 第一个命令为 Arc 的情况下会在后面特殊处理\n                xi = data[i];\n                yi = data[i + 1];\n\n                x0 = xi;\n                y0 = yi;\n            }\n\n            switch (cmd) {\n                case CMD.M:\n                    // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n                    // 在 closePath 的时候使用\n                    x0 = data[i++];\n                    y0 = data[i++];\n                    xi = x0;\n                    yi = y0;\n                    break;\n                case CMD.L:\n                    if (isStroke) {\n                        if (containStroke(xi, yi, data[i], data[i + 1], lineWidth, x, y)) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // NOTE 在第一个命令为 L, C, Q 的时候会计算出 NaN\n                        w += windingLine(xi, yi, data[i], data[i + 1], x, y) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.C:\n                    if (isStroke) {\n                        if (cubic.containStroke(xi, yi,\n                            data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingCubic(\n                            xi, yi,\n                            data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            x, y\n                        ) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.Q:\n                    if (isStroke) {\n                        if (quadratic.containStroke(xi, yi,\n                            data[i++], data[i++], data[i], data[i + 1],\n                            lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingQuadratic(\n                            xi, yi,\n                            data[i++], data[i++], data[i], data[i + 1],\n                            x, y\n                        ) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.A:\n                    // TODO Arc 判断的开销比较大\n                    var cx = data[i++];\n                    var cy = data[i++];\n                    var rx = data[i++];\n                    var ry = data[i++];\n                    var theta = data[i++];\n                    var dTheta = data[i++];\n                    // TODO Arc 旋转\n                    var psi = data[i++];\n                    var anticlockwise = 1 - data[i++];\n                    var x1 = Math.cos(theta) * rx + cx;\n                    var y1 = Math.sin(theta) * ry + cy;\n                    // 不是直接使用 arc 命令\n                    if (i > 1) {\n                        w += windingLine(xi, yi, x1, y1, x, y);\n                    }\n                    else {\n                        // 第一个命令起点还未定义\n                        x0 = x1;\n                        y0 = y1;\n                    }\n                    // zr 使用scale来模拟椭圆, 这里也对x做一定的缩放\n                    var _x = (x - cx) * ry / rx + cx;\n                    if (isStroke) {\n                        if (arc.containStroke(\n                            cx, cy, ry, theta, theta + dTheta, anticlockwise,\n                            lineWidth, _x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingArc(\n                            cx, cy, ry, theta, theta + dTheta, anticlockwise,\n                            _x, y\n                        );\n                    }\n                    xi = Math.cos(theta + dTheta) * rx + cx;\n                    yi = Math.sin(theta + dTheta) * ry + cy;\n                    break;\n                case CMD.R:\n                    x0 = xi = data[i++];\n                    y0 = yi = data[i++];\n                    var width = data[i++];\n                    var height = data[i++];\n                    var x1 = x0 + width;\n                    var y1 = y0 + height;\n                    if (isStroke) {\n                        if (containStroke(x0, y0, x1, y0, lineWidth, x, y)\n                          || containStroke(x1, y0, x1, y1, lineWidth, x, y)\n                          || containStroke(x1, y1, x0, y1, lineWidth, x, y)\n                          || containStroke(x0, y1, x0, y0, lineWidth, x, y)\n                        ) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // FIXME Clockwise ?\n                        w += windingLine(x1, y0, x1, y1, x, y);\n                        w += windingLine(x0, y1, x0, y0, x, y);\n                    }\n                    break;\n                case CMD.Z:\n                    if (isStroke) {\n                        if (containStroke(\n                            xi, yi, x0, y0, lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // Close a subpath\n                        w += windingLine(xi, yi, x0, y0, x, y);\n                        // 如果被任何一个 subpath 包含\n                        // FIXME subpaths may overlap\n                        // if (w !== 0) {\n                        //     return true;\n                        // }\n                    }\n                    xi = x0;\n                    yi = y0;\n                    break;\n            }\n        }\n        if (!isStroke && !isAroundEqual(yi, y0)) {\n            w += windingLine(xi, yi, x0, y0, x, y) || 0;\n        }\n        return w !== 0;\n    }\n\n    module.exports = {\n        contain: function (pathData, x, y) {\n            return containPath(pathData, 0, false, x, y);\n        },\n\n        containStroke: function (pathData, lineWidth, x, y) {\n            return containPath(pathData, lineWidth, true, x, y);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.zrender@3.4.4@zrender/lib/contain/path.js\n// module id = 411\n// module chunks = 0","\n\n    var curve = require('../core/curve');\n\n    module.exports = {\n        /**\n         * 二次贝塞尔曲线描边包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  x2\n         * @param  {number}  y2\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function (x0, y0, x1, y1, x2, y2, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l && y > y2 + _l)\n                || (y < y0 - _l && y < y1 - _l && y < y2 - _l)\n                || (x > x0 + _l && x > x1 + _l && x > x2 + _l)\n                || (x < x0 - _l && x < x1 - _l && x < x2 - _l)\n            ) {\n                return false;\n            }\n            var d = curve.quadraticProjectPoint(\n                x0, y0, x1, y1, x2, y2,\n                x, y, null\n            );\n            return d <= _l / 2;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.zrender@3.4.4@zrender/lib/contain/quadratic.js\n// module id = 412\n// module chunks = 0","\n    module.exports = function windingLine(x0, y0, x1, y1, x, y) {\n        if ((y > y0 && y > y1) || (y < y0 && y < y1)) {\n            return 0;\n        }\n        // Ignore horizontal line\n        if (y1 === y0) {\n            return 0;\n        }\n        var dir = y1 < y0 ? 1 : -1;\n        var t = (y - y0) / (y1 - y0);\n\n        // Avoid winding error when intersection point is the connect point of two line of polygon\n        if (t === 1 || t === 0) {\n            dir = y1 < y0 ? 0.5 : -0.5;\n        }\n\n        var x_ = t * (x1 - x0) + x0;\n\n        return x_ > x ? dir : 0;\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.zrender@3.4.4@zrender/lib/contain/windingLine.js\n// module id = 413\n// module chunks = 0","'use strict';\n/**\n * Only implements needed gestures for mobile.\n */\n\n\n    var eventUtil = require('./event');\n\n    var GestureMgr = function () {\n\n        /**\n         * @private\n         * @type {Array.<Object>}\n         */\n        this._track = [];\n    };\n\n    GestureMgr.prototype = {\n\n        constructor: GestureMgr,\n\n        recognize: function (event, target, root) {\n            this._doTrack(event, target, root);\n            return this._recognize(event);\n        },\n\n        clear: function () {\n            this._track.length = 0;\n            return this;\n        },\n\n        _doTrack: function (event, target, root) {\n            var touches = event.touches;\n\n            if (!touches) {\n                return;\n            }\n\n            var trackItem = {\n                points: [],\n                touches: [],\n                target: target,\n                event: event\n            };\n\n            for (var i = 0, len = touches.length; i < len; i++) {\n                var touch = touches[i];\n                var pos = eventUtil.clientToLocal(root, touch, {});\n                trackItem.points.push([pos.zrX, pos.zrY]);\n                trackItem.touches.push(touch);\n            }\n\n            this._track.push(trackItem);\n        },\n\n        _recognize: function (event) {\n            for (var eventName in recognizers) {\n                if (recognizers.hasOwnProperty(eventName)) {\n                    var gestureInfo = recognizers[eventName](this._track, event);\n                    if (gestureInfo) {\n                        return gestureInfo;\n                    }\n                }\n            }\n        }\n    };\n\n    function dist(pointPair) {\n        var dx = pointPair[1][0] - pointPair[0][0];\n        var dy = pointPair[1][1] - pointPair[0][1];\n\n        return Math.sqrt(dx * dx + dy * dy);\n    }\n\n    function center(pointPair) {\n        return [\n            (pointPair[0][0] + pointPair[1][0]) / 2,\n            (pointPair[0][1] + pointPair[1][1]) / 2\n        ];\n    }\n\n    var recognizers = {\n\n        pinch: function (track, event) {\n            var trackLen = track.length;\n\n            if (!trackLen) {\n                return;\n            }\n\n            var pinchEnd = (track[trackLen - 1] || {}).points;\n            var pinchPre = (track[trackLen - 2] || {}).points || pinchEnd;\n\n            if (pinchPre\n                && pinchPre.length > 1\n                && pinchEnd\n                && pinchEnd.length > 1\n            ) {\n                var pinchScale = dist(pinchEnd) / dist(pinchPre);\n                !isFinite(pinchScale) && (pinchScale = 1);\n\n                event.pinchScale = pinchScale;\n\n                var pinchCenter = center(pinchEnd);\n                event.pinchX = pinchCenter[0];\n                event.pinchY = pinchCenter[1];\n\n                return {\n                    type: 'pinch',\n                    target: track[0].target,\n                    event: event\n                };\n            }\n        }\n\n        // Only pinch currently.\n    };\n\n    module.exports = GestureMgr;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.zrender@3.4.4@zrender/lib/core/GestureMgr.js\n// module id = 414\n// module chunks = 0","/**\n * @author Yi Shen(https://github.com/pissang)\n */\n\n\n    var vec2 = require('./vector');\n    var curve = require('./curve');\n\n    var bbox = {};\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    var mathSin = Math.sin;\n    var mathCos = Math.cos;\n\n    var start = vec2.create();\n    var end = vec2.create();\n    var extremity = vec2.create();\n\n    var PI2 = Math.PI * 2;\n    /**\n     * 从顶点数组中计算出最小包围盒，写入`min`和`max`中\n     * @module zrender/core/bbox\n     * @param {Array<Object>} points 顶点数组\n     * @param {number} min\n     * @param {number} max\n     */\n    bbox.fromPoints = function(points, min, max) {\n        if (points.length === 0) {\n            return;\n        }\n        var p = points[0];\n        var left = p[0];\n        var right = p[0];\n        var top = p[1];\n        var bottom = p[1];\n        var i;\n\n        for (i = 1; i < points.length; i++) {\n            p = points[i];\n            left = mathMin(left, p[0]);\n            right = mathMax(right, p[0]);\n            top = mathMin(top, p[1]);\n            bottom = mathMax(bottom, p[1]);\n        }\n\n        min[0] = left;\n        min[1] = top;\n        max[0] = right;\n        max[1] = bottom;\n    };\n\n    /**\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromLine = function (x0, y0, x1, y1, min, max) {\n        min[0] = mathMin(x0, x1);\n        min[1] = mathMin(y0, y1);\n        max[0] = mathMax(x0, x1);\n        max[1] = mathMax(y0, y1);\n    };\n\n    var xDim = [];\n    var yDim = [];\n    /**\n     * 从三阶贝塞尔曲线(p0, p1, p2, p3)中计算出最小包围盒，写入`min`和`max`中\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x3\n     * @param {number} y3\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromCubic = function(\n        x0, y0, x1, y1, x2, y2, x3, y3, min, max\n    ) {\n        var cubicExtrema = curve.cubicExtrema;\n        var cubicAt = curve.cubicAt;\n        var i;\n        var n = cubicExtrema(x0, x1, x2, x3, xDim);\n        min[0] = Infinity;\n        min[1] = Infinity;\n        max[0] = -Infinity;\n        max[1] = -Infinity;\n\n        for (i = 0; i < n; i++) {\n            var x = cubicAt(x0, x1, x2, x3, xDim[i]);\n            min[0] = mathMin(x, min[0]);\n            max[0] = mathMax(x, max[0]);\n        }\n        n = cubicExtrema(y0, y1, y2, y3, yDim);\n        for (i = 0; i < n; i++) {\n            var y = cubicAt(y0, y1, y2, y3, yDim[i]);\n            min[1] = mathMin(y, min[1]);\n            max[1] = mathMax(y, max[1]);\n        }\n\n        min[0] = mathMin(x0, min[0]);\n        max[0] = mathMax(x0, max[0]);\n        min[0] = mathMin(x3, min[0]);\n        max[0] = mathMax(x3, max[0]);\n\n        min[1] = mathMin(y0, min[1]);\n        max[1] = mathMax(y0, max[1]);\n        min[1] = mathMin(y3, min[1]);\n        max[1] = mathMax(y3, max[1]);\n    };\n\n    /**\n     * 从二阶贝塞尔曲线(p0, p1, p2)中计算出最小包围盒，写入`min`和`max`中\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromQuadratic = function(x0, y0, x1, y1, x2, y2, min, max) {\n        var quadraticExtremum = curve.quadraticExtremum;\n        var quadraticAt = curve.quadraticAt;\n        // Find extremities, where derivative in x dim or y dim is zero\n        var tx =\n            mathMax(\n                mathMin(quadraticExtremum(x0, x1, x2), 1), 0\n            );\n        var ty =\n            mathMax(\n                mathMin(quadraticExtremum(y0, y1, y2), 1), 0\n            );\n\n        var x = quadraticAt(x0, x1, x2, tx);\n        var y = quadraticAt(y0, y1, y2, ty);\n\n        min[0] = mathMin(x0, x2, x);\n        min[1] = mathMin(y0, y2, y);\n        max[0] = mathMax(x0, x2, x);\n        max[1] = mathMax(y0, y2, y);\n    };\n\n    /**\n     * 从圆弧中计算出最小包围盒，写入`min`和`max`中\n     * @method\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x\n     * @param {number} y\n     * @param {number} rx\n     * @param {number} ry\n     * @param {number} startAngle\n     * @param {number} endAngle\n     * @param {number} anticlockwise\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromArc = function (\n        x, y, rx, ry, startAngle, endAngle, anticlockwise, min, max\n    ) {\n        var vec2Min = vec2.min;\n        var vec2Max = vec2.max;\n\n        var diff = Math.abs(startAngle - endAngle);\n\n\n        if (diff % PI2 < 1e-4 && diff > 1e-4) {\n            // Is a circle\n            min[0] = x - rx;\n            min[1] = y - ry;\n            max[0] = x + rx;\n            max[1] = y + ry;\n            return;\n        }\n\n        start[0] = mathCos(startAngle) * rx + x;\n        start[1] = mathSin(startAngle) * ry + y;\n\n        end[0] = mathCos(endAngle) * rx + x;\n        end[1] = mathSin(endAngle) * ry + y;\n\n        vec2Min(min, start, end);\n        vec2Max(max, start, end);\n\n        // Thresh to [0, Math.PI * 2]\n        startAngle = startAngle % (PI2);\n        if (startAngle < 0) {\n            startAngle = startAngle + PI2;\n        }\n        endAngle = endAngle % (PI2);\n        if (endAngle < 0) {\n            endAngle = endAngle + PI2;\n        }\n\n        if (startAngle > endAngle && !anticlockwise) {\n            endAngle += PI2;\n        }\n        else if (startAngle < endAngle && anticlockwise) {\n            startAngle += PI2;\n        }\n        if (anticlockwise) {\n            var tmp = endAngle;\n            endAngle = startAngle;\n            startAngle = tmp;\n        }\n\n        // var number = 0;\n        // var step = (anticlockwise ? -Math.PI : Math.PI) / 2;\n        for (var angle = 0; angle < endAngle; angle += Math.PI / 2) {\n            if (angle > startAngle) {\n                extremity[0] = mathCos(angle) * rx + x;\n                extremity[1] = mathSin(angle) * ry + y;\n\n                vec2Min(min, extremity, min);\n                vec2Max(max, extremity, max);\n            }\n        }\n    };\n\n    module.exports = bbox;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.zrender@3.4.4@zrender/lib/core/bbox.js\n// module id = 415\n// module chunks = 0","\n\n    var eventTool = require('../core/event');\n    var zrUtil = require('../core/util');\n    var Eventful = require('../mixin/Eventful');\n    var env = require('../core/env');\n    var GestureMgr = require('../core/GestureMgr');\n\n    var addEventListener = eventTool.addEventListener;\n    var removeEventListener = eventTool.removeEventListener;\n    var normalizeEvent = eventTool.normalizeEvent;\n\n    var TOUCH_CLICK_DELAY = 300;\n\n    var mouseHandlerNames = [\n        'click', 'dblclick', 'mousewheel', 'mouseout',\n        'mouseup', 'mousedown', 'mousemove', 'contextmenu'\n    ];\n\n    var touchHandlerNames = [\n        'touchstart', 'touchend', 'touchmove'\n    ];\n\n    var pointerEventNames = {\n        pointerdown: 1, pointerup: 1, pointermove: 1, pointerout: 1\n    };\n\n    var pointerHandlerNames = zrUtil.map(mouseHandlerNames, function (name) {\n        var nm = name.replace('mouse', 'pointer');\n        return pointerEventNames[nm] ? nm : name;\n    });\n\n    function eventNameFix(name) {\n        return (name === 'mousewheel' && env.browser.firefox) ? 'DOMMouseScroll' : name;\n    }\n\n    function processGesture(proxy, event, stage) {\n        var gestureMgr = proxy._gestureMgr;\n\n        stage === 'start' && gestureMgr.clear();\n\n        var gestureInfo = gestureMgr.recognize(\n            event,\n            proxy.handler.findHover(event.zrX, event.zrY, null).target,\n            proxy.dom\n        );\n\n        stage === 'end' && gestureMgr.clear();\n\n        // Do not do any preventDefault here. Upper application do that if necessary.\n        if (gestureInfo) {\n            var type = gestureInfo.type;\n            event.gestureEvent = type;\n\n            proxy.handler.dispatchToElement({target: gestureInfo.target}, type, gestureInfo.event);\n        }\n    }\n\n    // function onMSGestureChange(proxy, event) {\n    //     if (event.translationX || event.translationY) {\n    //         // mousemove is carried by MSGesture to reduce the sensitivity.\n    //         proxy.handler.dispatchToElement(event.target, 'mousemove', event);\n    //     }\n    //     if (event.scale !== 1) {\n    //         event.pinchX = event.offsetX;\n    //         event.pinchY = event.offsetY;\n    //         event.pinchScale = event.scale;\n    //         proxy.handler.dispatchToElement(event.target, 'pinch', event);\n    //     }\n    // }\n\n    /**\n     * Prevent mouse event from being dispatched after Touch Events action\n     * @see <https://github.com/deltakosh/handjs/blob/master/src/hand.base.js>\n     * 1. Mobile browsers dispatch mouse events 300ms after touchend.\n     * 2. Chrome for Android dispatch mousedown for long-touch about 650ms\n     * Result: Blocking Mouse Events for 700ms.\n     */\n    function setTouchTimer(instance) {\n        instance._touching = true;\n        clearTimeout(instance._touchTimer);\n        instance._touchTimer = setTimeout(function () {\n            instance._touching = false;\n        }, 700);\n    }\n\n\n    var domHandlers = {\n        /**\n         * Mouse move handler\n         * @inner\n         * @param {Event} event\n         */\n        mousemove: function (event) {\n            event = normalizeEvent(this.dom, event);\n\n            this.trigger('mousemove', event);\n        },\n\n        /**\n         * Mouse out handler\n         * @inner\n         * @param {Event} event\n         */\n        mouseout: function (event) {\n            event = normalizeEvent(this.dom, event);\n\n            var element = event.toElement || event.relatedTarget;\n            if (element != this.dom) {\n                while (element && element.nodeType != 9) {\n                    // 忽略包含在root中的dom引起的mouseOut\n                    if (element === this.dom) {\n                        return;\n                    }\n\n                    element = element.parentNode;\n                }\n            }\n\n            this.trigger('mouseout', event);\n        },\n\n        /**\n         * Touch开始响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchstart: function (event) {\n            // Default mouse behaviour should not be disabled here.\n            // For example, page may needs to be slided.\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            this._lastTouchMoment = new Date();\n\n            processGesture(this, event, 'start');\n\n            // In touch device, trigger `mousemove`(`mouseover`) should\n            // be triggered, and must before `mousedown` triggered.\n            domHandlers.mousemove.call(this, event);\n\n            domHandlers.mousedown.call(this, event);\n\n            setTouchTimer(this);\n        },\n\n        /**\n         * Touch移动响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchmove: function (event) {\n\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            processGesture(this, event, 'change');\n\n            // Mouse move should always be triggered no matter whether\n            // there is gestrue event, because mouse move and pinch may\n            // be used at the same time.\n            domHandlers.mousemove.call(this, event);\n\n            setTouchTimer(this);\n        },\n\n        /**\n         * Touch结束响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchend: function (event) {\n\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            processGesture(this, event, 'end');\n\n            domHandlers.mouseup.call(this, event);\n\n            // Do not trigger `mouseout` here, in spite of `mousemove`(`mouseover`) is\n            // triggered in `touchstart`. This seems to be illogical, but by this mechanism,\n            // we can conveniently implement \"hover style\" in both PC and touch device just\n            // by listening to `mouseover` to add \"hover style\" and listening to `mouseout`\n            // to remove \"hover style\" on an element, without any additional code for\n            // compatibility. (`mouseout` will not be triggered in `touchend`, so \"hover\n            // style\" will remain for user view)\n\n            // click event should always be triggered no matter whether\n            // there is gestrue event. System click can not be prevented.\n            if (+new Date() - this._lastTouchMoment < TOUCH_CLICK_DELAY) {\n                domHandlers.click.call(this, event);\n            }\n\n            setTouchTimer(this);\n        },\n\n        pointerdown: function (event) {\n            domHandlers.mousedown.call(this, event);\n\n            // if (useMSGuesture(this, event)) {\n            //     this._msGesture.addPointer(event.pointerId);\n            // }\n        },\n\n        pointermove: function (event) {\n            // FIXME\n            // pointermove is so sensitive that it always triggered when\n            // tap(click) on touch screen, which affect some judgement in\n            // upper application. So, we dont support mousemove on MS touch\n            // device yet.\n            if (!isPointerFromTouch(event)) {\n                domHandlers.mousemove.call(this, event);\n            }\n        },\n\n        pointerup: function (event) {\n            domHandlers.mouseup.call(this, event);\n        },\n\n        pointerout: function (event) {\n            // pointerout will be triggered when tap on touch screen\n            // (IE11+/Edge on MS Surface) after click event triggered,\n            // which is inconsistent with the mousout behavior we defined\n            // in touchend. So we unify them.\n            // (check domHandlers.touchend for detailed explanation)\n            if (!isPointerFromTouch(event)) {\n                domHandlers.mouseout.call(this, event);\n            }\n        }\n    };\n\n    function isPointerFromTouch(event) {\n        var pointerType = event.pointerType;\n        return pointerType === 'pen' || pointerType === 'touch';\n    }\n\n    // function useMSGuesture(handlerProxy, event) {\n    //     return isPointerFromTouch(event) && !!handlerProxy._msGesture;\n    // }\n\n    // Common handlers\n    zrUtil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n        domHandlers[name] = function (event) {\n            event = normalizeEvent(this.dom, event);\n            this.trigger(name, event);\n        };\n    });\n\n    /**\n     * 为控制类实例初始化dom 事件处理函数\n     *\n     * @inner\n     * @param {module:zrender/Handler} instance 控制类实例\n     */\n    function initDomHandler(instance) {\n        zrUtil.each(touchHandlerNames, function (name) {\n            instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n        });\n\n        zrUtil.each(pointerHandlerNames, function (name) {\n            instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n        });\n\n        zrUtil.each(mouseHandlerNames, function (name) {\n            instance._handlers[name] = makeMouseHandler(domHandlers[name], instance);\n        });\n\n        function makeMouseHandler(fn, instance) {\n            return function () {\n                if (instance._touching) {\n                    return;\n                }\n                return fn.apply(instance, arguments);\n            };\n        }\n    }\n\n\n    function HandlerDomProxy(dom) {\n        Eventful.call(this);\n\n        this.dom = dom;\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this._touching = false;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._touchTimer;\n\n        /**\n         * @private\n         * @type {module:zrender/core/GestureMgr}\n         */\n        this._gestureMgr = new GestureMgr();\n\n        this._handlers = {};\n\n        initDomHandler(this);\n\n        if (env.pointerEventsSupported) { // Only IE11+/Edge\n            // 1. On devices that both enable touch and mouse (e.g., MS Surface and lenovo X240),\n            // IE11+/Edge do not trigger touch event, but trigger pointer event and mouse event\n            // at the same time.\n            // 2. On MS Surface, it probablely only trigger mousedown but no mouseup when tap on\n            // screen, which do not occurs in pointer event.\n            // So we use pointer event to both detect touch gesture and mouse behavior.\n            mountHandlers(pointerHandlerNames, this);\n\n            // FIXME\n            // Note: MS Gesture require CSS touch-action set. But touch-action is not reliable,\n            // which does not prevent defuault behavior occasionally (which may cause view port\n            // zoomed in but use can not zoom it back). And event.preventDefault() does not work.\n            // So we have to not to use MSGesture and not to support touchmove and pinch on MS\n            // touch screen. And we only support click behavior on MS touch screen now.\n\n            // MS Gesture Event is only supported on IE11+/Edge and on Windows 8+.\n            // We dont support touch on IE on win7.\n            // See <https://msdn.microsoft.com/en-us/library/dn433243(v=vs.85).aspx>\n            // if (typeof MSGesture === 'function') {\n            //     (this._msGesture = new MSGesture()).target = dom; // jshint ignore:line\n            //     dom.addEventListener('MSGestureChange', onMSGestureChange);\n            // }\n        }\n        else {\n            if (env.touchEventsSupported) {\n                mountHandlers(touchHandlerNames, this);\n                // Handler of 'mouseout' event is needed in touch mode, which will be mounted below.\n                // addEventListener(root, 'mouseout', this._mouseoutHandler);\n            }\n\n            // 1. Considering some devices that both enable touch and mouse event (like on MS Surface\n            // and lenovo X240, @see #2350), we make mouse event be always listened, otherwise\n            // mouse event can not be handle in those devices.\n            // 2. On MS Surface, Chrome will trigger both touch event and mouse event. How to prevent\n            // mouseevent after touch event triggered, see `setTouchTimer`.\n            mountHandlers(mouseHandlerNames, this);\n        }\n\n        function mountHandlers(handlerNames, instance) {\n            zrUtil.each(handlerNames, function (name) {\n                addEventListener(dom, eventNameFix(name), instance._handlers[name]);\n            }, instance);\n        }\n    }\n\n    var handlerDomProxyProto = HandlerDomProxy.prototype;\n    handlerDomProxyProto.dispose = function () {\n        var handlerNames = mouseHandlerNames.concat(touchHandlerNames);\n\n        for (var i = 0; i < handlerNames.length; i++) {\n            var name = handlerNames[i];\n            removeEventListener(this.dom, eventNameFix(name), this._handlers[name]);\n        }\n    };\n\n    handlerDomProxyProto.setCursor = function (cursorStyle) {\n        this.dom.style.cursor = cursorStyle || 'default';\n    };\n\n    zrUtil.mixin(HandlerDomProxy, Eventful);\n\n    module.exports = HandlerDomProxy;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.zrender@3.4.4@zrender/lib/dom/HandlerProxy.js\n// module id = 416\n// module chunks = 0","// CompoundPath to improve performance\n\n\n    var Path = require('./Path');\n\n    module.exports = Path.extend({\n\n        type: 'compound',\n\n        shape: {\n\n            paths: null\n        },\n\n        _updatePathDirty: function () {\n            var dirtyPath = this.__dirtyPath;\n            var paths = this.shape.paths;\n            for (var i = 0; i < paths.length; i++) {\n                // Mark as dirty if any subpath is dirty\n                dirtyPath = dirtyPath || paths[i].__dirtyPath;\n            }\n            this.__dirtyPath = dirtyPath;\n            this.__dirty = this.__dirty || dirtyPath;\n        },\n\n        beforeBrush: function () {\n            this._updatePathDirty();\n            var paths = this.shape.paths || [];\n            var scale = this.getGlobalScale();\n            // Update path scale\n            for (var i = 0; i < paths.length; i++) {\n                if (!paths[i].path) {\n                    paths[i].createPathProxy();\n                }\n                paths[i].path.setScale(scale[0], scale[1]);\n            }\n        },\n\n        buildPath: function (ctx, shape) {\n            var paths = shape.paths || [];\n            for (var i = 0; i < paths.length; i++) {\n                paths[i].buildPath(ctx, paths[i].shape, true);\n            }\n        },\n\n        afterBrush: function () {\n            var paths = this.shape.paths;\n            for (var i = 0; i < paths.length; i++) {\n                paths[i].__dirtyPath = false;\n            }\n        },\n\n        getBoundingRect: function () {\n            this._updatePathDirty();\n            return Path.prototype.getBoundingRect.call(this);\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.zrender@3.4.4@zrender/lib/graphic/CompoundPath.js\n// module id = 417\n// module chunks = 0","'use strict';\n\n\n    var zrUtil = require('../core/util');\n\n    var Gradient = require('./Gradient');\n\n    /**\n     * x, y, x2, y2 are all percent from 0 to 1\n     * @param {number} [x=0]\n     * @param {number} [y=0]\n     * @param {number} [x2=1]\n     * @param {number} [y2=0]\n     * @param {Array.<Object>} colorStops\n     * @param {boolean} [globalCoord=false]\n     */\n    var LinearGradient = function (x, y, x2, y2, colorStops, globalCoord) {\n        // Should do nothing more in this constructor. Because gradient can be\n        // declard by `color: {type: 'linear', colorStops: ...}`, where\n        // this constructor will not be called.\n\n        this.x = x == null ? 0 : x;\n\n        this.y = y == null ? 0 : y;\n\n        this.x2 = x2 == null ? 1 : x2;\n\n        this.y2 = y2 == null ? 0 : y2;\n\n        // Can be cloned\n        this.type = 'linear';\n\n        // If use global coord\n        this.global = globalCoord || false;\n\n        Gradient.call(this, colorStops);\n    };\n\n    LinearGradient.prototype = {\n\n        constructor: LinearGradient\n    };\n\n    zrUtil.inherits(LinearGradient, Gradient);\n\n    module.exports = LinearGradient;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.zrender@3.4.4@zrender/lib/graphic/LinearGradient.js\n// module id = 418\n// module chunks = 0","'use strict';\n\n\n    var zrUtil = require('../core/util');\n\n    var Gradient = require('./Gradient');\n\n    /**\n     * x, y, r are all percent from 0 to 1\n     * @param {number} [x=0.5]\n     * @param {number} [y=0.5]\n     * @param {number} [r=0.5]\n     * @param {Array.<Object>} [colorStops]\n     * @param {boolean} [globalCoord=false]\n     */\n    var RadialGradient = function (x, y, r, colorStops, globalCoord) {\n        // Should do nothing more in this constructor. Because gradient can be\n        // declard by `color: {type: 'radial', colorStops: ...}`, where\n        // this constructor will not be called.\n\n        this.x = x == null ? 0.5 : x;\n\n        this.y = y == null ? 0.5 : y;\n\n        this.r = r == null ? 0.5 : r;\n\n        // Can be cloned\n        this.type = 'radial';\n\n        // If use global coord\n        this.global = globalCoord || false;\n\n        Gradient.call(this, colorStops);\n    };\n\n    RadialGradient.prototype = {\n\n        constructor: RadialGradient\n    };\n\n    zrUtil.inherits(RadialGradient, Gradient);\n\n    module.exports = RadialGradient;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.zrender@3.4.4@zrender/lib/graphic/RadialGradient.js\n// module id = 419\n// module chunks = 0","/**\n * Text element\n * @module zrender/graphic/Text\n *\n * TODO Wrapping\n *\n * Text not support gradient\n */\n\n\n\n    var Displayable = require('./Displayable');\n    var zrUtil = require('../core/util');\n    var textContain = require('../contain/text');\n\n    /**\n     * @alias zrender/graphic/Text\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    var Text = function (opts) {\n        Displayable.call(this, opts);\n    };\n\n    Text.prototype = {\n\n        constructor: Text,\n\n        type: 'text',\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n            var x = style.x || 0;\n            var y = style.y || 0;\n            // Convert to string\n            var text = style.text;\n\n            // Convert to string\n            text != null && (text += '');\n\n            // Always bind style\n            style.bind(ctx, this, prevEl);\n\n            if (text) {\n\n                this.setTransform(ctx);\n\n                var textBaseline;\n                var textAlign = style.textAlign;\n                var font = style.textFont || style.font;\n                if (style.textVerticalAlign) {\n                    var rect = textContain.getBoundingRect(\n                        text, font, style.textAlign, 'top'\n                    );\n                    // Ignore textBaseline\n                    textBaseline = 'middle';\n                    switch (style.textVerticalAlign) {\n                        case 'middle':\n                            y -= rect.height / 2 - rect.lineHeight / 2;\n                            break;\n                        case 'bottom':\n                            y -= rect.height - rect.lineHeight / 2;\n                            break;\n                        default:\n                            y += rect.lineHeight / 2;\n                    }\n                }\n                else {\n                    textBaseline = style.textBaseline;\n                }\n\n                // TODO Invalid font\n                ctx.font = font || '12px sans-serif';\n                ctx.textAlign = textAlign || 'left';\n                // Use canvas default left textAlign. Giving invalid value will cause state not change\n                if (ctx.textAlign !== textAlign) {\n                    ctx.textAlign = 'left';\n                }\n                // FIXME in text contain default is top\n                ctx.textBaseline = textBaseline || 'alphabetic';\n                // Use canvas default alphabetic baseline\n                if (ctx.textBaseline !== textBaseline) {\n                    ctx.textBaseline = 'alphabetic';\n                }\n\n                var lineHeight = textContain.measureText('国', ctx.font).width;\n\n                var textLines = text.split('\\n');\n                for (var i = 0; i < textLines.length; i++) {\n                    // Fill after stroke so the outline will not cover the main part.\n                    style.hasStroke() && ctx.strokeText(textLines[i], x, y);\n                    style.hasFill() && ctx.fillText(textLines[i], x, y);\n                    y += lineHeight;\n                }\n\n                this.restoreTransform(ctx);\n            }\n        },\n\n        getBoundingRect: function () {\n            var style = this.style;\n            if (!this._rect) {\n                var textVerticalAlign = style.textVerticalAlign;\n                var rect = textContain.getBoundingRect(\n                    style.text + '', style.textFont || style.font, style.textAlign,\n                    textVerticalAlign ? 'top' : style.textBaseline\n                );\n                switch (textVerticalAlign) {\n                    case 'middle':\n                        rect.y -= rect.height / 2;\n                        break;\n                    case 'bottom':\n                        rect.y -= rect.height;\n                        break;\n                }\n                rect.x += style.x || 0;\n                rect.y += style.y || 0;\n                if (style.hasStroke()) {\n                    var w = style.lineWidth;\n                    rect.x -= w / 2;\n                    rect.y -= w / 2;\n                    rect.width += w;\n                    rect.height += w;\n                }\n                this._rect = rect;\n            }\n\n            return this._rect;\n        }\n    };\n\n    zrUtil.inherits(Text, Displayable);\n\n    module.exports = Text;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.zrender@3.4.4@zrender/lib/graphic/Text.js\n// module id = 420\n// module chunks = 0","\n\n    module.exports = {\n        buildPath: function (ctx, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var width = shape.width;\n            var height = shape.height;\n            var r = shape.r;\n            var r1;\n            var r2;\n            var r3;\n            var r4;\n\n            // Convert width and height to positive for better borderRadius\n            if (width < 0) {\n                x = x + width;\n                width = -width;\n            }\n            if (height < 0) {\n                y = y + height;\n                height = -height;\n            }\n\n            if (typeof r === 'number') {\n                r1 = r2 = r3 = r4 = r;\n            }\n            else if (r instanceof Array) {\n                if (r.length === 1) {\n                    r1 = r2 = r3 = r4 = r[0];\n                }\n                else if (r.length === 2) {\n                    r1 = r3 = r[0];\n                    r2 = r4 = r[1];\n                }\n                else if (r.length === 3) {\n                    r1 = r[0];\n                    r2 = r4 = r[1];\n                    r3 = r[2];\n                }\n                else {\n                    r1 = r[0];\n                    r2 = r[1];\n                    r3 = r[2];\n                    r4 = r[3];\n                }\n            }\n            else {\n                r1 = r2 = r3 = r4 = 0;\n            }\n\n            var total;\n            if (r1 + r2 > width) {\n                total = r1 + r2;\n                r1 *= width / total;\n                r2 *= width / total;\n            }\n            if (r3 + r4 > width) {\n                total = r3 + r4;\n                r3 *= width / total;\n                r4 *= width / total;\n            }\n            if (r2 + r3 > height) {\n                total = r2 + r3;\n                r2 *= height / total;\n                r3 *= height / total;\n            }\n            if (r1 + r4 > height) {\n                total = r1 + r4;\n                r1 *= height / total;\n                r4 *= height / total;\n            }\n            ctx.moveTo(x + r1, y);\n            ctx.lineTo(x + width - r2, y);\n            r2 !== 0 && ctx.quadraticCurveTo(\n                x + width, y, x + width, y + r2\n            );\n            ctx.lineTo(x + width, y + height - r3);\n            r3 !== 0 && ctx.quadraticCurveTo(\n                x + width, y + height, x + width - r3, y + height\n            );\n            ctx.lineTo(x + r4, y + height);\n            r4 !== 0 && ctx.quadraticCurveTo(\n                x, y + height, x, y + height - r4\n            );\n            ctx.lineTo(x, y + r1);\n            r1 !== 0 && ctx.quadraticCurveTo(x, y, x + r1, y);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.zrender@3.4.4@zrender/lib/graphic/helper/roundRect.js\n// module id = 421\n// module chunks = 0","/**\n * 贝塞尔平滑曲线\n * @module zrender/shape/util/smoothBezier\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n\n    var vec2 = require('../../core/vector');\n    var v2Min = vec2.min;\n    var v2Max = vec2.max;\n    var v2Scale = vec2.scale;\n    var v2Distance = vec2.distance;\n    var v2Add = vec2.add;\n\n    /**\n     * 贝塞尔平滑曲线\n     * @alias module:zrender/shape/util/smoothBezier\n     * @param {Array} points 线段顶点数组\n     * @param {number} smooth 平滑等级, 0-1\n     * @param {boolean} isLoop\n     * @param {Array} constraint 将计算出来的控制点约束在一个包围盒内\n     *                           比如 [[0, 0], [100, 100]], 这个包围盒会与\n     *                           整个折线的包围盒做一个并集用来约束控制点。\n     * @param {Array} 计算出来的控制点数组\n     */\n    module.exports = function (points, smooth, isLoop, constraint) {\n        var cps = [];\n\n        var v = [];\n        var v1 = [];\n        var v2 = [];\n        var prevPoint;\n        var nextPoint;\n\n        var min, max;\n        if (constraint) {\n            min = [Infinity, Infinity];\n            max = [-Infinity, -Infinity];\n            for (var i = 0, len = points.length; i < len; i++) {\n                v2Min(min, min, points[i]);\n                v2Max(max, max, points[i]);\n            }\n            // 与指定的包围盒做并集\n            v2Min(min, min, constraint[0]);\n            v2Max(max, max, constraint[1]);\n        }\n\n        for (var i = 0, len = points.length; i < len; i++) {\n            var point = points[i];\n\n            if (isLoop) {\n                prevPoint = points[i ? i - 1 : len - 1];\n                nextPoint = points[(i + 1) % len];\n            }\n            else {\n                if (i === 0 || i === len - 1) {\n                    cps.push(vec2.clone(points[i]));\n                    continue;\n                }\n                else {\n                    prevPoint = points[i - 1];\n                    nextPoint = points[i + 1];\n                }\n            }\n\n            vec2.sub(v, nextPoint, prevPoint);\n\n            // use degree to scale the handle length\n            v2Scale(v, v, smooth);\n\n            var d0 = v2Distance(point, prevPoint);\n            var d1 = v2Distance(point, nextPoint);\n            var sum = d0 + d1;\n            if (sum !== 0) {\n                d0 /= sum;\n                d1 /= sum;\n            }\n\n            v2Scale(v1, v, -d0);\n            v2Scale(v2, v, d1);\n            var cp0 = v2Add([], point, v1);\n            var cp1 = v2Add([], point, v2);\n            if (constraint) {\n                v2Max(cp0, cp0, min);\n                v2Min(cp0, cp0, max);\n                v2Max(cp1, cp1, min);\n                v2Min(cp1, cp1, max);\n            }\n            cps.push(cp0);\n            cps.push(cp1);\n        }\n\n        if (isLoop) {\n            cps.push(cps.shift());\n        }\n\n        return cps;\n    };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.zrender@3.4.4@zrender/lib/graphic/helper/smoothBezier.js\n// module id = 422\n// module chunks = 0","/**\n * Catmull-Rom spline 插值折线\n * @module zrender/shape/util/smoothSpline\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n    var vec2 = require('../../core/vector');\n\n    /**\n     * @inner\n     */\n    function interpolate(p0, p1, p2, p3, t, t2, t3) {\n        var v0 = (p2 - p0) * 0.5;\n        var v1 = (p3 - p1) * 0.5;\n        return (2 * (p1 - p2) + v0 + v1) * t3\n                + (-3 * (p1 - p2) - 2 * v0 - v1) * t2\n                + v0 * t + p1;\n    }\n\n    /**\n     * @alias module:zrender/shape/util/smoothSpline\n     * @param {Array} points 线段顶点数组\n     * @param {boolean} isLoop\n     * @return {Array}\n     */\n    module.exports = function (points, isLoop) {\n        var len = points.length;\n        var ret = [];\n\n        var distance = 0;\n        for (var i = 1; i < len; i++) {\n            distance += vec2.distance(points[i - 1], points[i]);\n        }\n\n        var segs = distance / 2;\n        segs = segs < len ? len : segs;\n        for (var i = 0; i < segs; i++) {\n            var pos = i / (segs - 1) * (isLoop ? len : len - 1);\n            var idx = Math.floor(pos);\n\n            var w = pos - idx;\n\n            var p0;\n            var p1 = points[idx % len];\n            var p2;\n            var p3;\n            if (!isLoop) {\n                p0 = points[idx === 0 ? idx : idx - 1];\n                p2 = points[idx > len - 2 ? len - 1 : idx + 1];\n                p3 = points[idx > len - 3 ? len - 1 : idx + 2];\n            }\n            else {\n                p0 = points[(idx - 1 + len) % len];\n                p2 = points[(idx + 1) % len];\n                p3 = points[(idx + 2) % len];\n            }\n\n            var w2 = w * w;\n            var w3 = w * w2;\n\n            ret.push([\n                interpolate(p0[0], p1[0], p2[0], p3[0], w, w2, w3),\n                interpolate(p0[1], p1[1], p2[1], p3[1], w, w2, w3)\n            ]);\n        }\n        return ret;\n    };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.zrender@3.4.4@zrender/lib/graphic/helper/smoothSpline.js\n// module id = 423\n// module chunks = 0","/**\n * Mixin for drawing text in a element bounding rect\n * @module zrender/mixin/RectText\n */\n\n\n\n    var textContain = require('../../contain/text');\n    var BoundingRect = require('../../core/BoundingRect');\n\n    var tmpRect = new BoundingRect();\n\n    var RectText = function () {};\n\n    function parsePercent(value, maxValue) {\n        if (typeof value === 'string') {\n            if (value.lastIndexOf('%') >= 0) {\n                return parseFloat(value) / 100 * maxValue;\n            }\n            return parseFloat(value);\n        }\n        return value;\n    }\n\n    RectText.prototype = {\n\n        constructor: RectText,\n\n        /**\n         * Draw text in a rect with specified position.\n         * @param  {CanvasRenderingContext} ctx\n         * @param  {Object} rect Displayable rect\n         * @return {Object} textRect Alternative precalculated text bounding rect\n         */\n        drawRectText: function (ctx, rect, textRect) {\n            var style = this.style;\n            var text = style.text;\n            // Convert to string\n            text != null && (text += '');\n            if (!text) {\n                return;\n            }\n\n            // FIXME\n            ctx.save();\n\n            var x;\n            var y;\n            var textPosition = style.textPosition;\n            var textOffset = style.textOffset;\n            var distance = style.textDistance;\n            var align = style.textAlign;\n            var font = style.textFont || style.font;\n            var baseline = style.textBaseline;\n            var verticalAlign = style.textVerticalAlign;\n\n            textRect = textRect || textContain.getBoundingRect(text, font, align, baseline);\n\n            // Transform rect to view space\n            var transform = this.transform;\n            if (!style.textTransform) {\n                if (transform) {\n                    tmpRect.copy(rect);\n                    tmpRect.applyTransform(transform);\n                    rect = tmpRect;\n                }\n            }\n            else {\n                this.setTransform(ctx);\n            }\n\n            // Text position represented by coord\n            if (textPosition instanceof Array) {\n                // Percent\n                x = rect.x + parsePercent(textPosition[0], rect.width);\n                y = rect.y + parsePercent(textPosition[1], rect.height);\n                align = align || 'left';\n                baseline = baseline || 'top';\n\n                if (verticalAlign) {\n                    switch (verticalAlign) {\n                        case 'middle':\n                            y -= textRect.height / 2 - textRect.lineHeight / 2;\n                            break;\n                        case 'bottom':\n                            y -= textRect.height - textRect.lineHeight / 2;\n                            break;\n                        default:\n                            y += textRect.lineHeight / 2;\n                    }\n                    // Force bseline to be middle\n                    baseline = 'middle';\n                }\n            }\n            else {\n                var res = textContain.adjustTextPositionOnRect(\n                    textPosition, rect, textRect, distance\n                );\n                x = res.x;\n                y = res.y;\n                // Default align and baseline when has textPosition\n                align = align || res.textAlign;\n                baseline = baseline || res.textBaseline;\n            }\n\n            if (textOffset) {\n                x += textOffset[0];\n                y += textOffset[1];\n            }\n\n            // Use canvas default left textAlign. Giving invalid value will cause state not change\n            ctx.textAlign = align || 'left';\n            // Use canvas default alphabetic baseline\n            ctx.textBaseline = baseline || 'alphabetic';\n\n            var textFill = style.textFill;\n            var textStroke = style.textStroke;\n            textFill && (ctx.fillStyle = textFill);\n            textStroke && (ctx.strokeStyle = textStroke);\n\n            // TODO Invalid font\n            ctx.font = font || '12px sans-serif';\n\n            // Text shadow\n            // Always set shadowBlur and shadowOffset to avoid leak from displayable\n            ctx.shadowBlur = style.textShadowBlur;\n            ctx.shadowColor = style.textShadowColor || 'transparent';\n            ctx.shadowOffsetX = style.textShadowOffsetX;\n            ctx.shadowOffsetY = style.textShadowOffsetY;\n\n            var textLines = text.split('\\n');\n\n            if (style.textRotation) {\n                transform && ctx.translate(transform[4], transform[5]);\n                ctx.rotate(style.textRotation);\n                transform && ctx.translate(-transform[4], -transform[5]);\n            }\n\n            for (var i = 0; i < textLines.length; i++) {\n                    // Fill after stroke so the outline will not cover the main part.\n                textStroke && ctx.strokeText(textLines[i], x, y);\n                textFill && ctx.fillText(textLines[i], x, y);\n                y += textRect.lineHeight;\n            }\n\n            ctx.restore();\n        }\n    };\n\n    module.exports = RectText;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.zrender@3.4.4@zrender/lib/graphic/mixin/RectText.js\n// module id = 424\n// module chunks = 0","/**\n * 圆弧\n * @module zrender/graphic/shape/Arc\n */\n \n\n    module.exports = require('../Path').extend({\n\n        type: 'arc',\n\n        shape: {\n\n            cx: 0,\n\n            cy: 0,\n\n            r: 0,\n\n            startAngle: 0,\n\n            endAngle: Math.PI * 2,\n\n            clockwise: true\n        },\n\n        style: {\n\n            stroke: '#000',\n\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n\n            var x = shape.cx;\n            var y = shape.cy;\n            var r = Math.max(shape.r, 0);\n            var startAngle = shape.startAngle;\n            var endAngle = shape.endAngle;\n            var clockwise = shape.clockwise;\n\n            var unitX = Math.cos(startAngle);\n            var unitY = Math.sin(startAngle);\n\n            ctx.moveTo(unitX * r + x, unitY * r + y);\n            ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.zrender@3.4.4@zrender/lib/graphic/shape/Arc.js\n// module id = 425\n// module chunks = 0","'use strict';\n/**\n * 贝塞尔曲线\n * @module zrender/shape/BezierCurve\n */\n\n\n    var curveTool = require('../../core/curve');\n    var vec2 = require('../../core/vector');\n    var quadraticSubdivide = curveTool.quadraticSubdivide;\n    var cubicSubdivide = curveTool.cubicSubdivide;\n    var quadraticAt = curveTool.quadraticAt;\n    var cubicAt = curveTool.cubicAt;\n    var quadraticDerivativeAt = curveTool.quadraticDerivativeAt;\n    var cubicDerivativeAt = curveTool.cubicDerivativeAt;\n\n    var out = [];\n\n    function someVectorAt(shape, t, isTangent) {\n        var cpx2 = shape.cpx2;\n        var cpy2 = shape.cpy2;\n        if (cpx2 === null || cpy2 === null) {\n            return [\n                (isTangent ? cubicDerivativeAt : cubicAt)(shape.x1, shape.cpx1, shape.cpx2, shape.x2, t),\n                (isTangent ? cubicDerivativeAt : cubicAt)(shape.y1, shape.cpy1, shape.cpy2, shape.y2, t)\n            ];\n        }\n        else {\n            return [\n                (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.x1, shape.cpx1, shape.x2, t),\n                (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.y1, shape.cpy1, shape.y2, t)\n            ];\n        }\n    }\n    module.exports = require('../Path').extend({\n\n        type: 'bezier-curve',\n\n        shape: {\n            x1: 0,\n            y1: 0,\n            x2: 0,\n            y2: 0,\n            cpx1: 0,\n            cpy1: 0,\n            // cpx2: 0,\n            // cpy2: 0\n\n            // Curve show percent, for animating\n            percent: 1\n        },\n\n        style: {\n            stroke: '#000',\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            var x1 = shape.x1;\n            var y1 = shape.y1;\n            var x2 = shape.x2;\n            var y2 = shape.y2;\n            var cpx1 = shape.cpx1;\n            var cpy1 = shape.cpy1;\n            var cpx2 = shape.cpx2;\n            var cpy2 = shape.cpy2;\n            var percent = shape.percent;\n            if (percent === 0) {\n                return;\n            }\n\n            ctx.moveTo(x1, y1);\n\n            if (cpx2 == null || cpy2 == null) {\n                if (percent < 1) {\n                    quadraticSubdivide(\n                        x1, cpx1, x2, percent, out\n                    );\n                    cpx1 = out[1];\n                    x2 = out[2];\n                    quadraticSubdivide(\n                        y1, cpy1, y2, percent, out\n                    );\n                    cpy1 = out[1];\n                    y2 = out[2];\n                }\n\n                ctx.quadraticCurveTo(\n                    cpx1, cpy1,\n                    x2, y2\n                );\n            }\n            else {\n                if (percent < 1) {\n                    cubicSubdivide(\n                        x1, cpx1, cpx2, x2, percent, out\n                    );\n                    cpx1 = out[1];\n                    cpx2 = out[2];\n                    x2 = out[3];\n                    cubicSubdivide(\n                        y1, cpy1, cpy2, y2, percent, out\n                    );\n                    cpy1 = out[1];\n                    cpy2 = out[2];\n                    y2 = out[3];\n                }\n                ctx.bezierCurveTo(\n                    cpx1, cpy1,\n                    cpx2, cpy2,\n                    x2, y2\n                );\n            }\n        },\n\n        /**\n         * Get point at percent\n         * @param  {number} t\n         * @return {Array.<number>}\n         */\n        pointAt: function (t) {\n            return someVectorAt(this.shape, t, false);\n        },\n\n        /**\n         * Get tangent at percent\n         * @param  {number} t\n         * @return {Array.<number>}\n         */\n        tangentAt: function (t) {\n            var p = someVectorAt(this.shape, t, true);\n            return vec2.normalize(p, p);\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.zrender@3.4.4@zrender/lib/graphic/shape/BezierCurve.js\n// module id = 426\n// module chunks = 0","'use strict';\n/**\n * 圆形\n * @module zrender/shape/Circle\n */\n\n\n\n    module.exports = require('../Path').extend({\n\n        type: 'circle',\n\n        shape: {\n            cx: 0,\n            cy: 0,\n            r: 0\n        },\n\n\n        buildPath : function (ctx, shape, inBundle) {\n            // Better stroking in ShapeBundle\n            // Always do it may have performence issue ( fill may be 2x more cost)\n            if (inBundle) {\n                ctx.moveTo(shape.cx + shape.r, shape.cy);\n            }\n            // else {\n            //     if (ctx.allocate && !ctx.data.length) {\n            //         ctx.allocate(ctx.CMD_MEM_SIZE.A);\n            //     }\n            // }\n            // Better stroking in ShapeBundle\n            // ctx.moveTo(shape.cx + shape.r, shape.cy);\n            ctx.arc(shape.cx, shape.cy, shape.r, 0, Math.PI * 2, true);\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.zrender@3.4.4@zrender/lib/graphic/shape/Circle.js\n// module id = 427\n// module chunks = 0","/**\n * 直线\n * @module zrender/graphic/shape/Line\n */\n\n    module.exports = require('../Path').extend({\n\n        type: 'line',\n\n        shape: {\n            // Start point\n            x1: 0,\n            y1: 0,\n            // End point\n            x2: 0,\n            y2: 0,\n\n            percent: 1\n        },\n\n        style: {\n            stroke: '#000',\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            var x1 = shape.x1;\n            var y1 = shape.y1;\n            var x2 = shape.x2;\n            var y2 = shape.y2;\n            var percent = shape.percent;\n\n            if (percent === 0) {\n                return;\n            }\n\n            ctx.moveTo(x1, y1);\n\n            if (percent < 1) {\n                x2 = x1 * (1 - percent) + x2 * percent;\n                y2 = y1 * (1 - percent) + y2 * percent;\n            }\n            ctx.lineTo(x2, y2);\n        },\n\n        /**\n         * Get point at percent\n         * @param  {number} percent\n         * @return {Array.<number>}\n         */\n        pointAt: function (p) {\n            var shape = this.shape;\n            return [\n                shape.x1 * (1 - p) + shape.x2 * p,\n                shape.y1 * (1 - p) + shape.y2 * p\n            ];\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.zrender@3.4.4@zrender/lib/graphic/shape/Line.js\n// module id = 428\n// module chunks = 0","/**\n * 多边形\n * @module zrender/shape/Polygon\n */\n\n\n    var polyHelper = require('../helper/poly');\n\n    module.exports = require('../Path').extend({\n        \n        type: 'polygon',\n\n        shape: {\n            points: null,\n\n            smooth: false,\n\n            smoothConstraint: null\n        },\n\n        buildPath: function (ctx, shape) {\n            polyHelper.buildPath(ctx, shape, true);\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.zrender@3.4.4@zrender/lib/graphic/shape/Polygon.js\n// module id = 429\n// module chunks = 0","/**\n * @module zrender/graphic/shape/Polyline\n */\n\n\n    var polyHelper = require('../helper/poly');\n\n    module.exports = require('../Path').extend({\n        \n        type: 'polyline',\n\n        shape: {\n            points: null,\n\n            smooth: false,\n\n            smoothConstraint: null\n        },\n\n        style: {\n            stroke: '#000',\n\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            polyHelper.buildPath(ctx, shape, false);\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.zrender@3.4.4@zrender/lib/graphic/shape/Polyline.js\n// module id = 430\n// module chunks = 0","/**\n * 矩形\n * @module zrender/graphic/shape/Rect\n */\n\n\n    var roundRectHelper = require('../helper/roundRect');\n\n    module.exports = require('../Path').extend({\n\n        type: 'rect',\n\n        shape: {\n            // 左上、右上、右下、左下角的半径依次为r1、r2、r3、r4\n            // r缩写为1         相当于 [1, 1, 1, 1]\n            // r缩写为[1]       相当于 [1, 1, 1, 1]\n            // r缩写为[1, 2]    相当于 [1, 2, 1, 2]\n            // r缩写为[1, 2, 3] 相当于 [1, 2, 3, 2]\n            r: 0,\n\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var width = shape.width;\n            var height = shape.height;\n            if (!shape.r) {\n                ctx.rect(x, y, width, height);\n            }\n            else {\n                roundRectHelper.buildPath(ctx, shape);\n            }\n            ctx.closePath();\n            return;\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.zrender@3.4.4@zrender/lib/graphic/shape/Rect.js\n// module id = 431\n// module chunks = 0","/**\n * 圆环\n * @module zrender/graphic/shape/Ring\n */\n\n\n    module.exports = require('../Path').extend({\n\n        type: 'ring',\n\n        shape: {\n            cx: 0,\n            cy: 0,\n            r: 0,\n            r0: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var x = shape.cx;\n            var y = shape.cy;\n            var PI2 = Math.PI * 2;\n            ctx.moveTo(x + shape.r, y);\n            ctx.arc(x, y, shape.r, 0, PI2, false);\n            ctx.moveTo(x + shape.r0, y);\n            ctx.arc(x, y, shape.r0, 0, PI2, true);\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.zrender@3.4.4@zrender/lib/graphic/shape/Ring.js\n// module id = 432\n// module chunks = 0","/**\n * 扇形\n * @module zrender/graphic/shape/Sector\n */\n\n\n\n    var env = require('../../core/env');\n    var Path = require('../Path');\n\n    var shadowTemp = [\n        ['shadowBlur', 0],\n        ['shadowColor', '#000'],\n        ['shadowOffsetX', 0],\n        ['shadowOffsetY', 0]\n    ];\n\n    module.exports = Path.extend({\n\n        type: 'sector',\n\n        shape: {\n\n            cx: 0,\n\n            cy: 0,\n\n            r0: 0,\n\n            r: 0,\n\n            startAngle: 0,\n\n            endAngle: Math.PI * 2,\n\n            clockwise: true\n        },\n\n        brush: (env.browser.ie && env.browser.version >= 11) // version: '11.0'\n            // Fix weird bug in some version of IE11 (like 11.0.9600.17801),\n            // where exception \"unexpected call to method or property access\"\n            // might be thrown when calling ctx.fill after a path whose area size\n            // is zero is drawn and ctx.clip() is called and shadowBlur is set.\n            // (e.g.,\n            //  ctx.moveTo(10, 10);\n            //  ctx.lineTo(20, 10);\n            //  ctx.closePath();\n            //  ctx.clip();\n            //  ctx.shadowBlur = 10;\n            //  ...\n            //  ctx.fill();\n            // )\n            ? function () {\n                var clipPaths = this.__clipPaths;\n                var style = this.style;\n                var modified;\n\n                if (clipPaths) {\n                    for (var i = 0; i < clipPaths.length; i++) {\n                        var shape = clipPaths[i] && clipPaths[i].shape;\n                        if (shape && shape.startAngle === shape.endAngle) {\n                            for (var j = 0; j < shadowTemp.length; j++) {\n                                shadowTemp[j][2] = style[shadowTemp[j][0]];\n                                style[shadowTemp[j][0]] = shadowTemp[j][1];\n                            }\n                            modified = true;\n                            break;\n                        }\n                    }\n                }\n\n                Path.prototype.brush.apply(this, arguments);\n\n                if (modified) {\n                    for (var j = 0; j < shadowTemp.length; j++) {\n                        style[shadowTemp[j][0]] = shadowTemp[j][2];\n                    }\n                }\n            }\n            : Path.prototype.brush,\n\n        buildPath: function (ctx, shape) {\n\n            var x = shape.cx;\n            var y = shape.cy;\n            var r0 = Math.max(shape.r0 || 0, 0);\n            var r = Math.max(shape.r, 0);\n            var startAngle = shape.startAngle;\n            var endAngle = shape.endAngle;\n            var clockwise = shape.clockwise;\n\n            var unitX = Math.cos(startAngle);\n            var unitY = Math.sin(startAngle);\n\n            ctx.moveTo(unitX * r0 + x, unitY * r0 + y);\n\n            ctx.lineTo(unitX * r + x, unitY * r + y);\n\n            ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n\n            ctx.lineTo(\n                Math.cos(endAngle) * r0 + x,\n                Math.sin(endAngle) * r0 + y\n            );\n\n            if (r0 !== 0) {\n                ctx.arc(x, y, r0, endAngle, startAngle, clockwise);\n            }\n\n            ctx.closePath();\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.zrender@3.4.4@zrender/lib/graphic/shape/Sector.js\n// module id = 433\n// module chunks = 0","'use strict';\n/**\n * @module zrender/mixin/Animatable\n */\n\n\n    var Animator = require('../animation/Animator');\n    var util = require('../core/util');\n    var isString = util.isString;\n    var isFunction = util.isFunction;\n    var isObject = util.isObject;\n    var log = require('../core/log');\n\n    /**\n     * @alias modue:zrender/mixin/Animatable\n     * @constructor\n     */\n    var Animatable = function () {\n\n        /**\n         * @type {Array.<module:zrender/animation/Animator>}\n         * @readOnly\n         */\n        this.animators = [];\n    };\n\n    Animatable.prototype = {\n\n        constructor: Animatable,\n\n        /**\n         * 动画\n         *\n         * @param {string} path 需要添加动画的属性获取路径，可以通过a.b.c来获取深层的属性\n         * @param {boolean} [loop] 动画是否循环\n         * @return {module:zrender/animation/Animator}\n         * @example:\n         *     el.animate('style', false)\n         *         .when(1000, {x: 10} )\n         *         .done(function(){ // Animation done })\n         *         .start()\n         */\n        animate: function (path, loop) {\n            var target;\n            var animatingShape = false;\n            var el = this;\n            var zr = this.__zr;\n            if (path) {\n                var pathSplitted = path.split('.');\n                var prop = el;\n                // If animating shape\n                animatingShape = pathSplitted[0] === 'shape';\n                for (var i = 0, l = pathSplitted.length; i < l; i++) {\n                    if (!prop) {\n                        continue;\n                    }\n                    prop = prop[pathSplitted[i]];\n                }\n                if (prop) {\n                    target = prop;\n                }\n            }\n            else {\n                target = el;\n            }\n\n            if (!target) {\n                log(\n                    'Property \"'\n                    + path\n                    + '\" is not existed in element '\n                    + el.id\n                );\n                return;\n            }\n\n            var animators = el.animators;\n\n            var animator = new Animator(target, loop);\n\n            animator.during(function (target) {\n                el.dirty(animatingShape);\n            })\n            .done(function () {\n                // FIXME Animator will not be removed if use `Animator#stop` to stop animation\n                animators.splice(util.indexOf(animators, animator), 1);\n            });\n\n            animators.push(animator);\n\n            // If animate after added to the zrender\n            if (zr) {\n                zr.animation.addAnimator(animator);\n            }\n\n            return animator;\n        },\n\n        /**\n         * 停止动画\n         * @param {boolean} forwardToLast If move to last frame before stop\n         */\n        stopAnimation: function (forwardToLast) {\n            var animators = this.animators;\n            var len = animators.length;\n            for (var i = 0; i < len; i++) {\n                animators[i].stop(forwardToLast);\n            }\n            animators.length = 0;\n\n            return this;\n        },\n\n        /**\n         * @param {Object} target\n         * @param {number} [time=500] Time in ms\n         * @param {string} [easing='linear']\n         * @param {number} [delay=0]\n         * @param {Function} [callback]\n         *\n         * @example\n         *  // Animate position\n         *  el.animateTo({\n         *      position: [10, 10]\n         *  }, function () { // done })\n         *\n         *  // Animate shape, style and position in 100ms, delayed 100ms, with cubicOut easing\n         *  el.animateTo({\n         *      shape: {\n         *          width: 500\n         *      },\n         *      style: {\n         *          fill: 'red'\n         *      }\n         *      position: [10, 10]\n         *  }, 100, 100, 'cubicOut', function () { // done })\n         */\n         // TODO Return animation key\n        animateTo: function (target, time, delay, easing, callback) {\n            // animateTo(target, time, easing, callback);\n            if (isString(delay)) {\n                callback = easing;\n                easing = delay;\n                delay = 0;\n            }\n            // animateTo(target, time, delay, callback);\n            else if (isFunction(easing)) {\n                callback = easing;\n                easing = 'linear';\n                delay = 0;\n            }\n            // animateTo(target, time, callback);\n            else if (isFunction(delay)) {\n                callback = delay;\n                delay = 0;\n            }\n            // animateTo(target, callback)\n            else if (isFunction(time)) {\n                callback = time;\n                time = 500;\n            }\n            // animateTo(target)\n            else if (!time) {\n                time = 500;\n            }\n            // Stop all previous animations\n            this.stopAnimation();\n            this._animateToShallow('', this, target, time, delay, easing, callback);\n\n            // Animators may be removed immediately after start\n            // if there is nothing to animate\n            var animators = this.animators.slice();\n            var count = animators.length;\n            function done() {\n                count--;\n                if (!count) {\n                    callback && callback();\n                }\n            }\n\n            // No animators. This should be checked before animators[i].start(),\n            // because 'done' may be executed immediately if no need to animate.\n            if (!count) {\n                callback && callback();\n            }\n            // Start after all animators created\n            // Incase any animator is done immediately when all animation properties are not changed\n            for (var i = 0; i < animators.length; i++) {\n                animators[i]\n                    .done(done)\n                    .start(easing);\n            }\n        },\n\n        /**\n         * @private\n         * @param {string} path=''\n         * @param {Object} source=this\n         * @param {Object} target\n         * @param {number} [time=500]\n         * @param {number} [delay=0]\n         *\n         * @example\n         *  // Animate position\n         *  el._animateToShallow({\n         *      position: [10, 10]\n         *  })\n         *\n         *  // Animate shape, style and position in 100ms, delayed 100ms\n         *  el._animateToShallow({\n         *      shape: {\n         *          width: 500\n         *      },\n         *      style: {\n         *          fill: 'red'\n         *      }\n         *      position: [10, 10]\n         *  }, 100, 100)\n         */\n        _animateToShallow: function (path, source, target, time, delay) {\n            var objShallow = {};\n            var propertyCount = 0;\n            for (var name in target) {\n                if (!target.hasOwnProperty(name)) {\n                    continue;\n                }\n\n                if (source[name] != null) {\n                    if (isObject(target[name]) && !util.isArrayLike(target[name])) {\n                        this._animateToShallow(\n                            path ? path + '.' + name : name,\n                            source[name],\n                            target[name],\n                            time,\n                            delay\n                        );\n                    }\n                    else {\n                        objShallow[name] = target[name];\n                        propertyCount++;\n                    }\n                }\n                else if (target[name] != null) {\n                    // Attr directly if not has property\n                    // FIXME, if some property not needed for element ?\n                    if (!path) {\n                        this.attr(name, target[name]);\n                    }\n                    else {  // Shape or style\n                        var props = {};\n                        props[path] = {};\n                        props[path][name] = target[name];\n                        this.attr(props);\n                    }\n                }\n            }\n\n            if (propertyCount > 0) {\n                this.animate(path, false)\n                    .when(time == null ? 500 : time, objShallow)\n                    .delay(delay || 0);\n            }\n\n            return this;\n        }\n    };\n\n    module.exports = Animatable;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.zrender@3.4.4@zrender/lib/mixin/Animatable.js\n// module id = 434\n// module chunks = 0","// TODO Draggable for group\n// FIXME Draggable on element which has parent rotation or scale\n\n    function Draggable() {\n\n        this.on('mousedown', this._dragStart, this);\n        this.on('mousemove', this._drag, this);\n        this.on('mouseup', this._dragEnd, this);\n        this.on('globalout', this._dragEnd, this);\n        // this._dropTarget = null;\n        // this._draggingTarget = null;\n\n        // this._x = 0;\n        // this._y = 0;\n    }\n\n    Draggable.prototype = {\n\n        constructor: Draggable,\n\n        _dragStart: function (e) {\n            var draggingTarget = e.target;\n            if (draggingTarget && draggingTarget.draggable) {\n                this._draggingTarget = draggingTarget;\n                draggingTarget.dragging = true;\n                this._x = e.offsetX;\n                this._y = e.offsetY;\n\n                this.dispatchToElement(param(draggingTarget, e), 'dragstart', e.event);\n            }\n        },\n\n        _drag: function (e) {\n            var draggingTarget = this._draggingTarget;\n            if (draggingTarget) {\n\n                var x = e.offsetX;\n                var y = e.offsetY;\n\n                var dx = x - this._x;\n                var dy = y - this._y;\n                this._x = x;\n                this._y = y;\n\n                draggingTarget.drift(dx, dy, e);\n                this.dispatchToElement(param(draggingTarget, e), 'drag', e.event);\n\n                var dropTarget = this.findHover(x, y, draggingTarget).target;\n                var lastDropTarget = this._dropTarget;\n                this._dropTarget = dropTarget;\n\n                if (draggingTarget !== dropTarget) {\n                    if (lastDropTarget && dropTarget !== lastDropTarget) {\n                        this.dispatchToElement(param(lastDropTarget, e), 'dragleave', e.event);\n                    }\n                    if (dropTarget && dropTarget !== lastDropTarget) {\n                        this.dispatchToElement(param(dropTarget, e), 'dragenter', e.event);\n                    }\n                }\n            }\n        },\n\n        _dragEnd: function (e) {\n            var draggingTarget = this._draggingTarget;\n\n            if (draggingTarget) {\n                draggingTarget.dragging = false;\n            }\n\n            this.dispatchToElement(param(draggingTarget, e), 'dragend', e.event);\n\n            if (this._dropTarget) {\n                this.dispatchToElement(param(this._dropTarget, e), 'drop', e.event);\n            }\n\n            this._draggingTarget = null;\n            this._dropTarget = null;\n        }\n\n    };\n\n    function param(target, e) {\n        return {target: target, topTarget: e && e.topTarget};\n    }\n\n    module.exports = Draggable;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.zrender@3.4.4@zrender/lib/mixin/Draggable.js\n// module id = 435\n// module chunks = 0","\n\n    var Path = require('../graphic/Path');\n    var PathProxy = require('../core/PathProxy');\n    var transformPath = require('./transformPath');\n\n    // command chars\n    var cc = [\n        'm', 'M', 'l', 'L', 'v', 'V', 'h', 'H', 'z', 'Z',\n        'c', 'C', 'q', 'Q', 't', 'T', 's', 'S', 'a', 'A'\n    ];\n\n    var mathSqrt = Math.sqrt;\n    var mathSin = Math.sin;\n    var mathCos = Math.cos;\n    var PI = Math.PI;\n\n    var vMag = function(v) {\n        return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n    };\n    var vRatio = function(u, v) {\n        return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n    };\n    var vAngle = function(u, v) {\n        return (u[0] * v[1] < u[1] * v[0] ? -1 : 1)\n                * Math.acos(vRatio(u, v));\n    };\n\n    function processArc(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg, cmd, path) {\n        var psi = psiDeg * (PI / 180.0);\n        var xp = mathCos(psi) * (x1 - x2) / 2.0\n                 + mathSin(psi) * (y1 - y2) / 2.0;\n        var yp = -1 * mathSin(psi) * (x1 - x2) / 2.0\n                 + mathCos(psi) * (y1 - y2) / 2.0;\n\n        var lambda = (xp * xp) / (rx * rx) + (yp * yp) / (ry * ry);\n\n        if (lambda > 1) {\n            rx *= mathSqrt(lambda);\n            ry *= mathSqrt(lambda);\n        }\n\n        var f = (fa === fs ? -1 : 1)\n            * mathSqrt((((rx * rx) * (ry * ry))\n                    - ((rx * rx) * (yp * yp))\n                    - ((ry * ry) * (xp * xp))) / ((rx * rx) * (yp * yp)\n                    + (ry * ry) * (xp * xp))\n                ) || 0;\n\n        var cxp = f * rx * yp / ry;\n        var cyp = f * -ry * xp / rx;\n\n        var cx = (x1 + x2) / 2.0\n                 + mathCos(psi) * cxp\n                 - mathSin(psi) * cyp;\n        var cy = (y1 + y2) / 2.0\n                + mathSin(psi) * cxp\n                + mathCos(psi) * cyp;\n\n        var theta = vAngle([ 1, 0 ], [ (xp - cxp) / rx, (yp - cyp) / ry ]);\n        var u = [ (xp - cxp) / rx, (yp - cyp) / ry ];\n        var v = [ (-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry ];\n        var dTheta = vAngle(u, v);\n\n        if (vRatio(u, v) <= -1) {\n            dTheta = PI;\n        }\n        if (vRatio(u, v) >= 1) {\n            dTheta = 0;\n        }\n        if (fs === 0 && dTheta > 0) {\n            dTheta = dTheta - 2 * PI;\n        }\n        if (fs === 1 && dTheta < 0) {\n            dTheta = dTheta + 2 * PI;\n        }\n\n        path.addData(cmd, cx, cy, rx, ry, theta, dTheta, psi, fs);\n    }\n\n    function createPathProxyFromString(data) {\n        if (!data) {\n            return [];\n        }\n\n        // command string\n        var cs = data.replace(/-/g, ' -')\n            .replace(/  /g, ' ')\n            .replace(/ /g, ',')\n            .replace(/,,/g, ',');\n\n        var n;\n        // create pipes so that we can split the data\n        for (n = 0; n < cc.length; n++) {\n            cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\n        }\n\n        // create array\n        var arr = cs.split('|');\n        // init context point\n        var cpx = 0;\n        var cpy = 0;\n\n        var path = new PathProxy();\n        var CMD = PathProxy.CMD;\n\n        var prevCmd;\n        for (n = 1; n < arr.length; n++) {\n            var str = arr[n];\n            var c = str.charAt(0);\n            var off = 0;\n            var p = str.slice(1).replace(/e,-/g, 'e-').split(',');\n            var cmd;\n\n            if (p.length > 0 && p[0] === '') {\n                p.shift();\n            }\n\n            for (var i = 0; i < p.length; i++) {\n                p[i] = parseFloat(p[i]);\n            }\n            while (off < p.length && !isNaN(p[off])) {\n                if (isNaN(p[0])) {\n                    break;\n                }\n                var ctlPtx;\n                var ctlPty;\n\n                var rx;\n                var ry;\n                var psi;\n                var fa;\n                var fs;\n\n                var x1 = cpx;\n                var y1 = cpy;\n\n                // convert l, H, h, V, and v to L\n                switch (c) {\n                    case 'l':\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'L':\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'm':\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.M;\n                        path.addData(cmd, cpx, cpy);\n                        c = 'l';\n                        break;\n                    case 'M':\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.M;\n                        path.addData(cmd, cpx, cpy);\n                        c = 'L';\n                        break;\n                    case 'h':\n                        cpx += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'H':\n                        cpx = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'v':\n                        cpy += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'V':\n                        cpy = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'C':\n                        cmd = CMD.C;\n                        path.addData(\n                            cmd, p[off++], p[off++], p[off++], p[off++], p[off++], p[off++]\n                        );\n                        cpx = p[off - 2];\n                        cpy = p[off - 1];\n                        break;\n                    case 'c':\n                        cmd = CMD.C;\n                        path.addData(\n                            cmd,\n                            p[off++] + cpx, p[off++] + cpy,\n                            p[off++] + cpx, p[off++] + cpy,\n                            p[off++] + cpx, p[off++] + cpy\n                        );\n                        cpx += p[off - 2];\n                        cpy += p[off - 1];\n                        break;\n                    case 'S':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.C) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cmd = CMD.C;\n                        x1 = p[off++];\n                        y1 = p[off++];\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n                        break;\n                    case 's':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.C) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cmd = CMD.C;\n                        x1 = cpx + p[off++];\n                        y1 = cpy + p[off++];\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n                        break;\n                    case 'Q':\n                        x1 = p[off++];\n                        y1 = p[off++];\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, x1, y1, cpx, cpy);\n                        break;\n                    case 'q':\n                        x1 = p[off++] + cpx;\n                        y1 = p[off++] + cpy;\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, x1, y1, cpx, cpy);\n                        break;\n                    case 'T':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.Q) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n                        break;\n                    case 't':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.Q) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n                        break;\n                    case 'A':\n                        rx = p[off++];\n                        ry = p[off++];\n                        psi = p[off++];\n                        fa = p[off++];\n                        fs = p[off++];\n\n                        x1 = cpx, y1 = cpy;\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.A;\n                        processArc(\n                            x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path\n                        );\n                        break;\n                    case 'a':\n                        rx = p[off++];\n                        ry = p[off++];\n                        psi = p[off++];\n                        fa = p[off++];\n                        fs = p[off++];\n\n                        x1 = cpx, y1 = cpy;\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.A;\n                        processArc(\n                            x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path\n                        );\n                        break;\n                }\n            }\n\n            if (c === 'z' || c === 'Z') {\n                cmd = CMD.Z;\n                path.addData(cmd);\n            }\n\n            prevCmd = cmd;\n        }\n\n        path.toStatic();\n\n        return path;\n    }\n\n    // TODO Optimize double memory cost problem\n    function createPathOptions(str, opts) {\n        var pathProxy = createPathProxyFromString(str);\n        opts = opts || {};\n        opts.buildPath = function (path) {\n            if (path.setData) {\n                path.setData(pathProxy.data);\n                // Svg and vml renderer don't have context\n                var ctx = path.getContext();\n                if (ctx) {\n                    path.rebuildPath(ctx);\n                }\n            }\n            else {\n                var ctx = path;\n                pathProxy.rebuildPath(ctx);\n            }\n        };\n\n        opts.applyTransform = function (m) {\n            transformPath(pathProxy, m);\n\n            this.dirty(true);\n        };\n\n        return opts;\n    }\n\n    module.exports = {\n        /**\n         * Create a Path object from path string data\n         * http://www.w3.org/TR/SVG/paths.html#PathData\n         * @param  {Object} opts Other options\n         */\n        createFromString: function (str, opts) {\n            return new Path(createPathOptions(str, opts));\n        },\n\n        /**\n         * Create a Path class from path string data\n         * @param  {string} str\n         * @param  {Object} opts Other options\n         */\n        extendFromString: function (str, opts) {\n            return Path.extend(createPathOptions(str, opts));\n        },\n\n        /**\n         * Merge multiple paths\n         */\n        // TODO Apply transform\n        // TODO stroke dash\n        // TODO Optimize double memory cost problem\n        mergePath: function (pathEls, opts) {\n            var pathList = [];\n            var len = pathEls.length;\n            for (var i = 0; i < len; i++) {\n                var pathEl = pathEls[i];\n                if (!pathEl.path) {\n                    pathEl.createPathProxy();\n                }\n                if (pathEl.__dirtyPath) {\n                    pathEl.buildPath(pathEl.path, pathEl.shape, true);\n                }\n                pathList.push(pathEl.path);\n            }\n\n            var pathBundle = new Path(opts);\n            // Need path proxy.\n            pathBundle.createPathProxy();\n            pathBundle.buildPath = function (path) {\n                path.appendPath(pathList);\n                // Svg and vml renderer don't have context\n                var ctx = path.getContext();\n                if (ctx) {\n                    path.rebuildPath(ctx);\n                }\n            };\n\n            return pathBundle;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.zrender@3.4.4@zrender/lib/tool/path.js\n// module id = 436\n// module chunks = 0","\n\n    var CMD = require('../core/PathProxy').CMD;\n    var vec2 = require('../core/vector');\n    var v2ApplyTransform = vec2.applyTransform;\n\n    var points = [[], [], []];\n    var mathSqrt = Math.sqrt;\n    var mathAtan2 = Math.atan2;\n    function transformPath(path, m) {\n        var data = path.data;\n        var cmd;\n        var nPoint;\n        var i;\n        var j;\n        var k;\n        var p;\n\n        var M = CMD.M;\n        var C = CMD.C;\n        var L = CMD.L;\n        var R = CMD.R;\n        var A = CMD.A;\n        var Q = CMD.Q;\n\n        for (i = 0, j = 0; i < data.length;) {\n            cmd = data[i++];\n            j = i;\n            nPoint = 0;\n\n            switch (cmd) {\n                case M:\n                    nPoint = 1;\n                    break;\n                case L:\n                    nPoint = 1;\n                    break;\n                case C:\n                    nPoint = 3;\n                    break;\n                case Q:\n                    nPoint = 2;\n                    break;\n                case A:\n                    var x = m[4];\n                    var y = m[5];\n                    var sx = mathSqrt(m[0] * m[0] + m[1] * m[1]);\n                    var sy = mathSqrt(m[2] * m[2] + m[3] * m[3]);\n                    var angle = mathAtan2(-m[1] / sy, m[0] / sx);\n                    // cx\n                    data[i] *= sx;\n                    data[i++] += x;\n                    // cy\n                    data[i] *= sy;\n                    data[i++] += y;\n                    // Scale rx and ry\n                    // FIXME Assume psi is 0 here\n                    data[i++] *= sx;\n                    data[i++] *= sy;\n\n                    // Start angle\n                    data[i++] += angle;\n                    // end angle\n                    data[i++] += angle;\n                    // FIXME psi\n                    i += 2;\n                    j = i;\n                    break;\n                case R:\n                    // x0, y0\n                    p[0] = data[i++];\n                    p[1] = data[i++];\n                    v2ApplyTransform(p, p, m);\n                    data[j++] = p[0];\n                    data[j++] = p[1];\n                    // x1, y1\n                    p[0] += data[i++];\n                    p[1] += data[i++];\n                    v2ApplyTransform(p, p, m);\n                    data[j++] = p[0];\n                    data[j++] = p[1];\n            }\n\n            for (k = 0; k < nPoint; k++) {\n                var p = points[k];\n                p[0] = data[i++];\n                p[1] = data[i++];\n\n                v2ApplyTransform(p, p, m);\n                // Write back\n                data[j++] = p[0];\n                data[j++] = p[1];\n            }\n        }\n    }\n\n    module.exports = transformPath;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.zrender@3.4.4@zrender/lib/tool/transformPath.js\n// module id = 437\n// module chunks = 0","/*!\n * ZRender, a high performance 2d drawing library.\n *\n * Copyright (c) 2013, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/zrender/blob/master/LICENSE.txt\n */\n// Global defines\n\n    var guid = require('./core/guid');\n    var env = require('./core/env');\n    var zrUtil = require('./core/util');\n\n    var Handler = require('./Handler');\n    var Storage = require('./Storage');\n    var Animation = require('./animation/Animation');\n    var HandlerProxy = require('./dom/HandlerProxy');\n\n    var useVML = !env.canvasSupported;\n\n    var painterCtors = {\n        canvas: require('./Painter')\n    };\n\n    var instances = {};    // ZRender实例map索引\n\n    var zrender = {};\n\n    /**\n     * @type {string}\n     */\n    zrender.version = '3.4.4';\n\n    /**\n     * Initializing a zrender instance\n     * @param {HTMLElement} dom\n     * @param {Object} opts\n     * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n     * @param {number} [opts.devicePixelRatio]\n     * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n     * @return {module:zrender/ZRender}\n     */\n    zrender.init = function(dom, opts) {\n        var zr = new ZRender(guid(), dom, opts);\n        instances[zr.id] = zr;\n        return zr;\n    };\n\n    /**\n     * Dispose zrender instance\n     * @param {module:zrender/ZRender} zr\n     */\n    zrender.dispose = function (zr) {\n        if (zr) {\n            zr.dispose();\n        }\n        else {\n            for (var key in instances) {\n                if (instances.hasOwnProperty(key)) {\n                    instances[key].dispose();\n                }\n            }\n            instances = {};\n        }\n\n        return zrender;\n    };\n\n    /**\n     * Get zrender instance by id\n     * @param {string} id zrender instance id\n     * @return {module:zrender/ZRender}\n     */\n    zrender.getInstance = function (id) {\n        return instances[id];\n    };\n\n    zrender.registerPainter = function (name, Ctor) {\n        painterCtors[name] = Ctor;\n    };\n\n    function delInstance(id) {\n        delete instances[id];\n    }\n\n    /**\n     * @module zrender/ZRender\n     */\n    /**\n     * @constructor\n     * @alias module:zrender/ZRender\n     * @param {string} id\n     * @param {HTMLDomElement} dom\n     * @param {Object} opts\n     * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n     * @param {number} [opts.devicePixelRatio]\n     * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n     */\n    var ZRender = function(id, dom, opts) {\n\n        opts = opts || {};\n\n        /**\n         * @type {HTMLDomElement}\n         */\n        this.dom = dom;\n\n        /**\n         * @type {string}\n         */\n        this.id = id;\n\n        var self = this;\n        var storage = new Storage();\n\n        var rendererType = opts.renderer;\n        // TODO WebGL\n        if (useVML) {\n            if (!painterCtors.vml) {\n                throw new Error('You need to require \\'zrender/vml/vml\\' to support IE8');\n            }\n            rendererType = 'vml';\n        }\n        else if (!rendererType || !painterCtors[rendererType]) {\n            rendererType = 'canvas';\n        }\n        var painter = new painterCtors[rendererType](dom, storage, opts);\n\n        this.storage = storage;\n        this.painter = painter;\n\n        var handerProxy = !env.node ? new HandlerProxy(painter.getViewportRoot()) : null;\n        this.handler = new Handler(storage, painter, handerProxy, painter.root);\n\n        /**\n         * @type {module:zrender/animation/Animation}\n         */\n        this.animation = new Animation({\n            stage: {\n                update: zrUtil.bind(this.flush, this)\n            }\n        });\n        this.animation.start();\n\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this._needsRefresh;\n\n        // 修改 storage.delFromStorage, 每次删除元素之前删除动画\n        // FIXME 有点ugly\n        var oldDelFromStorage = storage.delFromStorage;\n        var oldAddToStorage = storage.addToStorage;\n\n        storage.delFromStorage = function (el) {\n            oldDelFromStorage.call(storage, el);\n\n            el && el.removeSelfFromZr(self);\n        };\n\n        storage.addToStorage = function (el) {\n            oldAddToStorage.call(storage, el);\n\n            el.addSelfToZr(self);\n        };\n    };\n\n    ZRender.prototype = {\n\n        constructor: ZRender,\n        /**\n         * 获取实例唯一标识\n         * @return {string}\n         */\n        getId: function () {\n            return this.id;\n        },\n\n        /**\n         * 添加元素\n         * @param  {module:zrender/Element} el\n         */\n        add: function (el) {\n            this.storage.addRoot(el);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * 删除元素\n         * @param  {module:zrender/Element} el\n         */\n        remove: function (el) {\n            this.storage.delRoot(el);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Change configuration of layer\n         * @param {string} zLevel\n         * @param {Object} config\n         * @param {string} [config.clearColor=0] Clear color\n         * @param {string} [config.motionBlur=false] If enable motion blur\n         * @param {number} [config.lastFrameAlpha=0.7] Motion blur factor. Larger value cause longer trailer\n        */\n        configLayer: function (zLevel, config) {\n            this.painter.configLayer(zLevel, config);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Repaint the canvas immediately\n         */\n        refreshImmediately: function () {\n            // Clear needsRefresh ahead to avoid something wrong happens in refresh\n            // Or it will cause zrender refreshes again and again.\n            this._needsRefresh = false;\n            this.painter.refresh();\n            /**\n             * Avoid trigger zr.refresh in Element#beforeUpdate hook\n             */\n            this._needsRefresh = false;\n        },\n\n        /**\n         * Mark and repaint the canvas in the next frame of browser\n         */\n        refresh: function() {\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Perform all refresh\n         */\n        flush: function () {\n            if (this._needsRefresh) {\n                this.refreshImmediately();\n            }\n            if (this._needsRefreshHover) {\n                this.refreshHoverImmediately();\n            }\n        },\n\n        /**\n         * Add element to hover layer\n         * @param  {module:zrender/Element} el\n         * @param {Object} style\n         */\n        addHover: function (el, style) {\n            if (this.painter.addHover) {\n                this.painter.addHover(el, style);\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Add element from hover layer\n         * @param  {module:zrender/Element} el\n         */\n        removeHover: function (el) {\n            if (this.painter.removeHover) {\n                this.painter.removeHover(el);\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Clear all hover elements in hover layer\n         * @param  {module:zrender/Element} el\n         */\n        clearHover: function () {\n            if (this.painter.clearHover) {\n                this.painter.clearHover();\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Refresh hover in next frame\n         */\n        refreshHover: function () {\n            this._needsRefreshHover = true;\n        },\n\n        /**\n         * Refresh hover immediately\n         */\n        refreshHoverImmediately: function () {\n            this._needsRefreshHover = false;\n            this.painter.refreshHover && this.painter.refreshHover();\n        },\n\n        /**\n         * Resize the canvas.\n         * Should be invoked when container size is changed\n         * @param {Object} [opts]\n         * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n         * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n         */\n        resize: function(opts) {\n            opts = opts || {};\n            this.painter.resize(opts.width, opts.height);\n            this.handler.resize();\n        },\n\n        /**\n         * Stop and clear all animation immediately\n         */\n        clearAnimation: function () {\n            this.animation.clear();\n        },\n\n        /**\n         * Get container width\n         */\n        getWidth: function() {\n            return this.painter.getWidth();\n        },\n\n        /**\n         * Get container height\n         */\n        getHeight: function() {\n            return this.painter.getHeight();\n        },\n\n        /**\n         * Export the canvas as Base64 URL\n         * @param {string} type\n         * @param {string} [backgroundColor='#fff']\n         * @return {string} Base64 URL\n         */\n        // toDataURL: function(type, backgroundColor) {\n        //     return this.painter.getRenderedCanvas({\n        //         backgroundColor: backgroundColor\n        //     }).toDataURL(type);\n        // },\n\n        /**\n         * Converting a path to image.\n         * It has much better performance of drawing image rather than drawing a vector path.\n         * @param {module:zrender/graphic/Path} e\n         * @param {number} width\n         * @param {number} height\n         */\n        pathToImage: function(e, dpr) {\n            return this.painter.pathToImage(e, dpr);\n        },\n\n        /**\n         * Set default cursor\n         * @param {string} [cursorStyle='default'] 例如 crosshair\n         */\n        setCursorStyle: function (cursorStyle) {\n            this.handler.setCursorStyle(cursorStyle);\n        },\n\n        /**\n         * Find hovered element\n         * @param {number} x\n         * @param {number} y\n         * @return {Object} {target, topTarget}\n         */\n        findHover: function (x, y) {\n            return this.handler.findHover(x, y);\n        },\n\n        /**\n         * Bind event\n         *\n         * @param {string} eventName Event name\n         * @param {Function} eventHandler Handler function\n         * @param {Object} [context] Context object\n         */\n        on: function(eventName, eventHandler, context) {\n            this.handler.on(eventName, eventHandler, context);\n        },\n\n        /**\n         * Unbind event\n         * @param {string} eventName Event name\n         * @param {Function} [eventHandler] Handler function\n         */\n        off: function(eventName, eventHandler) {\n            this.handler.off(eventName, eventHandler);\n        },\n\n        /**\n         * Trigger event manually\n         *\n         * @param {string} eventName Event name\n         * @param {event=} event Event object\n         */\n        trigger: function (eventName, event) {\n            this.handler.trigger(eventName, event);\n        },\n\n\n        /**\n         * Clear all objects and the canvas.\n         */\n        clear: function () {\n            this.storage.delRoot();\n            this.painter.clear();\n        },\n\n        /**\n         * Dispose self.\n         */\n        dispose: function () {\n            this.animation.stop();\n\n            this.clear();\n            this.storage.dispose();\n            this.painter.dispose();\n            this.handler.dispose();\n\n            this.animation =\n            this.storage =\n            this.painter =\n            this.handler = null;\n\n            delInstance(this.id);\n        }\n    };\n\n    module.exports = zrender;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.zrender@3.4.4@zrender/lib/zrender.js\n// module id = 438\n// module chunks = 0"],"sourceRoot":""}